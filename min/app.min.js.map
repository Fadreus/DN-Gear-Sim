{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","path","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloadGroup","reloaded","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","search","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","updateRows","newVal","origVal","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","calcStatPercent","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","input","conversions","setSelectionRange","getElementById","focus","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","progress","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","encodeURIComponent","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","$watch","initAddAffects","getAddAffectAmount","getGroupItems","itemSplit","str","matches","indexOf","existing","itemSource","split","a","b","numMatches","groupItems","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","compact","statMap","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","typeId","pouchFileNames","getCharmItems","TypeParam1","getPouchItems","pouchData","gold","isGroup","boxType","f","basicItem","getPouchItemsFromFile","pouchFileName","pouchItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","c","charmData","CharmNum","cd","CharmType","itemds","ItemID","count","getData","Look","Count","Gold","crafts","cFiles","initCrafts","initCraft","j","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","numItem1","translate","TabNameID","numItem2","ladderPoints","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","canUse","detail","Type","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","dntLocation","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","floor","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","text","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","dragonjeweltype","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","file","progressCallback","completeCallbacks","ignoreErrors","$broadcast","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasFailed","resetAll","getNumRows","lookupValue","columnName","getValue","columnNames","convertData","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","SkillID","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","hasStartedLoading","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","titleStep","enhanceStep","isItemStep","techSkillStep","itemNameStep","itemNames","itemStep","itemNamesList","hideName","namedItemStep","distinctItemNameStep","numStatsStep","numStats","highStatStep","allItem","quickHigh","allStats","selectedVal","largestVal","val1","val2","searchable","hasStatStep","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","100004","typeNames","38","90","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","222","372","389","404","useMax","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats2","stats1","add"],"mappings":"cAAA,WAGAA,QAAAA,GAAAC,GAEAA,EAEEA,KAAAA,UAGIC,YAAa,sBACbC,WAAY,uBAKZA,KAAAA,UATJD,YAAA,oBAYIA,WAAAA,cADYE,KAKdA,SACEF,YAAa,mBACbC,WAAY,aAKZD,KAAAA,UAvBJA,YAyBO,mCACHA,WAAAA,qBACAC,gBAAY,IAIZA,KAAAA,KA/BJD,YAiCO,oBAEHC,KAAAA,WAnCJD,YAqCO,4BACHA,WAAAA,+BAD8BE,KAKhCA,sBACEF,YAAa,4BACbC,WAAY,+BAIZD,KAAAA,wBACAC,YAAY,4BAjDhBA,WAoDO,kBAEHA,KAAAA,2BAtDJD,YA0DO,4BACHA,WAAAA,+BADoBE,KAMtBA,cACEF,YAAa,4BACbC,WAAY,+BAKZA,KAAAA,wBAvEJD,YA2EO,8BACHA,WAAAA,mCAKAA,KAAAA,wBACAC,YAAY,8BAlFhBA,WAqFO,4BAMHD,KAAAA,iBACAC,YAAY,wBA5FhBA,WA+FO,yBACHD,gBAAa,IAKbA,KAAAA,SACAC,YAAY,oBAtGhBA,WAyGO,aAA+BC,KAKpCA,sBACEF,YAAa,oBACbC,WAAY,aAMjBC,KAAA,WA7HDF,YAAA,qBAoFMC,WAAY,eAGdC,KAAK,cACHF,YAAa,iCACbC,WAAY,+BAGdC,KAAK,YACHF,YAAa,yBACbC,WAAY,wBAGdC,KAAK,kBACHF,YAAa,yBACbC,WAAY,wBAGdC,KAAK,cACHF,YAAa,2BACbC,WAAY,0BAGdC,KAAK,WACHF,YAAa,8BACbC,WAAY,4BAGdC,KAAK,+BACHF,YAAa,2BACbC,WAAY,0BAGdC,KAAK,yBACHF,YAAa,8BACbC,WAAY,4BAGdE,WACEC,WAAY,MA1HlBN,QAAAO,OAAA,SAAAC,QAAA,iBAAAA;cCDA,WAAAR,QAACO,OAAY,SACbJ,WAAA,aAGG,UAFHH,SAAQO,GAKJE,SAASC,KAAKC,UAAY,eAA1BF,EAAAA,SAAcE,MAAd;YCPJX,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,YAAQO,aAAgBJ,mBAItB,SAAAS,EAAAC,EAAAC,GAEA,GAAIC,GAAKC,IAGPJ,MAAAA,YAAe,WADjBA,EAAAK,KAAA,iBAAAF,EAAAG,YAKEN,KAAAA,UAAe,WADjBA,EAAAK,KAAA,eAAAF,EAAAG,YAKEF,KAAAG,UAAIC,WAAJ,GAAIA,GAAeP,EAAWQ,YAAYN,EAAGG,UAAWH,EAAGO,MAAMC,MAEjEV,GAAWW,UAKXZ,EARFQ,EAMIL,EAAGO,OAMPV,EAAKa,KAAL,UAAmBL,IADnBJ,KAAKU,UAAW,EAKhBV,KAAAS,YAAA,WAHEb,EAAUK,KAAK,iBAAmBF,EAAGG,YAWtCF,KALDW,YAAA,WACE,GAAGZ,EAAGO,MAAO,CAMf,GAAKK,GAALb,EAAAc,gBAAAb,EAAAG,UAAAH,EAAAO,MAEDO,GAAAA,MAAUC,SAAAC,eAAyBC,QAAAC,KAI9Bf,KAAAA,iBAEAgB,UAAAA,wBAAU,WAHM,OAKlB/B,OAAAA,EACAgC,kBACAjC,UAAa,aATfoB,MAAA,SA7CFY,SAAA,aAoDI/B,WAAY,mBACZgC,aAAc,eACdjC,YAAa;YCtDjBF,SAAQO,OAAO,SAASJ,WAAW,yBAAnCH,WAAQO,YAAgBJ,cAAW,aAAA,eAElC,aAAW,mBAAY,cAAc,eAAa,UAAe,WAEhE,SAAAiC,EAAAxB,EAAAyB,EAAAC,EAAAC,EAAA1B,EAAAC,EAAA0B,EAAAC,EAAAC,EAAAC,GAOE,QAAIC,KACJC,GAAAA,GAAA,GAAaC,OAAAC,KAAAC,UAAkB9B,EAAAA,MAAY,KAA3C,KAAA+B,KAAA,4BACDJ,QAAAD,EAAA,aAAA7B,EAAAG,UAAA,SAPD,GAAIH,GAAKC,IAETD,GAAGmC,OAASC,KASVC,UAAO,6BADF,WAELC,OACEnC,OAAAA,EACAI,kBAJGJ,UAAA,aAMLf,MAAAA,UAEAD,WAAAA,wBARFiC,aAAA,OAhBFjC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,YAAgBJ,cAAW,aAAA,eAEnC,aAAA,mBAAsC,cAAa,eAAe,UAAlE,WAEE,SAAAiC,EAAAxB,EAAAyB,EAAAC,EAAAC,EAAA1B,EAAAC,EAAA0B,EAAAC,EAAAC,EAAAC,GAQE,QAAIW,GAAcC,GAClBC,GAAAA,GAAYC,EAAAF,OAAAD,KACZ,IAAAE,QAAGF,IAAAA,kBAAuBA,GAAvBA,GAASA,EAAMI,OAAQ,CAGxB,GAAIC,GAASL,EAAIM,GAAAA,KACjBD,EAAOE,GAAPD,WACAD,GAAOG,WAASR,EAAA,IACdvC,EAAGO,OAAQyB,WACXhC,EAAAO,MAAGyC,KAAYA,MAAAA,EAASL,QACtB3C,GAAAgD,EAAeA,OAAgB,GAC/BhD,EAAGG,UAAYH,EAAGG,OAAU8C,EAAAA,EAAQN,OAAc,GAFpD3C,EAAAG,UAIKH,EAAAG,UAAA8C,QAAA,aAAA,KAGL5B,EAAAA,UAAAA,iBAEHA,MAGH,QAAS6B,KAGPpD,GAAAA,GAAWW,EACTJ,YACAA,EAAAA,UACGE,EAHLA,MAAAC,MAKAX,GAAUK,UACXG,EA1CHA,EAuCML,EAAGO,OAELV,EAAUK,KAAK,UAAYG,GAnC7B,GAAIL,GAAKC,IAGTD,GAAGkD,aAAcA,EAAjBlD,EAAGkD,YAAcA;ACTnB,YAkBA,SAASC,yBAAwB7B,EAAaE,EAAc1B,GAE1D,GAAIE,GAAKC,IAETD,GAAGoD,iBAAmB,WAAtBpD,GAAGoD,GAAH5B,EAAsB6B,mBAAWrD,EAAAO,MAAAC,MAC/B,OAAAR,GAAIsD,SAAAA,OAAa9B,GACX+B,EAAHvD,EAAAuD,SAAoBD,SAQzB,IAAIE,MACAC,EAAgB,EACpBzD,GAAG0D,iBAAmB,WACpB,GAAAD,GAAGA,EAAiBzD,SAAA2D,KAApB,CACEH,KACAC,EAAgBzD,EAAGuD,SAASI,IAC5B,IAAIC,MAEApD,EAAQR,EAAGO,MAAMC,MAAMqD,KAAK,SAAAC,EAAAC,GAC9B,MAAOD,GAAME,aAAeD,EAAMC,cAEpC,IAAG,mBAAHhE,EAAGA,SAAA2D,KACDC,EAAaK,EAAEC,OAAO1D,EAAO,SAAA2D,GAC3B,MAAOA,GAAKC,mBAAqB,QAInCR,IAAsBpD,kBAAtBoD,EAAAA,SAAeM,KACbN,EAAOO,EAAKE,OAAAA,EAAAA,SAAZF,GADF,MAAAA,GAAAE,kBAAA,QAMAT,IAAsBpD,WAAtBoD,EAAAA,SAAeM,KAAc,CAC3B,GAAAI,GAAO9C,EAAa+C,OAAaD,UAElCV,GAHDK,EAAAC,OAAA1D,EAAA,SAAA2D,GAID,MAAA3C,GAAA+C,aAAAD,EAAAH,KAEGX,EAAAA,KAAAA,EAAaQ,SAAAA,GACXQ,EAAAA,eAD2BhB,KAE3BiB,EAAAA,EAF2BT,eAG3BA,SAHFS,MAAA,EAMDT,aAAAG,EAAAH,eAGCR,EAAAA,EAAQW,cAARK,MAA2BC,KAASN,EAAKC,MAEvBT,mBAHpB3D,EAAAuD,SAGWA,KACTC,EAAQW,EAAKH,cAAcS,OAASN,EAAKE,mBAGvC,kBAAAb,EAAQW,SAAKH,KAEhBR,EAAAW,EAAAH,cAAAS,OAAAN,EAAAE,kBAGJb,EAAAW,EAAAH,cAAAS,MAAA,IA/CHjB,EAAA,GAAA,KAoDE,MAAIkB,IAGFC,EAAAA,YAAaC,SAAOZ,GAErB,GACCW,GAJFD,EAGK,CAED,IAAO,WAAP1E,EAAAuD,SAASsB,KAEVF,EAHDC,EAAAZ,iBAIAW,CAKAV,EAHDA,EAAAa,KAAAxD,EAAAyD,aAAA,SAAAC,GALG,MAAOA,GAAEH,UAAYD,EAAOZ,eAQPG,GAIpB,GAAAQ,EAAA,CACF,GALDnE,GAAAR,EAAAoD,kBAMDa,GAAAgB,KAAAzE,EAAA,SAAA2D,GAAMO,EAAAA,SAAPC,KAtBFD,IA2BI,MAAAA,IAIA1E,EAAAkF,WAAM3B,SAAHY,EAAoBS,GACrBD,IAAAA,IAAAA,EAAaR,QAEd,OAAI,CAIF,IAHDQ,EAGA,IAAgB,WAAhB3E,EAAGmF,SAAAA,KACDR,EAAAA,EAAaQ,YAGhB,CAPC,GAAIA,GAAclB,EAAEa,KAAKxD,EAAYyD,aAAc,SAASC,GAQ3D,MAAAA,GAAAI,IAAWT,EAAAA,SAEZQ,KACAR,EAAIU,EAAoBP,UAIxB,GAAAF,IAAIS,EAaPC,SAAHV,IAAaD,IACDpB,GAAHqB,EAAoBZ,YAXtB,IAAAuB,GAAAvF,EAAA0D,kBAOF,QANiBiB,EAAAA,KAAbY,EAAyB,SAAAC,GAC5B,MAAqBZ,OAAdD,GAAqBX,GAA5BwB,EAAAxB,gBAKD,QAaChE,EAAAsF,QAAON,WAER,MAHD,mBAAAhF,EAAAuD,SAAAI,MAAA,kBAAA3D,EAAAuD,SAAAI,MAAA,WAAA3D,EAAAuD,SAAAI,MAKIlB,EAAAA,WAAQgD,SAAIb,GAEf,GAAA,WAAA5E,EAAAuD,SAAAI,KAAD,MAAOwB,GAAAA,YAZX,IAAAP,EAAA,CAKI,GAAIO,GAAclB,EAAEa,KAAKxD,EAAYyD,aAAc,SAASC,GAW7DU,MAAOV,GAAAH,UAASc,EAAUC,cAM1BC,OAHEC,IAHLrD,QAAAgD,IAAA,2BAAAb,GAMGiB,EAAiBT,KAIpBpF,EAAG8F,KAAAA,SAAeH,EAAAC,GAChBnC,EAAAA,QAAAzD,EAAA+F,WAAAH,GACA5F,EAAAgG,kBAAAhG,EAAAG,UAAAH,EAAAO,MAAAC,OAFFR,EAAA8F,gBAMEhG,EAAAA,eAAWkG,WACXhG,OAAG8F,EAAAA,SAAHG,QAAAjG,EAAAoD,mBAAAT,OAAA3C,EAAAuD,SAAA0C,QAGFjG,EAAGkG,aAAa,WACdlG,EAAA,GADFA,EAAAmB,YAKEnB,EAAAmG,eAAYC,WADdtG,EAAAkG,kBAAAhG,EAAAG,UAAAH,EAAAO,MAAAC,OAPER,EAAG8F,gBAaH3B,EAAAA,WAAKkC,WACLrG,EAAAmB,YAGImF,EAAAA,QAAAA,SAAAnC,GAED,MAAA,UAAAA,EAAAiC,UAAA,WAAAjC,EAAAiC,UAAA,UAAAjC,EAAAiC,UAAA,kBAAAjC,EAAAiC,UAAA,mBAAAjC,EAAAiC,UAEHpG,EAAAA,WAAA,SAAiBsG,GACjBxG,EAAWkG,GACXhG,EAAG8F,YAAH,CAZF,IAAAQ,KAcDrH,SAAAsH,QAAAvG,EAAAO,MAAAC,MAAA,SAAAgG,EAAAC,GATQD,IAAUA,EAAMH,YACjBC,EAAYI,KAAKF,KAIrBxG,EAAGO,MAAMC,MAAQ8F,EACjBxG,EAAWkG,kBAAkBhG,EAAGG,UAAWmG,GAC3CtG,EAAG8F,gBA9MP3C,wBAAwBwD,SAAW,cAAe,eAAgB,cAAlExD,QAAAA,OAAAA,SAAwBwD,UAAU,yBAAgB,WAAlD1H,OACEoD,OAAO,EACLA,kBACAC,UAAAA,aACEnC,MAAAA,SACAI,SAAO,YACPgD,OAAAA,UACAqD,SAAQ,aAJQxH,WAFb+D,wBASL/D,aAAY+D,YACZ/B,YAAAA;YCbJnC,SAAQO,OAAO,SAASJ,WAAW,iBAAnCH,WAAQO,aAAgBJ,aAAW,cAIjC,SAAAiC,EAAAE,EAAAzB,EAAAwB,GASE,QAAG6C,GAAcA,GACf,GAAAA,EAAI0C,QACF,IAAA,GAAG7G,GAAG8G,EAAAA,EAAAA,EAAHA,SAAAnE,SAA0BkE,EAC3B,GAAA7G,EAAA8G,SAAUA,GAAAA,IAAYnD,EAAtBkD,QACD,MAAA7G,GAAA8G,SAAAC,GAAApD,KAML,QAAAqD,KACAhH,EAAGmE,KAAK8C,UAAYjH,EAAGmE,KAAK+C,MAGN5F,MAApBtB,EAAGmE,KAAK8C,kBAAwBE,EAAAA,KAAWnH,iBAAQoH,OAAkBpH,IACtEA,EAAAmE,KAAA8C,UAAA3F,EAAA6F,WAAAnH,EAAAmE,KAAAiD,iBAAApH,EAAAmE,KAAA8C,YAGqB3F,MAApBtB,EAAGmE,KAAK8C,YAAY3F,EAAY6F,KAAAA,WAAWxE,OAAQ0E,IACpDrH,EAAAmE,KAAA8C,UAAA3F,EAAA6F,WAAAnH,EAAAmE,KAAAkD,WAAArH,EAAAmE,KAAA8C,YA1BH,GAAIjH,GAAKC,IAGTD,GAAG8G,WAAWxF,EACdtB,EAAGsH,SAAAA,EAAiBA,aAApBtH,EAAGsH,eAAiBA,KA6BlBhF,UAAAA,qBAAkB,WAChB6B,OACAoD,OAAAA,EACApG,kBACA+E,KAAAA,QANGqB,SAAA,YAQLnI,SAAY,YACZgC,WAAc,eAThBhC,WAAA,gBArCFgC,aAAA,OA+CIjC,YAAa;YC/CjBF,SAAQO,OAAO,SAASJ,WAAW,iBAC/B,UAAU,YAAY,eAAe,WAAW,aADpDH,SAAQO,EAAOK,EAAST,EAAWiC,EAAnCvB,GAKI,GAAIE,GAAKC,IACTP,UAASC,KAAKC,UAAY,aAC1BK,KAAKuH,YAAc,WACjBxH,EAAGyH,WAAa3H,EAAW4H,gBAC3B1H,EAAG2H,WAAaC,OAAOC,KAAK7H,EAAGyH,YAAY5D,OAC3C7D,EAAG8H,SACH,KAAI,GAAIf,GAAAA,EAARA,EAAYA,EAAAA,WAAKY,SAAWhF,EAC1B3C,EAAG8H,OAAOpB,MACR/C,KAAM3D,EAAG2H,WADIZ,GAEbxG,MAAOP,EAAGyH,WAAWzH,EAAG2H,WAAjBZ,OAIb9G,KAAKuH,cAEF,aAAeO,GACbA,EAAa5H,YAAaH,GAAGyH,WAC3BM,EAAa5H,WAAaF,KAAK+H,eAChC/H,KAAK+H,aAAeD,EAAa5H,UACjCL,EAAWmI,mBAAmBhI,KAAK+H,aAAc/H,KAAKwH,aAKzDxH,KAAA+H,aAAA,KAKE/H,KAAA+H,cAAA/H,KAAA+H,eAAA/H,MAAAwH,WACH5H,EAAKmI,KAAL,UAAA/H,KAAA+H,cAGC/H,KAAK+H,aAAc,KAIpBE,KAAQxI,aACTwI,EAAAxI,SAAAyI,MAAA,eAAAlI,KAAA+H,aAGCE,EAAON,SAAYO,MAAKV,qBAG1BxH,KAAKmI,SAAL,WACEvI,MAAAA,QAAegI,KAAA5H,KAAAwH,YAAf9E,OAAA,GAGF1C,KAAK6F,YAAe,WAClB9F,EAAGwH,KAAH,eADFvH,KAAA6F,aAAA,WACE9F,EAAGwH,cAKLnG,KAAApB,KAAKoI,YAAc,SAASlI,GAK5BL,EAAemI,mBAAW9H,EAAAF,KAAAwH,YACxB5H,EAAUyI,IAAI,UAAdnI,IAGFF,KAAKsI,QAAS,WACZ1I,EAAUyI,IAAI,aADhBrI,KAAKsI,OAAS,WACZ1I,EAAUyI,IAAI;ACrEpB,YAgBA,SAASE,sBAAqBjH,EAAWkH,GAAzC,GAAAzI,GAASwI,IAGPxI,GAAG0I,eAAiB,WAApB1I,GAAG0I,GAAiBD,EAAWE,aAAA3I,EAAAO,MAAAP,EAAAG,UAAAH,EAAAkH,MAAA0B,iBACzBC,EAAAA,EAAiBJ,cAAiBE,eAAjBG,KAA2C3I,KAAAA,UAAc+G,GAC9E6B,QAAIT,KAAMG,IAnBdD,qBAAqB7B,SAAW,aAAc,oBAA9C6B,QAAAA,OAAAA,SAAqB7B,UAAW,sBAAc,WAA9C1H,OACEoD,OAAO,EACLA,kBACAC,MAAAA,SACE4E,MAAO,SACP3G,UAAO,cAFSnB,WAFboJ,qBAOLpJ,aAAYoJ,YACZpH,YAAAA;YCXJnC,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,eAAe,YAASG,cAAW,aAEnC,eAEE,SAAA2I,EAAAlI,EAAAyB,EAAAC,EAAAC,GAEA,GAAIxB,GAAKC,IAGTA,MAAK+I,MAAAA,EAAkBxH,cAAa6B,KAAAA,OAApCpD,KAAK+I,gBAAkBxH,EAAa6B,mBAAmBpD,KAAKM,MAAMC,OAGhEP,KAAAgJ,YAAYC,SAAaC,GACvB,GAAAnJ,EAAIkJ,MAAAA,WAAiBE,EAAKpJ,CAE3B,MADQkJ,IAAWG,MAAAA,EAAAA,MAAAA,YACnBA,uBAIDpJ,KAAAqJ,YAAYJ,SAAaC,GACvB,GAAAnJ,EAAIkJ,MAAAA,WAAiBE,EAAKpJ,CAE3B,MADQkJ,IAAWK,MAAAA,EAAAA,MAAAA,YACnBA,uBAIDtJ,KAAAuJ,gBAAA,SAAAL,GAAA,GAAIM,GAAU,EADhB,OAOIxK,SAAGyK,QAAAA,EAAY/G,gBAAY,SAAA+G,EAAAxH,GACzBwH,EAAW/G,OAAX,IACE8G,EAAAA,OAAA,IACDA,GAAA,MAEFA,GAAAC,EAAA/G,OAAA,IAAAT,KAZLuH,MAoBEpH,UAAO,wBADF,WAELC,OACEnC,OAAAA,EACAI,kBAJGJ,UAAA,aAMLf,MAAAA,UAEAD,WAAAA,mBARFiC,aAAA,YA5CFjC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,sBAAnCH,UAAQO,YAAR,eAAmC,WAAA,aAElC,aAAU,OAAY,cAAvB,oBAAiD,YAE/C,SAAA0I,EAAArI,EAAAkI,EAAA1G,EAAAvB,EAAAyB,EAAAoI,EAAArI,EAAAsI,EAAAC,GA+QA,QAAKC,GAALC,EAAAC,GAnRF,MAAAD,IAAAC,EAuQaC,KAAKC,MAAM,KAAS,EAAKF,EAAUD,IAAY,IAG/C,EApQX,GAAI/J,GAAKC,IAyBP,IAtBFiI,EAAQiC,SAAShC,MAAjB,wBAAAD,EAAQiC,SAAS,EAAG,GAGpBlK,KAAKmK,WAAaxC,EAAAF,gBAClBzH,KAAImK,WAAKA,OAAYvC,KAAA5H,KAAAwH,YACnBxH,KAAKmK,aACNnK,KAAAmK,eAECnK,KAAKoK,WAAYvK,OAAAA,EADnBG,KAGKoK,UAAAvK,EAAAwK,kBACHrK,KAAKoK,UAAY,KAKfpK,KAAKoK,WAAYpK,KAAKmK,YAAtBnK,MAAAwH,YACDxH,KAAAmK,WAAAzH,OAAA,IACF1C,KAAAoK,UAAApK,KAAAmK,WAAA,IAICnK,KAAAoK,UAAA,CAKEpK,KAAAsK,kBAAe9C,WACf,GAAU,MAAVxH,KAAGkJ,eAAO,CACR,GAAAA,GAAKqB,EAAAA,WAAiBjJ,EAAAA,UACvB4H,KACFlJ,KAAAuK,eAAAjJ,EAAAkJ,4BAAAtB,EAAAA,EAAA3I,QAED,MAAOP,MAAKuK,gBAKbvK,KAFDyK,SAAA,WACE,MAAO1K,GAAGyH,WAAWzH,EAAGqK,YAG1BpK,KAAK0K,OAAS,SAASlE,GAGrBzG,EAAG4K,cAAAA,EAEH5K,EAAG6K,yBACH7K,EAAG8K,2BANL9K,EAAA6K,2BAME7K,EAAG8K,8BAcL7K,KAAK8K,SACL,QACE,OACE,OACD,OAGH9K,KAAK+K,iBACL,KAAA,GAAKA,KAAL1J,GAAA4F,MACK8D,EAAU9D,MAAQ9B,GAAvB6F,gBACAhL,KAAK+K,eAALtE,KAAAtB,EAHAnF,MAAK+K,aAQL/K,KAAKiL,UAAL,KAAA,EANAjL,KAAK+K,UAAU,IAAQ,EAQvB/K,KAAK6J,UAAL,IAAkB,EAChB9J,KAAGkL,UAAH,GAAA,EAEAjM,KAAAA,eAAmBwI,EAEfxH,KAAAiL,QAEEC,KAAAA,WAAU,WACXnL,EAAAkL,QAEDjM,QAAImM,QAAAA,EAAW3D,WAAfzH,EAAAqK,WAAA7J,MAAA,SAAA2D,EAAAsC,GACA,GAAQ,YAARtC,EAAAiC,SAAQ,CACN,GAAA+E,GAAInL,EAAQoL,UAAWjH,EAAAkH,eACrBrL,IAAoBA,GAAZoL,IACTD,EAAA,EAIGhH,KADF,GAAAiH,GAASC,IACPlH,CAKF,GAJCnE,EAAAkL,KAAAE,KANDpL,EAAGkL,KAAKE,GAAYpL,EAAGsL,iBAUvBtL,EAAAkL,KAAAE,GAAAD,GAAA1E,MAAA,EAAA,CAPFtC,EASKkH,iBACHD,EAAAA,eAAAA,EAGL,IAAAG,GAAAvL,EAAAwL,SAAArH,EAAAsC,EA1BHzG,GAAAkL,KAAAE,GAAAD,GAAAI,CAoBQ,OAYPH,QAOEI,EAAAA,KAAL7I,OAAgB,IACd3C,EAAAkL,KAAS/G,EAAAA,KAAMA,OAAMsC,GAAOA,EAArB6E,kBAIPrL,KAAAqL,cAAMG,SAAqBC,GACzB,OAAGC,EAAIlF,UAAP4E,eAAmB,MAAA,GAAArL,EAAAwL,UAAAH,eAAA,KAAA,GAAArL,EAAAwL,UAAAH,eAAA,KAAA,GAAArL,EAAAwL,UAAAH,eAAA,IAAA,KAGpBpL,KAJDuL,SAKK,SAAArH,EAAAsC,GACHzG,OAAAmE,KAAAA,EAAAsC,MAAAA,IAPJxG,KAAK2L,MAAQ,SAASD,GAWjBjG,EAAAA,gBAAO,EATLiG,EAAIlF,OAAS,GAWdjG,EAAAA,OAAQR,EAAGyH,OAIbzH,EAAG6L,KAAAA,IAIJ5L,KAPDyF,KAQK,SAAAiG,GAEH3L,GAAAA,GAAG6L,EAAAA,WAAkBF,EAAIxH,WAAKkH,KAC9B7K,IAAAA,EAAAA,OAAaR,EAAGyL,CAChBjL,GAAAA,GAAAmL,EAAAxH,KAAAkH,cATArL,GAAG6L,YAAYF,EAAIxH,KAAM3D,EAAMR,EAAGyL,eAAeJ,gBAYnDrL,EAAGwK,YAAHhK,EAAoBR,EAApByL,eAAAK,GACA9L,EAAGyL,EAAAA,OAAHjL,EAAAR,EAAAyL,eACAzL,EAAG8J,EAAAA,eAAH6B,EAAAxH,SAEA9C,CAtBF,GAAA8C,GAAA3D,EAAAR,EAAAyL,cAaIzL,GAAG6L,YAAY1H,EAAMwH,EAAIxH,KAAKkH,gBAYlC7K,EAAKqL,OAAL7L,EAAmByL,cAAeM,GAChCvL,EAAIwL,KAAAA,GAGAA,EAAAA,eAAgB,KACjBhM,EAAAyL,eAAA,EACFzL,EAJD8J,aANA9J,EAAGiM,uBAYH9H,KAGAA,KAAAA,YAAiB7C,SAAAA,EAAY6F,GAX/B,GAAA6E,KAEE/M,SAAQsH,QAAQpC,EAAK+C,MAAO,SAASgF,EAAMzF,GAaxCwF,GACAE,EAAAA,MAAAA,GAALD,EAA8B9G,GAAAgH,IAASC,EAATD,KAAiBE,EAAiB,SAI7DnI,EAAAiD,iBAAA4E,EAJH7H,EAAAkH,eAAAU,EAOA5H,EAAKoI,UAAAA,EAAqBpF,WAASmF,EAAWnI,iBAAMA,EAAA+C,QAIlDjH,KAAAgM,uBAXFhM,KAAKkM,uBAAyB,SAASE,EAAQC,EAAWnI,GAcxD,GADAlE,KAAIkJ,mBAAW1B,EAAc4C,GAC7BpK,KAAI8D,oBAAuB0H,GAXzB,MAAOxL,MAAKgM,oBAAoBK,GAAWD,IAgB3CpN,KAAAA,mBAAqBiI,SAAOoF,EAAAnI,GAC1B6H,IAAAA,EAAAA,oBAAqBE,IAAcA,EAAAA,gBAAkBb,EAArDW,CAGH/L,KAAAgM,oBAAAK,KAEDN,IAAAA,GAAAA,EAAAvE,WAAAzH,EAAAqK,WACApL,EAAQsH,EAAQxC,MAAMmD,EAAtBuE,eAAAO,KAGIQ,IAXDrI,GAAK+C,QAaRjI,QAAIwN,QAAavF,EAAAA,MAAOwF,SAAaR,EAAChF,GACtCjI,EAAAyH,MAAgByC,GAAM3I,EAAO4E,GAAAgH,IAAS5F,EAAT4F,KAAArI,EAAwBsH,eAAA,SAEjDoB,EAAS/F,EAATS,WAAA6E,EAAA7H,EAAA+C,QATJ8E,KAaA/M,QAAI0N,QAAWpL,EAAAA,MAAWkJ,SAAAA,EAAAA,GAC1BuB,EAAIY,MAAerC,GAAAA,EAAAA,GAAAA,IAAH2B,EAAhBE,KAAAjI,EAAAkH,eAAA,QAEA,IAAAmB,GAAclL,EAAY4F,WAAO8E,EAAAjI,EAAAmD,OAE7BlH,IAAGiM,MAAAA,IAA+B7G,MAAMyH,GACzC5N,SAAAsH,QAAA4C,EAAA3I,MAAA,SAAAgG,EAAAC,GACFtC,IAAAqC,GAAAzC,IAAAyC,GAtCHiG,EAAA/F,KAAAF,IA2CE,IAAGlF,GAAAA,EAAsBwL,4BAAsB3D,EAAAsD,GAC7CG,EAAA5M,EAAAuK,mBAEEwC,KAAAA,GAAAA,KAAQ/M,GAAcA,MACvBsB,EAAA4F,MAAA9B,GAAA6F,iBACDvG,EAAAA,oBAAsBsI,GAAZ5H,GAAVyH,EAAA7M,EAAAiN,QAAA7H,EAAAuH,GAAAP,IAAApM,EAAAiN,QAAA7H,EAAAwH,GAAAR,QAMCnM,KAAAiN,YAAA,SAAA9H,GACDV,GAAAA,GAAUpD,EACX,IAAA,WAAAA,EAAA4F,MAAA9B,GAAA0H,QAAA,CACD,GAAAC,GAAOrI,CAhBT1E,GAAAyH,WAAAzH,EAAAqK,WAAAyC,UAKMC,EAAQ/M,EAAGyH,WAAWzH,EAAGqK,WAAWyC,QAAQ1H,IAehDV,GAAUwC,EAAV8F,SAAAD,GAAApJ,SAEE,IAAsB,aAAnBuD,EAAAA,MAAmB9B,GAAA0H,QAAA,CACpB,GAAAC,GAAO7F,CACRlH,GAAAyH,WAAAzH,EAAAqK,WAAA8C,mBACFJ,EAAA/M,EAAAyH,WAAAzH,EAAAqK,WAAA8C,iBAAA/H,IANHV,GAAApD,EAAA0L,SAAAD,GAAApJ,KAUA,MAASkJ,GAAAA,IAATvL,EAAiC0I,MAAS5E,GAAAzB,MAGvC1D,KAFDgN,QAGK,SAAA7H,EAAA8B,GAEJ,IAAA,GADCkG,GAAAlG,EAAAvE,OACDoE,EAAA,EAAAA,EAAAqG,IAAArG,EACF,GAAAG,EAAAH,GAAA3B,IAAAA,EAbK,MAAO8B,GAAMH,EAiBjBlH,QAAAA,GAAUK,EAAKkM,IAAA,IAFjBnM,KAAKoN,KAAO,WACVvN,EAAWkG,kBAAkBhG,EAAGqK,UAAWrK,EAAGyH,WAAWzH,EAAGqK,WAAW7J,OACvEX,EAAUK,KAAK,UAAYF,EAAGqK,YAGhCpK,KAAK6J;YCrQN,SAdDwD,iBAAAjM,EAAAE,EAAAC,EAAA1B,GAeA,GAAAE,GAASsN,IAIPtN,GAAGkH,MAAQ3F,EAAWgM,cAAcvN,EAAGO,MAEvC,IAAIiN,GAAmBC,aAAaxM,QAAQ,uBAF5CjB,GAAGkH,SAAQ3F,EAAWgM,OAAAA,GAIlBvN,EAAGuD,WAAYvD,EAAGuD,SAASmK,cAF/BF,EAAIA,SACJxN,EAAGuD,SAAW/B,EAAamM,OAAOH,WAGhCxN,EAAAA,iBAAcwB,WAEf,GAAA8B,GAAA9B,EAAA6B,mBAAArD,EAAAO,MAAAC,MAGC,OAAGR,GAAGuD,SAASI,OAAQL,GAFtBF,EAAmBpD,EAAAuD,SAAWI,UAShC3D,EATD4N,eAAA,WAWE5N,EAAG6N,OAAS,KADd7N,EAAG4N,SAAAA,KACD5N,EAAG6N,kBAAH,EACA7N,EAAG2F,WACH3F,EAAG8N,kBAAmB,GACtBzM,IAIDrB,EARD+N,cAAA,WAUE,MAAOvM,GAAawM,YAErBhO,EAHDiO,oBAAA,SAAAC,GAKElO,EAAGuD,SAAW/B,EAAamM,OAAOO,GADpClO,aAAGiO,QAAH,uBAAyCC,IAIxClO,EAJDiJ,YAAA,SAAAE,GAME,GAAGnJ,EAAGO,MAAM2I,WAAa,EAAG,CAA5B,MADe,IAAAE,MAASD,EAAT5I,MAAgB2I,YACnBA,uBAKblJ,EANDsJ,YAAA,SAAAH,GAQE,GAAGnJ,EAAGO,MAAM2I,WAAa,EAAG,CAA5B,MADe,IAAAE,MAASD,EAAT5I,MAAgB2I,YACnBA,uBAKblJ,EAND6F,eAAA,WAQE,OAAQ7F,EAAGuD,SAAS0C,QAAUjG,EAAGoD,mBAAmBT,OAAS3C,EAAGuD,SAAS0C,QAE1EjG,EAHDmO,aAAA,WAKE,GAAIC,GAAgB,GADnBD,EAAHnO,EAAkBO,MAAAC,KAEhB,IAAe,kBAAfR,EAAIqO,SAAWrO,KAAf,CAGE,GAAIsO,GAAoB,EADvBtO,EAAoB,CACrBf,SAAIqP,QAAAA,EAAJ,SAAAnK,EAAAsC,GACI8H,EAAAA,UAAAA,EAAJhL,SAAAI,KACA1E,IAEIsP,EAAAA,oBADFD,GAGajK,EAAAA,qBAKf+J,EAAgBG,EAAmB,MAAQD,MAZ7C,IAcQ,mBAAHtO,EAAGA,SAAGuD,KAAiB,CAE1B,GAAIiL,GAAsB,EACtBC,EAAqB,EACrBC,IACJzP,SAAQsH,QAAQ8H,EAAU,SAAAlK,EAAAsC,GACxB,GAAAtC,EAAGA,UAAAnE,EAAiBA,SAAA2D,KAApB,CACE,GAAIgL,GAAUxK,EAAKyK,WAChBD,KACDA,EAAU,GAGTA,IAAEA,KACHD,EAAkBC,GAAW,GAE/BD,EAAkBC,KAClBH,QAGAC,GAAAA,qBAEDA,GAAAtK,EAAAC,sBAGHnF,EAAgByP,GACdzP,QAAGmP,QAAAA,EAA0B,SAAAS,EAAAF,GAC3BP,EAAAA,OAAA,IAEDA,GAAA,KAJHA,GAAAS,IAxBGT,EAiCAI,EAAA,KAAAJ,EAAA,OAAAK,MAEHxP,CACE,GAAA6P,GAAW3K,CACT2K,SAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAED3K,GAAAA,EAAAiC,UAAApG,EAAAuD,SAAAI,MAJHmL,MAQAV,EAAUU,CACRV,IAAAA,GAAAA,EAAiBT,OAAQoB,EAAIC,SAA7BrL,KAEDoL,IAAA,eAAAA,KACFX,GAAA,MAAAW,EAAAC,aACD,MAAOZ,IAKPpO,EAAAA,UAASQ,WACTV,GAAAA,IAAWkG,GAAAA,EAAAA,SAAqB7F,SAAWH,KAAGO,kBAA9C2G,SACAlH,GAAG8F,MAAAA,MAAH9F,EAAAO,MAAAC,MAAAyO,OAAAC,GAJFpP,EAAAkG,kBAAAhG,EAAAG,UAAAH,EAAAO,MAAAC,OAIER,EAAG8F,gBAKH9F,EAAAA,aAAA,WAFFA,EAAAkH,MAAA3F,EAAAgM,cAAAvN,EAAAO,OAIDP,EAAAmB,YAzJDmM,gBAAgB3G,SAAW,WAAY,aAAc,eAAgB,cADrE1H,QAAQO,OAAO,SAASsB,UAAU,iBAAkB,WAClD,OAAFwM,OAAAA,EAAEhL,kBACED,UADK,aAELC,MAAAA,SACEnC,SAAAA,YACAI,OAAO,WAEPqG,WAAQ0G,gBAJQlM,aAFb,YAQLhC,YAAYkO;YCThBrO,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,YAAQO,eAAgBJ,WAAW,aAAnC,UAEC,OAAY,cAAb,oBAEE,SAAAS,EAAAkI,EAAA1G,EAAAvB,EAAA6B,EAAAgI,EAAArI,EAAAsI,GAIA3J,KAAGkP,UAAUpH,EACT,QAAAA,KACH9H,KAAA0D,KAAAoE,EAAApE,MAGC7D,KAAAA,OAAWsP,WACXvP,EAAUK,YAAKD,KAAf0D,MAFF9D,EAAAK,KAAA;cCZF,WAGAmP,QAAAA,GAAAnH,EAAyBrI,EAAWkI,EAAa1G,EAAAvB,EAAgB6B,EAAYgI,EAAArI,EAAcsI,EAAmBC,EAAeyF,GAE7H,GAAAtP,GAASqP,IACPrP,GAAAyH,WAAA3H,EAAA4H,gBAIA1H,EAAGmJ,SAFHnJ,EAAAmP,UAAS,EACTnP,aAAgBF,IAChBE,EAAGmJ,UAAHpB,EAAA5H,UACGgP,EAAAA,YAAHnP,GAAAyH,aACGzH,EAAAmJ,MAAAnJ,EAAAyH,WAAeM,EAAlBsC,WACIrK,EAAGqK,UAAYtC,IAKd/H,EAAAqK,UAAA,GAEHrK,EAAAA,aAAAA,EAAAqK,UAEDrK,EAAAuP,aAADvP,EAAAA,SAAGwP,EAAkBnF,SACrBrK,EAAAA,YAAesB,EAAfmO,YAEAzP,EAAAA,eAAiBsB,WAGZtB,EAAG0P,MADLC,EAAAA,MAAAA,WACD3P,EAAGA,WAAQA,EAAAmJ,MAAAyG,WAEJA,EAAAA,UAAgBzG,cAAnBnJ,GAAA0P,IAAAG,EADF7P,EAAA0P,IAGKG,EAAG7P,WACNA,EAAA4P,WAAYE,EAAYL,YAAA,GAItBzP,EAAAA,WAAAsB,EAAgBA,YAAYmO,GAM/BzP,EAAA4P,WAAAtO,EAAAmO,YAAA,KAIHzP,EAAA+P,mBAAIC,WACJ,GAAAA,GAAIC,EAA0B3O,SAAAA,GAA1B2O,EAA0B3O,EAAY0L,SAAS,EAGjD,IAAAhN,EAAA0P,KAAIQ,EAAAA,IAAUlQ,EAAG0P,CACjB,GAAAQ,GAAGA,EAAWR,IAAAG,EAAAM,WACZH,aAAAA,GAA6BhD,cAAZ1L,GAAjB,YAAA4O,GAAA,SAAAA,GAAA,gBAAAA,GAAA,gBAAAA,GACAD,EAAAA,EAA0B3O,SAAAA,GAE3B2O,EAAkB3O,EAAW4O,SAAW,IAEvCD,SAAAA,GAA0B3O,WAAAA,GAA1B,aAAA4O,GAAA,gBAAAA,GAAA,eAAAA,GAAA,aAAAA,GAAA,aAAAA,GAEDF,EAAOE,EAAWlD,SAAakD,GAC9BF,EAAiB1O,EAAY0L,SAA7B,IAGMkD,WAJHA,GAIyB,UAAXA,GAAW,eAAAA,GAC5BF,EAAAA,EAAiB1O,SAAY0L,GAC7BiD,EAAAA,EAA0B3O,SAAY0L,IAGtCgD,WAAAA,GACAC,EAAAA,EAA0B3O,SAAAA,GAE3B2O,EAAkB3O,EAAa0L,SAAA,IAE9BiD,SAAAA,GAEDD,EAAA1O,EAAA0L,SAAA,GACFiD,EAAA3O,EAAA0L,SAAA,IACe,aAAVmC,IACJnP,EAAagQ,EAAbhD,SAAA,GACAhN,EAAsBiQ,EAAAA,SAAtB,IAIAjQ,EAAAA,WAEDA,EAAA8M,QAAAkD,EANChQ,EAAGmN,iBAAmB8C,GAUvBjQ,EAAA8M,UA5CH9M,EAAA8M,QAAAkD,GA+CEhQ,EAAG8M,mBADL9M,EAAAmN,iBAGK6C,IAILhQ,EAAGA,MAAGmJ,QACJnJ,EAAAA,QAAGmN,EAAAA,MAAHL,QAKD9M,EAAA8M,QAAAxL,EAAA0L,SAAA,GAEChN,EAAAA,MAAGoQ,iBAEJpQ,EAHDmN,iBAGKnN,EAAAmJ,MAAAgE,iBANHnN,EAAGmN,iBAAmB7L,EAAY0L,SAAS,GAU7C,cAGKhN,GAAAmJ,MAILnJ,EAAAoQ,WAAYC,EAAAA,MAAYD,WAHtBpQ,EAAAA,WAAA,GAOAA,aAAgBA,GAAhBmJ,MAIAnJ,EAAAA,UAAGsQ,EAAHnH,MAAoBA,UAFrBnJ,EAAAuQ,UAAA,EAOAvQ,EAAAmJ,MAAAkH,WAZCrQ,EAAGqQ,WAAarQ,EAAGmJ,MAAMkH,WAgB1BrQ,EAHDqQ,WAGK,GAVFrQ,EAAGmJ,MAAMmH,YAcZtQ,EAAGwQ,YAAOxQ,EAAAmJ,MAAWmH,YAGjBjP,EAAAA,YAAU,GAGNpC,EAAAA,MAAAA,WAAAe,EAAgByQ,MAAhBC,UAAkCxC,EAChClO,EAAA0Q,UAAGxC,EAAAA,MAAAwC,UAIJ1Q,EAAA0Q,UALD,EAOF1Q,EAAAA,KAAAA,WACAA,GAAAA,GAAG+P,EAAAA,cACH/P,GAAG2Q,OAAAA,GAEJtP,EAdD,WAHJ,OAAArB,GAAAmJ,OAMQlK,QAAQsH,QAAQkK,EAAS,SAASvC,EAAO0C,GAcjD1C,EAAY9I,IAAApF,EAAWmJ,MAAAuG,IAAAtK,KACb+E,EAAAA,IAAS+D,KADnBlO,EAAA2P,iBANM3P,EAAG+P,qBAcTT,EAAOkB,kBAKPxQ,EAAAA,OAAG6Q,WACD3I,EAAAiC,SAAON,EAAUiH,GAElBzP,EAHD,WAGArB,EAAG+Q,iBACD/Q,EAAA+P,wBAKDT,EAHDkB,OAVA3G,EAAU2G,KAAK,WAcfxQ,EAAGgR,SAIAhR,EAAA6Q,WAAA,SAAAI,EAAAC,GAbD,MAAOrH,GAAUiH,YAAYI,GAAUD,IAerCjR,EAAA+Q,iBAAG,SAAkB1G,GACnB,MAAAR,GAAAsH,eAAAnR,EAAA0P,IAAAtK,IAAA6L,IAGHjR,EAAAoR,eAAA,SAAAH,GAbD,MAAOpH,GAAUwH,aAAarR,EAAGsQ,YAAatQ,EAAG0P,IAAItK,IAAI6L,IAG3DjR,EAAGgR,iBAAmB,WActBhR,OAAGsR,EAAHjH,eAIErK,EAAIuR,YAAY1H,GAAAA,cAChB7J,EAAIuP,UAAY1F,EAAAA,WAAU2H,EAAAA,eAWxBnB,EAAAA,GAAAA,WACAC,GAAAA,GAAgBA,EAAAA,YAFhBtQ,EAAAqQ,YAGAK,EAAcA,EAHdI,YAAA9Q,EAAAsQ,aAIAZ,EAJA7F,EAAAsH,eAAAnR,EAAA0P,IAAAtK,IAKAwK,EAAY5P,EAAG4P,aALf5P,EAAAsQ,YAAAtQ,EAAA0P,IAAAtK,IAMA0H,EAAYA,EANZ0E,aAAAxR,EAAA0Q,UAQAN,GAAAA,WACAG,EAAAA,aAAcA,EAAAA,UACdkB,EAAAA,YAAeA,EAAAA,eAGfF,EAAAA,UACAhC,EAAAA,aAdAvP,EAHFqK,WAoBAxK,WAAUK,EAAKmQ,WAhCjBC,YAAAtQ,EAAAsQ,YAkBII,UAAW1Q,EAAG0Q,UAiBlB1Q,IAAG2Q,EAAAA,IACD3Q,WAAAA,EAAe6J,WAEfiD,QAAA9M,EAAA8M,QAHFK,iBAAAnN,EAAAmN,iBAZIiD,WAAYpQ,EAAGoQ,WAiBnB/O,UAASrB,EAAAuQ,UACPkB,cAAY/R,EACZgS,eAAUA,EACRC,YAAAC,EACAD,UAAME,EAEPtC,UAAAA,IApPL1P,EAAAK,KAAA,UAAAF,EAAAqK,YAyOErK,EAAG2Q,aAAe,WAChB3Q,EAAGuP,UAAY1F,EAAU2H,aAAaxR,EAAG0Q,YAI3CrP,EAAS,WACP,GAAIsQ,GAAQjS,SAASoS,eAAe,iBACjCH,KACDA,EAAMI,QACNJ,EAAME,kBAAkB,EAAG,SAjPjCxC,EAAA1I,SAAA,UAAA,YAAA,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YAAA,UAAA1H,QAAAO,OAAA,SAAAJ,WAAA,gBAAAiQ;YCDApQ,SAAQO,OAAO,SAASJ,WAAW,gBAAnCH,WAAQO,aAAgBJ,aAAW,WAAnC,eAEY,OAAA,UAAa,mBAEvB,SAAAiC,EAAAE,EAAAzB,EAAAkS,EAAAxQ,EAAAmI,EAAAhI,EAAA5B,GAGAC,GAAGiS,GAAAA,IACHjS,GAAGkS,cAAH,GACAlS,EAAGmS,WAAH,EACAnS,EAAGoS,SAAHpS,EAAGoS,WAGDnS,KAAAoS,WAAMC,WACJtS,EAAGoS,eACHpS,EAAAoS,QAAMA,EAAHG,WAAwBvS,EAAAuD,SAAAvD,EAAAO,MAAAP,EAAAmS,OACNC,GAAnBpS,EAAGwS,QAAAA,QACJxS,EAAAwS,aAAAxS,EAAAoS,QAAA,MAKHnS,KAAAuS,aAAWR,SAASS,GACpBzS,GAAGmS,GAAMzL,EAAT+L,WAAAvE,EAAAlO,EAAAuD,SAAAvD,EAAAkS,WAEA,IADAlS,EAAGkS,MAAAA,KAAH3G,GACAvL,EAAAkS,aAAIF,EAASU,kBAAkB1S,EAAGuD,SAAUvD,EAAGkS,YAU7ClS,EAAGqS,iBAVuD,CAG1D,GAAIM,GAAAA,EAAW5S,QAAAA,EAAiB6S,OAChC3T,EAAAc,EAA0B6S,YAAAC,EACxBlR,SAAAA,QAAaqB,EAAU8P,SAASA,EAAA9P,GAA4BhD,EAAG+S,KAAAA,EAAaJ,EAAUE,aAA1B,WAAA7S,EAAA+S,aAAAJ,EAAAE,OAC7D7S,EAFD+S,aAAAJ,EAAAE,KAWJ5S,KAAK8S,aAAe,SAAAJ,EAAAxO,GAClB,IAAGxC,EAACA,aAAJ,CAEE,GAAIqR,IAAY,CAOhB,IANA/T,QAAQsH,QAAQoM,EAAU,SAAAG,EAAA9P,GACrBrB,EAACA,SAAAqB,KACFgQ,GAAY,KAIhBA,GACEhT,EAAGA,MAAA2C,OAAA,EAAH,CACE3C,EAAGiT,QACH,IAAIJ,GAAU9S,EAAiBmT,WAAW/O,EAC1C0O,GAAQhM,QAAU7G,EAAG6G,QACrB/G,EAAWqT,SAASnT,EAAGG,UAAW0S,GAClC7S,EAAGO,MAAMC,MAAMkG,KAAKmM,GACpB7S,EAAGmB,cAMXlB,KAAKmT,MAAQ,WACXpT,EAAGkS,WAAa,EAChBlS,EAAGmS,SACH9Q,EAAS,WACPrB,EAAGqS,gBAIPpS,KAAKqS,WAAa,WAChB,MAAOtS,GAAGiS,eAAiBjS,EAAGuD,SAASI,MAGzC1D,KAAKoT,MAAQ,WACXrT,EAAGiS,cAAgBjS,EAAGuD,SAASI,KAE/BgG,EAAK6G,KAAK,aAAVxQ,EAAyBA,OACzBwB,EAAagP,KAAKxQ,EAAGuD,SAASI,KAAM3D,EAAGoT,QAGzCnT,KAAKqT,WAAa,WAChB,MAAOtB,GAASsB,WAAWtT,EAAGuD,SAAUvD,EAAGO,WAG7CN,KAAKgT,OAAS,WACZjT,EAAGiS,cAAgB,GACnBjS,EAAGoT,SAGLnT,KAAKsT,KAAO,WACV,GAAG,GAAHvT,EAAGA,WACDA,EAAGiT,aAGA,CACDjT,EAAAA,CACAA,EAAGmS,aAAHnS,EAAGmS,MAAMqB,KAFX,IAAAC,GAKQA,EAAAlB,WAA8BL,EAAAA,SALtClS,EAAAO,MAAAP,EAAAmS,aAKQsB,EAAY9Q,QAAU,GAAK3C,EAAGkS,WAAa,EAGpDlS,GAAAqS,eAxGL1Q,EA6GCb,KAAU,kBA7GX,KA6GgC,aAAWd,EAAAoT,UAGvC9Q,UAAAA,oBAAkB,WAChBiB,OACAhD,OAAAA,EACAJ,kBACA0G,SAAS,YACT1F,MAAAA,SAPGhB,UAAA,aASLf,QAAAA,WACAgC,SAAAA,aAVFhC,WAAA,eA9GFgC,aAAA,WAyHIjC,YAAa;YCtHjB,SAASuU,iBAAgB7T,EAAUkI,EAAa1G,EAASvB,EAAW6B,EAAQC,EAASH,EAAYC,GA8B/F,QAASiS,MAGT,QAASC,KACP,IAAA5T,EAAGA,SAAH,CAIA,GAAIgT,IAAY,EACZzQ,EAAQd,EAAYmR,YAAY5S,EAAGO,MAQvC,IAPAtB,QAAQsH,QAAQhE,EAAO,SAAAuQ,EAAA9P,GACrB,IAAGrB,EAACA,SAAAqB,GAEF,YADAgQ,GAAY,KAKhBA,GAAGA,EAAatR,WAAhB,CACE,GAAI+K,GAAWhL,EAAYf,YAAYV,EAAG2D,KAAM3D,EAAGO,MACnDT,GAAWkG,kBAAkBhG,EAAG2D,KAAM8I,GACtCzM,EAAGO,MAAMC,MAAQiM,EAEjBzM,EAAGW,UAAW,IAjDlB,GAAIX,GAAKC,IAAT,SAAA8H,KACG/H,EAAA2D,KAAUoE,EAAbpE,KAIA,IAAI8D,GAAa3H,EAAW4H,eAA5B1H,GAAIyH,OAAAA,KACJzH,EAAGA,MAAAyH,EAAWA,EAAY9D,OAI1B3D,EAAGW,UAAW,EAAdX,EAAGW,OAAH,WACAX,IACE4B,EAAAA,UAAAA,EAGAF,EAAa8O,KAAKmD,EAAUC,EAE5B,IAAIrR,GAAQd,EAAYmR,YAAY5S,EAAGO,MAAvCtB,SAAIsD,QAAQd,EAAAA,SAAYmR,EAAerS,GACvCtB,EAAQsH,KAARvD,EAAuB8P,EAASA,EAAS9P,MAK3ChD,EAAG6T,UAAY,WAAf7T,EAAAE,KAAe,UAAWF,EAAA2D,OA7B5B1E,QAAQO,OAAO,SAASJ,WAAW,mBAClC,YAAY,eAAe,WAAW,aAAa,UAAU,WAAW,cAAc,eAAesU;YCDtGzU,SAAQO,OAAO,SAASJ,WAAW,iBAChC,SAAS,UAAU,SAAS,YAAY,eAAe,aAAa,UAAU,WAAW,eAAe,WAAW,mBAAmB,cAAc,OAAO,YAAY,aAAa,cADvLH,SAAQO,EAAO0I,EAAS9I,EAAAA,EAAW2I,EAChCjI,EAAS6B,EAAUN,EAASK,EAAYE,EAAA7B,EAAe0B,EAAakI,EAAUE,EAAWtI,EAAAD,GAuDxF,QAASsS,KAGP3U,GAAAA,IAAgBwC,CACdxC,SAAI0C,QAAQmS,EAAS9Q,YAAW+Q,EAAAxT,OAAA,SAAAuS,EAAA9P,GAC9BgR,EAAUF,SAAV9Q,KACDgR,GAAA,KAIDA,IAAArS,EAAAsS,cAAAvS,EAAAoS,YAAAnK,EAAAmK,YAIAzS,EAAIgJ,WACJ,GAAIlB,GAAQ4K,EAAZ5T,UAAIgJ,EAAQ4K,EAAOxT,KAEnBwT,GAAOrE,IAAM/F,EAAKuK,QAAQH,EAAOrE,IAAItK,IAGrC2O,EAAOrC,cAAiB7H,EAAUiH,YAAYiD,EAAOzD,YACrDyD,EAAGA,eAAYlK,EAAAiH,YAAAiD,EAAAzD,aACbyD,EAAOnC,MACPmC,EAAOxC,YAAY1H,EAAUwH,eAAa0C,EAAOzD,IAAAA,IAClDyD,EAAAxC,UAAA1H,EAAAwH,aAAA0C,EAAAzD,YAAAyD,EAAArE,IAAAtK,KACD2O,EAAOxE,UAAY1F,EAAU2H,aAAauC,EAAOrD,UAEjD,IAAIjE,GAAWhL,EAAYf,YAAY2J,EAAWlB,EAGlD4K,GAAOxT,cACLC,EAAOiM,OACPvD,MAAAA,EAAAA,WAAYC,EAAMD,WAGlBoH,WAAayD,EAAOzD,WACpBI,YAAWqD,EAAOrD,YAClBhB,UAAYA,EAPCgB,UAQbd,IAAAA,EAAYmE,IACZjH,WAASiH,EAAOjH,WAChBK,QAAAA,EAAkB4G,QAClBtC,iBAAesC,EAAOtC,iBACtBC,cAAgBqC,EAAOrC,cACvBE,eAAamC,EAAOnC,eACpBL,YAAWwC,EAAOxC,YAClBhC,UAAWwE,EAAOxE,UAfpBA,UAAAwE,EAAAxE,WAkBAwE,EAAO7M,WAAQ3F,GAAWgM,EAAcwG,MAAxCA,EAAO7M,MAAQ3F,EAAWgM,cAAcwG,EAAOxT,MAG/CwT,IAAAA,GAAahT,EAAWC,gBAAuBE,EAA/Cf,UAAA4T,EAAAxT,MAtCFwT,GAAAxT,MAAAQ,SAAAC,eAAAC,QAAAC,KA0CF,QAASyS,MAjGPI,GATFrU,SAASC,KAAKC,UAAY,aAE1B0P,EAAO6E,kBAAkBpM,EAAauH,QAEtCyE,EAAO5T,UAAP,GACA4T,EAAOxT,SAILwT,KAAO5T,IAAY4H,KAAnBA,GAAA,CACAG,EAAQxI,UAASyI,EAAQiM,EAAzBlM,EAAQxI,SAASyI,MAAQ,eAAiBJ,EAAaqM,EAGvDL,EAAOzD,WAAcvI,EAArB/C,EACA+O,EAAOrD,YAAY3I,EAAnBsM,EACAN,EAAOrE,UAAY3H,EAANuM,EACbP,EAAOnE,KAAPxK,GAAoB9D,EAAYmO,GAChCsE,EAAOjH,WAAUxL,EAAY0L,YAASjF,EAAtC8H,GACAkE,EAAO5G,QAAAA,EAAmB7L,SAAY0L,EAASjF,GAA/CgM,EAAO5G,iBAAmB7L,EAAY0L,SAASjF,EAAawM,EAE5D,IAAI/T,MAEAgU,EAAazM,EAAahB,CAG5B9H,SAAIkF,QAAOpE,EAAAA,MAAiB0U,KAAWC,SAAvCA,EAAAjO,GAAA,GAAItC,GAAOpE,EAAiB0U,WAAWC,EAGrClU,GAAMkG,GAAKvC,GACZ3D,EAAAkG,KAAAvC,KAIH4P,EAAOtM,SACPsM,EAAOtM,cACPsM,EAAOxT,WAAPwT,EAAA5T,WAAA4T,EAAAxT,MACAwT,EAAOY,MAAAA,MAAPnU,EAAAuT,EAAOY,WAAY,EAGjBhT,QAAQ6O,QAAKxN,EAAU8P,YAAvBiB,EAA0CH,OAA1C,SAAAd,EAAA9P,GADFrB,EAAA6O,KAAAxN,EAAA8P,EAAAa,EAAAC,KAKAjK,EAAUgK,KAAUC,EAApBA,GACA/J,EAAAA,KAAU2G,EAAVoD,GAAA/J,EAAU2G,KAAKoD,GAGhBvS,IAED0S,EAAOa,SAAWhN,OAAOC,KAAKkM,EAAOtM,YAAY9E,OAAS,EA8DxDoR,EAAA3T,UAAA,WADA,GAAIyU,GAAe/U,EAAWQ,YAAYyT,EAAO5T,UAAW4T,EAAOxT,MAAMC,MAQrE8P,GAAAA,UACAI,EACAhB,GAEA5C,WAAgBA,EANlBuD,WAOElD,YAAAA,EAAkB4G,YAClB3D,UAAY2D,EAAO3D,UACnBG,IAAAA,EAAWwD,IACXtC,WAAesC,EAAOtC,WACtBC,QAAAA,EAAgBqC,QAChBnC,iBAAoBA,EAAAA,iBACpBL,WAAWwC,EAAOxC,WAClBhC,UAAWwE,EAAOxE,UAjBtBkC,cAAAsC,EAAAtC,cAcIC,eAAgBqC,EAAOrC,eAM3B7R,YAAckU,EAAYc,YAxB5BtD,UAAAwC,EAAAxC,UAlHJhC,UAAAwE,EAAAxE,YA0IM1P,EAAUyI,IAAI,UAAYuM;cC1IhC,WAAA5V,QAACO,OAAY,SAAA0E,OAAA,UAAA,WAEbjF,QAAQO,GAARmS,GACE,MAAAA,GAIe5I,OAAO+L,mBAAmBnD,GADlCA,GAGH,MAAAoD;cCTN,WAAA9V,QAACO,OAAY,SAAA0E,OAAA,cAAA,WAEbjF,QAAQO,GAAgB0E,GACtB,MAAA,gBAAAyN,GAIY1H,KAAKC,MAAc,IAARyH,EAAc,KAAO,IAAO,IAA/CA,EAMJqD,MAFGA,GAAAC,WAAA,EAEHD;cCbF,WAIS,QAAPE,GAAA5T,EAAAC,EAAAzB,EAAA0B,EAAAuS,EAAAhU,EAAA4B,GA2JG,QAAAkL,GAAA9C,EAAAC,GACF,MAvBDD,IAAAC,EAwBS6C,KAAAA,MAAAA,KAAgB9C,EAAQC,EAASD,IAAA,IAGtC,EAoNL,QAAAoL,KAxXDrV,EAAAmI,mBAAAjI,EAAAqK,UAAArK,EAAAyH,YAmBE,GAAIzH,GAAKC,IASP,IAPFA,KAAKwH,WAAa3H,EAAW4H,gBAF7BzH,KAAAmK,WAAAxC,OAAAC,KAAA5H,KAAAwH,YAIIxH,KAAKoK,YAFTpK,KAAKwH,UAAL3H,EAAkBA,mBAGhBG,KAAKoK,YAAYvK,MAAAA,aAElBG,KAAAoK,UAAA,OAECpK,KAAKoK,WAAYpK,KAAjBwH,WAED,IAAA,GAAA2N,KAAAnV,MAAAwH,WAAA,CAGGxH,KAAKoK,UAAY+K,CAFrB,OAKG,GAAAnV,KAAAoK,UAAA,CAGDpK,KAAA8K,iBAED,KAAA,GAAA3F,KAAA9D,GAAA4F,MAGI5F,EAAY4F,MAAM9B,GAAI6F,gBAF3BhL,KAAK8K,eAAiBrE,KAAtBtB,EAKGnF,MAAAoV,WAAA,WACFrV,EAAAsV,gBAAA,KAGCtV,EAAGiM,uBADHjM,EAAAA,WAAGsV,KACHtV,EAAAA,eAAGiM,MAGHjM,EAAAA,aAAGwK,SAAiBmI,GAErB,IAPDhR,EAAAsS,aAAA,CAQAjU,GAAGuV,IAAe,CAChBtW,SAAI0C,QAAQsS,EAAZ,SAA0BnB,EAAA9P,GAIlBrB,EAAQmS,SAAS9Q,KAFvBgQ,GAAIA,KAKDA,IACFhT,EALDmE,KAAApE,EAAAmT,WAAAlT,EAAAmE,QAUD,IAAAwO,GAAA5S,EAAA6S,YAAA5S,EAAAmE,KACFlF,SAfDsH,QAAAoM,EAAA,SAAAG,EAAA9P,GAkBErB,EAAQ6O,KAAKxN,EAAU8P,EAAS,aAAe,WAFjD9S,EAAI2S,aAAW5S,OAGXC,EAAAA,aAAGuV,GAGNxB,EALDyB,OAAA,gBAAA,WAKAxV,EAAGuV,eAGDvV,KAAAA,mBAAA,SAAAkM,GAGF,MADCjM,MAHDwV,iBAIKC,KAAAA,gBAAqBxJ,IAGxBjM,KAAAkM,uBAAYmJ,SAAZjJ,EAAAC,EAAAnI,GAKA,MAHDlE,MALDsM,mBAAAD,EAAAnI,GAQSlE,KAAKgM,oBAAoBK,GAAWD,IAA3CpM,KAAAsK,kBAAY0B,WAKZ,GAA0B,MAAvBhM,KAAKuK,eAAwB,CAE9B,GAAIrB,GAAQnJ,EAAGyH,WAAWzH,EAAGqK,UAF/BlB,KAIIlJ,KAAKuK,eAAiBjJ,EAAWkJ,4BAA4BtB,EAAOA,EAAM3I,QAE3E,MAAAP,MAAAuK,gBAEHvK,KAAAyK,SAAYF,WAEb,MAZDxK,GAAAyH,WAAAzH,EAAAqK,YAcEpK,KAAAwV,eAAUhO,WAKV,IAAGzH,EAAGsV,gBAAN,CAMA,GAAI1I,GAAY5M,EAAGuK,oBADnBpB,EAAAnJ,EAAAyH,WAAAzH,EAAAqK,WAGIoC,IAFJtD,GAAIyD,QACJH,EAAItD,EAAW1B,MAAAA,QAAc4C,EAAAA,OAE7B,IAAAsC,GAASnM,EAAOiK,4BAAAtB,EAAAsD,EAGfxM,MAAAqV,kBAAD,KAAA,GAAI3I,KAAAA,GAAWpL,MAIVD,EAAY4F,MAAM9B,GAAI6F,iBAF3BjL,EAAKsV,gBAALlQ,GAAAyH,EAAA7M,EAAAiN,QAAA7H,EAAAuH,GAAAP,IAAApM,EAAAiN,QAAA7H,EAAAwH,GAAAR,QAMCnM,KAAAsM,mBAAA,SAAAD,EAAAnI,GACF,IAvBDnE,EAAAiM,oBAAAK,GAuBC,CAGG,GAAAnD,GAAAnJ,EAAAyH,WAAAzH,EAAAqK,WAEDoC,GAAAzM,EAAAmE,KAGDlF,SAAQsH,QAAQ4C,EAAM3I,MAAO,SAASgG,EAAQC,GAF9CtC,IAAYnE,GACZyM,EAAIA,KAAYzM,IAKb,IAAA2M,GAAApL,EAAAkJ,4BAAAtB,EAAAsD,GAJHG,EAAA5M,EAAAuK,mBAMAtK,MAAAgM,oBAAe1K,KACf,KAAA,GAAIqL,KAAAA,GAAerC,MAIdjJ,EAAY4F,MAAM9B,GAAI6F,iBAF3BjL,EAAKiM,oBAAoBK,GAAzBlH,GAAAyH,EAAA7M,EAAAiN,QAAA7H,EAAAuH,GAAAP,IAAApM,EAAAiN,QAAA7H,EAAAwH,GAAAR,QAiBDnM,KAAAgN,QAAA,SAAA7H,EAAA8B,GACD,IAAA,GACMkG,GAAMlG,EAAMvE,OADbsK,EAAAA,EAALlG,EAAAqG,IAAerG,EACb,GAAAG,EAAIkG,GAAMlG,IAAMvE,EAChB,MAAQoE,GAARA,EAIG,QAAA3B,GAAAA,EAAAgH,IAAA,IAGJnM,KATDiN,YAAA,SAAA9H,GAWE,GAAIV,GAAS,EADf,IAAgC,WAAhCpD,EAAK4L,MAAc9H,GAAA0H,QAAa,CAC9B,GAAIpI,GAAAA,CACJ1E,GAAGsB,WAAY4F,EAAAA,WAAU4F,UACvBC,EAAIA,EAAAA,WAAJ/M,EAAAqK,WAAAyC,QAAA1H,IAEE2H,GAAAA,EAAWtF,SAAc4C,GAAjB1G,SAEVe,IAAU,aAAVA,EAAUpD,MAAY0L,GAAAA,QAAtB,CAED,GAPDD,GAOQzL,CACNtB,GAAI+M,WAAJ/M,EAAAqK,WAAA8C,mBACAJ,EAAMtF,EAAAA,WAAc4C,EAAAA,WAAW8C,iBAAkB/H,IAGhDV,GAAApD,EAAA0L,SAAAD,GAAApJ,KAEF,MAAAe,GAAA,IAAApD,EAAA4F,MAAA9B,GAAAzB,MAGH1D,KAAK0V,cAAgB,WAEnB,QAAIC,GAAJC,GACA,GAAAA,EAAA,CAEI,IAAA,GADCA,GAAK,EACFC,EAAAA,EAAAA,EAAAA,EAAJnT,SAAAoE,EACA8O,EAAIE,QAAJH,EAAcA,IAAUjT,GACtBmT,GAID,OAAAA,GAGD,OAAA,EAZJ,GAAIF,EAgBJ,IAAG,MAAH5V,EAAGA,YAAAA,EAAyBA,WAAzBA,EAAyCA,YAAAA,GAAgBA,YAAzDA,EAA0EA,MAA1EA,EAAqFA,KAAGmE,SAAKiC,CAC9FpG,EAAAA,aAEA,IAAAgW,EACG,UAAHhW,EAAGA,KAAGmE,YAA8B,QAAjCnE,EAAiCA,KAAGmE,aACrC6R,EAAAA,EAAW/R,KAAEa,EAAK9E,WAAGyH,EAAWzH,WAAdQ,MAAP,SAA0C2D,GACnD,MAAAA,GAAOA,aAAAnE,EAAoBA,KAAGmE,aAAvBnE,EAA2CA,KAAGmE,YAAHA,EAAsBA,aAI5E,IAAA3D,KACAwV,GACExV,EAAAA,KAAMkG,IAIJzC,EAAAgB,KAAAjF,EAAGmE,WAAKH,EAAAA,WAAqBiS,MAAAA,SAAc9R,GACzCA,EAAGA,cAA6BH,OAAxBA,EAAgBhE,YAAsB,SAAAmE,EAAA8R,YAAA,QAAA9R,EAAA8R,WAC5CzV,EAAAA,cAAAR,EAAAmE,KAAAH,cAEDxD,EAAAkG,KAAAvC,GAIFA,EAAAiC,UAAApG,EAAAmE,KAAAiC,UATH5F,EAAAkG,KAAAvC,KAcCnE,EAAAmE,KAAAR,OAADnD,EAAWR,EAAAmE,KAAAR,KAAAuS,MAAc,MAGxB1V,EAHDqD,KAAA,SAAAsS,EAAAC,GAID,MAAAC,GAAAD,EAAAzS,MAAA0S,EAAAF,EAAAxS,SAGG3D,QAAAA,QAAGsW,EAAW5P,SAAdvC,EAAAsC,GAEDtC,EAAAR,MAAA3D,EAAAmE,KAAAR,MAJH3D,EAAAsW,WAAA5P,KAAAvC,KAQInE,QAAAA,QAAGsW,EAAW5P,SAAdvC,EAAAsC,GAEDtC,EAAAR,MAAA3D,EAAAmE,KAAAR,MAJH3D,EAAAsW,WAAA5P,KAAAvC,KAMF,MAAOnE,GAAGsW,YAKVrW,KAAAsW,kBAAiBZ,WADjB,GAAI5G,GAAMvN,EAAamM,OAAO1N,KAAKkE,KAAKiC,UAGxC5F,EAAM2D,KAAK8R,eAEP,KAAYrH,SAAZ5O,EAAAmE,KAAA8R,YAAA,QAA8B9R,EAAAA,KAAKyK,aADlC3K,EAAHa,KAEItE,EAAA,SAAA2D,GACF,MAAAA,GAAOyK,aAAP5O,EAAAmE,KAAAyK,cAGH,OAAA,CAGG,IAAAG,GAAAA,EAAO9I,QAERzF,EAAAmC,QAAAoM,EAAA9I,OACF,OAAA,CAGG,IAAA8I,GAAAA,EAAIyH,aACFhW,EAAAmC,QAAIoM,EAAS/K,YAAc,CACzB,IAAA,GAAA+C,GAAA,EAAAA,EAAOvG,EAAPmC,SAAAoE,EAED,IAAAvG,EAAAuG,GAAA/C,aACF,OAAA,CAIJ,QAAA,EAAD,OAAO,GAKP/D,KAAAwW,UAAIC,WAEJzX,GAAAA,IAAQsH,EACNkQ,EAAA,IACExX,SAAAsH,QAAGkQ,EAAAA,WAAmB,SAAApM,EAAA5D,GACpBgQ,GAED,MAAAA,IACFA,EAAApM,GAGAA,GAAArK,EAAAqK,YATHqM,GAAA,KAcC,MAAAD,IAFCA,EAAYzW,EAAGoK,WAAW,IAK5BpK,EAAAA,UAAAyW,EAEDtB,IAFCnV,EAAGqV,cAKHpV,KAAA0W,UAAIC,WAEJ3X,GAAAA,IAAA,EACE0X,EAAGtM,IACDuM,SAAAA,QAAAA,EAAaxM,WAAb,SAAAC,EAAA5D,GAED4D,GAAArK,EAAAqK,YAFCuM,GAAa,GAMdA,IARHD,EAAAtM,KAaC,MAAAsM,IAFCA,EAAY3W,EAAGoK,WAAWpK,EAAGoK,WAAWzH,OAAO,IAKjD3C,EAAAA,UAAA2W,EAEDxB,IAFCnV,EAAGqV,cAKHpV,KAAA4W,WAAKpP,WACLzH,EAAGqV,SAAHrV,EAAAqK,UAAArK,EAAAmE,MACAnE,KAAGmB,WAAHrB,EAAA4H,gBAED1H,EANDqV,aAIErV,EAAGmB,YAKHlB,KAAAgD,QAAIqD,SAAJnC,GACAlF,EAAAA,aAAgBe,CACd,IAAAsG,KAEErH,SAAAsH,QAAAvG,EAAAyH,WAAAzH,EAAAqK,WAAA7J,MAAA,SAAAgG,EAAAC,GAAAH,EAAAA,YAGAA,EAAAA,KAAYI,EAAKF,MAAjBF,EAAYI,KAAKF,KAOrBxG,EAAGmB,kBAAHnB,EAAAqK,UAAA/D,GAEDrG,KAlBDwH,WAAA3H,EAAA4H,gBAeE1H,EAAGqV,aAILrV,EAAAmB,aAnXF+T,EAAAvO,SAAA,cAAA,aAAA,aAAA,eAAA,SAAA,mBAAA,WAAA1H,QAAAO,OAAA,SAAAsB,UAAA,2BAAA,WAGE,OADFoU,OAAAA,EAAAjW,kBACEkF,KAAO,QACL9B,QAAO,WACPC,SAAAA,aAEEwU,WAAAA,EACA3V,aAAU,WAHMhC,YAFb;YCJTF,SAAQO,OAAO,SAASJ,WAAW,sBAAnCH,cAAe,SAIb,SAAAqC,EAAAyS,GAGA,GAAakC,MAAbhW,KAAGkE,OACD,UAAAlE,KAAAkE,KAAA8R,YAAA,UAAAhW,KAAAkE,KAAAiC,UAAA,CAGF,GAAIpG,GAAKC,IAETA,MAAK8W,WAIH9S,EAAAsC,QAAAvG,EAAAmE,KAAA+C,MAAA,SAAAgF,GADFlM,EAAA+W,QAAA7K,EAAA9G,IAAA8G,EAAAE,KAME2H,KAAAA,GAAAA,KAAczS,GAAA4F,MAAd6M,EAAOyB,OAAO,oBAAsBnJ,EAAS,IAAK,SAAS2K,EAAUC,GAGjE,GAAAD,GAAAC,EAAA,CAIA,GAAItK,IAAW,EACfA,IAAA,KAAI,GAAIN,KAAUrM,GAAG+W,QAGjB9S,GAAEgB,EAAAA,QAAQd,IAAY+S,OAAShL,EAAAA,QAAMG,IAQnCjH,CACAgH,EAAK8K,MAFP9R,GAAA8R,OAAA7K,GAEED,IAAK8K,OAAOlX,EAAG+W,QAAQ1K,KAKvB,IAAA8K,IAAQ/R,CACN+R,GAAAA,KAAAA,EAAAA,KAAQjQ,MAAR,SAAAgF,GACAA,EAAA9G,IAAAiH,IACA8K,GAAK9K,EAEJA,IAAArM,GAAA+W,SAAA7K,EAAAE,KAAApM,EAAA+W,QAAA1K,KACF+K,GAAA,MAKFD,IACFC,GAAA,OAzBGnT,GAAAgB,KAAGiH,EAAAA,KAAAhF,MAAWmF,SAAQH,GACpBkL,EAAAA,IAAY/K,IACb+K,GAAA,IA4BLpX,KAEDA,EAAAmE,KAAA+C,MAAAyF,EACF3M,EAAAmB,mBASDgD,UAAAA,0BADgB,WAEhBhD,OAFgBkB,OAFb,EAMLjD,kBACAgC,KAAAA,QACAjC,SAAAA,aAjFJC,WAAA,qBAgFIgC,aAAc,WACdjC,YAAa;YCjFjBF,SAAQO,OAAO,SAASJ,WAAW,2BAAnCH,UAAQO,cAAgBJ,QAAW,WAAA,eAElC,oBAAW,cAFZH,SAAQO,EAAO8B,EAASlC,EAAWiC,EAAAK,EAAAkI,EAEvByN,GAwEN,QAAAC,GAAUC,GACX,MAFD,eAGKvX,GAAAwX,SACIxX,EAAGuX,aAAa7L,GAAK+L,SAArBzX,EAAGuX,aAAa7L,GAAK+L,aAxEhC,GAAIzX,GAAKC,IAET,IAAGD,EAACA,MAAWA,EAACA,KAAA0X,gBAIhB,cAAGzX,MAAgBkE,OACjBnE,EAAGwX,SAAWhX,EAAMR,EAAGmE,KAAK8R,aAG3BjW,EAACA,WAGD,cAAEA,GAAgBA,UAAgB,eAAEA,GAAiBA,WAAxD,CAIAA,EAAGA,SAAA2X,YACDhW,EAAQ6O,KAAKxQ,EAAGwX,SAASG,WAAY/N,EAAkB+N,WAAY,KAAM3X,EAAG4X,iBAE9E5X,EAAGA,SAAA6X,aACDlW,EAAQ6O,KAAKxQ,EAAGwX,SAASK,YAAajO,EAAkB+N,WAAY,KAAM3X,EAAG4X,iBAG/E5X,EAAGA,SAAA8X,cACDnW,EAAQ6O,KAAKxQ,EAAGwX,SAASO,OAAQnO,EAAkBmO,OAAQ,KAAM/X,EAAG4X,iBACpEjW,EAAQ6O,KAAKxQ,EAAGwX,SAASM,YAAalO,EAAkBkO,YAAa,KAAM9X,EAAG4X,kBAGhF5X,EAAGuX,aAAe,KAClBvX,EAAGgY,YAAc,KACjBhY,EAAGiY,iBAAmB,KACtBjY,EAAGkY,gBAAkB,GACrBlY,EAAGmY,sBACA,MAAHnY,EAAGA,KAAAoH,mBACDpH,EAAGmE,KAAKiD,qBAGVnH,KAAKmY,eAAiB,WAGpB,GAFApY,EAAGmE,KAAKiD,oBAERpH,EAAGA,cAAAA,EAAmBA,aAAA2C,OAAA,EAAtB,CAEK,gBAAA3C,GAAOA,KAAAqL,iBACRrL,EAAGmE,KAAKkH,eAAiB,EACzBrL,EAAGmB,WAGL,KAAA,GAAI4F,GAAIA,EAAAA,EAAR/G,EAAY+G,aAAKwQ,SAAa5U,EAC5B3C,EAAGA,KAAAqL,gBAAAiM,EAA0BA,IAC3BtX,EAAGgY,YAAchY,EAAGuX,aAAaxQ,GAEjC/G,EAAGmE,KAAKiD,iBAAmB9F,EAAY+W,SAASrY,EAAGgY,cAGhDC,EAAAA,KAAAA,eAAsBV,GAAAA,EAAzBxQ,KACA/G,EAAAiY,iBAAMA,EAAiBK,aAAWvR,GAChC/G,EAAGkY,iBAAkBjO,SAAWjK,IADlCA,EAAAkY,gBAGKjO,KAAAC,MAAAlK,EAAAiY,iBAAAK,SAAA,KAAA,GAAA,IAGNtY,EAAAkY,gBAAAjO,KAAAC,MAAAlK,EAAAiY,iBAAAK,SAAA,KAAA,OAiBLrY,KAAAsY,YAAMhB,WAGFvX,GALJA,EAAGmE,KAAKiD,oBAKJpH,EAAAA,cAAQqL,EAAAA,aAAR1I,OAAA,EAAA,CAED,gBAAA3C,GAAAmE,KAAAkH,iBAFCrL,EAAGmE,KAAKkH,eAAiB,EAI3BrL,EAAImB,WAAJ,KAAI,GAAI4F,GAAE,EAAEA,EAAE/G,EAAGuX,aAAa5U,SAASoE,EAInC/G,EAAGmE,KAAKiD,gBAAmB9F,EAAAA,aAAY+W,GAAAA,WACxCrY,EAAAgY,YAAAhY,EAAAuX,aAAAxQ,GAEJ/G,EAAAmE,KAAAiD,iBAAA9F,EAAA+W,SAAArY,EAAAgY,gBAGH/X,KAAKuY,kBAAoB,WAOnB,GAAWnN,MAAXrL,EAAAuX,cACEvX,EAAAuX,aAAA5U,OAAA,GACD,gBAAA3C,GAAAmE,KAAAkH,eAAA,CAEH,IAAA,GAAOtE,GAAA,EAAPA,EAAA/G,EAAAuX,aAAA5U,SAAAoE,EATF,GAWK/G,EAAAmE,KAAAkH,eAAA,GAAAiM,EAAAvQ,GACH,OAAO,CAHP,QAAO,EAST/G,OAAGmY,GAKDnY,KAAAA,kBAAA,SAAAyY,GACDzY,EAAAmE,KAAAkH,eAAAoN,EACDzY,EAAGmB,sBATL,eAAAnB,GAAAwX,SAIIxX,EAAGuY,cAUHvY,EAAAoY,iBAECpY,EAFDmB,YAMDlB,KAAAyY,gBAAA,WARH,IAAA,GAAA3R,GAAA/G,EAAAmE,KAAAkH,eAAA,GAAAtE,GAAA/G,EAAAuX,aAAAxQ,EAAA,KAAAA,EAEY,GAALA,EASF4R,EAAAA,mBAAkBjS,MAAAmI,OAAW,IAG9B7O,EAAGmY,mBAAmBzR,KAAK1G,EAAG4Y,UAAU7R,EAAE,KAH9C9G,KAAK0Y,gBAAkB,WASvB3Y,EAAK4Y,qBACH,KAAA,GAAO7R,GAAA/G,EAAAmE,KAAAkH,eAAAtE,EAAA,IAAAA,EACL8H,EAAAA,mBAAQyI,KAAgBjM,EAAAA,UADnBtE,EAAA,GADT/G,GAAAmY,mBAAAzR,MAAAmI,OAAA,KAQE5O,KAAA2Y,UAAOrB,SAAgBvX,GACrB,OACEA,OAAGuX,EAAe5V,GAClBuF,MAAIlH,EAAGuX,SAAa5U,EAAjB4U,aAA2BlM,MAI/BpL,KAAA2X,gBAAA,WAOH,OANE5X,EAAGA,cAAY8X,EAAAA,MAAenW,EAAAA,KAAQmS,gBACpC9T,EAAGuX,SAAAA,YAAuBzS,EAAQ0S,SAASM,EAAAA,SAAaH,cACxD3X,EAAGuY,aAAH5W,EAAAmD,KAAA9E,EAAAwX,SAAAG,WAAA,YAAA3X,EAAAmE,KAAAuT,gBACD1X,EAAAuX,aAAA5U,QAAA3C,EAAAwX,SAAAK,cACF7X,EAAAuX,aAAA5V,EAAAmD,KAAA9E,EAAAwX,SAAAK,YAAA,YAAA7X,EAAAmE,KAAAuT,gBAED1X,EAAOA,kBANFA,EAAGwX,SAASM,aAAenW,EAAQmS,SAAS9T,EAAGwX,SAASM,eAS3D9U,EAAAA,aAAWrB,EAAAmD,KAAf9E,EAAAwX,SAAAM,YAAA,iBAAA9X,EAAAmE,KAAAuT,eAPM1X,EAAGuY,gBAIAvY,EAAGuX,aAWL,IAAAvU,GAAA,kBAEDhD,MAAAA,cAAe,WACf2B,EAAA6O,KAAQzJ,EAAIA,KAAK,aAAK,WACpB1F,EAAIwX,WAEJ,GAAA7Y,EAAG6Y,iBAAH,CAII7Y,EAAAA,YACD,KAAA,GAFD+G,GAAA,EAGKA,GAAA,IAAAA,EAAA,CACH,GAAA8R,GAAI1U,EAAO3D,iBAAX,aAAAuG,GACA+R,EAAS9Y,EAAAiY,iBAAA,gBAAAlR,EACP,IAAA8R,EAAIE,GAAAA,EAAW,EAAA,CAEbrN,GAAAA,GAAKoN,EAAAA,KAAAA,EAAAA,KAAAA,EAFQ,IAAf,GAAetY,EAAfmC,OAIA3C,EAAAA,UAAGgZ,MAAHtN,IAAkBqN,EAAlBpV,KAAA,YAAAkV,EAAA,UAEH,CACF,GAAA1U,GAAA3D,EAAA,EACF,IAAA2D,EAAA,CA3BH,GAAA4U,IADF5U,KAAAkT,EAAA4B,gBAAA9U,GADFuH,IAAAoN,EAkCWhF,GAAAA,UAAS9Q,KAAW+V,aAU7B1W,EAAOyR,SADF9Q,IAELV,KAAAA,oBAFKxB,UAAP,+BAAA,WA7NF,OA8NIuB,OAAO,EACPC,kBACE6B,KAAM,QACNhD,SAAU,aAEZ/B,WAAY,0BACZgC,aAAc,WACdjC,YAAa;YCrOjBF,SAAQO,OAAO,SAASJ,WAAW,yBAAnCH,UAAQO,QAAO,cAASJ,oBAItB,SAAAuC,EAAAnB,EAAAc,EAAAsI,GAgGE,QAAIsP,KADJ,GAAIC,MAGDnZ,EAAA,IAsBL,OApBM,OAAAA,EAAAoZ,YACAna,QAAAA,QAAQsH,EAAQjF,WAAY+W,SAAZhE,EAAyB5N,GACvC,GAAAS,KACEA,SAAAA,QAAWgF,EAAXmM,SAAAhE,GAAA,SAAAnI,EAAAmN,GACD/X,EAAA4F,MAAAgF,EAAA9G,IAAAkU,MAHHpS,EAAAR,KAAAwF,KAMAhF,EAGKvE,OAAIuW,EACPC,EAAO9E,EAAEjP,IAAM8B,EAEhBgS,IAdHC,EAAA9E,EAAAjP,OAgBD8T,EAAA7E,EAAAjP,MAKMmU,EAtHT,GAAIvZ,GAAKC,IAGTA,MAAKuZ,WAAY,KACjBvZ,KAAKwZ,UAAAA,KACLxZ,KAAKyZ,oBAAL,EAAAzZ,KAAKyZ,kBAEW,MAAbzZ,KAAKkE,OAGN,cAAgB3D,MAAM2D,OACvBlE,KAAAuX,SAAAhX,EAAAP,KAAAkE,KAAA8R,aAGChW,KAAAuX,UAAAvX,KAAAkE,KAAAwV,KAAA,gBAAA1Z,MAAAuX,WAIA7V,EAAAA,SAAa3B,cACd2B,EAAA6O,KAAAxQ,EAAAwX,SAAAoC,aAAAhQ,EAAAgQ,aAAA,KAAA5Z,EAAA6Z,eAGC5Z,KAAA4Z,cAAA,WACE,IAAA7Z,EAAGA,YACDA,EAAIoZ,MAAAA,EAAAA,KAAazX,KAAQmD,gBAAiB8U,GAAAA,SAAc,CAAxD,GAAIR,GAAazX,EAAQmD,KAAK9E,EAAGwX,SAASoC,aAAc,KAAM5Z,EAAGmE,KAAKwV,IAGrDP,IAAfpZ,EAAA2C,QACA3C,EAAGoZ,UAAHA,EAAwBtU,GACxB9E,EAAG0Z,WAAAA,EAAiBI,KAAAA,EAAAA,SAAqBV,aAAzC,cAAApZ,EAAAwZ,UAAAO,aAHF/Z,EAAA0Z,eAKQI,EAAuBtC,EAA1B4B,aAAG,kBAAoBpZ,GAAGwX,WAG7B4B,EAAGA,EAAAtU,KAAH9E,EAA2BwX,SAAAwC,eAAA,KAAAha,EAAAmE,KAAAwV,KAEThY,GAAhB3B,EAAGoZ,SACHpZ,EAAG0Z,UAAAA,EAAiBI,GACrB9Z,EAAAoZ,WAAAzX,EAAAmD,KAAA9E,EAAAwX,SAAAwC,eAAA,cAAAha,EAAAwZ,UAAAO,aACF/Z,EAAA0Z,eAAAI,EAAA9Z,EAAAoZ,cAIL,MAAOpZ,GAAGoZ,YAKRnZ,KAAAga,cAAgB7U,WACdpF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAarS,EAC/B/G,GAAAA,EAAGmE,UAAWnE,IAAGwZ,EAAAA,WAAjBzS,GAAA3B,GAKH,MAJGpF,GAAGmB,UAAHnB,EAAAoZ,WAAArS,EAAA,GACA/G,EAAAmE,KAAKsV,IAAAA,EAAAA,UAAqBrU,GAC1BpF,EAAAmB,gBACDlB,KAAAwZ,oBAAA,IAMDxZ,KAAAia,cAAgB9U,WACdpF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAarS,EAC/B/G,GAAAA,EAAGmE,UAAWnE,IAAGwZ,EAAAA,WAAjBzS,GAAA3B,GAKH,MAJGpF,GAAGmB,UAAHnB,EAAAoZ,WAAArS,EAAA,GACA/G,EAAAmE,KAAKsV,IAAAA,EAAAA,UAAqBrU,GAC1BpF,EAAAmB,gBACDlB,KAAAwZ,oBAAA,IAMDxZ,KAAAka,gBAAaf,SAAchU,GACzBpF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAlBrS,EACA/G,GAAAA,GAAQ2Z,EAARP,WAAiBI,GAAAA,GAKpB,MAJGxZ,GAAGyZ,UAAAA,EAAAA,WAAH1S,GACA/G,EAAGmB,KAAAA,IAAHnB,EAAAwZ,UAAApU,GACApF,EAAAyZ,oBAAA,MACDzZ,GAAAmB,YAMHlB,KAAAma,iBAAO,WAAP,MAFFna,MAAA4Z,iBAEU7Z,EAAGoZ,YAAcpZ,EAAGoZ,WAAWzW,QAAU,IAAM3C,EAAGwZ,WAAaxZ,EAAGwZ,UAAUpU,IAAMpF,EAAGoZ,WAAW,GAAGhU,IAK3GnF,KAAAoa,gBAAO,WAAP,MAFFpa,MAAA4Z,iBAEU7Z,EAAGoZ,YAAcpZ,EAAGoZ,WAAWzW,QAAU,IAAM3C,EAAGwZ,WAAaxZ,EAAGwZ,UAAUpU,IAAMpF,EAAGoZ,WAAWpZ,EAAGoZ,WAAWzW,OAAO,GAAGyC,SAuC9HjE,UAAAA,6BAAU,WAFM,OAIlB/B,OAAAA,EACAgC,kBACAjC,KAAAA,QARFgC,SAAA,aAME/B,WAAY,wBACZgC,aAAc,WACdjC,YAAa;YC1IjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,aAIE,SAAA6B,EAAAM,EAAAJ,GAcE,QAAO+Y,KACR,MAAA,4BAAAta,EAAAmE,KAAAoW,YAAAva,EAAAmE,KAAAqW,IAAA,UA+BD,QAASjB,GAAekB,IA3CxB,GAAaxE,MAAbhW,KAAGkE,MACD,UAAAlE,KAAAkE,KAAA8R,WAAA,CAIAhW,KAAKkE,KAAKkH,iBACXpL,KAAAkE,KAAAkH,eAAA,EAED,IAAIrL,GAAKC,IAOPA,MAAAya,WAAcJ,WACd3Y,GAAAA,GAAagZ,GAA4CtZ,GAAAA,KAASsZ,EAAA,KAAWpB,EAAA,WAAAlY,EAAA,WAC3ErB,EAAAA,UAAA2B,EAAeA,KAAQmD,EAAR,aAAA9E,EAAoCA,KAAGmE,SAI1DlE,KAAKyY,gBAAkB,WAAlBA,KAAAA,WAAkBzY,KAAAkE,KAAAkH,eAAWpL,KAAA2a,UAAAjY,SAChC1C,KAAGkE,KAAKyW,iBACN5a,EAAAmB,aAKJlB,KAAK4a,gBAAkB,WAAvB,MAAKA,MAAAA,WAAkB5a,KAAAkE,MAAWlE,KAAAkE,KAAAkH,gBAAApL,KAAA2a,UAAAjY,QAIlC1C,KAAK0Y,gBAAkB,WAAlBA,KAAAA,KAAAA,eAAkB,EACrB1Y,KAAGkE,KAAKA,iBAINlE,KAAKkE,KAAKkH,eAAiB,EAG7BrL,EAAGmB,YAOLQ,EAAQ6O,KAAK8J,IAAc,KAAM,KAAMta,EAAG0a,gBAKxCrY,UAAO,yBADF,WAELC,OACE6B,OAAAA,EACAhD,kBAJGgD,KAAA,QAML/E,SAAY,aAEZD,WAAAA,oBARFiC,aAAA,WA1DFjC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,UAAQO,cAAgBJ,QAAAA,oBAItB,SAAAuC,EAAAL,EAAAd,EAAAoJ,GAwEE,QAAIkR,KACJ,GAAG9a,IAAkB,CAUtB,OATGf,GAAAA,KAAQsH,QAAWwU,GACjB9b,QAAG+b,QAAAhb,EAAYA,OAAQib,SAASD,EAAAvU,GAC9BqU,GAAAA,EAAAA,IAAAA,EAAAA,KAAiBrU,QAElB,YADCqU,EAAArU,KAMPqU,EAjFD,GAAI9a,GAAKC,IAGN,OAAHA,KAAGkE,OACD,cAAgB3D,MAAM2D,OACvBlE,KAAAuX,SAAAhX,EAAAP,KAAAkE,KAAA8R,aAGCjW,EAAAwX,UAAAxX,EAAAwX,SAAA0D,WAIAvZ,EAAAA,SAAa3B,UACd2B,EAAA6O,KAAAxQ,EAAAwX,SAAA0D,SAAAtR,EAAAsR,SAAA,KAAAlb,EAAAmb,WAEDlb,KAAK8a,OAAS,KAGZ9a,KAAAmb,UAAYC,WACZ5U,GAAAA,GAAAA,MACAA,GACEzG,EAAA+a,OAAApY,SACD8D,EAAA,EAEDzG,IAAGmE,GAAK8W,EAARF,OAAkBC,EAClBhb,GAAGmE,KAAKkD,QAAR2T,EAAqB1Z,GACrBtB,EAAGmB,KAAAA,WAAHG,EAAA+W,SAAA2C,GATFhb,EAAAmB,YAaElB,KAAAqb,aAAO,WADT,MAAA,OAAAtb,EAAA+a,QAAAM,KAAArb,EAAA+a,OAAApY,OAAA,GAKE1C,KAAAsb,aAAOF,WADT,MAAA,IAAAA,KAKEpb,KAAAub,UAAYH,WACZ5U,GAAAA,GAAAA,MACAA,EACUzG,IACTyG,EAAAzG,EAAA+a,OAAApY,OAAA,EAED3C,IAAGmE,GAAK8W,EAARF,OAAkBC,EAClBhb,GAAGmE,KAAKkD,QAAR2T,EAAqB1Z,GACrBtB,EAAGmB,KAAAA,WAAHG,EAAA+W,SAAA2C,GATFhb,EAAAmB,YAaEnB,KAAGmE,YAAH,WACAnE,EAAGmE,KAAKkD,QAAR,KACArH,EAAGmB,KAAAA,WAAH,KAHFnB,EAAAmB,YAOElB,KAAAkb,UAAc,WACd,GAAG,MAAHnb,EAAGA,MAAmB,MAAtBA,EAAsBwX,SAAA,MAAA,KACpB,IAAarT,MAAbnE,EAAIyb,OAAc7M,CAClB,GAAG6M,GAAKzb,EAAAmE,KAAAyK,WACN6M,IACEzb,EAAA8T,SAAYnS,EAAQmD,SAAQ0S,YAC7BxX,EAAA+a,OAAApZ,EAAAmD,KAAA9E,EAAAwX,SAAA0D,SAAA,cAAAO,IAPP,MAAAzb,GAAA+a,aAkCE1Y,UAAO,yBADF,WAELC,OACE6B,OAAAA,EACAhD,kBAJGgD,KAAA,QAML/E,SAAY,aAEZD,WAAAA,oBARFiC,aAAA,WA9FFjC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,wBAAnCH,WAKK,MAAHgB,KAAGkE,MACA,QAAHlE,KAAGkE,KAAA8R,aAIHhW,KAAK4L,YAAc,SAAA6P,GACjB,GAAGA,GAAHA,EACEzb,KAAKkE,KAAKkH,eAAiB,KAC3BpL,KAAKkE,KAAKiD,wBAGV,CAAAnH,KAAKkE,KAAKkH,eAAiBqQ,CAG3Bzc,IAAAA,KACE+M,SAAAA,QAAWtF,KAAMtB,KAAI8G,MAASE,SAAKF,EAAAzF,GADrCuF,EAAAtF,MAAAtB,GAAA8G,EAAA9G,GAAAgH,IAAAF,EAAAE,KAAAsP,EAAA,SAKDzb,KAAAkE,KAAAiD,iBAAA4E,EAdH/L,KAAAkB,gBAsBEmB,UAAAA,4BAAkB,WAChB6B,OACAhD,OAAAA,EAFgBmB,kBAIlBlD,KAAAA,QACAgC,SAAAA,aAPFhC,WAAA,uBA9BFgC,aAAA,WAsCIjC,YAAa;YCtCjBF,SAAQO,OAAO,SAASJ,WAAW,gBAAnCH,cAIE,SAAAqC,GAEA,GAAItB,GAAKC,IAGPD,GAAAmE,OAIAnE,EAAAA,aAAA,WADFA,EAAA2b,kBAQErZ,UAAAA,oBAAkB,WAChB6B,OACAhD,OAAAA,EACAwa,kBALGxX,KAAA,QAOL/E,SAAY,YACZgC,WAAc,eARhBhC,WAAA,eAlBFgC,aAAA,OA2BIjC,YAAa;YC3BjBF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,UAAR,cAIE,SAAA6B,EAAAM,EAAA0V,GAGA,GAAauE,MAAb3b,KAAGkE,KAAH,CACE1B,GAAY,IAAZA,KAAAA,KAAAmZ,QAA6CA,GAAjC3b,KAAAkE,KAAuByX,QAAnC,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,OAED,WADCnZ,SAAAgD,IAAA,qBAAAxF,KAAAkE,KAAAyX,OAGF,IAkDKrZ,GAlDDvC,EAAKC,KAEL4b,GAsBJ,uBACA,6BACA,kCApBE,4BAsBF,gCACA,iCACEtZ,gCADF,oCAIEA,6BACD,4BArBC,+BAuBF,gCACEZ,4BACEN,mCACErB,gCACD,2BACF,sCACF,kCArBC,iCAuBF,6BAOG,KAAAC,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,QAAA,KAAA3b,KAAAkE,KAAAyX,OArBDrZ,GANoB,mBAuBRwE,wBACWxE,gCAMF,GAAlB4P,KAAMxP,KAANiZ,SACDrZ,GA/BkB,oBA+BlB0M,OAAA4M,GAIA,KAAA,GAAG7b,GAAAA,EAAGmE,EAAAA,EAAKyX,SAAR7U,EACD/G,EAAG8b,KAAAA,EAAAA,GAAgBC,KAAAA,aAAnB,WACD1a,EACI,WACHrB,EAAGgc,qBAMT/b,MAAK+b,gBAAgB,WAGlB,IAAA,GAAAjV,GAAA,EAAAA,EAAAxE,EAAAI,SAAAoE,EAHH,IAAApF,EAAAmS,SAAAvR,EAAAwE,IApBM,MA6BJ,IAAGkV,GAAAA,EAAAnX,KAAH7E,KAAAkE,KAEKnB,SAAA,UAAA,KAAA/C,KAAAkE,KAAAiB,GACH,IAAA+M,EAAI+J,OAAOD,EAAAA,CA1BX,GAAIpM,GAAIsC,EAAM,EA4BdnS,GAAAQ,SAGgByb,IAAdjc,EAAImc,KAAAA,QAAmC7P,KAAzBtM,EAAamE,KAAAyX,QAA3B,KAAA5b,EAAAmE,KAAAyX,QAAA,KAAA5b,EAAAmE,KAAAyX,QAAA,KAAA5b,EAAAmE,KAAAyX,OACA5b,EAAA8b,cAAgBG,EAAAA,YAEhB,GAAAjc,EAAAmE,KAAAyX,QACA5b,EAAAgc,cAAcnM,EAAAkM,cAOV9b,KAAA+b,cAAUrZ,SAASyZ,GACjB,IAAA,GAAAC,GAAA,EAAAA,EAAIC,EAAYjF,SAAY4B,EAC5BjZ,EAAAuc,sBAAAH,EAAAP,EAAAQ,KAIEH,KAAAA,sBAFY,SAAAE,EAAAI,GAAA,GAAAP,GAAdta,EAAAmD,KAAA0X,EAAA,KAAAJ,EAKD,IAAA,GAAAH,EAAAtZ,YAEJ,CACF,GAzBDuZ,GAyBQO,EAzBR,GAAAC,QATJpQ,EAAA,CASI,GAAG,CA6BFwP,GACCa,IAAAA,GAAcC,EAAAA,GAAAA,UAAgBC,GAC9BJ,EAAUE,EAAAA,GAAWha,OAAzB2J,EAAqC,SA3B7BwQ,EAAiBb,EAAU,GAAG,OAAS3P,EAAY,OA8BzD,IAAAmQ,EA3BI,GAAGN,EA6BHnc,EAAI+c,cAAMC,EAAUra,OAEhBsa,CAEJ,GAAGC,GAAGC,EAAWrY,KApGH,mBAoGG,KAAA2X,EACf,IAAAW,EAAKtB,OAAcoB,EAAGG,CADxB,GAGKf,GAAAjF,EAAA4B,gBAAAmE,EAAA,GAGDpd,GAAGQ,MAAMkG,MACP4W,MAAOJ,EACPhB,KAAMgB,EACN/Y,KAAMkT,YAKfoF,KAMLxc,KAAA6b,cAAO,SAAAM,GAEL9Z,IAAAA,GADAD,IAlGY0E,wBACWxE,gCAkGvBD,EAAAA,EAAAA,EAAAA,EAAkBK,SAAAoE,EAKlB5H,IAAAA,GAPK6d,GAAArb,EAAA4b,QAAAZ,EAAA5V,IAOL5H,EAAAA,EAAa4d,EAAAC,EAAAra,SAAAoa,EAAA,CAPf,GAAAG,GAAAF,EAAAD,EA5JF,IAAAG,EAAAD,UAAAb,GAAAc,EAAAM,KAwIU,GAAGN,EAAGC,UACJld,KAAK6b,cAAcoB,EAAGG,YAEnB,CACH,GAAID,GAASzb,EAAQmD,KAxGT,mBAwG+B,KAAMoY,EAAGG,OACjDD,GAAOza,OAAS,GACjB3C,EAAGQ,MAAMkG,MACP4W,MAAOJ,EAAGO,MACVvB,KAAMgB,EAAGQ,KACTvZ,KAAMkT,EAAY4B,gBAAgBmE,EAAO,aAUxDtc,UAAU,uBAAwB,WACjC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAER/E,WAAY,kBACZgC,aAAc,OACdjC,YAAa;YCnKjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA6B,EAAAM,EAAA0V,EAAA/V,EAAAI,GAEA,GAAgB,MAAbzB,KAAKkE,KAAR,CAGAnE,GAAG2d,GAAH1d,IAAAD,GAAG2d,SAaH,KAAI,GAXAC,IAQJ,2BANE,kCAQF,iCACA,iCACEjc,mCACEN,gCAIHkB,EAAAqb,EAAA3O,QAJG,qBAFIlI,EAAE,EAAEA,EAAExE,EAAMI,SAASoE,EAQ7BpF,EAAKkc,KAALtb,EAAkBwE,GAAA,KAAW,aAAA,WAC3B1F,EAAQ0F,WACN/G,EAAI2B,gBAKN3B,MAAG2d,WAAH,WACA,IAAA,GAAI5W,GAAIA,EAAAA,EAARxE,EAAcqb,SAAOjb,EACnB3C,IAAG8d,EAAHhK,SAAavR,EAAbwE,IACD,MAIC/G,GAAA2d,SACA,KAAA,GAAI5W,GAAA,EAAIgX,EAAAA,EAAIA,SAAEC,EACZhe,EAAA8d,UAAMH,EAAUzB,GAKV,KAAA,GADF8B,MACEjX,EAAA,EAAG/G,EAAAA,EAAG2d,OAAHhb,SAAAoE,EAAsB5C,CAGxB,IAAA,GADGgT,IAAAA,EACH4G,EAAA,EAAAA,EAAAC,EAAArb,SAAAob,EACF,GAAA/d,EAAA2d,OAAA5W,GAAAmV,MAAA8B,EAAAD,GAAA7B,MACJlc,EAAA2d,OAAA5W,GAAAvG,MAAAmC,QAAAqb,EAAAD,GAAAvd,MAAAmC,OAAA,CAPGwU,GAAQ,CAUVA,KAAJ,GAAW8G,GAAA,EAAAA,EAAAje,EAAA2d,OAAA5W,GAAAvG,MAAAmC,SAAAsb,EACTD,EAAUtX,OAAQiX,GAAAA,MAAlBM,GAAA9Z,KAAAiB,IAAA4Y,EAAAD,GAAAvd,MAAAyd,GAAA9Z,KAAAiB,IACDpF,EAAA2d,OAAA5W,GAAAvG,MAAAyd,GAAAvS,KAAAsS,EAAAD,GAAAvd,MAAAyd,GAAAvS,MACFyL,GAAA,GAMG+G,GARAF,EAAUtX,KAAK1G,EAAG2d,OAAO5W,IAa3B/G,EAAA2d,OAAIQ,GAGFjC,KAAAA,UAAQkC,SAAFpb,GANV,IAAI,GAOAxC,GAAOmB,EAAAmD,KAAA9B,EAAA,iBAAAhD,EAAAmE,KAAAiB,IAPH2B,EAAE,EAAEA,EAAEmX,EAAQvb,SAASoE,EAAG,CAoB9B,IAVF,GAAIgX,GAAEG,EAANnX,GAEEgX,GACA3Y,GAAIiZ,EAAAA,GACJrb,SAAIsb,EAAarb,QAAA,UAAjB,IACAiZ,KAAKmC,EAAAA,KAAAA,IAAAA,IACH7d,UAGFud,EAAIvd,IACDA,CACD2d,GACEha,IAAAA,GAAMkT,OAAY4B,EAAAA,KAClBvN,EAAO4S,OAAFP,EAAA,KAFU,MAAjBM,IAAAtB,IAID,KAGH/c,IAAG2d,GAAHhc,EAAAmD,KA1EA,mBA0EA,KAAAiY,EAAAsB,GACD7d,GAAAmC,OAAA,GAhCHwb,EAAA3d,MAAAkG,MAoCD5F,KAAUuW,EAAA4B,gBAA0BzY,EAAW,IACvCkL,IAAAqR,EAAAuB,KAKLlf,EAAAA,OAAYsH,KAAAyX,SANfrd,UAAU,yBAA0B,WACnC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAER/E,WAAY,oBACZgC,aAAc,OACdjC,YAAa;YC/GjBF,SAAQO,OAAO,SAASJ,WAAW,0BAAnCH,WAAQO,UAAR,cAAmC,QAIjC,SAAA6B,EAAAM,EAAA0V,EAAA7W,GAEA,GAAgB,MAAbP,KAAKkE,KAAR,CASExC,IAAAA,GAPE3B,GAAKC,KAMTsC,GAHsB,gCAAA,oBAIpBZ,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClB/G,EAAGue,WADLve,EAAAue,iBAOFte,MAAAse,YAAYxX,WACV,IAAA,GAAIpF,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAIH,IAAI8I,GACDA,EAAAA,EAAO2O,YAAmBxe,EAAAmE,KAC3Bsa,IAAAA,EAAAA,cAAaD,IACdC,EAAA5O,EAAA2O,cAGD,IAAGhH,GAAAA,EAAckH,EAAAA,KAAWzI,WAC1B,IAAAuB,GAAID,EAAAA,UAAe5V,CACnB,GAAG4V,GAAc5U,EAAdmC,KAAwB0S,EAASK,WAAa,YAAAhI,EAAA6O,YAC/CnH,EAAe5V,QAAQmD,EAAK0S,cAC7BD,EAAA5V,EAAAmD,KAAA0S,EAAAK,YAAA,YAAAhI,EAAA6O,WAGC,KAAA,GAAGnH,GAAAA,EAAAA,EAAAA,EAAgBE,SAAhB1Q,EACD0X,GAAAA,EAAWlH,GAAAA,cAAgBoH,EAAAA,KAA3BtT,eAAA,CACAoT,EAAAlH,EAAAxQ,GAAA4X,YACD,QAKL3e,EAAAQ,SACER,GACDA,EAAA4e,SAAAH,IAIDxe,KAAA4e,QAAQxH,WACR,GAAAxH,GAAOqH,EAAS4H,YAAT7e,KAAAkE,KAFT,OAAA+S,QAAArH,EAAAiP,gBAAA,IAAA,KAME7e,KAAA2e,SAAA,SAAAH,GAGA,GAAGxC,GAAUtZ,EAAUmC,KAtDH,gCAwDf,KAAA2Z,EACH,IAAqB,GAArBxC,EAAWA,YAMT,KAHF,GAAAC,GAAMD,EAAS3P,GAAAA,QAEbA,EAAImQ,EACAK,OAAAA,EAAiBb,SAAaA,GAAS3P,IAAAA,CAC3C,GAAA6P,GAAAF,EAAA,GAAA,UAAA3P,GACGmQ,EAAWR,EAAA,GAAA,OAAA3P,EAAA,SACZwQ,EAAYb,EAAA,GAAA,OAAA3P,EAAA,OAEX,IAFDmQ,EAIE,GAAAN,EACAnc,EAAA4e,SAAUjc,OAFP,CAKD3C,GAAAA,GAAS0G,EAAK5B,KA1EJ,mBA0EI,KAAA2X,EACZa,GAAAA,OAAOR,GADK9c,EAAdQ,MAAAkG,MAKD4W,MAAAR,EACFZ,KAAAA,EACF/X,KAAAkT,EAAA4B,gBAAAmE,EAAA,MAORtc,UAMG1B,UAAAA,8BALK,WAMLgC,OACAjC,OAAAA,EAPFmD,kBApGF6B,KAAA,SAyGI/E,WAAY,yBACZgC,aAAc,OACdjC,YAAa;YC3GjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA6B,EAAAM,EAAA0V,GA+BE,QAAInM,KAEF,IAAA,GADFA,GAAQ6T,EAAIA,KAAE7T,EAAc6T,SAAG/e,EAAAmE,KAAAiB,IACzB4Z,EAAAA,EAAM9T,EAAAA,EAAVvI,SAAAoc,EAGEpT,IAFF,GAAIA,GAAIT,EAAR6T,GACApT,EAAA,IACEA,CACAA,GACA,IAAGsF,GAAEA,qBAAiBtF,CACpB,MAAAsF,IAAA+N,IACD,KAGD,IAAGC,GAAStc,EAAZmC,KAAwBoa,EAAA,KAAAF,EAAA/N,GACtBjR,GAAS0G,OAAK2Q,GACfrX,EAAAQ,MAAAkG,KAAA2Q,EAAA4B,gBAAAgG,EAAA,MA3CP,GAAgB,MAAbhf,KAAKkE,KAAR,CAGAnE,GAAGQ,GAAHP,IAAAD,GAAGQ,QAODmB,KAAAA,GAJEud,GAAAA,oBAAAA,EAAkB,mBAGtBC,GAAYpY,EAAEoY,GACZxd,EAAQ6O,EAAAA,EAAR2O,EAAaA,SAAbpY,EACE1F,EAAAA,KAAS8d,EAAApY,GAAW,KAAA,aAAA,WAClB/G,EAAGof,WADLpf,EAAAof,cAOFnf,MAAAmf,SAAA,WACE,IAAA,GAAIzd,GAAAA,EAAAA,EAAAA,EAAAgB,SAAiBwc,EACnB,IAAAxd,EAAAmS,SAAAqL,EAAApY,IACD,MAIHsY,GAAAA,SARFA,SAmCE/c,UAAAA,yBAAkB,WAChB6B,OADgB9B,OAFb,EAKLjD,kBACAgC,KAAAA,SANFhC,WAAA,oBAxDFgC,aAAA,OA+DIjC,YAAa;YC/DjBF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA6B,EAAAM,EAAA0V,GA0DA,QAASiI,GAAYtc,GAEnB,IAAI,GADAkI,GAAOvJ,EAAQmD,KAAK9B,EAAU,YAAahD,EAAGmE,KAAKob,OAC/CR,EAAE,EAAEA,EAAE7T,EAAKvI,SAASoc,EAAG,CAC7B,GAAIE,GAAWtd,EAAQmD,KAAKoa,EAAiB,KAAMhU,EAAK6T,GAAG3Z,GACxD6Z,GAAStc,OAAS,GACnB3C,EAAGQ,MAAMkG,KAAK2Q,EAAY4B,gBAAgBgG,EAAS,MA7DzD,GAAgB,MAAbhf,KAAKkE,KAAR,CAGAnE,GAAGQ,GAAHP,IAAAD,GAAGQ,QA0DGR,KAAAA,GAxDFuC,IA2BJ,4BAzBA,iCA2BA,uCACA,uCACEZ,+BACEN,+BACErB,sCACD,0BACF,0BACF,gCAzBD,mCA2BA,iCACE,6BACE,kCACE,wCACD,wCACF,gCAzBH,gCA2BEA,uCACA,2BACEsf,2BACD,iCACF,qCAICJ,EAAchU,mBAEZiU,EAAGF,EAAStc,QAAYuc,IACtBlf,EAAGQ,EAAAA,EAAH2e,EAAc9H,SAAY4B,EAC3BtX,EAAA6O,KAAA2O,EAAApY,GAAA,KAAA,aAAA,WACF1F,EAAA,WACFrB,EAAAof,cAOGjb,MAAAA,SAAM,WADU,IAFb,GAAA4C,GAAA,EAAAA,EAAAoY,EAAAxc,SAAAoE,EAKL3H,IAAAA,EAAY0U,SAAAqL,EALPpY,IAML3F,MAxBApB,GAAGQ,QACH,KAAI,GAAIuG,GAAE,EAAEA,EAAExE,EAAMI,SAASoE,EAC3BuY,EAAY/c,EAAMwE,SAevBjG,UAAU,uBAAwB,WACjC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAER/E,WAAY,kBACZgC,aAAc,OACdjC,YAAa;YCjFjBF,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA6B,EAAAM,EAAA0V,EAAA/V,EAAAI,GA0GI,QAAI8d,GAAiB1a,GAGrB,IAAA,GAFA2a,GAAIC,EAAS/d,KAAQmD,EAAKoa,YAAiBlf,EAAMuU,KAAEoL,IAE/CC,EAAAA,EAAAA,EAAAA,EAAWjd,SAAAoE,EAAA,CACb8Y,GAAAA,GAAAA,EAAYC,GAEZ5D,EAHava,EAAAmD,KAAAoa,EAAA,KAAA3K,EAAAwL,eAIbC,EAAAA,EAJalb,KAAAoa,EAAA,KAAA3K,EAAAoL,eAMb7b,GACAC,SAAOsT,EAAAA,OACP4I,QAAAA,EARaC,UAAA3L,EAAA4L,WASbC,KAAAA,EATFJ,gBAAA,EAKEK,aAAc,EAOhBvc,MAAG8b,EAAA3G,gBAAiCqH,EAAAA,IAClCV,MAAAA,EAAA3G,gBAAgCqH,EAAUV,IAC3CK,SAAA,EALCG,SAAU,EAOZR,GAGQrL,WAAEgM,GAAoBD,YAC5BV,EAASS,SAAAA,EAAkBG,UAAAA,EAA3BX,WAKG,GAHAtL,EAAAgM,cAIHX,EAASK,MAAT1L,EAAAiM,mBAPyB,GAAnBjM,EAAEgM,cAUVX,EAAKa,cAAoBlM,EAAAiM,mBAGjB,GAAHjM,EAAAgM,cACHX,EAASS,iBAAkBK,EAAAA,mBAExBd,EAGAK,SAAA1L,EAAAiM,mBATiB,GAAnBjM,EAAEkM,cAaLb,EAAS1D,MAAO0D,EAAAA,mBAEhB,GAAGe,EAAAA,cACJf,EAAAS,cAAA9L,EAAAmM,mBAIM,GAAAnM,EAAAkM,cACTb,EAAOI,iBAAAzL,EAAAmM,mBAGHvc,EAAMic,SAAA7L,EAAAmM,mBAGRtf,EAAAA,KAAcwe,EANT1D,KAAA,IAAA,IAAPlc,EAAA2gB,UAAAja,KAAAkZ,IA7JA,GAAgB,MAAb3f,KAAKkE,KAAR,CAGAnE,GAAG2gB,GAAAA,IAAH3gB,GAAG2gB,YAUDhf,KAAAA,GAJEud,GAAkB,mBAGtB3c,GAJA,gCADIqe,kCADAC,2BAM4B3B,GAC9Bvd,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClB/G,EAAG8gB,WADL9gB,EAAA8gB,eAOF7gB,MAAA6gB,UAAA,WACE,IAAA,GAAInf,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAIHga,GAAAA,aACAA,EAvBEF,4BAwBFE,EAvBEH,mCAwBFG,EAvBF,gCA2BI,KAAA,GADFC,MACM7J,EAAAA,EAAAA,EAAQnX,EAAA2gB,UAAZhe,SAAAoE,EAAA,CAEE,IAAA,GADFoQ,IAAQ4G,EACH/d,EAAG2gB,EAAAA,EAAAA,EAAaM,SAAWD,EAM1B7J,GAAAA,EAAAA,UAAApQ,GAAAka,SAAAD,EAAAjD,GAAAkD,SACAjhB,EAAA2gB,UAAA5Z,GAAAmV,MAAA8E,EAAAjD,GAAA7B,MACHlc,EAAA2gB,UAAA5Z,GAAAjD,MAAAsB,IAAA4b,EAAAjD,GAAAja,MAAAsB,IACFpF,EAAA2gB,UAAA5Z,GAAAkZ,SAAA7a,IAAA4b,EAAAjD,GAAAkC,SAAA7a,IALGpF,EAAG2gB,UAAU5Z,GAAGhD,MAAMqB,IAAM4b,EAAajD,GAAGha,MAAMqB,IAOnDpF,EAACmX,UAAOpQ,GAAAqZ,SAAAhb,IAAA4b,EAAAjD,GAAAqC,SAAAhb,GAAA,CACT4b,GAAAA,CACD,OA9BL7J,GA6BM6J,EAAata,KAAK1G,EAAG2gB,UAAU5Z,IAInC/G,EAAG2gB,UAAYK,OAuGlBlgB,UAAU,wBAAyB,WAClC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAER/E,WAAY,mBACZgC,aAAc,OACdjC,YAAa;YC1KjBF,SAAQO,OAAO,SAASJ,WAAW,wBAAnCH,WAAQO,UAAR,cAAmC,cAIjC,SAAA6B,EAAAM,EAAA0V,EAAA/V,GAEA,GAAgB,MAAbrB,KAAKkE,KAAR,CAGAnE,GAAGkhB,GAAAA,IAAHlhB,GAAGkhB,oBAQDvf,KAAAA,GADFY,IAJsB,8BAClB4e,mBAAwB,mCAI1Bxf,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClB/G,EAAGohB,WADLphB,EAAAohB,mBAOFnhB,MAAAmhB,cAAYra,WACV,IAAA,GAAIpF,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAEH/G,GAAGkhB,oBAGH,IAAGG,GAAAA,EAAgBA,KApBO,kCAoBkB,SAAArhB,EAAAmE,KAAAiB,GAC1C,IAAAic,GAAgB1f,EAAa2f,OAAAA,EAG3B,IAAA,GAHEC,GAAY5f,EAAQmD,KAtBN,8BAsB6B,eAAgB9E,EAAGmE,KAAKkH,gBAGjEmW,EAAID,EAAAA,EAAAA,EAAR5e,SAAAoE,EAAA,CACA,GAAGya,GAAEC,EAAWtd,EAAhB,IAAGqd,EAAEC,MAAQzhB,EAAGmE,KAAKud,KAAKtc,IAAMoc,EAAEG,YAAc3hB,EAAGmE,KAAKyd,WAAY,CAGlE,GAAIlC,GAAS/d,EAAQmD,KA5BzBqc,mBA4B+C,KAAMK,EAAEK,aAA/CnC,EAAS/d,EAAQmD,KA5BzBqc,mBA4B+C,KAAMK,EAAEK,YAGjDC,GAAAA,kBAASC,MACT1W,MAAAA,EAAAA,YACA6Q,eAAMsF,EAAAQ,mBACNN,KAAMpgB,EAAAA,SAAAA,IAAY2gB,IAClBhC,KAAAA,EAAYiC,UALYV,EAAAW,YAMxBre,SAAOuT,EAAAA,eACP+I,MAAAA,EAAYgC,gBAPY5C,EAAA,IAQxBzb,SAAOsT,EAAAA,eARTtT,MAAAsT,EAAA4B,gBAAAyG,EAAA,aAmBNpd,UAAAA,4BAAkB,WAChB6B,OADgB9B,OAFb,EAKLjD,kBACAgC,KAAAA,SANFhC,WAAA,uBA5DFgC,aAAA,OAmEIjC,YAAa;YCnEjBF,SAAQO,OAAO,SAASJ,WAAW,YAClC,SAAS,UAAU,UAAU,cAAc,QAAQ,OAAO,mBAAmB,eAAe,eAAe,YAAY,SAAS,cAAc,WAAW,aAAa,aADvKH,SAAQO,EAAO0I,EAAS9I,EAAAA,EAAWoB,EAClCmJ,EAAA5J,EAAmBgI,EAAUrG,EAAc7B,EAAQyP,EAAO+H,EAAAhW,EAAmBE,EAA9EzB,GAkNM,QAAI6B,KACFA,GAAAA,GAAQ6O,EAAKxN,YACbqf,SAAAA,QAAYC,EAAZ,SAAA5S,EAAAjJ,GACDiJ,EAAAtK,IAAA2O,EAAA5P,KAAAoe,eAJHxO,EAAA7D,QAAAR,EAAA/L,QAuBF,QAASmQ,KAkBL9M,GAAAA,IAAAA,CAOK,OANLkB,SAAAA,QAAQxI,EAAiBkT,YAAiBmB,EAAO5P,aAAjD,SAAA2O,EAAA9P,GACG+Q,EAAO5P,SAAK8R,KAhBbuM,GAAe,MAmBbA,GAGK9gB,EAAAoS,YAAAnK,EAAAmK,WAGN,QAPDF,KASE,GAAAE,IAAGC,CAEF,GADC0O,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aACD,MAAA1O,EAAA5P,KACF,MAGF6C,KAlBDkB,EAAQxI,SAASyI,MAAQ,eAAiB4L,EAAO5P,KAAKR,KAoBtD+e,UAAAA,EAAAA,KAAAA,aAEH,UAAA3O,EAAA5P,KAAAiC,SAlBW2N,EAAO5P,KAAKqW,KAA0B,OAAnBzG,EAAO5P,KAAKqW,IAuBvCzG,EAAO4O,KAAPnI,IAAA,MAHKkI,EAAAA,KAAYlI,IAAA,MAOVoI,EAAAA,KAAPL,aAAA,GACDE,IAIAI,KAGC9O,KAIAA,QAAAA,KACAA,GAAAA,GAAAsD,EAAgByL,YAAhB/O,EAAA5P,KAFF8a,GAIQlL,cAAY3N,IAClB2N,EAAOgP,YAAP,IAIgB,GAAhBhP,EAAOiP,MAAP,GAAgB/D,EAAhBgE,OAAAlP,EAAA5P,KAAAkH,eAAA,IADG0I,EAGA6O,aAAUA,GAIb7O,EAAOiP,KAAPzD,QADGxL,EAGAmP,SAAA,GAGN,GAAAnP,EAAA5P,KAAAyX,SAvBG7H,EAAOoP,SAAU,GA2BFlN,IAAflC,EAAGA,KAAO5P,QAAkC4P,GAAzCA,EAAA5P,KAAmC3D,QAAuC,KAAjCuT,EAAYkC,KAAlB2F,QAAuC,KAAA7H,EAAA5P,KAAAyX,QAAA,KAAA7H,EAAA5P,KAAAyX,QAAA,KAAA7H,EAAA5P,KAAAyX,QAC3E7H,EAAAA,aAAY/Q,EACb+Q,EAAAiP,OAAA,YAEJ,MAAAjP,EAAA5P,KAAAiC,UAvBG2N,EAAOgP,QAAS,EAyBpBhP,EAAS/M,OAAAA,OAEA7C,EAAK8C,WAvBV8M,EAAOiP,OAAS,UA0BhBjP,EAAY9M,YACb8M,EAAAiP,OAAA,WAEEjP,EAAAoP,QACDpP,EAAO5P,OAAK8C,QArBZ8M,EAAOiP,OAAS,QA4BnB,QAAAH,KAvBK9O,EAAO5P,KAAKnB,UAyBlB+Q,EAASqP,KAATnN,aAAqBzV,IAAAA,EAAAuT,EAAA5P,KAAA8R,YAAAoN,UACfvb,EAAAA,KAAShI,SAAW4H,EAAAA,EAAxBvD,KAAA8R,YAAAoN,QAAApgB,QAAA,UAAA,IAAAA,QAAA,QAAA,IAAAA,QAAA,aAAA,KAnBF,QAAS+D,KAEP+M,EAAO5P,KAAK8C,UAAY8M,EAAO5P,KAAK+C,MAED,MAAhC6M,EAAO5P,KAAKiD,kBAA4B2M,EAAO5P,KAAKiD,iBAAiBzE,OAAS,IAC/EoR,EAAO5P,KAAK8C,UAAY3F,EAAY6F,WAAW4M,EAAO5P,KAAKiD,iBAAkB2M,EAAO5P,KAAK8C,YAG9D,MAA1B8M,EAAO5P,KAAKkD,YAAsB0M,EAAO5P,KAAKkD,WAAW1E,OAAS,IACnEoR,EAAO5P,KAAK8C,UAAY3F,EAAY6F,WAAW4M,EAAO5P,KAAKkD,WAAY0M,EAAO5P,KAAK8C,YAIvF,QAASsS,GAAekB,IAKxB,QAAS2I,KACP,GAAItb,GAAShI,EAAW4H,eACxBqM,GAAOjM,OAASA,EAnVlBwH,EAAO6E,kBAAkBpM,EAAauH,QAEtCpH,EAAQiC,SAAS,EAAG,GAEpB4J,EAAO7D,QAAU,KAEjB6D,EAAO5P,KAAOpE,EAAiB0U,WAAW1M,EAAahB,GACvD,cAAGgN,GAAgBA,OACjBA,EAAOyD,SAAWhX,EAAMuT,EAAO5P,KAAK8R,aAGtClC,EAAO5P,KAAKmf,SAAW,KACvBvP,EAAO5P,KAAKob,MAAQ,KACpBxL,EAAOiP,OAAS,KAEhBjP,EAAOwP,eAAiB,WACtB,GAAAxP,EAAGA,KAAAyP,YACD,MAAOzP,GAAO5P,KAAKqf,WAEhB,IAAGzP,EAAOyD,UAKU1S,SAAvBiP,EAAIkL,SAAWtd,MACfD,EAAGud,YACDtd,EAAAmS,SAAOpS,EAAawe,SAAUjB,SAAA,CAP7B,GAAAA,GAUGlL,EAAY/Q,KAAAA,EAClBrB,SAAQmS,QAASC,KAAO5P,EAAKnB,KAAZoC,GALjB,IAAG6Z,GAAYA,EAAStc,OAAS,GAAKsc,EAAS,GAAGwE,cAAgB,EAOlE,MAAIxE,GAAWtd,UAAaoS,EAAY/Q,GAAAA,cAAWic,EAAiBlL,GAAAA,wBAGnE,IAAAA,EAAA5P,KAAAnB,UACFrB,EAAAmS,SAAAC,EAAA5P,KAAAnB,SAAA,WAAA,CArBH,GAAAic,GAAAtd,EAAAmD,KAAAiP,EAAA5P,KAAAnB,SAAA,UAAA,KAAA+Q,EAAA5P,KAAAiB,GAkBI,IAAG6Z,GAAYA,EAAStc,OAAS,GAAKsc,EAAS,GAAGwE,cAAgB,EAOtE1P,MAAO2P,GAAkBxD,UAAAjB,EAAW,GAAAwE,cAAAxE,EAAA,GAAA0E,oBAGlC,MAAGjiB,IAHLqS,EAAO2P,gBAAkB,WAWrB,GAAAhiB,EAAGmD,YACDlD,EAAAmS,SAFF,oBAGEC,EAAA5P,KAAOzC,aAAawe,EAAAA,CAb1B,GAAArb,GAAAlD,EAAAmD,KAUI,kBAVJ,eAAAiP,EAAA5P,KAAAH,aAmBA+P,IAAO6P,GAAY/e,EAAAlC,OAAiB,GAAAkC,EAAA,GAAAgf,OAAA,EAApC,MAAAniB,GAAAwe,UAAArb,EAAA,GAAAgf,QAAAC,cAHE,MAAO,IAWL/P,EAAA6P,UAAOriB,SAAWwiB,GACnBhQ,EAAAiP,OAAAA,GAGFjP,EARDiQ,YAAA,WAUAjQ,GAAAA,GAAOkQ,EAAeA,cACpB,OAAA9jB,IAAgBL,EAAAA,MAAWwK,EAAAA,KAAXiV,MACbxL,EAAegQ,kBAAAhQ,EAAAjM,OAAA3H,GAAAK,MAAAuT,EAAA5P,KAAAob,OAGd,GAGDxL,EAAAkQ,aAAA,WACF,GAAA9jB,GAAAL,EAAAwK,iBAPD,IAAGyJ,EAAOjM,UASV3H,GAAAA,IAAA4T,GAAAjM,QAAA,CAXF,GAAAoc,GAAAtc,OAAAC,KAAAkM,EAAAjM,OAKSoc,GAAcvhB,SAShBwhB,EAAAA,EAAmB,IAKtB,MAAGlF,IAGAlL,EAFDoQ,iBAGiBC,WACf1f,GAAAA,GAAS2S,EAAAyL,YAAT/O,EAAA5P,MACDO,EAAA,EAyBH,OAvBAua,IAAGA,UAAYA,IAAyB,GAAVA,EAAUoF,SACtCpF,GAAUtc,gBAAQsc,KAChB,GAAAva,EAAU0f,aACX1f,EAAA,qBAE2B,GAAzBua,EAASqF,eACV5f,EAAAA,qBAIDua,GAAA,aAAAA,KACFva,EAAA/B,SACF+B,GAAA,MAP4B,GAAtBua,EAASqF,UAWXC,GAAP,WAEE,GAAIC,EAAJF,YATM5f,GAAU,mBAcXua,GAPPlL,EAAOwQ,YAAc,WAWb,GAAAE,GAAIC,EACJF,EAAGE,CAED,IAAA3Q,EAAA4Q,iBAAc,CACd,GAAA1F,GAAGlL,EAAY1I,YAAgB0I,EAAA5P,KAE9B,IAAA8a,GAAA,UAAAA,IAAA,GAAAA,EAAAoF,QATL,GAAGpF,GAAY,UAAYA,IAAY,aAAeA,GAAU,CAW5DwF,EAAGxT,EAAWyT,SAEb,IAAAA,GAAA/iB,EAAAmD,KAAA,wBAAA,QAAAma,EAAA2F,OACF,IAAAF,GAAAA,EAAA/hB,OAAA,GAAA,GAAA+hB,EAAA,GAAAG,MAAA,CAfL,GAkBK5T,GAAGgO,QACHA,GAASqF,KAAAA,iBACPrF,EAAS6F,QAAAA,EAAgB3gB,KAAAkH,gBAI1B4F,IAAOyT,GAAA,KACRF,EAAAE,EAAA,GAAAzT,UAOF,IAAAgO,GAAA,UAAAA,IAAA,kBAAAA,IAAA,aAAAA,IAAA,gBAAAA,GACF,MAAA,IAAAA,EAAAqF,UACFrF,EAAA6F,eAbc,qBAAuB7F,EAAS6F,eAkB1C,mBA9CP7F,EAAAmF,aAmCe,qBAgBf,eAKA,MAAAK,IAAAD,EAZW,aAAeC,EAAY,gBAAkBD,EAAY,WAmB/DzQ,IAKDA,EAAAA,eAAc9U,WACf,MAAA0C,GAAAmS,SAAAC,EAAA5P,KAAAnB,SAAA,YACDogB,EAAAA,SAAAA,0BAGFrP,EAAAgR,aAAsB,WACpBpjB,EAAI2gB,KAAAA,EAAe0C,KAAAA,SAAnB,UAAA,KAAA3jB,GACApC,EAAQsH,KAAAA,wBAAiB,KAAcE,IAGpCsN,EAAAjO,aAAA,WAEJ,UAAAiO,EAAA5P,KAAA8R,WAhBGpW,EAAU0I,OAAO,IAAKxI,EAAiBklB,WAAWlR,EAAO5P,QAoB3D4P,IACAA,EAAO5P,KAAOlF,QAAdimB,KAAAnR,EAAA5P,OAEAif,KAYC,WAhBDA,IAkBArP,EAAIpK,YAAJoK,EAAqB5P,KACnBwF,EAAK6G,KAAK+I,IAEX,IAAA8I,IAAA,CAEDpjB,SAAIojB,QAAWtiB,EAAA6S,YAAAmB,EAAAoR,aAAA,SAAArS,EAAA9P,GACb4Q,EAAAA,SAAAA,KACDjS,EAAA6O,KAAAxN,EAAA8P,EAAAyG,EAAA3F,GACFyO,GAAA,KAIKG,EAAAA,aACJvjB,EAAAuR,KAAgBzQ,EAAiB6S,GAC/ByP,GAAI1gB,GADNgI,EAAAmK,aAZEnK,EAAK6G,KAAK+I,EAAgB3F,GAkB5ByO,GAAQG,GAGVH,GACEzO;YCrPJ3U,SAAQO,OAAO,SAASJ,WAAW,cAChC,SAAS,UAAU,aADtBH,SAAQO,EAAO0I,EAAS9I,GAKtBM,SAASC,KAAKC,UAAY,eAC1BsI,EAAQxI,SAASyI,MAAQ,oBAEzB,IAAIid,GAAetlB,EAAW4H,eAC9BqM,GAAOsR,WAAarjB,KAAKC,UAAUmjB,EAAc,KAAM,GAEvDrR,EAAO1G,KAAO,WACZI,aAAa6X,QAAQ,aAAcC,SAASC,gBAAgBzR,EAAOsR;YCZvEpmB,SAAQO,OAAO,SAASJ,WAAW,cAAnCH,eAAA6B,UAAA,kBAAA,WAOE,OACE3B,YAAa;YCRjBF,SAAQO,OAAO,SAASJ,WAAW,WAChC,SAAS,YAAY,eAAe,SAAS,eAAe,aAD/DH,SAAQO,EAAOK,EAAST,EAAWkQ,EAChC9N,EAAS1B,GAIR,IACE,GAAI2lB,MACAC,IACDxlB,KAAM,SAAUyD,KAAK,SAAUgiB,KAAM,mBAIpCC,KAAAA,SAAe1lB,KAAM,SAASyD,KAAK,WAAnCiiB,GAAe1lB,KAAM,QAASyD,KAAK,SAEnCkiB,IAQJ9R,KAAO+R,SAAWniB,KAAA,SAAWgiB,KAAA,mBAC3BzlB,KAAOL,SAAUK,KAAO6V,SAAQ4P,KAAA,UADlCC,EAKEtW,GAAO5N,OALTqS,EAAO+R,SAAW,WAYlB/R,MAA6B,IAAtBgS,EAAW7lB,OAAA6V,QAAW,YAR7BhC,EAAOY,UAAY,WAYnBZ,MAAOiS,GAAaC,iBACXC,EAASC,YADlB,MAAA7W,EAAA8W,WARgC,IAAxB9W,EAAO8W,UAAU9d,MAYlB+d,EAAPN,YARAhS,EAAOgS,SAAW,WAYd,MAAmBjmB,OAAfwmB,EAAAA,aAGAvS,EAAAiS,WAAA,WACAjS,MAAoBjU,UAApBiU,SAAOtM,UAAP,aAA+BC,SAAX6e,UAGtBxS,EAAAsS,WAAKC,WACHA,IACD,GAAAE,GAAA,KATCF,EAAexmB,EAAWwK,iBAY3BgF,KACDkX,EAAOf,YAAPa,IAAAvS,GAAAtM,aAGA+e,EAAOf,WAAP3lB,EAAA4H,iBAIAke,IAAmB7R,GAAWuS,aAC9BV,EAAmBU,OAKb,MARHhX,EAQGzP,aAA4C4mB,IAAxBnX,EAAAmX,YAAiBnX,IAC3CkX,EAAOd,EAGP,MAAOA,EAAAA,WAAP,IAAApW,EAAA8W,UAAA9d,IACDke,EAAAf,EAEGvlB,GAAJ,QAAAomB,GACArnB,EAAQsH,EACNqf,EAAac,KAAb,SAAAJ,EACAV,EAAW1lB,KAAKyC,EACd2jB,IAAc3jB,GAAd8E,aACEyG,EAAMwY,MAAW3S,EAAjBtM,WAAA6e,KAKApY,GADC,eAAAA,EAAAhO,QAAkCoP,EAAWmX,YAC9CvY,EAOR,IAAAhO,GAAUL,EAAAK,IAFR,OAGA6T,SAAO4S,QAAWC,EAAGC,SAArB3Y,EAAA0C,SACQkW,GAARJ,SACDxmB,GAAA,GAAAA,EAAAyC,OAzDH,GAAAuL,EAAAhO,KAAAyC,SA4DQuL,EAAAwY,SAAA,UAGTxY,EAAAhO,MAAAgO,EAAAhO,KAAAyC,OAAA,GAAA,GAAAzC,EAAA6V,QAAA,IAAA7H,EAAAhO,QAGsB,UAAhBgO,EAAAhO,MAA2B,WAAAA,IAC7BgO,EAAAwY,SAAA,aAfQF,EAET,MAAMI,GACJ7S,EAAO4S,SAAWC,EAAGC,QACrBpkB,QAAQqkB,MAAMF,KAIpB,MAAMA,GACJ7S,EAAO4S,SAAWC,EAAGC,QACrBpkB,QAAQqkB,MAAMF,OAInB9lB,UAAU,eAAgB,WACzB,OACE3B,YAAa;YC9GjBF,SAAQO,OAAO,SAASJ,WAAW,aAChC,SAAS,UAAU,SAAS,WAAW,eAAe,UAAU,WAAW,SAD9EH,SAAQO,EAAO0I,EAAS9I,EAAWiC,EAAnCK,EACYqlB,EAAUnlB,EAAS0N,GAmE3B0X,QAAAA,KACAjT,EAAmB,2CAAnBrS,EAAAwe,UAAA,KAAA,KAAAxe,EAAAwe,UAAA,KAAA,QAAAxe,EAAAwe,UAAA,MACDnM,EAAAY,WAAA,EAGCtT,QAAAA,GACEoZ,GACEpZ,EACE0S,WACD,MAAAA,EAAAkT,aAJLlT,EAAAkT,YAAAvgB,KAAA+T,KAWI,QAAG1G,GAAOmT,GACRnT,EACD,WAJL,MAAAA,EAAAmT,oBAMDnT,EAAAmT,mBAAAxgB,KAAA+T,KAnFD/a,SAASC,KAAKC,UAAY,eAC1BsI,EAAQxI,SAASyI,MAAQ,oBAEzB4L,EAAOoT,eAAgB,EACvBpT,EAAOY,UAAYjT,EAAaukB,iBAAmBvkB,EAAaoS,WAChEC,EAAOmT,sBACPnT,EAAOqT,YAAc9X,EAAO8X,WAE5B,IACIC,GAAkB/X,EAAOgY,iBAAiBhf,GAC3C+e,OAAHA,IACEA,EAHe,IAMjBtT,EAAOmS,SAAWmB,EAND,IAOjBtT,EAAGA,SACDA,EAAOkT,aAAe,mBAIvBlT,EAAAkT,aAAA,kBAAAlT,EAAAmS,UAGCnS,EAAAA,YAAkBzL,SAAlBA,GACAyL,EAAOY,SAAPrM,EACAyL,EAAOwT,WAAP,EACA3lB,EAAAA,eAAAA,IAGAmS,EAAIyT,qBACJ,IAAGA,GAAAA,aAAwBA,QAAAA,iBACVnhB,OAAfrF,GAAAwmB,EAAAzR,QAAAzN,KAAA,GACDtH,eAAAqF,WAAA,aAED3E,EAAawkB,QACbxkB,EAAa8O,SAAKwW,EAbpBtlB,EAAA8O,KAAAwW,EAAAS,IAiBE1T,EAAAA,iBAAsB,WACtBzE,EAAO8W,aAAY,uCACnB9W,EAAOmX,UAAP,KACA/kB,EAAAA,YAAA,KACAV,EAAAA,QACAyM,eAAaia,QACbja,aAAK8Z,QACLlmB,KAAAA,eACE6kB,EAAAA,WACAA,SAASyB,KAAO,GAFlBzB,SAAAyB,QAAA,MAOA5T,EAAAA,aAAOmT,WACPlmB,EAAAA,sBACAY,eAAAA,WAAAA,aACAF,IACAA,EAAawkB,QACbxkB,EAAa4N,SAASA,EAAO8W,UAAU9W,IACvC5N,EAAa8O,OAAKwW,EAAAA,UAAlB1X,OAPF5N,EAAA8O,KAAAwW,EAAAS,IAoCInY,EAAAA,aAAOsY,WAFThmB,IA9Ee,IAkFb0N,EAAOkB,WACPlB,EAAGA,aAAOgY,EAAPpB,UAEDxkB,EAAAA,OACD4N,EAAAgY,iBAAAhY,QAAAA,EAAA8W,UAAA9W,SACDyE,EAAOkT,QAGRvlB,EAAA8O,KAAAwW,EAAAS,IAHC1T,EAAOkT,aAMXlT,iBACKA,kBAAmB8T,EAAAA,YAMlBd,EAAAA,aAAA,WApGW,IAmGbhT,EAAAmS,WAGDnS,EAAAkT,aATH,kBAAAlT,EAAAmS,SA1GF,oCAgHMxkB,EAAa8O,KAAKmD,EAAU,WAC1BoT,EAAQpT;cCjHhB,WAIA,QAASmU,GAAY/f,EAAalI,EAAUwB,EAAS0mB,EAAcpe,GAmEhE,QAxCDqe,KA2CKhoB,EAAG0P,KADRqY,EAASC,eAAiBhoB,EAAA0P,KAAAuY,KAAA,SAAAngB,GAGpB9H,EAAAkoB,UAFDloB,EAEY8H,OAxEnB,GAAA9H,GAAS8nB,IAKP9nB,GAAGmoB,WAAa,GAFhBnoB,EAAAooB,gBAAA,EAEApoB,EAAGmoB,KAAAA,KAAH,WACGC,EAAAA,QAICpoB,EAAG0P,IAAM/F,EAAKuK,QAAQnM,EAAasgB,OAFvC1e,OAIG1J,KAAAqoB,OAAA,WACFjnB,EALD,WASIxB,EAAU0I,OAAO,QAASvI,EAAG0P,IAAItK,OAClCnF,KAFDsoB,gBAAA,SAAAC,GAGDxoB,EAJDmoB,WAAAnoB,EAAAooB,gBAAAI,EAQExoB,EAAGooB,gBAAkB,GAArBpoB,EAAAA,WAAGooB,KACJpoB,EAHDyoB,kBAAA,WAMAzoB,GAAA,MAAGyoB,EAAAA,WAAoB,CAInBzoB,EAAG0oB,aAFL,KAAA,GAAAC,KAAA3oB,GAAAkoB,UACA,IAAGloB,GAAG0oB,KAAc1oB,GAApBkoB,UAA0BS,GACxB3oB,EAAG0oB,WAAahiB,MAChBiiB,IAAQA,EACNhlB,KAAIxD,EACFH,KAAG0oB,EAAAA,UAAgBC,GAAAxoB,KAOxB,IAAA,GADEyoB,MACF7hB,EAAA,EAAAA,EAAA/G,EAAA0oB,WAAA/lB,SAAAoE,EAAA,CAED,GAAI6hB,GAAAA,EAAJF,WAAA3hB,EACA,IAAA/G,EAAIkE,QAAQ6C,EAAAA,OAAK2hB,OAAW/lB,EAAAA,CAIxB,GAAI0Z,GAAIrc,EAAGkE,OAAO2kB,aAFpB,IAAAC,EAAIA,KAAS9oB,cAAb+V,QAAAsG,KAAA,KACGrc,EAAAuL,KAAavL,OACd8oB,EAAQ9oB,KAAGkE,MAAO2kB,cAAlB9S,QAAAsG,KAAA,GAEE,SAQJuM,GAFCA,EAAAliB,KAAAoiB,GAEDF,EAAQliB,QAAR1G,EAAAmoB,WAGE,MAKJ,MAHCnoB,GAAAooB,gBAAAQ,EAAAjmB,OAGMimB,GAtEX3pB,QAACO,OAAY,SAAAJ,WAAA,mBAAA,eAAA,YAAA,WAAA,gBAAA,OAAA0oB;cCAb,WAIA,QAASiB,GAAQlpB,EAAWkI,EAAcggB,EAAejoB,GAAzD,GAAAE,GAAS+oB,IACP/oB,GAAA2oB,IAAA5gB,EAAA4gB,IAKAK,WACAC,EAAAA,cAAAA,EAAAA,KAAAA,KAAAA,SAAAA,GAEAjpB,EAAAkpB,aAEOphB,EAFEkhB,UASR,WAGCjB,EAAckB,WAAWjpB,EAAG2oB,KAAKV,KAAK,SAASc,GAA/ChB,EAAAA,QADFgB,EACgBE,UAUhBhpB,KAAKkpB,KAAO,SAAShpB,EAAWI,GAE9B,GAAIF,GAAeP,EAAWQ,YAAYH,EAAWI,EAAMC,MAE3DV,GAAWW,UAAXX,EAEEO,EAGFL,GAEAH,EAAAA,OAAUK,EAAKwH,gBAElB7H,EAAAK,KAAA,UAAAG,IAhDDpB,QAACO,OAAY,SAAAJ,WAAA,eAAA,YAAA,eAAA,gBAAA2pB;cCAb,WAIA,QAASK,GAAQvpB,EAAWC,EAAYioB,EAAehgB,EAAcuH,GAWjEtP,QAAG8H,KACJ,GALDuhB,GAAArpB,EAAAspB,SASKD,IAFLtB,EAASiB,cAAiBK,EAAAV,KAAAV,KAAA,SAAAngB,GAErBuhB,EAAAA,aADCA,EACKvhB,OAUV,QAAAmhB,KAGC,GAAII,GAAOrpB,EAAGspB,SADhBD,IACEtB,EAAcuB,WAAdD,EAAAV,KAAAV,KAAA,SAAAc,GAEEhB,EAAAA,QADCsB,EACaJ,OA+ClB,QAASM,GAAYC,GAArB/mB,QAAAgD,IAAS8jB,GA9EX,GAAAvpB,GAASopB,IAKPppB,GAAGypB,KAAO1hB,EAAa0hB,KAEvB1B,EAAc2B,QAAQzB,KAAK,SAASoB,GAFpCrpB,IAIEipB,IADAD,EAAAA,OAAAA,EAAAA,kBAkCF/oB,KAAK0pB,YAAc,WAAnB5B,EAAK4B,YAAc3pB,EAAA+oB,SAAWd,KAAAgB,GAAAW,MAAAL,IAI9BtpB,KAAKqpB,QAAU,WAAf,MAAKA,GAAUA,WAIfrpB,KAAKoN,KAAO,SAASlN,EAAWI,GAAhCA,EAAK8M,YAAO,GAASlN,OAAT0pB,UACVtpB,EAAM2I,UAAc/I,EAAY0pB,GAAhC5B,KAAAe,GAAAY,MAAAL,GACAxB,EAAAA,aAActnB,MAIhBR,KAAK6pB,aAAe,SAAS3pB,GAA7BA,IAAK2pB,GAALZ,eACK/oB,EAAAA,OAAAA,GAAgB+oB,SACjBlpB,EAAA8H,OAAOA,GAAO3H,OAAWmP,EAAzB4Z,aAAiC/oB,GAAAmP,QAI7BtP,EAAG8H,OAAO3H,GAAW4pB,QAAzB/pB,EAAA8H,OAAOA,GAAO3H,MAAW4pB,EAAzBb,aAAgC/oB,GAAA4pB,OAI5B/pB,EAAG8H,OAAO3H,GAAW6pB,QAAzBhqB,EAAA8H,OAAOA,GAAO3H,MAAW6pB,EAAzBd,aAAgC/oB,GAAA6pB,QAK9BhqB,EAAG8H,OAAO3H,GAAWmP,SAAzBtP,EAAA8H,OAAOA,GAAO3H,OAAWmP,EAAQmX,YAAAnX,QAIjCtP,EAAGiqB,aAAe9pB,GAOpBF,KAAKiqB,cAAgB,WAArBnC,EAAKmC,cAAgBlqB,EAAAkpB,eAIrBjpB,KAAKkqB,cAAgB,WAArB,MAAAnqB,GAAKmqB,SAAAA,EAALpB,QAAqBqB,UACbrB,EAAAA,QAAW/oB,UAIf,IAIJC,KAAAoqB,mBAAA,WACE,MAAApmB,GAAOA,KAAEqmB,EAAKtqB,eAGhBC,KAAAsqB,aAAA,WACE,MAAAtmB,GAAOA,KAAEqmB,EAAKtqB,SAGhBC,KAAAkpB,KAAA,SAAYhpB,EAASA,GAEnB,GAAAE,GAAIA,EAAeP,YAAWQ,EAAXC,EAAkCA,MAErDT,GAAAA,UACEO,EAIFL,EATFO,GAYAP,EAAA8H,OAAAhI,EAAe4H,iBAAfzH,KAAKuqB,QAAU,WAIfxqB,EAAAwqB,WAAAxqB,EAAGyqB,YAAc,SAAStqB,GAI1BH,EAAG0qB,cAAHvqB,GAGCH,EAHD0qB,iBAAA,WACE,GAAIC,GAAU1mB,EAAE4D,KAAK7H,EAAG8H,QAAQmH,OAAOhL,EAAE4D,KAAK7H,EAAGkpB,cAInDlpB,OAAG4qB,GAAAA,KAAAA,EAAH/mB,QAAuB,IAGrB7D,EAAAA,kBAAYF,SAAW4H,GACxB5H,EAJDkG,kBAAA7F,MAEEH,EAAG6qB,cAAgB,KAIrB7qB,EAAG8qB,OAAAA,EAAepjB,iBAAlB1H,EAAG8qB,aAAe,SAAS3qB,GAI3BH,EAAG+qB,eAAAA,GAGF/qB,EAHD+qB,mBAAA,SAAA5qB,GAKD4nB,EAAA3Y,YAAAjP,EAAAH,EAAAkpB,aAAA/oB,IAAA8nB,KAAAe,GAnJDhpB,EAAAgrB,eAAA,MAAA/rB,QAACO,OAAY,SAAAJ,WAAA,eAAA,YAAA,aAAA,gBAAA,eAAA,SAAAgqB;cCAb,WAIA,QAAS6B,GAAUlD,EAAeloB,EAAWkI,EAAcjI,EAAYyB,GAAvE,GAAAvB,GAASirB,IACPjrB,GAAA2oB,IAAA5gB,EAAA4gB,IAIA3oB,EAAGG,UAAY4H,EAAa5H,UA4B1B4nB,WACEA,EAAArd,SAAU1K,EAAA2oB,IAAA3oB,EAAAG,WAAA8nB,KAAA,SAAA1nB,GACRP,GACAA,EAAAA,MAAAO,EACDP,EAHDkH,MAIK3F,EAAAgM,cAAAhN,IALPP,EAAAO,cAZF,WACEwnB,EAAAA,WAAckB,EAAWjpB,KAAzBioB,KAAiCA,SAAKc,GAElC/oB,EAAAA,QADF+oB,EACEA,UAjBNre,EAAAA,YAAAA,WACAue,GAAAA,GAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,MAAAA,MAEAjpB,GAAGkD,UACD7C,EAIEA,EAFFP,EAAAA,OAKAD,EAAAA,KAAUK,UAAKG,IAtBnBpB,QAACO,OAAY,SAAAJ,WAAA,iBAAA,gBAAA,YAAA,eAAA,aAAA,aAAA6rB;YCAbhsB,SAAQO,OAAO,SAASJ,WAAW,cAChC,WAAW,SAAS,eAAe,YAAY,eAAe,SAAS,QAD1EH,SAAQO,EAAO0rB,EAAS9rB,EAAWS,EAChC6B,EAAW4N,EAAZ6b,GAyBI,QAAM7b,KAEFtP,EAAGorB,OAAOA,aAAUprB,EAAAsP,OAAAmX,YAAAne,KAClB6iB,EAAIE,IAAAA,EAAAA,OAAAA,YAA0BnV,IAAM,gBAApC+R,KAAA,SAAAmD,GACA,GAAAA,GAAGC,EAAAA,KAAe1oB,CAChB,GAAI2oB,GAAeD,EAAAA,KAAAA,MAAA,OACnB,IAAAA,EAAgB1oB,OAAS,CACvB3C,GAAGurB,GAAaF,EAAMC,GAAtBpV,MAAA,IACDoV,GAAA3oB,OAAA,IACF3C,EAAAurB,WAAA,IAAAD,EAAA,QA9BT,GAAItrB,GAAKC,IAETD,GAAGwrB,SAAWlc,EAAOmc,cACrBnc,EAAOkB,OACP9O,EAAa8O,KAET,SAAAiK,KAFJ,WAKIpZ,MAKJrB,EAAG0rB,OAAAA,EACH1rB,EAAG2rB,eAAelF,EAAPL,UACXpmB,EAAGurB,cAAHjc,EAAAmX,YACAmF,EAAAA,KAAAA,MAAAA,EAAAA,YADA5rB,EAAGurB,WAAa,GAGhBK,IAiBA5rB,EAAA6rB,eAAA,WAGGC,MAAAA,GAAerF,aAAlBzmB,EAAA8rB,aAAA,WACE,MAAOxc,GAAO8W,WAKdpmB,EAAA+rB,eAAc3E,WAAd,MAAO9X,GAAO8X,aAKZpnB,EAAAgsB,aAAOtqB,WADT,MAAAA,GAGKoS,WACHpS,EAAAwe,UAAA,OAAO,IAIXlgB,EAAAisB,aAAA,SAAA/F,GACE5W,EAAO2c,aAAa/F,GAInBgG,EAAAA,MAAH,GAGGlsB,EAAAksB,YAAA,SAAAhG,GAFGlmB,EAAGwrB,UAIJzjB,EAAAA,aAAauH,MAGd4b,EAAA5b,QAHFvH,EAKKuH,OAAA4W,EAAA5W,OACHA,EAAO4c,aAAYhG,GACpBgF,EAAAvD,UAZHrY,EAAA4c,YAAAhG,GAiBGiG,EAAAA,MAAH,EACE7c,KADFtP,EAAAmsB,YAAA,SAAAje,GAOHpN,EA3FDqrB,YA2FWje,GACTlO,EAAOwrB,SAAAtd,EACL/O,EAAAA,KAAAA,MAFH2B,UAAU,kBAAmB,WAC5B,OACE3B,YAAa,wBACbiC,aAAc;cC9FlB,WAcA,QAASgrB,GAAelkB,EAAQpI,EAAWD,EAAUyB,EAAYE,EAAaH,GAK5EpB,KAAKosB,YAAc/qB,EAAY+qB,YAE/BpsB,KAAKkoB,WAAa,GAAlBloB,KAAAqsB,eAAA,EAGsB,MAAnBrsB,KAAKssB,aAARtsB,KAAGssB,WAAKA,IAIRtsB,KAAKusB,WAAa,WAAlB,MAAKA,MAAAA,aAILvsB,KAAKwsB,eAAiB,WAAtB,MAAsB,IAAtBxsB,KAAKwsB,YAA4B,MAAXxsB,KAAAssB,WACjB,sBAIDtsB,KAAOssB,YAIXtsB,KAAAysB,iBAAA,WACK,IAAHzsB,KAAGssB,YAAyB,MAAzBtsB,KAAyBssB,aAC1BtsB,KAAAssB,WAAAtsB,KAAkBwsB,kBAEpB5sB,EAAAA,KAAUK,kBAAKD,KAAoBssB,aA5CvCttB,QAAAO,OAAA,SAAAsB,UAAA,uBAAA,WAGE,OADF7B,SACEqD,oBAEEA,YAAAA,UAFK,aAAA,YAAA,cAAA,eAAA,WAAA8pB,GAILhtB,aAAY,cACZgC,YAAAA;cCTJ,WAcC,QAXDurB,GAAAzkB,EAAA7G,EAAA0G,EAAAlI,EAAAyB,EAAAgO,EAAA5N,EAAAC,GAaA,GAAA3B,GAAS2sB,IAEP3sB,GAAA4sB,WAAA,KAGA5sB,EAAGmoB,WAAa,GADhBnoB,EAAAA,eAAgB,EAChBA,EAAAA,QAAGmoB,KACHnoB,EAAAA,SAAGssB,EACHtsB,EAAAA,SAAA,GACAA,EAAAA,QAAA,MACAA,EAAAA,UAAAA,EAAA6sB,QAEA7sB,IAAAA,GAAAkX,OAAkB2V,aAAlB5rB,QAAA,YAGG8G,GAAa+kB,WADhBA,EAAIA,OAAW5V,EAAOzJ,WAEpBqf,EAAAA,GAAW5V,EAAOnP,MAEnB/H,EAAA8sB,SAAAA,GACC9sB,EAAAA,aAAc8sB,CAEhB9sB,IAAAA,GAAG+sB,OAAeD,aAAlB7rB,QAAA,YAGG8G,GAAailB,WADhBA,EAAIA,OAAW9V,EAAOzJ,WAEpBuf,EAAAA,GAAW9V,EAAOnP,MAEnB/H,EAAAgtB,SAAAA,GACChtB,EAAAA,aAAcgtB,EAEhBhtB,EAAGitB,aAGDjtB,EAAGusB,WAAa9e,aAAaxM,QAAQ,cADvC8G,EAAOwkB,OACLvsB,EAAGusB,WAAa9e,EAAaxM,MAEX8G,MAAhB/H,EAAAA,aAEDA,EAAAusB,WAAA,KAIFrkB,EAAAxI,SAAAyI,MAAA,8BACDD,EAAAA,eAAiBC,WAGf,GAAGxG,EAAQmS,SAAS9Q,IAAatB,EAAaoS,aAAe9T,EAAG4sB,WAAY,CAD9E5sB,EAAGktB,aAKC,KAAA,GAHAltB,MAGImS,EAAQxQ,EAAQ4b,QAAQva,GAAxBmP,EAAAA,EAAAA,EAAQxQ,EAAAA,SAAAoF,EAAgB/D,CAE5B,GAAAuI,GAAA4G,EAAApL,EAAA,IAAAwE,EAAIsY,OAAQ9c,EAAEoL,CACZ,GAAI5G,IACJnG,GAAGmG,EAAKsY,GACNlgB,KAAIQ,EAAO+b,UAAA3U,EAAAsY,OAAAtY,EAAA4hB,aACT/nB,KAAImG,EADK0W,UAAA1W,EAAAkW,MAET9d,KAAAA,EAAMjC,eACNggB,WAAMpgB,EAAAA,WACNqkB,SAAMpa,EAAK6hB,SACXxL,QAAAA,EAAYrW,QAEZshB,GAAAA,WAASthB,KAAKshB,GAEhB7sB,EAAG4sB,UAGDS,EAAW9hB,EAAKshB,UAAW,IAIhC,IAAA,GAAAA,KAAAQ,GAECrtB,EAAGstB,SAAS5mB,KAAKmmB,EAElB7sB,GAAA4sB,WAAA3oB,EAAAspB,OAAAvtB,EAAA4sB,WAAA,QACD5sB,EAAG4sB,WAGD5sB,EAAGuoB,sBAIRvoB,EAtCDwsB,WAAA,WA2CG,GAHmB,MAAjBxsB,EAAG4sB,YADR5sB,EAAGwsB,iBAIA,MAAAxsB,EAAA4sB,WAEC,QAIF,KAAA,GAFCY,MAEGC,EAAgBztB,EAAG4sB,WAAWjqB,OADlC+qB,EAAIF,EACAC,EAAAA,EAAAA,EAAAA,GAAmBb,EAAvB5sB,EAAAmoB,aAAAphB,EAAA,CACA,GAAI2mB,GAAAA,EAAAA,WAAJ3mB,EAEE,MAAA/B,EAAA4c,WAAWgL,EAAAA,UAAX5nB,EAAA4c,WAAA5hB,EAAAgtB,WAAAhoB,EAAA4c,aAKC,OAAA5hB,EAAA6sB,SAAA7sB,EAAA6sB,SAAA7nB,EAAA6nB,SAAA,CAIA,GAAA,IAAA7sB,EAAAusB,WAAA,CAEC,GAAIoB,GAAe3tB,EAAGusB,WAAWrW,MAAM,IADjB,IAAxByX,EAAMpB,SACJoB,GAAIA,EAAe3tB,YAIlB,KAAA,GAFC2tB,IAAAA,EAEDC,EAAA,EAAAA,EAAAD,EAAAhrB,SAAAirB,EAAD,GAAA5oB,EAAI6oB,MAAAA,EAAWlqB,KAAfmqB,WAAAjF,cAAA9S,QAAA4X,EAAAC,GAAA/E,iBAAA,EAAA,CACAgF,GAAQD,CACN,OAKD,IAAAC,EAEC,SAGHL,EAAA9mB,KAAA1B,GAED0oB,KAIF,MAFC1tB,GAAAooB,gBAAAoF,EAAA7qB,OAEM6qB,GAERxtB,EAhDD+tB,aAAA,WAkDK/tB,EAAG8sB,UAAY9sB,EAAG+sB,eADvB/sB,aAAAslB,QAAkB,WAAWtlB,EAAA8sB,UAC3BjtB,EAAMitB,OAAH,WAAkBC,EAAAA,UACnBtf,EAAAA,aAAa6X,EAAAA,UAIdtlB,EAAAgtB,UAAAhtB,EAAAitB,eAECxf,aAAa6X,QAAQ,WAAYtlB,EAAGgtB,UADtCntB,EAAMmtB,OAAH,WAAkBC,EAAAA,UACnBxf,EAAAA,aAAa6X,EAAAA,UAId7X,aAAA6X,QAAA,aAAAtlB,EAAAusB,YAED1sB,EAAU0I,OAAO,OAAQvI,EAAGusB,YAA5B1sB,EAAAA,WAAU0I,GAGVvI,EAAG4oB,QAAU5oB,EAAGwsB,cAEjBxsB,EAnBDuoB,gBAAA,WAqBElnB,EAAS,WAATA,EAAAA,YAAS,GAEPrB,EAAA4oB,QAAA5oB,EAAAwsB,eAIH,IAPDxpB,GAAA,kBASArB,GAAQ6O,KAAKxN,EAAU,KAAM,aAAe,WAD5ChD,EAAAktB,mBACAvrB,GAGCD,EAHD8O,KAAA,KAAAxQ,EAAAktB,gBA/KFP,EAAAhmB,SAAA,UAAA,WAAA,eAAA,YAAA,cAAA,SAAA,eAAA,WAAA1H,QAAAO,OAAA,SAAAsB,UAAA,4BAAA,WAGE,OADF6rB,SAAA1tB,kBACEstB,WAAO,eAELjqB,WAAAA,EACEiqB,aAAAA,QADgBptB,YAFb;cCJT,WA2BEa,QAAGwB,GACHuS,EAAI/T,EAAGwB,EAAcH,EAAAxB,EAAAqrB,EAClBxpB,EACAF,EACEwsB,EACD1sB,EAZJ+V,EAcGrX,EACAF,GAuIH,QAAS0Q,KAmBL7G,EAAA6G,KAAIyd,EAAgB/W,GAGnB,QAAAqC,GAAAkB,IAIKza,QAAAA,KAED,GAAA0B,EAAAoS,YAAAnK,EAAAmK,WAAA,CAfL,GAAIrD,GAAU9G,EAAKukB,cAoBpBzd,GAAA0d,OAAA,EAAA,EAAAnuB,EAAA2J,KAAA,IACF3J,EAAA2J,KAAA8G,EAjBGzQ,EAAGsiB,QAAU3Y,EAAKqb,YAElB,IAAIiJ,GAAgB/W,OAAOzJ,aAAaxM,QAAQ,aAmBjD8sB,GAAere,KAAA3H,EAAW2H,MAC3B1P,EAAAkX,OAAAnP,EAAA2H,MADF,MAAAue,GAdMhvB,QAAQsH,QAAQkK,EAAS,SAASvC,EAAO0C,GAmB/C,GAASwd,EAAAA,IAATH,EAEKrF,YADAT,EAAAA,IAAHja,KAMA1M,EAAG6M,KAAYrO,EAAfwB,aAAqBmC,KAAAyqB,IAWpB,QAAAA,KAjBDpuB,EAAGmoB,WAAa,GAmBhBnoB,EAAA4oB,QAAIyF,IAGH,QAAA7B,KAjBD,GAAIne,GAAW7M,EAAaod,SAAS5e,EAAGwB,aAAamC,KAmBrD,IAAI2qB,MAAJjgB,EACA,MAAImf,KAGJnf,GAAQtH,EAAIA,KAAEwnB,SAAFzqB,EAAe4pB,GACzB,MAAQrf,GAAAA,WAARvK,EAAA8d,YAGE,IAAA4M,IAAOhtB,CACL,OAAAxB,GAAK4hB,OACH4M,EAAAxuB,EAAAkM,KAAAuiB,GAfR,IAAIJ,IAAa,CAmBb,YAAO7sB,GAAAA,OACL6sB,EAAK3M,EAAAA,KAAQgN,QAOX,KAAA,GAJHJ,MAjBDd,KAmBAe,EAAO/sB,EAAAA,OACLksB,EAAMhe,EACJ3I,EAAA,EAAAA,EAAGwnB,IAAQI,EAAapM,EAAAA,YAAeviB,EAAAkM,KAAA9G,IAAA,KAAA2B,EAAA,CACrC,GAAA/B,GAAAqJ,EAAAtH,EACD,IAAA/B,EAAA,CAEJ,IAAAhF,EAAAwB,aAAAotB,YAjBI5pB,EAAE4c,WAAa5hB,EAAG8sB,UAAY9nB,EAAE4c,WAAa5hB,EAAGgtB,UAmBrD3V,QAIA,KAAArX,EAAAwB,aAAAqtB,UAjBK7pB,EAAE0c,OAAS1hB,EAAG8uB,YAAY9pB,EAAE0c,KAAKtc,IAmBtC,QAIIuoB,KAAAA,EAAAA,aAAAA,SACD3tB,EAAA0P,KAAA1P,EAAA0P,IAAAtK,IAAA,IACGyoB,EAAAA,IAAAA,WAAJ7oB,EAAAud,cACA,QAZF,IAiBGlL,EAAA0X,SAAA/pB,GAjBAA,EAAEoB,UAAYpG,EAAGwB,aAAamC,KAmB/B,QAdF,IAAoB,IAAjB3D,EAAGusB,WAAkB,CAoBtB,GAAAoB,GAAgB3tB,EAAAusB,WAAhBrW,MAAA,IAjBIyX,GAAahrB,SAmBjBgrB,GAAA3tB,EAAAusB,YAGE,KAAA,GADAsB,IAAW7oB,EACRkH,EAAAA,EAAK9G,EAALuoB,EAAHhrB,SAA0BirB,EACxBoB,GAAAA,EAAAA,KAAAA,cAAAjZ,QAAA4X,EAAAC,GAAA/E,iBAAA,EAAA,CACAoG,GAAA,CACAA,OAKAA,IAAAA,EACAA,SAKAA,GAAAA,EAAAA,KAAAA,IAAA,EAAY/X,CAIhB,IAAA,GAHG8X,IAAA,EAlBCC,KAqBAD,EAAAA,EAAAA,EAAAA,EAAJ9nB,MAAevE,SAAA4R,EAAA,CACb,GAAArI,GAAAlH,EAAAkC,MAAAqN,EACD,IAFDrI,EAGK9G,IAAApF,EAAAkM,KAAA9G,GAAA,CACHkpB,GAAS5nB,EACVuoB,EAAAloB,EAAA2mB,EACFuB,EAAA1a,EAAA2C,OAAAhL,EAAAE,IApBK,OAuBNshB,EAAAA,IAAAA,GACDsB,GAAA,EACFC,EAAAloB,EAAA2mB,EApBSuB,EAAQ1a,EAAI2C,OAAOhL,EAAKE,MAElBF,EAAK9G,IAAMipB,IAsBrB/B,GAAAA,EApBI2C,EAAQloB,EAAI2mB,EAsBpBY,EAAWA,EAAAA,OAAcpiB,EAAAE,MAIzB,IAAI8iB,EACJ,QAGA1B,GAAa0B,KAAAA,GAjBX1B,EAAW9mB,KAAK1B,GAsBpB0oB,KAIArsB,GAAAA,EAAAA,KAAS+D,IAAA,EAAA,CAEPpF,GAAAA,GAAawsB,KAAAA,IAAbkB,EAAA1tB,EAAAmoB,WAHJmG,GAAAA,EAAAzqB,KAAA,SAAAsrB,EAAAC,GAfM,MAAOA,GAAO7a,EAAI4a,EAAO5a,GA7UjC,KAAA,GAqWC2a,MArWDnoB,EAAA,EAAAA,EAAAulB,IAAAvlB,EAkVQmoB,EAAYxoB,KAAK8mB,EAAWc,EAASvnB,GAAGA,GAE1CymB,GAAa0B,EAKf,MAFAlvB,GAAGooB,gBAAkBoF,EAAW7qB,OAEzB6qB,EAnTL,GAAAxtB,GAAAC,IAGCJ,IADAG,EAAAwB,aAAAA,EAAA6tB,OAAAtnB,EAAAgH,MACAlP,EAAAA,aAAU0I,CACV2iB,GAAAA,GAAOvD,aAAP1mB,QAAA,uBAgBLjB,OAfIguB,KACDA,EAAA,UAIH9lB,EAAAA,aAAiBC,EAAQwF,OAAAqgB,GAblBhuB,EAAGwB,eAAgBxB,EAAGwB,aAAa8tB,eAevC5f,EAAOtK,SACPuE,EAAAA,aAAHnI,EAAAmM,OAAA,gBAEGmf,EAAAA,eAEA3E,EAAH5f,OAAA,MAAAvI,EAAAwB,aAAAtB,MACGkoB,EAAAA,WAMHnpB,EAAAA,SAAAkJ,MAAgB7G,sBAA4B4K,EAAT1K,aAAuBmC,KAAAklB,cAEtD7oB,EAAAA,KAAGkH,IAAMR,EAAAA,KAAT,IACD1G,EAAA2J,MAAA3J,EAAA0P,KACF1P,EAJDsiB,WATAtiB,EAAG8sB,SAAW,EAed9sB,EAAAgtB,SAAIF,GACJ9sB,EAAAmoB,WAAGpgB,GACD+kB,EAAAA,gBAAW5V,EACZlX,EAAAuvB,OAAAjuB,EAAA2gB,UACDjiB,EAAAkM,MAAG4gB,IAAAA,EAAAnpB,KAAgBmpB,IACjB9sB,EAAAA,OAAG8sB,EAAH5gB,MACDlM,EAAA4oB,QAAA,KAZD3pB,QAAQsH,QAAQjF,EAAY4F,MAAO,SAASgF,EAAMG,GAelDH,EAAI8gB,YACJhtB,EAAG+H,MAAAA,KAAAA,IAID/H,IAAAA,GAAAkX,OAAc8V,aAAd/rB,QAAA,YACD8G,GAAA+kB,WACD9sB,EAAGitB,OAAeD,EAAlBF,WAEA9sB,EAAGusB,GAAa9e,EAAAA,MAChBzN,EAAA8sB,SAAG/kB,GAEF/H,EAAA+sB,aAAAD,CAEC9sB,IAAAA,GAAGusB,OAAH9e,aAAAxM,QAAA,YACD8G,GAAAilB,WAbCA,EAAW9V,OAAOnP,EAAailB,WAgBjCA,EAAGjlB,GAAamE,EAAM,MACpBlM,EAAAA,SAAGwvB,GAELxvB,EAAAitB,aAAMuC,EAELxvB,EAAAusB,WAAA9e,aAAAxM,QAAA,cAbE8G,EAAapE,OAehB3D,EAAGyvB,WAAW1nB,EAAWpE,MAEvB3D,EAAAusB,aACEvsB,EAAAA,WAAGwB,IAGD3B,EAAAA,sBAAiB4N,aAAUjM,QAAatB,cACxCF,EAAAkM,OACAgf,EAAAA,sBAAAnjB,EAAAmE,MAEHlM,EAAAwvB,uBAAA,GAAAxvB,EAAAwvB,wBAAAluB,GAAA4F,QACFlH,EAXDkM,KAAA5K,EAAA4F,MAAAlH,EAAAwvB,wBAcExvB,EAAAyvB,SAAOjuB,WACL,GAAAwsB,GAAMlB,aAAeC,QAAAA,uBACnBtf,KACA5N,EAAAA,aAAU0I,EAAVoF,OAAgCmf,GAChC9sB,EAAAA,eAZAH,EAAU0I,OAAO,MAAOvI,EAAGwB,aAAatB,MAe1CF,EAAAqN,OACEI,EAAAA,YAMF5N,EAAAA,KAAAA,WACAA,EAAAA,aAAA+uB,WAeC/uB,EAAA0I,OAAA,WAAA,MACF1I,EACI0I,OAAA,WAAA,QAhBJvI,EAAA8sB,UAAA9sB,EAAA+sB,eAdGtf,aAAa6X,QAAQ,WAAYtlB,EAAG8sB,UAgBxCjtB,EAAO2B,OAAAA,WAAsBxB,EAAA8sB,UAC3B9sB,EAAA+sB,aAAA/sB,EAAmB8sB,UAGf9sB,EAAAgtB,UAAU5nB,EAAP6nB,eACDptB,aAAAA,QAAU0I,WAAiBmH,EAAHsd,UACzBntB,EAFD0I,OAGK,WAAAvI,EAAAgtB,UACHntB,EAAAA,aAAU0I,EAAAA,WARdvI,EAAGwB,aAAakuB,QAiCpB7vB,EAAU0I,OAAO,MAAjB,MAfY,MAAZvI,EAAGA,KACDA,EAAGA,eAAGwvB,EAAAA,IAAHpqB,KACDqI,aAAa6X,QAAQ,YAArBtlB,EAAmCA,IAAGkM,IACtClM,EAAGA,IAAGkM,IAAH,EACDrM,EAAU0I,OAAO,MAAjBvI,EAAyBA,IAAGkM,IAI7BrM,EAAA0I,OAAA,MAAA,MAEDvI,EAAGwvB,cAAAA,EAAAA,IAAHpqB,IAQNpF,EAAAkM,MACEvC,EAAK6G,uBAAqBmf,EAA1BzjB,KAAA9G,KACDqI,aAAA6X,QAAA,aAAAtlB,EAAAkM,KAAA9G,IAjBQpF,EAAGkM,KAAK9G,IAAM,EAmBvBvF,EAAS0Z,OAAT,OAA6BvZ,EAAAkM,KAAA9G,IAfrBvF,EAAU0I,OAAO,OAAQ,MAqB/BvI,EAAG0B,sBAAA1B,EAA2B2J,KAAKmK,IAdnCrG,aAAa6X,QAAQ,aAActlB,EAAGusB,YAmBpC9b,EAAAA,OAAQ0d,OAAanuB,EAAG2J,aAuC1B0E,EAAAA,YAAWA,EAAcuhB,YAEtB5vB,EAAA+tB,aAFH,WAfA/tB,EAAGqN,OAmBH+gB,KAwHFpuB,EAAGuoB,gBAAkB,WACnBlnB,EAAS,WACPrB,EAAGmoB,YAAc,GACjBnoB,EAAG4oB,QAAU4D,OAIjBld,EAAOkB,OACP9O,EAAa8O,KAAK+I,EAAgB/I,GAnWpC,GAAAqf,IAAA,SAAA,UAAA,eAAA,WAAA,YAAA,SAGA,eADA,eAGA,OAMA5wB,cAJA,cAMA,SASE,aAAA6wB,EAEA7wB,SAAIe,OAAK,SAATZ,WAAA,iBAAAywB;cCzBF,WAcC,QAXDE,GAAA7nB,EAAA7G,EAAAvB,EAAAwP,EAAA3F,EAAAjI,EAAAC,EAAAL,EAAAE,EAAA3B,GAgEI,QAAAmwB,GAAAC,GAKA,MAAoB,OAAjBA,EAFID,uBAATC,EAAmCnM,cAAA,UAG/B,KAKH,QAAAoM,KAED,GAAAlwB,EAAAmwB,aAAqBnwB,EAAA0P,IAAAtK,GACnB,MAAApF,GAAAowB,MAME,IAAIC,KAAJ,IAAArwB,EAAIqwB,IAAAA,IAAAA,EAAAA,CACJ,GAAGrwB,GAAA2J,EAAgB2mB,eAAAtwB,EAAA0P,IACjB2gB,GAAIE,KAAW5mB,GAIjB1K,QAAQsH,QAAQ8pB,EAAc,SAASE,EAAU9pB,GAAjDxH,GAAAA,GAAQsH,EAAQ8pB,EACdG,KACGA,EAAH1c,SAAY0c,GAGuEC,EAAAA,EAAYJ,EAAAA,KAD3F1uB,EAAA6O,KAAAggB,EAAA,KAAAjX,EAAA,WAAAlY,EAAA,WAAAovB,EAAAJ,EAAArwB,EAAA0P,YAOL,QAXD+gB,GAAAJ,EAAA3gB,GAaH1P,EAAAowB,SAKC,IAAIM,IAAW,CAHjBzxB,SAAAsH,QAASkqB,EAAYJ,SAArBE,EAAwC9pB,GAKpC,GAAI+pB,GAAUR,EAAWO,EAHxBH,GAAStc,SAAZ0c,KACAE,GAAIA,KAIAA,IACDzxB,QAAAsH,QAAA8pB,EAAA,SAAAE,EAAA9pB,GAKC,IAAA,GATJ+pB,GAAAR,EAAAO,GAOGG,EAAU/uB,EAAA4b,QAAAiT,GACXvxB,EAAgBoxB,EAAAA,OACVG,EAAAA,EAAAA,EAAAA,IAAUR,EAKZ,GAAuB,GAApBI,EAAO7b,GAAGsP,SAAbuM,EAAGA,GAAO7b,aAAV,GACE6b,EAAA7b,GAAAoc,aAAA,GACDP,EAAA7b,GAAAqc,aAAA,GAKER,EAAO7b,GAAGsc,aAAe,GAH5BT,EAAGA,GAAO7b,aAAP,GAKA6b,EAAO7b,GAAGuc,aAAe,GAAG,CAE7B,GAAIje,IAAWhD,EAAGugB,EAAO7b,GAGzB1B,GAAAA,GAAQzM,EAARmO,GAAmBnP,GACnByN,EAAAA,SAAQoD,SACRpD,EAAAA,WAAenR,SACfmR,EAAAA,KAAQ0P,EAAe6N,UAAUW,EAAjCxc,GAAAsP,OAAAuM,EAAA7b,GAAA4Y,aACAta,EAAAA,aAAevR,EAAY2gB,GAAAA,QAC3BpP,EAAAA,KAAQ0H,EAAcgW,UAASzM,GAC/BjR,EAAAA,YAAeud,EAAUhD,cAAzBva,EAAQ8S,KAAOyK,EAAO7b,GAAG6Y,eAG1BptB,EAAAowB,OAAA1pB,KAAAmM,MAKN7S,EAAAmwB,YAAAzgB,EAAAtK,IAiDD,QAAAmU,GAAAkB,IAIA,QAAG/Y,KACD,GAAAA,EAAI+O,YAAeyd,EAALpa,WAAd,CAAA,GAAIrD,GAAU9G,EAAKukB,cAGjBzd,GAAAA,MAAQ0d,EAAAA,KAAUxrB,QACnB8N,EAAA0d,OAAA,EAAA,EAAAnuB,EAAA2J,KAAA,IAED3J,EAAAA,KAAGsiB,EAAHtiB,EAAGsiB,QAAU3Y,EAAKqb,YAGlB,IAAAiJ,GAAA/W,OAAAzJ,aAAAxM,QAAA,aAEkBwP,OAAhBxR,GACEA,QAAGiP,QAAAuC,EAAYwd,SAAf/f,EAA8B0C,GAC5B5Q,GAAAA,EAAG0P,IAAMxB,EAGV,YAFClO,EAAA0P,IAAAxB,KAOPlO,EAAAwsB,cAID,QAAAhc,KAEEnP,EAAAA,WACDA,EACIsuB,GAC6ChmB,EAAhD6G,KAAA+I,EAAA,WAAAlY,EAAAsuB,KA9NN,GAAA3vB,GAAS+vB,IAEP/vB,GAAAsiB,WAGAtiB,EAAGwwB,QAAU,GADbxwB,EAAAA,UACAA,EAAAA,aAAA,EAEAA,EAAAA,aAAAwB,EAAAmM,OAAA,UAEA3N,EAAAA,WAAGwB,aAAeA,QAAamM,cAG3B3N,EAAGusB,aADPvsB,EAAGusB,WAAa9e,IAGf6B,EAAAkB,OAGE9O,EAAaoS,WADhBxE,IAGC5N,EACI8O,KAAA+I,EAAA,WAAAlY,EAAAmP,KACqDxQ,EAAAyvB,SAAxD,WACDpuB,EAAA,WAIMrB,EAAGwB,cAFPiuB,EAAWvvB,KAAAF,EAAAwB,aAAWtB,SAKtBF,EAAA2U,UAJD,WASA,IAAIjT,EAAaoS,WAGbpS,MADEA,GAAaukB,gBAFnBvkB,EAAIA,KAAaoS,EAAY,eAGzBpS,CAGF,IAAA6uB,GAAA5mB,EAAA2mB,eAAAtwB,EAAA0P,KACD8gB,EAAAR,EAAAO,EAID,UAAGC,GAFCD,EAAAA,SAAgBD,KAkGtBtwB,EAAGwsB,WAAa,WAGd,GAAA4D,GAAGA,GACD,IAAA,MAAAA,EACD,QAGC3iB,GAAAA,KAAAA,EAAAA,IAAa6X,IAAQ,GACtB7X,aAAA6X,QAAA,YAAAtlB,EAAA0P,IAAAtK,IACDqI,aAAa6X,QAAQ,aAActlB,EAAGusB,WAMpC,KAAA,GAHFiB,MACAwD,EAAItD,EAAJ/qB,OAEMqC,EAAAA,EAAIorB,EAAAA,IAARrpB,EAAA,CAAA,GAAI/B,GAAIorB,EAAOrpB,EAGb,IAAI4mB,IAAJ3tB,EAAAusB,WAAmBvsB,CACnB,GAAA2tB,GAAIA,EAAahrB,WAAQuT,MAAA,IACvByX,GAAAA,SACDA,GAAA3tB,EAAAusB,YAGC,KAAA,GADFsB,IAAQD,EACH5oB,EAAErB,EAAAA,EAAFgqB,EAAiBG,SAAWjF,EAC7BgF,GAAAA,EAAAA,MAAAA,EAAWlqB,KAAXmqB,WAAAjF,cAAA9S,QAAA4X,EAAAC,GAAA/E,iBAAA,EAAA,CACAgF,GAAA,CACD,OAID,IAAAA,EACD,SAID7tB,EAAA0P,IAAAtK,IAAA,IAAApF,EAAA0P,IAAAif,WAAA3pB,EAAAud,eAIHiL,EAAA9mB,KAAA1B,GAEF,MA3CDwoB,IA5JFvuB,QAAAO,OAAA,SAAAsB,UAAA,uBAAA,WAGE,OADF7B,SACEqD,kBACED,IAAAA,OACAC,KAAAA,SAEEqH,YAAM,UAAA,WAAA,aAAA,SAAA,OAAA,eAAA,UAAA,cAAA,eAAA,YAAAomB,GAFU3uB,aAFb,cAMLhC,YAAAA;cCVJ,WAGAH,QAAAA,KAGE,OADFgyB,SAASC,IACP7uB,SACE4uB,kBACA5uB,IAAAA,OACAC,SAAAA,aAEE6uB,YAAAA,+BAFgB/vB,aAHb,OAOLjC,YACAiC,UAAAA,YARK,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YASLhC,IAMJ,QAAAgyB,GAASA,EAAsBlpB,EAAQrI,EAAUkI,EAAa1G,EAASvB,EAAW6B,EAAAA,EAAaL,EAAYsI,GAmCvG,QAAA2P,GAAAkB,IAlCFxa,KAAAiuB,aAAA,WAGE,IAAA,GAFA5L,GAAIA,EAAU3Y,eACd0nB,KACItT,EAAA,EAAIA,EAAAA,EAAMuE,SAAQ3f,EACpBgH,EAAGA,eAAK2mB,EAAehO,KAApBriB,KAAmCqxB,MACpCD,EAAAA,KAAU3qB,EAAK4b,GAGnB,OAAA+O,IAGFpxB,KAAAsxB,YAAA,WACE,MAAA5nB,GAAOA,eAGT1J,KAAAwiB,WAAA,SAAkB+O,GAEhB,IAAA,GADAlP,GAAIA,EAAU3Y,aACVoU,EAAA,EAAIA,EAAAA,EAAMuE,SAAQ3f,EACpB,GAAA2f,EAAGA,GAAQvE,EAAR5N,aAAAqhB,EACD,MAAAlP,GAAOA,GAAA3e,MAKb1D,KAAAqoB,OAAA,SAAc5Y,GACZzP,KAAAyP,IAAAA,EACAA,GACEzP,KAAAkxB,YAMJxnB,EAAA6G,KAAA+I,EAAwBkB,GAtD1Bxb,QAAAO,OAAA,SAAAsB,UAAA,mBAAAowB;cCDA,WAGAO,QAAAA,KAAAxyB,OAIIgyB,SAAU,IAFd5uB,SACEC,kBACE2uB,SAAU,YACV5uB,IAAAA,OACAC,YAAAA,eACEovB,SAAAA,aAEAC,YAAAA,uCACAxwB,WAAAA,EAJgBC,aAHb,QAAA,QAAPqwB,GAAAjwB,EAAA0G,EAAAxG,EAAAkwB,GAiBA,GAAI5xB,GAAKC,IAETD,GAAGgO,WAAaxM,EAAawM,WAF7BhO,EAAA6xB,WAAA,EAEA7xB,EAAAA,WAAA,SAAgBwB,GAChBxB,MAAG6xB,GAAAA,aAISC,EAAOpkB,aAAfokB,EAAQA,cAMX9xB,EARD2U,UAAA,WAUE,OAAQjT,EAAaqwB,QAEtB/xB,EAHDgyB,YAAA,SAAAF,GAIGE,EAAAA,WAEDhyB,EAAA6xB,WAAA7xB,EAAgB6xB,UAEd3pB,EAAAiC,SAAA,EAAA,IAKCnK,EAAG+O,KAAO+iB,IAAb9xB,EAAA+O,IAAA+iB,EAAArkB,aAAG6X,QAAH,uBAAqBwM,EAAAnuB,MAEnB8J,EAAAA,UAGEzN,EAAGmB,aAIRnB,EAlBDiyB,QAAA,SAAAH,GAoBE,MAAGA,GAAOI,IADTD,EAAU/R,UAAiB4R,EAAAI,KAAApO,cAIvB8N,EAAAO,QAAAL,EAAAnuB,OA/DT8tB,EAAA9qB,SAAA,eAAA,UAAA,eAAA,cAAA1H,QAAAO,OAAA,SAAAsB,UAAA,qBAAAsxB;cCDA,WAGAnzB,QAAAA,GAAec,EAAmBF,EAAAyP,GAGhC,OADF2hB,SAASoB,IACPhwB,OACE4uB,KAAAA,SAEE9sB,YAAM,kCADDmuB,KAFF,SAAAve,EAAAjH,EAAAylB,GAMLD,EAAM9c,OAAA,OAASzB,SAAQjH,EAASylB,GAGxBvb,IADNjD,EAAOyB,UAAPzB,EAAsBye,aAIrBze,EAJDye,QAAA,WAOE,GAAGze,EAAO5P,MAAQ4P,EAAO5P,KAAKwhB,KAAO,EAAG,CAD1C5R,GAEI0e,GAFJ1e,EAAiB9J,KAAAyoB,MAAW3e,EAAA5P,KAAAwhB,KAAA,IAAA,EAYxB,OARA8M,GAC2B,UAAxB1e,EAAO5P,KAAKiC,SADXqsB,YAIC,WAIFE,EAAY,EAAZA,EAAYA,EAAG,OAIhBF,EAAOA,IAAAE,EAAA,OAGX,MAAA,OAGF5e,EAAAA,UAAAA,EAAmBA,UAEnBA,EAAAA,gBAAA,WACE,MAAAA,GAAGA,MAAAA,EAAeA,KAAO5P,KAAP,EACP4P,EAAO5P,KAAKwhB,KAAO,GAAM,GAAlC,EAEF,GAGF5R,EAAAA,gBAAA,WACE,MAAAA,GAAGA,MAAAA,EAAeA,KAAO5P,KAAP,EACoC,GAApD8F,KAAQA,MAAY8J,EAAO5P,KAAKwhB,KAAO,IAAO,IAA9C,EAEF,KAtDR1mB,QAAAO,OAAA,SAAAsB,UAAA,iBAAA,mBAAA,YAAA,SAAAuxB;cCDA,WAGApzB,QAAAA,GAAec,EAAmBF,EAAAyP,GAGhC,OADF2hB,SAAS2B,IACPvwB,OACE4uB,KAAAA,QACA5uB,QAAO,YAELwwB,YAAS,kCAFJP,KAFF,SAAAve,EAAAjH,EAAAylB,GAMLpzB,EAAAA,SAAa,gBAAAmQ,EAAAmX,YANRnX,OAAA,MAAAvP,EAAAklB,WAAAlR,EAAA5P,MASH4P,EAAAyB,OAAA,OAAA,SAAAwB,EAAAC,GAGMD,IADNjD,EAAOyB,SAAP,gBAA+BwB,EAAUC,YAAU3H,OAAA,MAAAvP,EAAAklB,WAAAlR,EAAA5P,WAhBzDlF,QAAAO,OAAA,SAAAsB,UAAA,iBAAA,mBAAA,YAAA,SAAA8xB;cCDA,WAGA3zB,QAAAA,KAGE,OADFgyB,SAAS6B,IACPzwB,SACE4uB,kBACA5uB,KAAAA,QACAC,MAAAA,UAEEywB,YAAO,iCAFS3zB,WAHb4zB,EAOL7zB,aAAAA,QAIH,QAAA6zB,KAED/yB,KAAA8yB,OAGI9yB,KAAKgzB,UAAY,cADnBhzB,KAAGizB,SAAY,GACbjzB,KAAAkzB,WAAA,IAGDlzB,KAJDgzB,UAKK,cACHhzB,KAAAizB,SAAA,GACAjzB,KAAAkzB,WAAgB,GAIlBlzB,KAAKmzB,gBAAkB,WAAvB,MAAAnzB,MAAKmzB,MAAAA,KAALjvB,KAAuB0L,GAAA5P,KAAWkE,KAAA0L,EAAAwjB,QAAA,EACxBlvB,KAALA,KAAa0L,EAAAwjB,QAAb,EAA4BpzB,KAAAizB,SAAAjzB,KAAyBkzB,WAEvD,GAIHlzB,KAAKqzB,gBAAkB,WAAvB,MAAArzB,MAAKqzB,MAAAA,KAALnvB,KAAuB0L,GAAA5P,KAAWkE,KAAA0L,EAAAwjB,QAAA,EAC7BppB,KAAAyoB,MAAazyB,KAAKkE,KAAlB0L,EAAAwjB,QAA4B,GAAYA,KAAZH,SAAyBjzB,KAAAkzB,WAEvD,GAzCLl0B,QAAAO,OAAA,SAAAsB,UAAA,gBAAAgyB;cCDA,WAGA7zB,QAAAA,GAAe0C,EAASb,EAAUO,EAAiBiO,GAEnD,OACE2hB,SAAA,IAGEsC,YAAY,EAFdlxB,OACE4uB,YADK,gBAGL5uB,YAAO,gCACLmxB,KAAAA,SAAAA,EAAa1mB,EAAAylB,GADRxe,EAHF0f,IAAA,yBAAA,WAMLt0B,EAAAA,iBAGI4U,EAAAA,IAAO2f,qBAAP,WACD3f,EAFD2f,iBAKE3f,EAAAA,IAAO2f,qBAAP,WACDryB,EAFD,WAMI0S,EAAO4f,WAAY,MACpB5f,EAFD0f,IAAA,yBAAA,WAGDpyB,EAJD,WAQI0S,EAAO4f,WAAY,MACpB5f,EAFD6f,WAAA,EAGD7f,EAJD2f,aAAA,WAQE3f,EAAOgS,UAAYzW,EAAOmX,WAD5B1S,IAAAA,GAAO2f,EAAAA,YACL3f,GAAAD,YAEA+f,KAOK9f,EAAO6f,WAAaC,IAAM9f,EAAO+f,eADtC/f,EAAA+f,YAAAD,GAEI9f,EAAAA,WAAA8f,EAEF9f,KAGHA,EAhBD4f,WAAA,EAmBA5f,EAAO2f,iBAtDbz0B,QAAAO,OAAA,SAAAsB,UAAA,gBAAA,UAAA,eAAA,WAAA,SAAAizB;cCDA,WAGA90B,QAAAA,KAEA,OACEgyB,SAAA,IAGEqB,KAAM,SAASjwB,EAAOyK,EAASylB,GAFjC,GAAAyB,IAAO,CACL/C,GAAAA,GAAU,QADL,SAAAgD,GAEL3B,IAAM0B,EACJ,IAEE/zB,KAAK+zB,eAAgB,EACnB/zB,KAAIi0B,aAAAj0B,KAAAiO,MAAAvL,OAAA,EACFqxB,GAAA,EACA,MAAKG,GAELH,KAAAA,SACDA,GAAa,KAKflnB,EAAAsnB,GAAA,OAAA,SAAAH,GACFD,GAbD,MAVN/0B,QAAAO,OAAA,SAAAsB,UAAA,yBAAAuzB;cCDA,WAGAp1B,QAAAA,GAAeqC,EAASR,GAGtB,OADFmwB,SAASqD,IACPjyB,OACE4uB,MAAAA,SACA5uB,MAAO,SACL6E,SAAO,YACP3G,UAAO,aACPg0B,OAAAA,UACAC,SAAAA,aAEAC,KAAAA,SAAU1gB,EAAAjH,EAAAylB,GAeV,QAASmC,KAcP,QAASC,GAAOC,GAAhB,GAAAC,GAAgBD,EAAME,OACpBD,GAAIA,IAAAA,UAAa/nB,GACjB+nB,EAAAA,KAAAD,GAGAG,EAAYC,MAAMH,GAAlBE,EAAYC,EACZD,EAAAA,KAAcF,GApBlB/nB,EAAAmoB,IAASP,UAAY,OACnB5nB,IAAAA,GAAQmoB,EAAI/tB,KACZA,KACAA,EAAIA,EAAOqtB,UAIXt1B,QAAQsH,QAAQ2uB,EAAe,SAAShnB,EAAO0C,GAA/C3R,EAAAA,UAIA,IAAIk2B,IAAQ,EAAZJ,EAAAjoB,EAaAsoB,IACAn2B,SAAIm2B,QAAAA,EAAAA,SAAJlpB,EAAA0E,GACA3R,GAAAA,GAAQsH,EAARW,MAAuBgF,EAASA,GAC9BmpB,IAAIA,EAAM/zB,aACV8zB,EAAcE,EAAAA,YAAYppB,KAK5BjN,QAAQsH,QAAQW,EAAO,SAASgF,EAAM0E,GAAtC3R,GAAAA,GAAQsH,EAKN,IAAG2F,EAAK9G,KAAM9D,GAAY4F,MAAO,CAE/B,GAAImuB,GAAM/zB,EAAY4F,MAAMgF,EAAK9G,GAAjC,KAAA2O,EAAIshB,QAAM/zB,QAAkB4K,IAA5BmpB,EAAA/b,KACA,MAIA,IAAGvF,EAAO7P,SAAWmxB,EAAIthB,EAAO7P,QAAhC,MAIA,IAAGmxB,EAAIC,WAAP,MAmBA,IAdIH,IAAJI,GAAAC,GAECL,GAAA,EAGE,cAAgBjpB,KAAnBA,EAAGupB,YAAgBvpB,EAAMuoB,WACvBc,GAAQE,KAEPF,GAAArpB,EAAAupB,WAAA,UAIHF,GAAU,WAEPxhB,EAAOxT,MAAV,GAAiB,WAAjB80B,EAAGthB,QAAc,CACf,GAAGshB,GAAIvoB,CACLiH,GAAIhH,MAAJD,UACAC,EAAGgH,EAAOxT,MAAMuM,QAAS1H,IAExBmwB,GAAA3D,EAAAO,QAAA7wB,EAAA0L,SAAAD,GAAApJ,MAAA,aAJH,IAOYmJ,aAPZuoB,EAOKvoB,QAAkB,CACrB,GAAAC,GAAIA,CACJgH,GAAGA,MAAOxT,mBACRwM,EAAAA,EAAQgH,MAAOxT,iBAAM4M,IAEvBooB,GAAAA,EAAU3D,QAAWO,EAAQ7wB,SAAY0L,GAAZrJ,MAAnB,SAed,GAXA4xB,GAAAA,EAAU3D,QAAWO,EAAQkD,MAAnB,mBAA6BA,EAA7BK,QAAoDA,GAC9DL,EAAGA,YAAA,GACDp2B,QAAAA,QAAQsH,EAAR,SAAuBovB,EAASA,GAC9BA,EAAGA,IAAAN,EAAYA,aACbM,EAAGA,KAAAzpB,EAAaA,MACdqpB,GAAAA,IAAUF,EAAMA,QAAIK,MAM5BxpB,EAAGA,KAAAkpB,GAAWA,CACZ,GAAAQ,GAAIA,EAAQR,EAAgBlpB,GAE5BqpB,IAAAA,oBADIM,EAAOv0B,MAAY4F,EAAM0uB,IACGC,QAAKH,GACrCH,GAAAA,aAODJ,KACDA,GAAQK,GAERL,GAAG,EAEF,cAAAjpB,KADCqpB,GAAUrpB,EAAKupB,WAAa,oBAG9BF,GAAUrpB,EAAK9G,GAAG,UAAU8G,EAAKE,GAKtCuoB,GAAAY,KApIHjD,GAAAA,EAKGkD,GAFGzhB,EAAOygB,UAAX,SAGKzgB,EAAAygB,UAAA,IAJDgB,EAQJ,IAAIN,MAAJY,EAAoBhpB,EAApBmoB,IAAA,UA8HIP,GAAAA,OAAAA,QAAAA,SAAAA,EAAAA,GACD1d,GAHH0d,MAQIA,EAAAA,OAAAA,WAAAA,SAAAA,EAAAA,GACD1d,GAHH0d,MAQIA,EAAAA,OAAAA,WAAAA,SAAAA,EAAAA,GACD1d,GAAA,GAHH0d,QAjKNz1B,QAAAO,OAAA,SAAAsB,UAAA,cAAA,cAAA,aAAAwzB;cCDA,WAGAr1B,QAAAA,KAGE,OADF82B,QAASC,UACP1D,KAAA,SAAOjwB,EAAAyK,EAAAylB,EAAA0D,GACLF,EAAAA,SAASrvB,KADJ,SAAAwH,GAELokB,MAAM,GAAApkB,IAEF+nB,EAAAC,YAAYhoB,KAAZ,SAAAA,GACD,MAFDioB,YAAAjoB,EAAA,QARNjP,QAAAO,OAAA,SAAAsB,UAAA,sBAAAk1B;cCDA,WAGA/2B,QAAAA,KAGE,OADF82B,QAASC,UACP1D,KAAA,SAAOjwB,EAAAyK,EAAAylB,EAAA0D,GACLF,EAAAA,SAASrvB,KADJ,SAAAwH,GAELokB,MAAM,GAAApkB,EAAS7L,MAEX4zB,EAAAC,YAAahoB,KAAM,SAAnBA,GACD,MAFD,KAAAioB,WAAAjoB,EAAA,QARNjP,QAAAO,OAAA,SAAAsB,UAAA,uBAAAk1B;cCDA,WAIA,QAASI,GAAmBC,GAExB,OAFJpF,SAAA,IAIMqB,KAAM,SAAUve,EAAQjH,EAASylB,GAK/B,GAAA+D,GAAAD,EAAA9D,EAAA,YAOIgE,EAAU,SAAUvxB,GADxB+O,EAAAyiB,OAAA,WAKIF,EAAAviB,GAAAkgB,OAAAjvB,EAAAzC,MAAAyC,EAAAxC,OAAAD,UAKHuK,GAAA,GAAA2pB,iBATD,SAAAF,GAAA,KApBRt3B,QAACO,OAAY,SAAAsB,UAAA,cAAA,SAAAs1B;cCAb,WAIA,QAASvsB,GAAUlI,EAAQiI,EAAkBD,EAAKrI,GAMhD,QAAIo1B,GAAajc,IAPnBxb,GAAAA,GAAe,iCACf03B,EAAS9sB,gCAIH+sB,EAAe,kCADnBF,EAAe,uBAQb,QACDlmB,KAAA,SAAAqmB,GAGGltB,EAAK6G,KAAK+I,EAAgBsd,GAF9Bl1B,EAAO6O,KAAAsmB,EAAAltB,EAAAmtB,wBAAAxd,EAAAsd,GAAA,GACLrmB,EAAMA,KAAAmmB,EAASE,EAAUG,kBAAAzd,EAAAsd,GAAA,GACvBltB,EAAK6G,KAAK+I,EAAV3P,EAAAqtB,sBAAA1d,EAAAsd,GAAA,GACAl1B,EAAAA,KAAQ6O,EAAKsmB,KAAgBltB,EAAAA,GAAkBmtB,GAC/Cp1B,EAAAA,KAbe,kCAaQiI,KAAAA,EAAkBotB,GAAmBzd,IAG5D5X,aAAQ6O,SAAK0mB,GAEd,GATI3nB,KAYH,IAAGmB,EAAY,EAAG,CAFpBc,GAAAA,GAAc7P,EAAAw1B,SAAAT,EAAShmB,KAAWA,EAChC,IAAA,GAAAjK,EAAI8I,OAAJ,CACA,GAAGmB,GAAAA,EAAH0mB,OAAkBV,EAAAjwB,EAAA,GAChB,IAAA6N,EAAI7N,CACJ,GAAGA,GAAM9D,EAAaw0B,SAvBT,kCAuBS,cAAA7iB,EAAA+iB,mBACpB,IAAgBD,GAAhBE,EAAQ31B,OAAe+0B,CACvB,GAAAriB,GAAM1S,EAAAy1B,OAzBK,kCAyBLE,EAAA,GACJjjB,KACA9E,EAAU5M,EAAa0V,SAAAhE,OAOxB,MAAA9E,IAELuB,YAAOvB,SAAPuS,GAED,GA7BIA,EAAA,EAAA,CAgCD,GAAIrb,GAAQ9E,EAAQw1B,SAASR,EAAU,KAAM7U,EAFjDhR,IAAa,GAAbA,EAAAA,OACE,MAAGgR,GAAWsV,OAAAT,EAAAlwB,EAAA,IAKX,UAEH0K,eAAA,SAAAkX,GAED,GAxCIA,EAAA,EAAA,CA2CD,GAAI5hB,GAAQ9E,EAAQw1B,SAASL,EAAgB,KAAMzO,EAFvDlX,IAAgB,GAAhBA,EAAAA,OACE,MAAGkX,GAAW+O,OAAAN,EAAArwB,EAAA,IAKX,UAEH4K,aAAA,SAAAyQ,EAAAuG,GAED,GAnDIvG,EAAA,GAAAuG,EAAA,EAAA,CAsDD,GAAI5hB,GAAQ9E,EAAQw1B,SAASP,EAAc,KAAuB,IAAhB1f,OAAOmR,GAAgBnR,OAAO4K,GAAS,IAF7FzQ,IAAc,GAAdA,EAAAA,OACE,MAAGyQ,GAAauG,OAAAA,EAAW5hB,EAAA,IAKxB,WA1EToD,EAAAlD,SAAA,UAAA,oBAAA,OAAA,eAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,YAAA1tB;cCDA,WAIA,QAASD,KADT3K,OACAokB,SACEQ,QAAO,EAAAJ,eAAA,EAAA0J,aAAA,EAAAxJ,oBAAA,EACLN,MAAAA,EAAStH,YAAA,EAAAyb,YAAA,EAAAC,YAAA,EAAA9V,YAAA,EAAA+V,cAAA,EAAAjW,MAAA,EACPoC,QAAAA,EADO8T,aACOlU,EAAemU,YAAMzK,EACnClK,QAAM,EAAKlH,aAAY,EAAKyb,YAAY,EACxCK,QAAAA,EAHOC,aAGOH,EAHPI,YAG0BH,EACjCI,QAAAA,EAJOC,aAIOC,EAJPC,YAI0BC,EACjCC,QAAAA,EALOC,aAKOR,EALPS,YAK0BR,EACjCS,QAAAA,EANOC,aAMOR,EANPS,YAM0BP,EACjCQ,QAAAA,EAPOC,aAOON,EAPPO,YAO0BN,EACjCO,QAAAA,EAROC,aAQON,EARPO,YAQ0BN,EACjCO,QAAAA,EATOC,aASON,EATPO,YAS0BN,EACjCO,SAAAA,EAVOC,cAUON,EAVPO,aAU0BN,EACjCO,WAAQ,EACRC,SAAAA,EACA9a,iBAbO,EAAA0F,cAAA,EAAAqV,cAAA,EAAArM,gBAAA,EAAA/I,QAAA,EAAA7F,eAAA,EAAAM,gBAAA,GAeP4a,UAfOC,WADJ,GAmBHA,YADQjb,WAlBL,EAAAjH,cAAA,EAAAmiB,cAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAzhB,UAAA,EAqBLX,cAAY,EACV+G,aAAW,EADDwD,gBACoB,EAAK0X,aAAAA,EADzBxX,gBACwD,EAAK0X,aAD7D,EAC2EC,gBAAczhB,EAAU0hB,aADnG,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAEVzb,QAAAA,EAAAA,aAFU,EAAAqZ,QAAA,EAAAqC,aAAA,EAAAhC,QAAA,EAAAiC,aAAA,EAAA9B,QAAA,EAAA+B,aAAA,EAAA5B,QAAA,EAAA6B,aAAA,EAAA1B,QAAA,EAAA2B,aAAA,EAAAxB,QAAA,EAAAyB,aAAA,EAAAtB,QAAA,EAAAuB,aAAA,EAAApB,QAAA,EAAAqB,aAAA,EAAApB,SAAA,EAAAqB,cAAA,GAIVhD,cAJU9d,aArBP,EAAA+gB,aAAA,EAAAC,gBAAA,EA2BLnhB,QAAAA,EAAAA,aAAe,EACbG,QAAAA,EAAAA,aAAmB+gB,EACnBjD,QAAAA,EAAQyC,aAAKU,EACbhD,QAAAA,EAAQuC,aAAKF,EACbhC,QAAAA,EAAQmC,aAAKF,EACb9B,QAAAA,EAAQiC,aAAKF,EACb5B,QAAAA,EAAQ+B,aAAKF,EACb1B,QAAAA,EAAQ6B,aAAKF,EACbxB,QAAAA,EAAQ2B,aAAKF,EACbtB,SAAAA,EATayB,cASAF,EACbpB,SAAAA,EAVa0B,cAUAL,EACbpB,SAAAA,EAAS0B,cAAKL,EACdM,SAAAA,EAASC,cAAKH,EACdI,SAAAA,EAASC,cAAKJ,EACdK,SAAAA,EAASC,cAAKJ,EACdK,SAAAA,EAASC,cAAKJ,GAEdK,QAjBa1Y,MA3BV,GA+CHA,OAAAA,KADM/H,SA9CH,KAiDL0gB,SACA1gB,SAAAA,EAlDK2gB,WAAA,EAAAC,WAAA,EAAAC,WAAA,EAAA5rB,aAAA,EAAAkjB,SAAA,GAoDH2I,uBADOC,UAnDJ,EAAAC,SAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,QAAA,GAuDHL,mBADqBM,OAtDlB,EAyDLvF,UAAAA,EACEuF,WAAO,EACPC,cAAU,EACVC,iBAHiB,GAKjBC,yBALiBC,IAzDd,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,oBAAA,EAAAC,OAAA,EAAAC,iBAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,mBAAA,EAAAC,WAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,sCAAA,IAJT7+B,QAAAO,OAAA,SAAA+3B,QAAA,qBAAA3tB;cCDA,WAGA3K,QAAAA,GAAe8+B,EAASxG,GAExB,QAAS51B,GAAQo8B,EAAW18B,EAAU28B,GAgGlC,OA3FEp7B,OAAQ,GAAIq7B,WAAZr7B,QAAAA,EAGAqjB,gBAAgB,EAAhBA,KAAAA,EAEAiY,YANWzX,EASX0X,iBAAkB,KADlB1X,qBAEA2X,KAAAA,SAAAA,EAVWvH,EAAAwH,GAYX7tB,GAAAA,KAAMuhB,OAGC8E,GADLA,QAWE,IAPD52B,KAJDk+B,iBAKKxqB,EACHkjB,GACA52B,KAAG42B,kBAAUnwB,KAAAmwB,IAIT52B,KAAKgmB,eAAgB,CAAzBhmB,KAAIgmB,gBAAKA,CACP,IAAAzE,GAAKyE,IAGLhmB,MAAK2C,OAAOo7B,WAAaA,EAEtB/9B,KAAKwmB,aAARxmB,KAAGwmB,YAAKA,KAENxmB,KAAKwmB,YAAYne,IAAI3F,SAErBo7B,EAAWO,WAAW,sBAGpB9c,EAAE5e,WAGE4e,EAAA5e,OAAG4e,sBACDA,EAAAA,YAAE2c,IAAAA,IAAFD,EACD,SAAAzjB,GAEH+G,EAAA2c,kBACE3c,EAAA2c,iBAAA1jB,IAGAxb,SAAAA,EAAA+D,GAEIkL,EAAAA,QAAAA,EAEHjP,QAJDsH,QAAAib,EAAA4c,kBAAA,SAAAlwB,EAAA0C,GAKEwtB,GACFL,MAIAvc,EAAA4c,qBACE5c,EAAA8c,WAAA,uBAEAr/B,SAAAA,GACEuiB,EAAA+c,QAAGrwB,EACDA,GACDsT,EAAAuQ,QAAA,EACFtvB,QAJDgD,IAAA,mEAKA+b,QAAE4c,QAAAA,EAAAA,kBAAF,SAAAlwB,EAAA0C,GACAmtB,GATF7vB,MAcE6vB,EAAAA,qBACDA,EAAAO,WAAA,wBAIJ9c,EAAAyE,gBAAA,EACHzE,EAAAuQ,QAAA,EACDgM,EAAAO,WAAA,8BAYTlrB,MAAOorB,WACRv+B,KAAA2C,OAAA,GAAAq7B,WANKh+B,KAAK8xB,QAAS,EAQpB9xB,KAAOgmB,gBAAA,IAOH,OACAhnB,WACEw/B,eACEvwB,YAAMuY,KAEPyF,YAAA,SAAAhG,GACFjmB,KALDwmB,YAAAP,CAMD,IAdI1E,GAAAvhB,IAQHhB,SAAQsH,QAAQtG,KAAKy+B,QAAS,SAASxwB,EAAO0C,GAQhDJ,EAAOiW,aAAUzjB,IACfkL,EAAGmwB,YAAiBnY,EAClBmY,EAAAA,MAAAA,OAKD7tB,KAAA,SAAAxN,EAAAg7B,EAAArqB,EAAAkjB,EAAAwH,GACDA,KAAiB,IACfA,GAAY17B,GAGbgR,IACDA,EAAK+qB,cAEPnhB,IAAUtd,MAAAy+B,SACR17B,EAAQ8Q,OAAS9Q,IACf/C,KAAI2C,QAASI,GAAA27B,EAAuB/7B,KAApC6jB,YAAAzjB,EAAAg7B,IAGEt5B,KAAAA,QAAOqC,GAAKnE,KAAOw0B,EAAnBP,EAAAwH,IALN9gB,QAAU,SAAUva,GAQhB,GAAA/C,KAAA6T,SAAA9Q,GAAA,CAID,IAAA,GAXDJ,GASK3C,KAAAy+B,QAAA17B,GAAAJ,OACH8B,EAAA,GAAAk6B,OAAAh8B,EAAAi8B,SACD93B,EAAA,EAAAA,EAAAnE,EAAAi8B,UAAA93B,EA3CErC,EAAAqC,GAAAnE,EAAAw0B,OAAArwB,EA+CH,OAAIrC,GAGFA,UAGFI,KAAA,SAAOJ,EAAPo6B,EAAA5wB,GAIA,IAAA,GAzDG0a,GAAA3oB,KAAAk3B,SAAAn0B,EAAA87B,EAAA5wB,GAuDLipB,KAPM4H,EAAanW,EAAQjmB,OAStBoE,EAAA,EAAK+M,EAAAA,IAAS9Q,EACf0B,EAAGgC,KAAE1D,KAAAA,OAAYA,EAAKy7B,EAAa13B,IALrC,OAAOrC,IAULyyB,SAAI6H,SAAAA,EAAkBC,EAAAA,GAEtB,GAAAh/B,KAAIi/B,SAAAA,GAAiBT,CAPhBz7B,IAAY/C,MAAKw+B,cAStBx+B,KAAGw+B,YAAYS,MALf,IAAIt8B,GAAS3C,KAAKy+B,QAAQ17B,GAAUJ,OASlCo8B,EAAIpW,EAAJqW,cAAAH,GAEAI,EAAWt8B,KAAAA,YAAXI,EAEA,MAAA87B,IAAQ/f,IAAR,CACE,GAAAtY,KACAy4B,GAAIC,GAAQH,CAOX,KAAA,GAHAzzB,GACI3I,EAAA2I,KACH9E,EAAAA,EAAA9D,OACDoc,EAAA,EAAAA,EAAA3R,IAAA2R,EAAA,CACF,GAAAlP,GAAAtE,EAAAwT,GACFogB,EAAAtvB,EAAAmvB,EAEE9wB,KAASgxB,GAKXz4B,EAAA04B,GAAAz4B,KAAAqY,GAJCtY,EAAOy4B,IAAAA,IASbprB,MAAAA,KAAWorB,GAAAJ,GACF97B,EAAY87B,GAAKJ,MAOzB,UAEC5qB,SAAG9Q,SAAYA,GACb,MAAAA,KAAaA,MAAAA,SAAb/C,KAAAy+B,QAAA17B,GAAA+uB,QAEAqN,UAAA,SAAYX,GACb,MAAAz7B,KAAA/C,MAAAy+B,SAAAz+B,KAAAy+B,QAAA17B,GAAAu7B,QAEHc,kBAAW,SAAAr8B,GACT,MAAIwe,MAAI1N,SAAR9Q,IAAAA,IAAA/C,MAAAy+B,SAAAz+B,KAAAy+B,QAAA17B,GAAAijB,gBAEEzE,MAAEpO,SAAFpQ,GADFA,IAAA/C,MAAAy+B,UApHGz+B,KAAAy+B,QAAA17B,GAAAoQ,cAwHLa,MAAayqB,QAAA17B,SACPwe,MAAJid,YAAAz7B,KAGEq8B,SAAInxB,WACFiJ,GAAAA,GAAAA,IACDlY,SAAAsH,QAAAtG,KAAAy+B,QAAA,SAAAxwB,EAAA0C,GACF4Q,EAJDpO,MAAAxC,MAODqD,WAlII,WAmILqrB,GACEnoB,GAAQrD,CAQR,OAPE7U,SAAAsH,QAAYm4B,KAAAA,QAAQ17B,SAAUJ,EAAOi8B,IADvC3wB,EAGK6jB,QAAA7jB,EAAA+X,gBACH9O,MAICA,GAEFmoB,WACI,SAAAt8B,GACH,MAAA/C,MAAA6T,SAAA9Q,GACD/C,KAAAy+B,QAAA17B,GAAAJ,OAAAi8B,QAGE,GAIDzH,OAAA,SAAAp0B,EAAAyD,GACD,MAAAxG,MAAA6T,SAAA9Q,GAzJE/C,KAAAy+B,QAAA17B,GAAAJ,OAAAw0B,OAAA3wB,OAiKF84B,YAAA,SAAAv8B,EAAAuI,EAAAi0B,GACF,MAlKIv/B,MAAA6T,SAAA9Q,GAmKLy8B,EAAWx/B,KAAAy+B,QAAA17B,GAAAJ,OAAA88B,YAAAF,IAIJ,MAGNG,YAAA,SAAA38B,EAAAuI,GA1KH,MAAAtL,MAAA6T,SAAA9Q,GA4KD/C,KAAAy+B,QAAA17B,GAAAJ,OAAA+8B,YAAAp0B,GAZc,MAGXk0B,SAAW,SAASz8B,EAAUyD,EAAO+4B,GACnC,MAAGv/B,MAAK6T,SAAS9Q,GACR/C,KAAKy+B,QAAQ17B,GAAUJ,OAAO68B,SAASh5B,EAAO+4B,GAG9C,OA/QfvgC,QAAAO,OAAA,SAAA+3B,QAAA,WAAA,aAAA,WAAA51B;cCDA,WAIA,QAASolB,GAAQvmB,EAAMmJ,EAAKhI,EAAQ0V,GADpCpY,MAAAA,UAAe0U,GA2BV,QAlBDisB,GAAAn5B,GAoBAA,EAASm5B,EAAYn5B,OAGjBo5B,EAAap5B,GAAO+J,KAAKmD,EAAU,WADlClN,EAAQo5B,GAAal9B,aACtBk9B,YAAAA,GAAyBlsB,IACvBA,EAAGksB,eAAoB/rB,EAAYrN,GAAAzD,UAE/B2Q,EAAAA,EAAS,MAKhBA,EACI,4BAvCTA,EAAO,gBAELA,IAAAA,IAAShK,EAKT1K,SAAQsH,QAAQ/F,EAAO,SAAS2D,EAAMyM,GADlC+B,OAAJ/B,GACA3R,QAAQsH,QAAQ/F,EAAO,SAAS2D,EAAMyM,GACpC,GAAGA,EAAAA,QAAc,QAAAkvB,EAAAn9B,OAAA,EAAA,CACf1D,GAAAA,IACEuR,KAAGsvB,SAAansB,EAAUmsB,GACxBn+B,EAAIo+B,KAAAA,EAAa,KAAApsB,EAAAkjB,IAEbl1B,SAAAA,WACD,MAHcA,GAAAmS,SAAA5F,IAKblL,SAAAkL,EALa2xB,GAAjBn5B,KAAAq5B,QAiCRH,EAAY,IAhDhB3gC,QAAAO,OAAA,SAAA+3B,QAAA,WAAA,QAAA,OAAA,UAAA,cAAAxQ;cCDA,WAIA,QAASnlB,GAASpB,EAAOmJ,EAAMhI,GAD/B1C,MAAAA,YAEEA,QAAOsH,QAAA/F,EAAW,SAAAw/B,EAAAr8B,GAGdq8B,EAAO5sB,UACRzJ,EAFDyJ,QAKAzR,EAAQ09B,YAXZpgC,QAAAO,OAAA,SAAA+3B,QAAA,YAAA,QAAA,OAAA,UAAA31B;cCDA,WAIA,QAAS6G,KAIO,QAAdw3B,GAAA/zB,GAsBA,MAEY6K,GAAQ7K,EAAK9G,KAFzB,UAGE,QAAA86B,GAAAf,GACD,MAAA,KAAAA,EAOiB,QAAlBgB,GAAAj0B,GASI,GAAIk0B,GAAOC,EAAYn0B,EAAK9G,GAFhC,OAAAg7B,GACSD,EAAAA,EAAWj0B,KAEZk0B,EAAMh0B,IA3Cd,GAAI2K,IADJupB,EAAA,UAGIC,EAAG,UAFPC,EAAIzpB,UACA0pB,EAAG,UACHC,EAAG,cACHC,EAAG,cACHC,EAAG,cACHC,EAAG,cACHC,EAAG,WACHC,EAAG,WACHC,GAAG,WACHC,GAAG,WACHC,GAAG,UACHC,GAAI,YACJC,GAAI,WACJC,GAAI,SACJC,GAAI,WACJC,GAAI,SACJC,IAAI,eAcPnB,GAIGY,GAAIf,EAFRgB,GAAAhB,EACAiB,GAAId,EACAe,GAAIlB,EAYJ,QACHv3B,aAAA,SAAApI,EAAAJ,EAAAshC,GAIK,GAAIC,IAFHC,cAAAxhC,EACHwI,OAAc,0BACR+4B,QAAMnhC,EAAAmP,IAAAtK,GACNu8B,cAAexhC,EAAAA,UAEfyhC,KAAAA,GAAAA,KAASrhC,GAHH,CAINshC,GAAAA,GAAAA,EAAethC,EAJnBmhC,GAAAzB,EAAA6B,IAAA3B,EAAA2B,GAOI,MAAIA,IAEPC,cAAA,6CAnET9iC,QAAAO,OAAA,SAAA+3B,QAAA,mBAAA9uB;cCDA,WAIA,QAAS1I,GAAiBorB,EAAM3qB,EAAMmB,EAAQ0V,EAAY/V,EAAYsI,EAAkBrI,EAAWG,EAAaF,EAAa8N,GAD7HrQ,OAKIgmB,WAAY,SAAS9gB,EAAM4uB,GAF7B,GAAA5uB,EAAO,CAID,GAAIqQ,EAqDL,OAtDQ,UAATrQ,EAAAiC,UACEoO,EAAIA,UAIFvV,QAAQsH,QAAQpC,EAAK+C,MAAO,SAASgF,EAAMzF,GAD3C+N,GADCrQ,EAAKiC,EACO,IAGToO,KAGAA,GAAAA,EAAcpP,GAAd0oB,SAAA,IAAA,IAAA5hB,EAAAE,OALJjI,EAAAiB,KAUDoP,EAAOrQ,IAAHA,EAAYiB,GAAA0oB,SAAA,IAAA,KACftZ,cAAarQ,GACbqQ,GAAGrQ,EAAA8R,WAAH,gBAGQ9R,GAENqQ,GAAAA,EAAcrQ,aAGdqQ,EAAAA,WAEDA,GAAA,KAAArQ,EAAAnB,WAECwR,EAAAA,gBAAyCsZ,GAApB3pB,EAAKkH,kBAE3BmJ,GAAA,KAAArQ,EAAAkH,eAAAyiB,SAAA,KACCtZ,EAAAA,IAAAA,IAEDA,GAAA,KAAArQ,EAAAwV,IAAAmU,SAAA,KAICtZ,EAAAA,QAAc,IAEfA,GAAA,KAAArQ,EAAA8W,QAAA6S,SAAA,KACe,UAAdtZ,EAAAA,WAEDA,GAAA,KAAArQ,EAAAoW,aACC/F,EAAAA,MAEDA,GAAA,KAAArQ,EAAAqW,MAGDhG,EAAAA,OAAAA,IAEDA,GAAA,KAAArQ,EAAAR,KAAAV,QAAA,KAAA,KAAAA,QAAA,MAAA,MAGFuR,EAGF,MA5DI,IA8DHC,WAAItQ,SAAJuQ,GAAA,GAAIvQ,KAiEJlF,OA9DEA,IACEA,QAAG+iC,QAAQC,EAAR/rB,MAAqB,KAAK,SAAA8rB,EAAAE,GAC3B/9B,GAAmB69B,KAAnB79B,EAAA89B,OAAUE,GAEXh+B,EAHDiB,GAGK+8B,SAAWF,EAARG,OAAqB,GAAK,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd99B,EAAAA,eAAoB69B,SAAQI,EAAjBA,OAAX,GAAA,QAGAj+B,IAAsB69B,KAAtB79B,EAAA89B,OAAaE,GAEdh+B,EAHIwV,IAGGqoB,SAAQC,EAARG,OAAH,GAA6B,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd99B,EAAAA,MAAKoW,SAAcynB,EAAQI,OAAR,GAAnB,QAGAj+B,IAAW,KAAXA,EAAW69B,OAAQI,GAEpBj+B,EAHI8W,QAGG+mB,SAAQC,EAAaG,OAAK,GAAA,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd99B,EAAAA,YAAY69B,EAAQI,OAAUn/B,OAG9BkB,IAAA,KAAAA,EAAA89B,OAAA,GACA99B,EAAAqW,IAAI6nB,EAAaL,OAAAA,OAEf,IAAgBM,KAAhBN,EAAIO,OAAYD,GAChBn+B,EAAAA,WAAWuC,EAAK07B,OAAA,OAEdh2B,IAAYm2B,KAAZn2B,EAAK8K,OAAOqrB,GAFEp+B,EAAhBR,KAAAq+B,EAAAI,OAAA,GAAAn/B,QAAA,IAAA,SALC,IAWG,KAXH++B,EAWGA,OAAQC,GAAa,CAV3B99B,EAAK+C,QAYL/C,IAAAA,GAAA69B,EAAgBA,OAAA,EAChB/iC,SAAAA,QAAQsH,EAAe2P,MAAA,KAASD,SAAYrF,EAAK4xB,GAC/C,GAAAD,GAAGtsB,EAAAC,MAAsBD,IACvB9R,GAAAA,MAAK8R,MAEN7Q,GAAA+8B,SAAAI,EAAA,GAAA,IAJHn2B,IAAA8K,OAAAqrB,EAAA,YAH2B,KAArBP,EAAQC,OAAO,KAxGxB99B,EAAAnB,SAAAg/B,EAAAI,OAAA,GA2GGnjC,QAAQsH,QAAQ/F,EAAO,SAASyV,EAAYrF,GAYpD/P,EAAiBwiB,SAA2B,GAA3BpN,EAAS5L,QAAT0L,QAA2B5R,EAAAnB,SAAA,OACtCy/B,EAAAA,WAAJ7xB,QAOA3R,GAGIwjC,gBAAAA,SAAiBjuB,EAAjBrL,GAED,GAAAs5B,MALHC,EAAAziC,IAOA,IAAIyE,MAAJyE,EACA,MAAGmG,EARHrQ,SAAQsH,QAAQ4C,EAAM3I,MAAO,SAAS2D,EAAMyM,GAY5C,GAAGzH,GAAMkH,EAAY4U,WAAA9gB,GAAA,EACnBO,IAAU8P,EAAcnE,QAEzBoyB,EAAA/7B,KAAA8N,IAGD,IAAA9P,GAASgM,oBA2BP,OA1BAhM,GAAAA,aAAkByE,EAAMuH,YAAxBpB,SAED5K,GAAA4K,EAAAmX,YAAAnX,QAGAnG,EAAAkH,aAAD3L,GAASkL,MAAAA,EAAczG,YAGtBA,EAAAmH,cAAD5L,GAASoI,MAAN3D,EAAiBA,aAGnBA,EAAAuH,YAADhM,GAASyI,MAAAA,EAAAA,WAGRhE,EAAAuG,KAAAvG,EAAAuG,IAAAtK,KAADV,GAAU,MAAQi+B,EAAAA,IAAUt4B,IAhKzBlB,EAAAyG,YAAAzG,EAAAyG,WAAAxK,KAwJDV,GAAU,MAAQyE,EAAMyG,WAAWxK,IAElC+D,EAAM2D,SAAW3D,EAAM2D,QAAQ1H,KAYhCV,GAAS2G,MAAAA,EAATyB,QAAyB1H,IAGxB+D,EAAAgE,kBAAAhE,EAAAgE,iBAAA/H,KAXDV,GAAU,MAAQyE,EAAMgE,iBAAiB/H,IAazCV,GAAIk+B,MAAJD,UAAAt4B,GAAA,MAAAo4B,EAAAI,KAAA,MAIAC,YAAIC,SAAAA,GAEAnoB,EAAAA,iBACJzW,EAAIyW,eAAW,EAGf,IAAIooB,GAAAA,uBAAkCD,EAAAA,YAAtC,UAVIH,EAAK,KAYLK,QAAJ9+B,EAAI8+B,MACJhkC,EAAAA,MAEIgkC,IAAAA,GAAAA,4BAAA9+B,EAAAoW,YAAAqoB,EAAA,UAFJhoB,EAAAjZ,EAAAmD,KAAAo+B,EAAA,KAAA/+B,EAAAiB,IAAA,EANIwV,IAYJnY,QAAIoQ,IAAU,8BAAAqwB,EAEZjtB,IAAAA,GAAiBA,EAFLsH,QAAAwlB,GAIZxgB,IACAhI,SAAAA,QAAapW,EALD,SAAA+J,EAAAzH,GAMZib,EAAMpgB,YAAY2gB,EAAU7c,IANhB8I,EAAAi1B,YAAAh/B,EAAAkH,iBAOZA,EAAgBlH,IAIhBqW,IAAAA,IAXFpV,GAAAjB,EAAAiB,GAEE6Q,WAAY9R,EAAK8R,WAYnBpD,SAAQ3L,EAAQ3F,WAChBghB,aAAA3H,EAAAmW,QA7MCxW,YAAApW,EAAAoW,YAoMCmH,KAAMpgB,EAAY2gB,UAAU,GAYlCmhB,eAAkBj/B,EAAAkH,eAChB1H,KAAI6T,EAAiBrT,UAAK8R,EAA1B4N,OAAAjJ,EAAAuS,aACA3J,YAAS7hB,EAAiB6V,UAAS6L,EAAelf,mBAAlD8+B,EAAAI,yBACA1d,KAAOhjB,EAAQyqB,eACb3qB,IAAAA,EAAQgD,IAIV,OAZEoN,GAAQ3L,MAAQ3F,EAAW+hC,cAAczwB,EAAS+H,EAAWooB,GAY3DO,GAGJH,iBAAA,SAAAj/B,GAVA,GAAIqT,GAAWhX,EAAM2D,EAAK8R,YAY1ButB,EAAIC,EAAK9hC,SAAa6V,EAASoC,QAAAA,KAAczV,EAAMA,GACnD,KAAAq/B,EAAIC,OAGH,WAFCA,SAAK9hC,IAAAA,QAAa6V,EAAAA,GAASoC,iBAAcpC,EAAeksB,QAIxDD,IAAAA,GAAK9hC,EAAAA,GACL+hC,EAAO/gC,EAAQ88B,SAAAjoB,EAAA6L,QAAAkgB,EAAA,cAGdlvB,EAAA,KAVCovB,EAAK9hC,EAAQmD,KAAK0S,EAASoC,aAAc,KAAMzV,EAAKwV,IAYxD8pB,GAAGA,SACDpvB,EAAAA,EAAAvP,KAAA0S,EAAAoC,aAAA,cAAA8pB,IAIED,EAAA9gC,SACA8gC,EAAA9hC,EAAAmD,KAAA0S,EAAAwC,eAAA,KAAA7V,EAAAwV,KAAAtF,EAAAA,SACA5R,EAAAA,EAAAqC,KAAY0S,EAAAwC,eAAZ,cAAA0pB,KAIJD,EAAI5wB,OAAAA,IACJwE,EAAAA,EAAAA,GAEAxE,EAAAA,aAAkB1O,IAGlBkQ,EAAGxB,KACD8wB,QAAAA,IAAAA,kBAPF,IAAI9wB,GAAUwE,EAAYusB,WAAWpsB,EAAU+rB,EAAQlvB,EAavDgD,GAAGssB,SAAY9wB,GACbrR,EAAGG,gBAAiB6V,GAClB3E,EAAAA,QAAQyQ,EAARzc,OAEA,IAAA88B,GAAShhC,IASZ,KAPKghC,EADA,WAAA9wB,EAAAA,UAAA,GAAyB8mB,EAAzB/d,OACIioB,WAIH,cATFliC,EAAQmS,SAAS0D,EAASmsB,KAAgBhiC,EAAQmS,SAAS0D,EAASokB,QAAS,CAalF/oB,EAAQ5L,WACR,IAAG9C,GAAKkH,EAAAA,KAAkBmM,EAAGmsB,GAAA,KAAAx/B,EAAAiB,GAC3ByN,IAAAA,EAAQxH,OAAAA,EAAAA,CAXJwH,EAAQ0M,MAAQukB,EAAM,GAAGnK,SAa7B,IAAG9mB,GAAQzM,EAARtB,KAAoB0S,EAAUokB,OAAA,KAAAkI,EAAA,GAAAnK,UAE/BkK,GAAAlhC,OAAA,IAFFkQ,EAGQA,SAAQzM,EAAYiS,SAAYwrB,EAAA,MAQvC,GAFChxB,EAAAA,UAAQzL,EAAAA,MAETjD,EARIkH,gBAQYsM,EAGbJ,GAFF1E,EAAI0E,eAAe5V,EAAAA,eAEFA,UAAf4V,EAAAA,cAGFtY,IAAgBsY,YAAhBtY,EAAQsH,SAAsB,CAC5B,GAAAyF,KACE6G,SAAAA,QAAQzL,EAAAA,MAAR,SAA2B9F,EAAY+W,GAExCrM,EAAAtF,MAAAtB,GAAA8G,EAAA9G,GAAAgH,IAAAF,EAAAE,KAAAyG,EAAAxH,eAAA,SAGHwH,EAAIkxB,iBAAoBj/B,MAEtB,IAAA0S,EAAGQ,WAAYgsB,CACbnxB,GAAAA,GAAQzL,EAAAA,KAARoQ,EAA2BlW,WAAA,YAA3BuR,EAAA6E,gBAEDH,EAAA5U,QAAA6U,EAAAK,cACFN,EALD5V,EAAAmD,KAAA0S,EAAAK,YAAA,YAAAhF,EAAA6E,gBARAzY,QAAQsH,QAAQgR,EAAc,SAASS,EAAavR,GAgBrDoM,EAAQzL,cAAkByL,EAAAxH,iBAC3BwH,EAAQ5L,iBAAY3F,EAAuBuR,SAAQzL,UAInDyL,IAAAA,EAAAiF,YAAuBmD,CACvB,GAAIF,GAASpZ,EAAQmD,KAAK0S,EAAS0D,YAAgB/W,iBAAnD0O,EAAA6E,cACAzY,SAAG8b,QAAOpY,EAAY,SAAAqV,EAAAvR,GACpBoM,EAAQxL,UAAa/F,EAAY+W,iBACjCxF,EAAQ5L,iBAAY3F,EAAY6F,SAAW0L,MAW3C,GAJFA,EAAGoM,mBACDpM,EAAGoM,UAAYglB,EAAAA,WAAuBpxB,EAAQxO,iBAARwO,EAAA3L,QAGtC/C,EAAA8W,QAAGgE,EAAA,CAfLpM,EAAQoI,QAAU9W,EAAK8W,OAiBrB,IAAAF,GAAGkE,EAAYglB,KAAAA,EAAAA,SAAuBpxB,KAAQzO,EAAAA,QAC9C2W,GAAGkE,OAAA,IACHpM,EAAGoM,WAAYilB,EAAAA,SAAuBrxB,EAAQzO,IAC9CyO,EAAGoM,UAAYklB,EAAAA,WAAuBtxB,EAAQzO,UAAAA,EAARiD,iBAbrC,IAAGwL,EAAQ6mB,gBAAiB,CAiBjC7mB,EAAOA,kBAAP,EAjVGA,EAAAzO,mBAAA,CAmUD,IAAI6a,GAAWtd,EAAQmD,KAAK,8BAA+B,gBAAiB+N,EAAQ6mB,gBAiBxFxmB,IAAY+L,EAAAtc,OAASwB,IAfoB,GAAhC8a,EAAS,GAAGglB,kBAAuBpxB,EAAQxO,oBAiBjC,GAAdF,EAAQ,GAAXigC,kBAAiBvxB,EAAAxO,oBAEf,GAAA4a,EAAA,GAAAilB,kBAAArxB,EAAAxO,oBAAA,GAAA4a,EAAA,GAAAklB,kBAAAtxB,EAAAxO,oBAdqC,GAAhC4a,EAAS,GAAGglB,kBAAuBpxB,EAAQzO,qBAkBlD,GAAA6a,EAAA,GAAAmlB,kBAAAvxB,EAAAzO,qBAAmC6R,GAAhCgJ,EAAA,GAAAilB,kBAAgCjuB,EAAY7R,qBAC7C,GAAAD,EAAK8R,GAALkuB,kBAAAtxB,EAAAzO,sBAIF,MAAGD,IAIF+O,WAAA,SAAA/O,GACD,GAAQ8R,MAAR9R,EAAA,CAkBI,GAVF,gBAAe3D,KAAWyV,EAAAA,aAC1B9R,EAAA8R,WAAStU,EAAQw1B,cAKlB,UAAAhzB,EAAA8R,aAlBC9R,EAAK8R,WAAa,QAsBA,UAAhB9R,EAAA8R,YAAA,UAAA9R,EAAAiC,SAEA,MADAjC,GAAAiC,SAAQzE,SACRwC,CAEA0O,IAAA,UAAAA,EAAAA,YAAA,UAAyB6kB,EAAzBtxB,SACAyM,MAAAA,MAAQ7O,YAARG,EAEA0O,IAAAA,EAAAA,aAAkB1O,GAAK0C,CACvBgM,GAAAA,GAAQ2Q,EAAAA,EAAc9hB,WAEtB,IADA2V,EAAY0X,SAASlc,EAArBwQ,QAAA,KAAAlf,EAAAiB,IACAzC,OAED,MAAI1C,MAAAmjC,iBAAAj/B,GAKL,GAAAA,EAAAnB,SAAQW,CAET,GAAAwO,GAAAxQ,EAAAw1B,SAAAhzB,EAAAnB,SAAA,UAAA,KAAAmB,EAAAiB,GA3YE,IAAA+M,EAAAxP,OAAA,EAAA,CAwXC,GAAIqc,GAAM7M,EAAM,GAqBtBS,EAAAA,EAAawkB,OAAAjzB,EAAAnB,SAAe,UAAAgc,GACvB7a,EAAHkT,EAAiB4B,gBAAApJ,EAZb,OAaFgD,GAAOmM,IAAPA,EAEDnM,EAAA0P,aAAA1S,EAAA6nB,aApBG7kB,EAAQ7O,aAAe6L,EAAE4pB,aAqB7B5mB,EAAIF,SAAJxO,EAAAnB,SACA6P,EAASoD,QAAN9R,EAAoBA,QACrBA,EAAK8R,YAAa9R,EAAlB+b,UAAArQ,EAAA4T,cAAA5T,EAAA8T,oBAEDtM,EAAA0X,SAAAlc,GApBUA,EAwBV,OAAAlP,KAAA,gBAjBC,OAAQA,KAAM,wBAA0BQ,EAAK8R,cAwB7CrD,YAAI,SAAIyxB,GACN,GAAGA,MAAHlgC,EACE,QAID,IAAAwO,KAQDowB,KAPD5+B,EAAA8R,YAAA9R,EAAAmgC,eAAA9jC,KACF2D,EAAA8R,WAAA9R,EAAAmgC,cAEkB,UAAfngC,EAAI++B,aACJvwB,EAAAA,WAASuwB,QAGTH,EAAAA,aAAgBviC,GAAA,CAChBmS,GAAAA,GAASowB,EAAAA,EAAT9sB,WAlBFtD,GAAS,mBAAqB,KAqBhCA,EAAQ3P,EAARqgB,SAAkBzZ,EAAAyZ,OAGjB,KAAA,GAAAghB,KAAA7sB,GApBM6sB,EAAStuB,QAAQ,OAAS,IAqBjC,cAAOpD,GAAP,eAAA0xB,GAAAlgC,EAAAkH,kBAEDsH,EAAA6E,EAAA6sB,IAAAz6B,EAAAy6B,IAfC,GAAsB,UAAnBlgC,EAAK8R,YAA2C,UAAjB9R,EAAKiC,SAAsB,CAEzDuM,EADe,uBAAyBxO,EAAKoW,YAAc,WACtC,IACrB,IAAIwoB,GAAgB,4BAA8B5+B,EAAKoW,YAAc,YACrE5H,GAASowB,GAAiB,KAC1BA,EAAgB,4BAA8B5+B,EAAKoW,YAAc,aACjE5H,EAASowB,GAAiB,KAO9B,MAJG5+B,GAAKnB,WACN2P,EAASxO,EAAKnB,SAAW,WAAa,MAGjC2P,IA5bb5S,EAAA4G,SAAA,QAAA,QAAA,UAAA,cAAA,cAAA,oBAAA,aAAA,eAAA,eAAA,UAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,mBAAAx3B;cCDA,WAIA,QAAS0B,GAAY1B,GACnB,OAGEW,YAAa,SAAS2J,EAAWlB,GADnC,GAAAsD,KAQK,OAPH/L,SAAAA,QAAayI,EAAA3I,MAAA,SAAS6J,EAATuG,GACX,GAAInE,GAAAA,EAAJyG,WAAA/O,EACAlF,IACEwN,EAAIoG,KAAU9S,KADhB0M,GAQDmG,YAXI,SAAAzJ,GAaLyJ,GAAAA,KAUG,OAPD3T,SAAQsH,QAAQ4C,EAAM3I,MAAO,SAAS2D,EAAMogC,GAA5CtlC,GAAAA,GAAAc,EAA6B6S,YAAAzO,EAE3BlF,SAAI0T,QAAAA,EAAW5S,SAAiB6S,EAAAA,GAG9B4xB,EAAY5zB,GAAO1C,MALvBs2B,IAtBNvlC,QAAAO,OAAA,SAAA+3B,QAAA,eAAA,mBAAA91B;cCDA,WAGAxC,QAAAA,GAAeoY,EAAiB7W,EAAAmB,GAI9B,OAAAqM,aACEA,KAAAA,aACSrK,KAAA,aAAcA,WAAK,aAAc8gC,aAAxC,IACCvkC,KAAM,SAAUyD,KAAK,SAAU+gC,WAAY,SAAU7V,UAAU,EAAMa,SAAS,EAAMd,WAAW,EAAM5f,YAAa,IAAK/I,OAAQ,IAkBlI0H,KAAAA,UAAQhK,KAAA,UAAe+gC,WAAA,YAAA11B,YAAA,IAAAwH,YAAA,EAAAvQ,OAAA,EAAA0+B,eAAA,EAAA,KACrBzkC,KAAIwE,SAASf,KAAb,SAAA+gC,WAAA,YAAA11B,YAAA,IAAAwH,YAAA,EAAAvQ,OAAA,EAAA0+B,eAAA,EAAA,EAAA,EAAA,EAAA,KACA1lC,KAAAA,cAAgB0E,KAAKqK,cAAY02B,WAAA,YAA0BhV,SAAA,EAAAzpB,OAAA,EAAAuQ,YAAA,EAAAmuB,eAAA,EAAA,EAAA,IAAAzS,IAAA,OACzDhyB,KAAA,QAAGqD,KAAA,QAAHmhC,WAA0B,QAAAz+B,OAAA,EAAAuQ,YAAA,EAAAmuB,eAAA,EAAA,EAAA,IAAAjV,SAAA,IACxBhrB,KAAAA,iBAAAf,KAAA,iBAAA+gC,WAAA,OAAAhV,SAAA,EAAAzpB,OAAA,EAAAuQ,YAAA,EAAAmuB,eAAA,IAAAC,aAAA,IACD1kC,KAAA,kBAAAyD,KAAA,kBAAA+gC,WAAA,OAAAhV,SAAA,EAAAzpB,OAAA,GAAAuQ,YAAA,GAAAmuB,eAAA,IAAAC,aAAA,IACF1kC,KAJD,qBAAAyD,KAAA,qBAAA+gC,WAAA,SAAAhV,SAAA,EAAA1gB,YAAA,MAAA/I,OAAA,GAAAuQ,YAAA,GAAAmuB,eAAA,IAAAE,WAAA,EAAA,EAAA,EAAA,KAZC3kC,KAAM,oBAAqByD,KAAK,oBAAqB+gC,WAAY,SAAU7V,UAAU,EAAMa,SAAS,EAAM1gB,YAAa,IAAK/I,OAAQ,EAAGuQ,YAAa,GAAImuB,eAAgB,IAAKE,WAAY,EAAE,KAkB5L3kC,KAAA,WAAAyD,KAAA,WAAA+gC,WAAA,WAAAhV,SAAA,EAAA1gB,YAAA,MAAA/I,OAAA,GAAAuQ,YAAA,GAAAmuB,eAAA,GAAA,IAAAzS,IAAA,aA7BGhyB,KAAA,UAAAyD,KAAA,UAAA+gC,WAAA,OAAA11B,YAAA,IAAA/I,OAAA,EAAAuQ,YAAA,EAAAoY,WAAA,EAAA+V,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAAzS,IAAA,OAcFhyB,KAAM,UAAWyD,KAAK,UAAW+gC,WAAY,UAAW11B,YAAa,IAAK/I,OAAQ,EAAG2oB,WAAW,EAAMc,SAAS,EAAMwC,IAAK,aAkB7H7C,KAAAA,OAAQ1rB,KAAA,OAAA+gC,WAAe,OAAA11B,YAAA,IAAA/I,OAAA,EAAAuQ,YAAA,EAAAkZ,SAAA,EAAAd,WAAA,EAAA+V,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAAzS,IAAA,OACrBhyB,KAAIwE,SAASf,KAAb,SAAA+gC,WAAA,QAAAC,eAAA,IAAAjV,SAAA,EAAAd,WAAA,EAAAsD,IAAA,OACAjzB,KAAAA,SAAA0E,KAAgB,SAAKqK,WAAY,WAC/B9N,KAAA,SAAYA,KAAT,SAAuBukC,WAAA,SAAAnV,cAAA,IAG3B3hB,OAJD,SAAAhK,GAZA,GAAIe,GAAS,IAwBX,OANFzF,SAAAsH,QAAAtG,KAAA+N,WAAA,SAAAzK,EAAAkD,GAxCGlD,EAAAI,MAAAA,IAyBCe,EAASnB,KAqBXmB,GAGI2qB,OAAA,SAAI2Q,GACF3oB,GAAAA,GAAAA,IAQD,OAPApY,SAAAsH,QAAAtG,KAAA+N,WAAA,SAAAzK,EAAAkD,GAhBFlD,EAASrD,MAAQyD,IAkBhBe,EAAGs7B,KAKFt7B,GAfTka,SAAU,SAASjb,GAmBf,GAAAoL,GAAI+1B,KAAAA,OAAJnhC,EACA,IAAAoL,GAAGrK,cAAQqK,GAAA,CACT,GAAArK,KACAzF,SAAAA,QAAQsH,EAAQ7B,SAAQs7B,EAAS77B,GAC/B67B,EAAG77B,MAAKiC,EAALs+B,YAAuBhgC,IACxBogC,EAAAA,OAAc3gC,EAAd4gC,SACD1tB,EACOrX,UAAGuE,GAJbG,EAOGs7B,EAAAx/B,MAPHkE,EAAAuK,OAAA+wB,EAAAx/B,OAWKskC,OAdP,IAAIA,KAqBRvgC,IAAAA,EAAAA,CAnBM,GAAIvE,GAAKC,IAqBbhB,SAAKkF,QAAK8R,EAAczV,SAAQ2D,EAAAsC,GAC9BtC,EAAOiC,UAAPzC,EACDmhC,EAAAp+B,KAAAvC,GAEQA,EAAK8R,aAAY/T,EAAvBiC,EAAmCugC,EAAAA,QACpCvgC,EAAOiC,SAAPzC,EACDmhC,EAAAp+B,KAAAvC,MAfC,MAAO2gC,GAuBPE,MAAAA,OAIGzgC,aAAA,SAAAwK,EAAA5K,GAlBL,KAAKA,EAAK8R,aAAczV,IAqBtB,OAAIwkC,CAGL,IAAAxkC,EAAA2D,EAAA8R,YAAA/T,MAAA6M,EAAA21B,WAnBC,OAAO,CAuBP,IAAAvgC,EAAAqT,UAAYzQ,EAAEgI,KACZ,OAAA,CAGD,IAAAi2B,EAnBH,IAAGj2B,EAAI41B,cAAe,CAqBpBK,GAAIA,CACF,KAAA,GAAAj+B,GAAA,EAAOA,EAAAgI,EAAP41B,cAAAhiC,SAAAoE,GACDgI,EAAA41B,cAAA59B,IAAA5C,EAAAH,cAAAG,EAAA8gC,SAAAl2B,EAAA41B,cAAA59B,IAAA5C,EAAA8gC,QAAAxL,gBACFuL,GAAA,EAIC,KAAAA,EAnBE,OAAO,EAwBR,GAAAj2B,EAAA81B,UAAA,CACFG,GAAA,CAnBC,KAAI,GAAIj+B,GAAE,EAAEA,EAAEgI,EAAI81B,UAAUliC,SAASoE,GAqBvC5C,EAAAud,MAAA3S,EAAA81B,UAAA99B,IAAA5C,EAAAud,KAAAtc,IAAAjB,EAAA8gC,SAAAl2B,EAAA81B,UAAA99B,IAAA5C,EAAA8gC,QAAAxjB,QAtIGujB,GAAA,EA2IH,KAAGj2B,EACD,OAAIm2B,EAIJ,GAAAn2B,EAAA61B,aAAIO,CACJlhC,GAAEgB,GAAKigC,EAASpgC,KAASk7B,EAAToF,IAAiBC,OAAA,KAAAlhC,EAAAiB,GAC/B46B,IAAAA,EAAOxvB,OAAK,GAER80B,EAAGH,GAAAA,MAAeD,EAAAA,aAChBrO,OAAAA,EAKX,OA1JI,GA6JHrmB,KAAA,SAAS7M,EAATkzB,GAnBA,GAAI9nB,GAAM9O,KAAK0N,OAAOhK,EAqBtB1E,IAAAA,GAAQsH,cAAayH,GAAAA,CACnB,GAAAk3B,GAAM3gC,EAAAA,OAAawK,EAAK5K,SAAM8gC,GAC5B9gC,MAAKiC,GAALlE,MAAoByB,EAApB+gC,aAjKDS,EAAA,CAiJDlhC,GAAEgB,KAAKigC,EAAS,SAASlF,GAqB7B38B,EAAAA,KAAAA,aAAoB,aACdkiC,GACML,EAAAviC,QACJ6iC,UAODC,gBAAA,SAAAthC,EAAA8gC,GACF,GAAAjlC,GAPDC,IASAhB,SAAAA,QAAQsH,KAAQyH,WAAKA,SAAYe,EAASxL,GAnBvCvD,EAAGuE,aAAawK,EAAK5K,EAAM8gC,KAqB5B9gC,EAAAiC,SAAYzC,EAATA,SAKGN,mBAAIqiC,SAAO5hC,GACX,GAAAyhC,KACA,IAAA/kC,EAAA,CACA,GAAAglC,KAnBRvmC,SAAQsH,QAAQ/F,EAAO,SAAS2D,EAAMsC,GAqB9BtC,IACEA,EAAAiC,WAAcs/B,KACfF,EAAArhC,EAAAiC,cAGDo/B,EAAArhC,EAAGL,UAAM+C,KAAN1C,MAKClF,QAAAsH,QAAAtG,KAAO+N,WAAP,SAAAzK,EAAAkD,GAEF,GAAAlD,EAAAI,OAAOG,GAAM+C,CAGb,GAAA8+B,GAAAH,EAAOzhC,EAAM6d,MAAa9d,KAAAA,SAAM8d,EAAhC7d,GACD,GAAA,YAAAR,EAAAI,KAAA,CAGD,GAAA+hC,GAAO5hC,EAAME,cACd0hC,KAAAA,EAAA,EAvBC,IAAIE,GAAO7hC,EAAMsH,cA2BrBk6B,IAFEK,IAAO9hC,EAAA,GAETyhC,GAAQhiC,EAlCV,MAoCKqiC,GAAAF,MAtCP,IAAA,OAAA5hC,EAAAmS,YAAA,SAAAnS,EAAAmS,WAAA,CAiBQ,GAAGnS,EAAM+C,SAAW9C,EAAM8C,QA0BlC,MAAA/C,GAAA+C,QAtBmB9C,EAAM8C,QAGR/C,EAAM+C,QAAU9C,EAAM8C,SAFnB,EAHD,CAgCpB,IAAA9C,EAAA6d,YAAA9d,EAAA8d,WACM2jB,MAAPxhC,GAAA6d,WAAA9d,EAAA8d,eAGL,IAAA,gBAAA9d,IAAA,gBAAAC,GAjPD,MAAAD,GAAAE,aAAAD,EAAAC,YA4Nc,OAAOF,GAAMH,KAAKkiC,cAAc9hC,EAAMJ,OAExC4hC,GAAQhiC,EAASI,MAAQgiC,MAGzBJ,GAAQhiC,EAASI,WAavB,MAAO4hC,KA7ObtmC,QAAAO,OAAA,SAAA+3B,QAAA,gBAGC,cAAc,QAAQ,UAAU/1B;cCJjC,WAGAvC,QAAAA,KAGC,OADD6mC,MACCniC,KAAO,iBACHmiC,IAAK,EACEniC,IAAAA,KAPZ1E,QAAAO,OAAA,SAAA+3B,QAAA,iBAAAwO;cCDA,WAGA1uB,QAAAA,GAAA3V,EAAuBC,EAAgBL,EAAWd,GAS9CyY,QAAAA,GAAAA,EAAiBA,EAAAA,GAMjB,OACA+F,IAAAA,EACAxF,UAAAnF,EAAAjP,GAAAzD,EAAO89B,SAAAjoB,EAAA6L,QAAArE,EAAA,MACLA,WADKxH,EAAA7T,KAEL6V,WAAYnF,EAFPorB,SAAAjoB,EAAA6L,QAAArE,EAAA,cAGL5Z,aAAYq6B,EAASjoB,SAAS6L,EAASrE,QAAnCA,EAHC,gBAIL/I,OAAAA,EAAauB,SAAS7T,EAJjB0f,QAAArE,EAAA,QAKL4C,aAAajgB,EAAQ89B,SAASjoB,EAAS6L,QAASrE,EAAK,gBACrDuD,KAAAA,EAAe5gB,UAAQ89B,EAASjoB,SAAS6L,EAA1BA,QAAwCrE,EAAA,SACvDpD,IAAAA,KACA5X,KAAAA,KACA0d,MAAOpgB,KACPqY,eAVK,KAWLhW,SAAO,KACPuD,QAAQ,MAZH,QAAP8+B,GAAAxuB,GAqBA,QAAI7V,EAAQmS,SAAS0D,EAAS6L,aAC5B3hB,EAAAoS,eAIA,gBAAA0D,KAAA7V,EAAAmS,SAAA0D,EAAAoC,kBAIA,kBAAApC,KAAA7V,EAAAmS,SAAA0D,EAAAwC,mBAUH,QAAAisB,GAAAzuB,GACD,IAAAwuB,EAASC,GAGL,MAAO,KAER,IAAA5yB,IAAA,GAAAjK,OAAAygB,SACDrS,GAAInE,QAEJmE,KAAAA,GACIqnB,GAAUl9B,EAAQ29B,WAAW9nB,EAAS6L,SAD1C7L,EAAAA,EAAShX,EAAAA,IAATue,EAAA,CACA,GAAI8f,GAAAA,EAAUl9B,SAAQ29B,EAAW9nB,QAAS6L,EAA1C,QAEE6iB,EAAYvkC,EAAQ89B,SAASjoB,EAAS6L,QAA1BtE,EAAsC,cAG9ConB,EAAexkC,EAAQ89B,SAASjoB,EAAS6L,QAAStE,EAAG,eADzDqnB,EAAgBzkC,EAAQ89B,SAASjoB,EAAS6L,QAAStE,EAAG,aAKtD,IAAGmnB,EAAY,GAAKC,EAAe,GAAKC,EAAc,GAAc,IAATC,EAAa,CAAxE,GAAAjtB,KAAAgtB,GAAG,GAAiBD,gBAAjB3uB,KACD4B,EAAIA,EAAJtU,KAAA0S,EAAAoC,aAAA,cAAAwsB,IAEEhtB,EAAazX,QAAQmD,kBAAc8U,KAGjCR,EAAazX,EAAQmD,KAAK0S,EAASwC,eAAgB,cAAeosB,IAGrE,IAAAE,GAAAltB,EAAAzW,MAEG2jC,KADJltB,GAAIktB,MACJA,EAAIA,EAIH,KAAA,GAAAjyB,GAAA,EAAAA,EAAAiyB,IAAAjyB,EAAA,CAECmD,EAAIL,MAAQzQ,KAAZk9B,EAAApsB,EAAAuH,EAAA3F,EAAA/E,GAAA,MAOL,GAAAkyB,IAAA,GAAAn9B,OAAAygB,UAEG2c,EAAOD,EAAMlzB,CADjB5Q,SAAI8jC,IAAM,mBAAVC,EAAA,IAAA,SAAAhvB,EAAA7T,MAID,QAAAorB,GAAA5qB,GACD,GAAAA,EAAA6a,KAAS+P,EAAS5qB,CAGd,GAAI0L,EADN1L,GAAGA,YAAeA,EAAA8R,aAAAzV,GAChBqP,EAAIA,EAAJunB,OAAA52B,EAAA2D,EAAA8R,YAAAoN,QAAAlf,EAAA6a,KAEMrd,EAAAA,WAELkO,EAHDlO,EAGQwC,OAAKnB,EAARA,SAAkB,UAAAmB,EAAA6a,YAGtB7a,GAAA6a,GAED,IAAI3K,GAAIlQ,EAAKqV,SAUb,IARgB,MAAbrV,EAAKR,OAARQ,EAAGA,KAAKR,EAAcuc,UAAArQ,EAAAgU,OAAAhU,EAAAsd,eAIlBhpB,EAAKyK,aAAeiB,EAAE2nB,WAAa,IAAvCrzB,EAAIA,YAAKyK,EAAN4oB,YAIc,MAAdrzB,EAAK+C,MAAe,CAAvB,GAAG/C,GAAK+C,EAAemR,SAAAxI,EACrB,IAAAwE,EAAInN,CACJ,GAAGmN,GAAG/S,EAAA+W,SAAAhE,EACJnN,GAAIwS,EAAAA,WAAiBpY,EAAY+W,GAInClU,EAAK+C,MAAQA,EAsBf,GAnBG2I,EAAE42B,UAAYtiC,EAAKuiC,UAAtBviC,EAAG0L,QAAAA,EAAa42B,SAIK,MAAlBtiC,EAAKwiC,YAARxiC,EAAGA,KAAKwiC,EAAAA,eACNxiC,EAAKwhB,MAAL,SAAcyH,EAAAA,aACdjpB,EAAIA,KAAKwhB,QAKR9V,EAAE6pB,iBAAmB,IAAxBv1B,EAAG0L,gBAAAA,EAAqB6pB,iBAIrB7pB,EAAE6O,YAAcva,EAAKuT,gBAAxBvT,EAAG0L,cAAgB1L,EAAAA,WAIhB0L,EAAE6O,YAAcva,EAAKuT,cAAxBvT,EAAG0L,cAAgB1L,EAAAA,cAAnB,IAGU8e,IAHVpT,EAGKoT,KAAG,CACN9e,EAAAA,WAAA,OACA,IAAAqT,GAAIA,EAAWhX,EAAM2D,WACrB,IAAAqT,EAAGA,CAED,GAAAovB,GAAIA,EAAUjlC,KAAQmD,EAAK0S,OAAb,KAAA3H,EAAoCA,GAClD+2B,IAAGA,EAAWA,SACZziC,EAAAA,cAAAyiC,EAAqBA,GAAAC,iBAK3BxyB,IACElQ,EAAAA,IAAAkQ,EAAWA,UAGblQ,GAAOA,WAIX,QAAA2e,GAASA,GACP,GAAAtL,GAAIA,EAAWhX,EAAM2D,WAErB,IAAAA,EAAGA,UAAAxC,EAAiBA,SAAQmS,EAAS3P,SAAA,WAAjB,CAClB,GAAA2kB,GAAIA,EAASge,EAAoB3iC,SAAA,UAApBA,EACb,IAAA2kB,EACE,MAAAA,GAIJ,GAAA3kB,EAAGA,UAAAxC,EAAiBA,SAAQmS,EAAS3P,SAAA,mBAAjB,CAClB,GAAA2kB,GAAIA,EAASge,EAAoB3iC,SAAA,kBAApBA,EACb,IAAA2kB,EACE,MAAAA,GAIJ,GAAAtR,GAAGA,EAAY7V,SAAQmS,EAAS0D,SAAjB,CACb,GAAAsR,GAAIA,EAASge,EAAoBtvB,QAApBrT,EACb,IAAA2kB,EACE,MAAAA,GAIJ,SAGF,QAAAge,GAASA,EAAT3iC,GACE,GAAAnB,EAAGA,CACD,GAAAic,GAAIA,EAAWtd,KAAQmD,EAAR,KAAAX,EAA6BA,GAC5C,IAAA8a,GAAGA,EAAYA,OAAA,EACb,MAAAA,GAAOA,GAIX,MAAA,MAGF,QAAAhG,GAASA,GACP,MAAApJ,IAIEzK,GAAAA,EAAIyK,GACJlM,KAAAA,EAAMjC,UAAawe,EAAUrQ,OAAvBA,EAAiCA,aACvC6R,KAAAA,EAAMpgB,UAAY2gB,EAAUpS,MAC5B8V,KAAAA,EAAM9V,eACN+R,WAAAA,EAAa/R,WACb7M,SAAAA,EAAU6M,SACV+L,OAAAA,EAAQ/L,SAjOZ,OAFFo2B,UAAS5uB,EAIL0X,SAAUA,EAFZ6U,WAAOA,EACLqC,YAAWA,EACXlX,gBAAUA,GARd1X,EAAA1Q,SAAA,eAAA,UAAA,cAAA,SAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,cAAAlgB;cCDA,WAGApY,QAAAA,GAAQO,EAAgB+3B,EAAQ3tB,GA4L5B,QAAS4G,GAAKmD,EAAUkjB,GACtB,GAAI5gB,GAAahW,IACjBgW,GAAW8uB,SAAU,EAErB9uB,EAAGA,MACD4gB,KAKEkQ,EAAW9wB,KAAAA,EAAY4gB,WADzBkQ,EAAA9wB,EAAA4gB,KAIEkQ,EAAAA,KAAW9wB,EAAXoN,QAAAzZ,EAAAyZ,QAAA1P,EAAA,WADFozB,EAEG9wB,EAAWooB,IACdpoB,EAAGooB,cACD18B,gBAAasU,IACX8wB,EAAAA,KAAW9wB,EAAX2D,aAAAhQ,EAAAgQ,aAAAjG,EAAA,WADFozB,EAEG9wB,EAAWooB,IACfpoB,EAAAooB,cAEC18B,kBAAasU,IACX8wB,EAAAA,KAAW9wB,EAAX+D,eAAApQ,EAAAgQ,aAAAjG,EAAA,WADFozB,EAEG9wB,EAAWooB,IACfpoB,EAAAooB,cAEC18B,UAAasU,IACX8wB,EAAAA,KAAW9wB,EAAXovB,OAAuBxO,EAAvBwO,OAAA1xB,EAAA,WADFozB,EAEG9wB,EAAWooB,IACfpoB,EAAAooB,cAGF0I,EAAA9wB,EAAA4gB,IAID,QAAGn1B,GAAaoS,EAAb+iB,IAMDA,EAAAA,aACA5gB,EAAAA,SAAW8uB,EAAX1hB,UACD,gBAAApN,KAAAtU,EAAAmS,SAAAmC,EAAA2D,gBAAAjY,EAAAy9B,UAAAnpB,EAAA2D,eACF,kBAAA3D,KAAAtU,EAAAmS,SAAAmC,EAAA+D,kBAAArY,EAAAy9B,UAAAnpB,EAAA+D,iBACF,UAAA/D,KAAAtU,EAAAmS,SAAAmC,EAAAovB,UAAA1jC,EAAAy9B,UAAAnpB,EAAAovB,UAJKxO,IACA5gB,EAAW8uB,SAAU,GAnO3B,GAAIiC,IAEA7+B,OAAAA,QAAQ,kCACNkb,KAAAA,SACAnhB,SAAM,EACN4qB,QAAAA,GAIFma,MAAAA,QAAM,wCACJ5jB,aAAS,gCACTzJ,eAAc,uCACdI,SAAAA,+CACAkB,WAAU,8BACVgsB,KAAAA,QACAhlC,SAAM,GACN4qB,QAAAA,GAGFqa,MAAAA,QAAM,oCACJ9jB,KAAAA,WACAnhB,aAAM,6CACN0X,SAAAA,GACAkT,QAAAA,GAGFsY,KAAAA,QAAK,uCACH/hB,aAAS,4CACTzJ,eAAc,uCACdI,WAAAA,0CACArC,OAAAA,kCACA0tB,KAAAA,OACAnjC,SAAM,GACN4qB,QAAAA,GAGFsa,OAAAA,QAAO,iCACL/jB,aAAU,sCACVzJ,KAAAA,SACA1X,SAAM,GACN4qB,QAAAA,GACAua,SACFC,QAAS,2BACPjkB,aAAU,gCACVzJ,KAAAA,SACA1X,SAAM,EACN4qB,QAAAA,EACAua,cALO,GAQT7mC,OAAAA,QAAO,2BACL6iB,SAAS,4BACTkkB,UAAU,6BACVC,WAAW,8BACX7vB,aAAY,gCACZiC,OAAAA,8BACAgiB,WAAQ,8BACRsL,KAAAA,YACAhlC,SAAM,GACN4qB,QAAAA,GACAua,IACFI,QAAI,qCACFpkB,SAAS,sCACTkkB,UAAU,uCACVC,WAAW,8BACX7vB,aAAY,gCACZiC,SAAAA,+CACAsB,OAAAA,8BACA0gB,WAAQ,8BACRsL,KAAAA,YACAhlC,SAAM,GACN4qB,QAAAA,GACAua,MACFK,QAAM,kCACJrkB,SAAS,mCACTkkB,UAAU,oCACVC,WAAW,qCACX7vB,YAAY,yBACZE,aAAa,uCACb+B,OAAAA,8BACAgiB,WAAQ,8BACRsL,KAAAA,YACAhlC,SAAM,GACN4qB,QAAAA,GACAua,OACFM,QAAO,+BACLtkB,SAAS,gCACTkkB,UAAU,iCACVC,WAAW,8BACX7vB,OAAAA,8BACAikB,KAAAA,YACA15B,WAAM,8BACNglC,SAAAA,GACApa,QAAAA,GAGF8a,QAAAA,QAAQ,qCACNvkB,SAAS,sCACTkkB,KAAAA,OACArlC,SAAM,EACN4qB,cAJM,EAKNuR,QAAAA,GACAgJ,OACFQ,QAAO,sCACLxkB,SAAS,uCACTkkB,UAAU,wCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,QAAAA,GACAua,OACFS,QAAO,sCACLzkB,SAAS,uCACTkkB,UAAU,wCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,cANK,EAOLuR,QAAAA,GACAgJ,OACFU,QAAO,sCACL1kB,SAAS,uCACTkkB,UAAU,wCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,QAAAA,GACAua,OACFW,QAAO,sCACL3kB,SAAS,uCACTkkB,UAAU,wCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,QAAAA,GACAua,MACFY,QAAM,gCACJ5kB,SAAS,iCACTkkB,UAAU,kCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,QAAAA,GACAua,OACF3kC,QAAO,iCACL2gB,SAAS,kCACTkkB,UAAU,mCACVC,OAAAA,mCACA5L,KAAAA,OACA15B,SAAM,EACN4qB,QAAAA,GACAua,OACFa,QAAO,mCACL7kB,SAAS,mCACTkkB,OAAAA,mCACA3L,OAAQ,sBACR7jB,YAAQ,uBACRD,KAAAA,QACA5V,SAAM,EACN4qB,QAAAA,GACAua,SACFc,QAAS,sCACP9kB,KAAAA,UACAnhB,SAAM,EACN4qB,QAAAA,GAiBJ,OAZA7tB,SAAAsH,QAAAygC,EAAA,SAAA/wB,EAAArF,GACA3R,EAAQsH,KAAQygC,EACd/wB,EAAWtS,SAAX,EACAsS,EAAW8uB,MAAX,KACA9uB,EAAWzV,KAAXgQ,EACAyF,EAAWzF,MAAOA,WAClByF,EAAW7C,MAAQ,KACjB6C,EAAWzV,SAAQ,KAKhBwmC,EA3LX/nC,QAAAO,OAAA,SAAA+3B,QAAA,SAGC,eAAe,UAAU,oBAAoB/2B;cCJ9C,WAIA,QAASmJ,GAAKhI,EAASD,EAAckI,GAArC,GAAA5G,GAAcrB,kBAGRq8B,EAAap0B,EAAkBw+B,OAAnC,QAGEplC,SAAWA,EADbsf,QAAO,KAELA,SAAU,WAGR,MAAO3gB,GAAQmS,SAAS9Q,IACzBqlC,kBANI,WASH,MAAO1mC,GAAQ0mC,kBAAkBrlC,IAClCwN,KAVI,SAAAmD,EAAAkjB,GAaHl1B,EAAQ6O,KAAKxN,EAAUg7B,EAAYrqB,EAAU,WAD/CnD,MACE7O,IAGDyR,MAhBI,WAmBHnT,KAAKqiB,QAAU,KADjBlP,EAAQA,MAAApQ,IAGPkrB,aArBI,WAwBH,GAAIvkB,MADNukB,EAAejuB,KAAA+kB,YACb,IAAAsjB,EAEA,IAAGA,GADCA,GAAUA,EAAKtjB,OAChBsjB,EAAAA,EAAHvpB,EAAY8f,IAAA9f,EACV,GAAAupB,EAAIzJ,GAAUyJ,EAAAA,WAAdA,EAAAvpB,GAAAlP,EAAAwjB,QAAA,GACA1pB,EAAIjD,KAAIqY,EAAM8f,GAKf,OAAAl1B,IAGF4nB,YApCI,WAuCH,GAAI7sB,MADN6sB,KAEEmR,EAAI6F,IASH,OANDtpC,SAAQsH,QAAQtG,KAAKiuB,eAAgB,SAASxe,EAAKkB,GADnD23B,EAAI7F,EAAOpS,eAAX5gB,IAAAA,IAGCzQ,QAFDsH,QAAAgiC,EAAA,SAAA74B,EAAAQ,GAKExL,EAAOgC,KAAKwJ,KADdxL,GAKDsgB,WApDI,WAuDH,GAAmB,MAAhB/kB,KAAKqiB,SAAmBriB,KAAK6T,YAAcpS,EAAaoS,WAAY,CAErE,IAAA,GAHJkR,MACKzZ,EAAK+W,EAAL/E,QAAAva,GACD67B,EAAWtzB,EAAX5I,OACI4I,EAAAA,EAAAA,EAAO5J,IAAQ4b,EACnB5T,EAAIk1B,EAAAA,QAAel8B,KAAnB6lC,UAAAj9B,EAAAwT,GAGC9e,MAAAqiB,QAAA3Y,EAED,MAAA1J,MAAKqiB,SAGRpO,QAlEI,SAAA9O,GAqEH,GAAImG,GAAOtL,KAAK+kB,YADlB9Q,IAAAA,EAEE,IAAG3I,GADCA,GAAOA,EAAKyZ,OAChBjG,EAAS,EAAAA,EAAA8f,IAAA9f,EACP,GAAAxT,EAAIszB,GAAAA,IAAUtzB,EACd,MAAQwT,GAARA,IAMHypB,UA9EI,SAAA34B,GAiFH,GAAI2R,GAAIvhB,IADVuoC,QACE34B,EAAI2R,EACJpc,GAAOyK,EAAAzK,GACHyK,KADGnO,EAAAwe,UAAArQ,EAAAmsB,SAEH52B,WAFG,SAAA2X,GAGHpZ,MAAOjC,GAAAA,WAAawe,EAAAA,MAKzByO,WA1FI,SAAA9e,EAAAkN,GA6FH,GAAQ,GAALA,EAAQ,OAAO,CADpB4R,IAAAA,EAAAA,IAAAA,EACE,OAAG5R,CAGF,IAAA0rB,GAAA54B,EAAAksB,SAED,KAAA0M,EAAIA,OAAc1M,CAGlB,IAAG0M,GAAa1rB,EAAG,OAAO,CAA1B,IAAA2rB,GAAAzoC,KAAmBiU,QAAAu0B,EAGnB,SAAGC,GADCA,KAAAA,WAAgBA,EAAaD,EAAAA,IAMlCnY,eA7GI,SAAA5gB,GAgHH,GAAGzP,KAAK6T,WAAY,CADtBwc,GAAAA,GAAiBrwB,KAAA+kB,YACf,IAAAsjB,EAEE,IAAGA,GADCA,GAAUA,EAAKtjB,OAChBsjB,EAAAA,EAAHvpB,EAAY8f,IAAA9f,EACV,GAAAupB,EAAIzJ,GAAUyJ,IAAAA,EAAQ3lC,EAAAA,UAAtB,GAAA2lC,EAAAvpB,GAAAlP,EAAAM,YACA,MAAQ4O,GAAIA,GAAE8f,EAAAA,YAMjB,MAAA,QAlIP5/B,QAAAO,OAAA,SAAA+3B,QAAA,QAAA,UAAA,eAAA,oBAAA5tB;oOCDA,WACA,QAAAoe,GAAA7f,EAAAygC,EAAArnC,GAqCMsnC,QAAAA,KAJqB,MAAvBD,GAAA,SAAAE,EAAAC,GAMDC,SAAAC,OAEDC,mBAAiB,SAAA5f,GACL,MAAVA,EAMMnhB,EAAQge,SAASgjB,KAAO,aAAxBhhC,EAAAA,OAOL,QAbD+gB,GAAAN,GAkBA,MAAOggB,GAAG,SAASE,EAASC,GAF9BC,SAAS9f,WAAWN,IAAK,WAAAA,GAAAwgB,KAAA,QAAA,SAAAC,GAEvBP,EADAO,EACUA,EAASP,cAUpB,QAAAn+B,GAAAie,EAAAxoB,GAED,MAAAwoC,GAASj+B,SAASie,EAAKxoB,GACrB4oC,SAAAM,WAAAC,IAAA,UAAA3gB,EAAA,IAAA4gB,EAAAppC,IAAAgpC,KAAA,QAAA,SAAAC,GAEEL,EADFK,EACWC,EAAeD,EAAAjK,eAW5B,QAASxV,GAAYZ,GAArB,MAAA4f,GAAShf,SAAAA,EAATmf,GACE,GAAAzf,GAAUmgB,EAAAlgB,SACRD,KACAN,EAAS9pB,QAAAimB,KAAA6D,GACPA,EAAkB7D,GAAK6D,GACvB0gB,SAAAA,WAAAA,IAAqB1gB,WAArBM,EAAAV,KAAA+gB,IAAA3gB,GAAAd,KAAA4gB,MAMN,QAASc,GAAchhB,GACrB,MAAAggB,GAAA,SAAAE,EAAAC,GAEEC,SAAAM,WAAAC,IAAA,UAAA3gB,GAAAwgB,KAAA,QAAA,SAAAjgB,GACA6f,GAAAA,EAAA,CACE,GAAG7f,MACDiW,EAAIz6B,EAAJy6B,KACA,KAAA,GAAIA,KAAMjW,GACVxkB,EAAIvE,GAAJypC,EAA0BzK,EAAAh/B,GAEzB0oC,GAAAnkC,OAIDmkC,WAMR,QAAA7gB,GAASA,GAEP,MAAA2gB,GAAOA,SAAGE,EAASA,GAEjBE,SAAAA,WAAAO,IAAoBA,cAAI55B,EAAgBA,IAAxCy5B,KAAgDA,QAAhD,SAA8DjhB,GAG1D2gB,EADF3gB,EACE2gB,EAAQ3gB,cAShB,QAAS2hB,GAActpC,GAGnB0D,EAAEgB,OACAhB,EAAAgB,KAAA1E,EAAO4D,MAAK8C,SAAZ9C,SADFA,GAAA8C,WAMF,IAAA6iC,GAAgBtkB,KAAAA,UAAgBskB,EACjC,OAAAvkB,UAAAC,gBAAAskB,GAGC,QAAIA,GAAAA,GACJ,GAAAA,GAAiBC,SAAMD,oBAAvBE,GAAIzpC,EAAQyB,KAAK+nC,MAAMD,EAiBxB,OAdG7lC,GAAEgB,OACAd,EAAAA,KAAAA,EAAK8C,MAAL,SAAsBC,GAAtB/C,EAAK8C,UAAY9C,EAAK+C,MAGpB/C,EAAAA,kBAAiB7C,EAAY6F,iBAAgBC,SAC9CjD,EAAA8C,UAAA3F,EAAA6F,WAAAhD,EAAAiD,iBAAAjD,EAAA8C,YAGC9C,EAAAA,YAAiB7C,EAAAA,WAAY6F,SAC9BhD,EAAA8C,UAAA3F,EAAA6F,WAAAhD,EAAAkD,WAAAlD,EAAA8C,cAKN1G,EAGC,QAAI8oB,GAAOmgB,EAAAjpC,GACX,GAAA8oB,GAAI4gB,EAAJ3gB,UACA2gB,IACE1pC,IAAAA,IACAkpC,EAAAA,QAAAA,KAAAA,GACAA,EAAAlpC,GAAA,GACA0pC,EAAQvjC,KAIRqiC,SAAGxoC,WAAaA,IAAMmP,UAAQ2Z,EAAAV,IAAA,IAAA4gB,EAAAppC,IAAAupC,IAAAG,EAAAtpC,KAG5BA,EAAIgL,KAAOhL,EAAXmP,IAAAtK,IAAA,CAGC,GAAAmG,KACDhL,GAAGA,cACDgL,EAAAA,IAAK+D,EAAS/O,aAEhBA,EAAGA,SACDgL,EAAAA,OAAAhL,EAAaA,QAEfA,EAAGA,QACDgL,EAAAA,MAAAhL,EAAaA,OADZA,EAAMwpB,QAIT0f,EAAAA,MAAAA,EAAAA,OAKDA,EAAAl+B,GAAA,GAEH0+B,EAAUC,KACXnB,SAAAM,WAAAC,IAAA,cAAA/oC,EAAAmP,IAAAtK,GAAA,IAAAikB,EAAAV,IAAA,IAAA4gB,EAAAppC,IAAAupC,IAAAn+B,IAIK,MAAAo9B,GAAIwB,IAAAF,GAGAR,QAAAA,GAAqBU,EAArBC,GACH,IAAA,GAAArjC,KAAAojC,GACJE,SAAAF,EAAApjC,SACFojC,GAAApjC,GAJgBqjC,GAA8B,WAAnBE,QAAOH,EAAKpjC,KAMxC0iC,EAAmBU,EAAApjC,GAAAqjC,GAKd,QAAE5f,KACDse,GAAAA,GAAAA,SAAAA,MACD,OAJDH,GAAA,SAAAE,EAAAC,GAKDE,EANDxe,UAAAvC,KAAA,WAOD4gB,KAJM,SAAS/hB,GAMhBgiB,QAAA,QAAS5e,GAAcpiB,GAMnB,GAAAkhC,GAAIuB,SACFxB,OALA1f,EAAOmgB,EAAQlgB,SAUjB,OAAAqf,GAAI,SAAIxoC,EAAa2H,GAEjB0iC,GAAAA,IACDzB,SAAAM,WAAAC,IAAA,UAAAjgB,EAAAV,KAAA8hB,SACF1B,SAAAM,WAAAC,IAAA,WAAAjgB,EAAAV,KAAA8hB,SAPC1B,SAASM,WAAWC,IAAI,WAAajgB,EAAKV,KAAK8hB,UAU/CxlC,IACAslC,KAAAA,GAAAA,KACExB,GAFJjhC,EAAA3H,GAAAuP,KALI86B,EAAO9jC,KAAKoB,EAAO3H,GAAWuP,IAAItK,GAclColC,GAAAvmC,EAAAymC,KAAAF,GACAxB,EAAAA,KAAAA,EAAKxe,SAAUvC,GACbsiB,EAAA7jC,KACAmiC,SAAAA,WAAAA,IAAAA,cAAAA,EAAAA,IAAAA,EAAAA,KAAAA,YAIHF,EAAAuB,IARDK,GAAAtiB,KAAA,WAvBJoB,EAAAshB,SAAA1iB,KAAA,WAyBM+gB,EAAKxe,UAAUvC,KAAK,WAElB4gB,KAWJ0B,SAAJzjB,GACIuC,YASH,QAAAja,GAAAjP,EAAAI,GAED,GAAAgqC,MACDlhB,EAAAmgB,EAAAlgB,SADC,OAVGD,KAaLkhB,EAAA7jC,KACEqiC,SAAO5oC,WAAU8C,IAAQ,UAAAomB,EAAlBV,IAAP,IAAA4gB,EAAAppC,IAAAsqC,UAEHlqC,EAAAmP,KA9RD66B,EAAA7jC,KAoRUqiC,SAASM,WAAWC,IAAI,cAAgB/oC,EAAMmP,IAAItK,GAAK,IAAMikB,EAAKV,IAAM,IAAM4gB,EAAeppC,IAAYsqC,WAIxG9B,EAAGuB,IAAIK,GAGhB,QAAShB,GAAeppC,GACtB,MAAOA,GAAU8C,QAAQ,eAAgB,IApR3C,GAAIumC,IAHN9f,MAAS3B,EACPuB,QAAA,WAKI,MAAOyf,UAASC,OAAO4B,aAFzBlhB,QAAOA,EACPJ,cAASY,EAERyf,cAJWA,EAKZnf,YAASA,EACTN,UAAAA,EAKAxf,SAAUA,EAHVi/B,eAAAA,EAEAlpC,WAAAA,EACAiK,YAAUA,EAMV6+B,eAAgBA,EAjBJ,OAoBd/4B,YAEAu4B,SAAOS,eAKHqB,OAAQ,0CAHZC,WAAA,4BACEC,YAAA,mCACAhC,cAASiC,6BA1BXxB,EALFvqC,QAAQO,OAAO,SAAS+3B,QAAQ,iBAAkB,UAAU,KAAK,cAAcxP;cCH/E,WAIA,QAASkjB,GAAetpC,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,GAI5F4pC,QAAAA,GAAUA,GAKV,IAAI,GAPN/mC,GAAA,KAOU0L,EAAE,EAAEA,EAAEsC,EAAMxP,SAASkN,EAF/BsC,EAASlR,GAAAA,IAAQkR,aACfhO,EAAIA,EAAJ0L,GAAA3B,MAKG,KAAA,GAAA2B,GAAA,EAAAA,EAAAsC,EAAAxP,SAAAkN,EACFsC,EAAAtC,GAAAwlB,IAAA8V,WAGGh5B,EAAMtC,GAAGwlB,IAAI8V,UAAUh5B,EAAMtC,GAAG3B,MAAM9I,GAAIjB,EAE3C,OAAAA,GAEH,QAAA+mC,GAAA3nC,EAAAhD,EAAA4R,EAAAi5B,GAEDA,IAGGA,EAAW,KAOb,KAAA,GAPEA,GAAW5pC,EAAXod,SAAArb,EAAAI,MAEDe,KAGGoK,EAAWT,EAAS1L,OADxB0oC,EAAa,KACbC,EAAIx8B,KAEAu8B,EAAAA,EAAAA,EAAAA,IAAJtkC,EAAA,CAKE,GAAI5C,GAAOkK,EAAStH,EAEpB,OAAIxD,EAASmsB,SAAWnvB,EAAMmP,IAAItK,GAAK,GAAKjB,EAAKoe,aAAe,IAAM5Y,EAAKglB,WAAWpuB,EAAMmP,IAAIG,EAAG1L,EAAKoe,cAAxG,CAAAlL,EAAI9T,SAASmsB,EAGbrY,KAAAA,GAACk0B,IAAA,EAADl0B,EAAAA,EAAAA,EAAY0X,EAAAA,SAAZlf,EAAA,CAIE,GAAIsC,EAAMtC,GAAGwlB,IAAImW,cAAer5B,EAAMtC,GAAGwlB,IAAImW,YAAYr5B,EAAMtC,GAAG3B,MAAM9I,GAAIjB,GAGxEmnC,CAEDC,GAAA,CACF,OARCA,YAAJp5B,GAAAtC,GAAAwlB,MACAgW,EAAAl5B,EAAcA,GAAAA,IAAMxP,SAClB2oC,EAAUz7B,EAANA,GAAa27B,MAAAA,IAelB,GAJAD,GAEC7mC,EAAOgC,KAAKvC,GAEbO,EAAA/B,QAAAyoC,EAEC,OAeJ,MAZC1mC,GAAA+mC,EAAA/mC,GACDA,EAAAA,EAAS+mC,KAAAA,SAAiB/mC,EAA1BX,GAGE,MAAGsnC,GADI3mC,EAAOb,EAAKC,EAASA,GAIvBA,EAAAH,KAAAkiC,cAAA9hC,EAAAJ,QAQT,QAAS8nC,GAAiBjrC,GACxB,IAAA,GADFkE,MACMA,EAAAA,EAAAA,EAAAA,EAAJ/B,SAAAoE,EAAA,CAEI,IAAIoQ,GADJA,IAAJ,EACQA,EAAAA,EAAQ4G,EAAAhX,IAAZgX,EACA,GAAI2tB,EAAQ3tB,EAAMA,GAAGvd,EAAAud,IAAA,CACd2tB,GAAAA,CACCv0B,OAKJA,GAADzS,EAAHgC,KAAWlG,EAAAuG,IAKf,MAAOrC,GAGT,QAASgnC,GAAY5nC,EAAOC,GAA5B,MAAAD,GAAS4nC,MAAAA,EAAY5nC,MAArBA,EAAmCoD,MAAAvE,QAAAoB,EAAAmD,MAAAvE,QAAAmB,EAAA4d,MAAA3d,EAAA2d,MAAA5d,EAAA8d,YAAA9d,EAAA8d,YAKxB3d,EAAE0nC,QAAQ7nC,EAAMoD,MAAOnD,EAAMmD,OA3G1CjI,OACAgC,QAASgqC,EAILC,SAAUA,GAPdD,EAAAtkC,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,eAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,iBAAA0T;cCDA,WAIA,QAASj5B,GAASrQ,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,EAAasqC,EAAeX,GADtHhsC,OACA4sC,eAIMC,QAAS,aAFbC,SAAO,eAAA,YAAA,WAAA,eAAA,cAAA,WAAA,eACLF,QAAAA,eAAe,YAAA,WAAA,eAAA,cAAA,WAAA,eACbC,aAAS,kBADI,YAAA,WAAA,eAAA,cAAA,YAEbC,OAAAA,eAAU,YAAe,WAAY,gBAAW,eAAe,cAAc,YAC7EC,kBAAS,YAAe,cAAY,eAAW,eAAe,cAAc,WAAW,eACvFC,mBAAc,YAAA,cAAD,eAA0C,eAAe,cAAzD,WAAA,eACbC,sBAAQ,YAAe,WAAY,uBAA2B,eAAe,cAAtE,YACPC,qBAAmB,YAAY,uBAAc,eAAe,eAAe,cAAc,YACzFC,UAAA,YAAoB,mBAAY,uBAAb,eAAA,cAAyD,WAAc,uBAC1FC,SAAA,eAAuB,WAAD,eAAwB,YAC9ClE,SAAA,WAAA,eAAqB,eAAa,YAClCiE,MAAAA,kBAAU,WAAa,eAAmB,YAC1CC,QAAAA,eAEApE,WAAO,SAAA1kC,EAAkBhD,EAAA4R,GACzBm6B,GAAAA,GAAAA,IAda,IADV/oC,EAAAI,OAAA1D,MAAA4rC,cAAA,CAiBLt5B,GAAAA,GAAYtS,KAAAssC,YAAShpC,EAAUhD,EAAO4R,QAChCqP,EAAJoqB,EAAAY,GACGjpC,EAAAkpC,EAAiBl6B,WAAKs5B,EAAetrC,EAAA4R,EACtC,IAAAs6B,EAAID,WACJ,MAAIC,EAGF,IAAAA,EAAOC,WADT,GAGKC,GAAA1B,EAAAC,SAAA3nC,EAAAhD,EAAA4R,EAAA,GAIF,IAAAy6B,GAAA3oC,EAAAC,OAAAwoC,EAAA,SAAAG,GAEC,GAIArsC,GAJIssC,EAAY36B,EAAMlD,QADxBuS,EAAIorB,WAAAA,EAAe1oC,EAAOwoC,EAAY/pC,SAMpC,IAAA8pC,EAAGA,WAAQM,CACT,GAAAL,EAAGA,IAAAG,EACD,OAAA,CAIF,IADArsC,EAAAA,EAAQyqC,SAAeC,EAAf3qC,EAAAusC,EAAA,IACRtsC,EAAGA,OAAA,GAAAA,EAAoBA,OAAA,GACrB,MAAAA,GAAOA,OAAAmsC,EAAeA,WAMzBnsC,GAAAyqC,EAAAC,SAAA3nC,EAAAhD,EAAAusC,EAAA,EAEF,OArBDtsC,GAAAmC,QAuBE,OAAA8pC,GAAOM,YAAAH,EAAPjqC,OAAA8pC,EAAAM,YAEDL,EAAA,IAGFE,EA3DA,UAkEDt5B,WAAIk5B,SAAWjpC,EAAKgpC,EAAYhpC,GAChC,GAAAA,EAAGqoC,OAAAA,MAAcY,cAAUl5B,CACzB,GAAAk5B,GAAOZ,KAAAA,YAAcY,EAAUl5B,EAAW/P,OAE3C,OAHDqoC,GAGKY,GAAAl5B,WACHs4B,EAAOA,GAAAt4B,WAAwBf,EAAxBhS,EAAA4R,GAIFy5B,EAAPY,GAAAj6B,WAAAhP,EAAAhD,EAAA4R,GAAAxP,OAAA,EAIF,OAAO,GAGP+P,kBAAe,SAAK65B,EAAYhpC,GAChC,MAAI8xB,MAAMuW,cAAcY,EAAxB7oC,MAAAhB,OAAAuP,GAEAO,WAAO,SAAAvE,EAAA3K,EAAA2O,GACL86B,GAAAA,GAAMR,KADDD,YAAAhpC,EAAA2O,EAAA,QArFJ86B,KAAAR,EA2FLvrC,MAASgqC,EACTsB,IALIr+B,EAFKs+B,KArFJvrC,QAAPgqC,EAAAhqC,QAiGDsrC,YAAA,SAAAhpC,EAAA2O,GAvGD,MAAAjS,MAAA4rC,cAAAtoC,EAAAI,MAAAuO,KACAF,EAAArL,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,cAAA,gBAAA,kBAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,WAAAvlB;cCDA,WAIA,QAAS45B,GAAcjqC,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,EAAa2pC,GAD5GhsC,OACAguC,cAIQtpC,KAAM,OAFZ4O,WAAO,SAAAhP,EAAAhD,EAAA4R,GAOC,IAAI,GALA+6B,MAKIloC,EAAE,EAAEA,EAAEzB,EAASohC,cAAchiC,SAASqC,EAAG,CAFjD,GAAIkoC,GAAAA,EAAJvI,cAAA3/B,GAEImoC,EAAU5pC,CACZ,IAAAhD,EAAI6sC,MAIF,IAAI,GAAIrmC,GAAE,EAAEA,EAAExG,EAAMC,MAAMmC,SAASoE,EAFjComC,EAAAA,MAAJpmC,GAAA/C,cAAAopC,GACG7sC,GAMA,MAAA4sC,GAAA5pC,EAAAiT,aAAA,CAGD,GAAA3R,GAAAlD,EAAAmD,KAAA,kBAAA,eAAAsoC,GAEDC,EAAA,EAGExoC,IAAYA,EAASlC,OAAS,GAAKkC,EAAS,GAAGgf,OAAS,IAF3DwpB,EAAIxoC,EAAmBC,UAAKD,EAAA,GAAbgf,QAA+BC,eAE9CopB,EAAGroC,MAAYA,GAAAA,EAASlC,KAAT0qC,EAAuBxoC,iBAGtCqoC,MAAAA,IAKJ1B,YAAa,SAASpmC,EAAIjB,GAFxB,MAAO+oC,GAAAA,cAAP9nC,IAGAkoC,iBAED3pC,KAAA,OApCA4O,WAAA,SAAAhP,EAAAhD,EAAA4R,GA2CC,IAAI,GALA+6B,MAKIloC,EAAE,EAAEA,EAAEzB,EAASohC,cAAchiC,SAASqC,EAAG,CAC/C,IAAIooC,GAHFF,GAAAA,EAAJvI,cAAA3/B,GAEImoC,EAAU5pC,EACR6pC,EAAAA,EAAO7pC,EAAAA,EAASohC,MAAAA,SAAT59B,EAINxG,EAAMC,MAAMuG,IAAMxG,EAAMC,MAAMuG,GAAG/C,cAAgBopC,GAFlDD,GAKD,IAAA,IAAAC,GAAA,IAAAA,GACF,GAAAD,GAAA,EAGG,aAED,IAAAA,GAAA,EAJH,QAUC,IAAAtoC,GAAAlD,EAAAmD,KAAA,kBAAA,eAAAsoC,EAED,IAAGvoC,GAAYA,EAASlC,OAAS,GAAKkC,EAAS,GAAGgf,OAAS,EAAG,CAD9D,GAAIhf,GAAWlD,EAAaue,UAAArb,EAAkB,GAAAgf,QAAAC,aAE5CopB,GAAIG,MAAS3rC,GAAAA,EAAawe,KAAAA,EAAUrb,iBAKvC,MAAAqoC,IACD1B,YAAO0B,SAAP9nC,EAAAjB,GAnCa,MAAAA,GAAAH,cAAAoB,IAwCdmoC,WA7EA5pC,KAAA,QA8EH4pC,WAAW,SAAAhqC,EAAAhD,EAAA4R,GAETI,QAGInN,GAAI,GAAIzB,KAAM,aADhByB,GAAA,GACEA,KAAF,aALOA,GAAA,GAAAzB,KAAA,aAiBT6nC,GAAAA,GAAAA,KAAa,aACXpmC,GAAA,GAAOjB,KAAKyd,aAEbxc,GAAA,GAAAzB,KAAA,aAlGAyB,GAAA,GAAAzB,KAAA,aAmGH6pC,GAAAA,GAAAA,KAAkB,aAChB7pC,GAAM,GADUA,KAAA,aAEhB4O,GAAAA,GAAY5O,KAAA,cAUX6nC,YAZe,SAAApmC,EAAAjB,GAYhBqnC,MAAAA,GAAa5pB,YAAAxc,IAITooC,kBAAA7pC,KAAA,OAdJ4O,WAAY,SAAShP,EAAUhD,EAAO4R,GAmBhC,QAED/M,GAHD,EAGKzB,KAAA,SACHyB,GAAA,EAAAzB,KAAOQ,SAERiB,GAAA,IAAAzB,KAAA,uBACFyB,GAAA,EAAAzB,KAAA,UAADyB,GAAA,EAAOzB,KAAP,YAGJ8pC,YAAa,SAAAroC,EAAAjB,GAEXoO,GADA5O,EADWorB,SAAA5qB,GAEXoO,EAAAA,KAAY,CAEV,GAAA9L,GACMwD,KAAGtG,IALAQ,EAAAR,KAAAoS,QAAA,WAUXy1B,EAAAA,KAAaz1B,QAAA,cAEX,OAAQpS,MAALQ,EACgBiI,IAAb3F,EAMCtC,EAAAud,MAAAvd,EAAAud,KAAAtc,IAAAA,GAAA,GAAAqB,EAIN,OAAA,IAvBQgnC,aA0BbC,KAAAA,OACE/pC,WADQ,SAAAJ,EAAAhD,EAAA4R,GAtBN,QA0BA/M,GAAIuoC,EAAAA,KAAJ,cACAvoC,GAAI,IAAJzB,KAAcrC,4BACZqsC,GAAAA,EAAOjnC,KAAKpF,UAIfkqC,YAVO,SAAApmC,EAAAjB,GAWN,GADFqnC,EAAazc,SAAA5qB,GACXA,EAAOA,KAAKud,CAEb,GAAAjb,GAAAwD,KAAAmC,IAxKAjI,EAAAR,KAAAoS,QAAA,WAyKH63B,EAAAA,KAAAA,QAAqB,cACnBjqC,OADmB,MACbyB,EACMjB,EAAAud,MAAmBnhB,GAAnB4D,EAAAud,KAASne,IAATkD,GAAiC,EAF1BtC,EAAAud,MAAAvd,EAAAud,KAAAtc,IAAAA,GAAAqB,EAAA,EAclB,OAAA,IAED9C,UACA4O,KAAAA,OACEA,WAAIs7B,SAAY5C,EAAAA,EAAeC,GAE/B,GAAAyC,KACE,KAAA,GAAAvoC,KAAOyoC,GAAP5rB,UACE0rB,EAAKjnC,KADPpF,EACO2gB,UAAA7c,GAEL,OAAAuoC,IAEAnC,YAAK,SAAApmC,EAAAjB,GACL,MAAAA,GAAKud,MAAAvd,EAAAud,KAAAtc,IAAAA,IAGLwoC,qBAAKjqC,KAAA,OAEL4O,WAAA,SAAAhP,EAAAhD,EAAA4R,GACE27B,QACA1oC,GAAA,IAAAzB,KAAA,eAbJyB,GAAA,GAAAzB,KAAA,cAgBDyB,GAAA,GAAAzB,KAAA,cA7BCyB,GAAI,EAAGzB,KAAM,cAgCjB2P,UAAAA,SAAYlO,EAAAjB,GACVA,EAAAkH,eAAAjG,IA1BO2oC,WA8BXC,KAAAA,SACErqC,WAAM,SADKJ,EAAAhD,EAAA4R,GAIT,IAAIhO,GAFNoO,GAAY04B,EAAS1nC,SAAUhD,EAAO4R,EAAOA,EAAA,MA5BvC27B,KA8BA3pC,EAAAA,EAAO8mC,EAAAA,EAAAA,SAAAlkC,EACX,OAAG5C,EAAauT,GAAAA,IACd,IAAO,MADT,IAoBK,MACH,IAAO,MAER,IAAA,KA5BQ,IAAA,KA6BXyzB,IAAW,MACThnC,IAAKkH,MAEN,IAAA,MAtPA,IAAA,MAyPDkH,EAAY7L,KAAAmnC,EAAStqC,IAzPpB,MAAAuqC,IAgQDnqC,WAAM,SADOJ,EAAAhD,EAAA4R,GAEbI,OAAAA,GAGC07B,YALY,GAAAD,aAOfE,KAAAA,UACEvqC,WAAM,SADOJ,EAAAhD,EAAA4R,GAGX,GAAI3R,GAAAA,EAAQyqC,QAAeC,EA9C3B,OAAG/mC,IAAQA,EAAKuT,gBAkDhBtS,GAAA,GAAAzB,KAAA,mBAAGnD,GAAAA,GAAMmC,KAAN,mBACDyC,GAAA,GAASA,KAAI5E,mBADf4E,GAGK,GAAAzB,KAAA,mBACHyB,GAAA,GAAAzB,KAAA,mBAEDyB,GAAA,GAAAzB,KAAA,mBAbUyB,GAAA,EAAAzB,KAAA,kBAcb6nC,GAAAA,EAAa7nC,KAAA,kBACXyB,GAAOjB,EAAAA,KAAKuiC,kBAEbthC,GAAA,EAAAzB,KAAA,kBAvRAyB,GAAA,EAAAzB,KAAA,kBAwRHwqC,GAAAA,EAAcxqC,KAAA,kBACNyB,GAAA,EADMzB,KAAA,kBAEZ4O,GAAAA,EAAY5O,KAAA,kBACNnD,GAAAA,EAAAA,KAAQyqC,kBACRmD,GAAAA,EAAAA,KAAY,mBAITzqC,GAAQyqC,EAAAA,KAAV,kBAGChpC,UAAAA,SADiBA,EAAAjB,GAEjBR,EAAAA,eAAMA,IAIX0qC,UAhDH1qC,KAAM,SAiDJ4O,WAAO+7B,SAAAA,EAAP/tC,EAAA4R,GAjBU,MAAA84B,GAAAC,SAAA3nC,EAAAhD,EAAA4R,IAoBV87B,YAAO9pC,EAERoqC,UAtBW,GAAAC,eAwBdC,KAAAA,SACE9qC,WADoB,SAAAJ,EAAAhD,EAAA4R,GAEpBI,MAAAA,GAAY24B,SAAS3nC,EAAUhD,EAAO4R,IAEpC87B,YAAIG,GA9CRF,eAiDIvqC,KAAA,QACE4O,WAAIpO,SAAa3D,EAAjBD,EAAA4R,GACAi8B,GAAAA,GAAUjqC,EAAa+mC,SAAvB3nC,EAAAhD,EAAA4R,EAAA,EAIA,OAAA3R,GAAImD,OAAOnD,IACNmD,GAAAA,EAAQyqC,GAAAA,QAAYzqC,KAAAnD,EAAA,GAAAkmC,cAOxB8E,YAAA,SAAApmC,EAAAjB,GACF,MAAAA,GAAAuiC,SAAAthC,IAGF+oC,cAAD3C,KAAAA,OACEj5B,WAAOpO,SAAAZ,EAAPhD,EAAA4R,GAIJu8B,IAAAA,GA9BsBluC,GAAAyqC,EAAAC,SAAA3nC,EAAAhD,EAAA4R,GA4BpB87B,KA5UCK,KA8UHI,EAAc,EAAA3nC,EAAAvG,EAAAmC,SAAAoE,EAAA,CACZpD,GAAMA,GAAAnD,EADMuG,GAAApD,IAEZ4O,KAAY67B,KACN5tC,EAAQyqC,IAAAA,EACR0D,EAAJjoC,MA/CMtB,GAAIzB,EAiDNA,KAAIoD,KAKFqG,MAAAA,IAGHo+B,YAAA,SAAApmC,EAAAjB,GAADwqC,MAAAA,GAASvhC,MAAMhI,GA9CnB6oC,YAAY,GAkDVQ,sBACE/pC,KAAAA,OACEU,WAAIupC,SAASxP,EADH5+B,EAAA4R,GAMdzN,IAAAA,GAJIf,GAAMw7B,EAAAA,SAAAA,EAAAA,EAAAA,GAFRiP,KAKDE,KACD5pC,EAASA,EAAAA,EAAAA,EAAAlE,MAAYmC,SAAAoE,EAAe,CAApCqnC,EACW7tC,EAAS6E,MAAhB2B,GADJpD,OAAA,EAzBU,IAAA,GAAAoD,GAAA,EAAAA,EAAAvG,EAAAmC,SAAAoE,EAAA,CA+BZykC,GAAAA,GAAahrC,EAAAuG,GAAApD,IACPyJ,KAAJghC,KACAA,EAAAzqC,IAAcQ,EACZmqC,EAAWhtC,MACR4K,GAAAA,EACDkB,KAAAA,KApCM,MAAAkhC,IA9UX9C,YAAA,SAAApmC,EAAAjB,GA0XHyqC,MAAAA,GAAcjrC,MAAAyB,GAEZmN,YAAY,GA9Cdm8B,cAiDI/qC,KAAIkrC,YACJt8B,WAAI7N,SAAUmqC,EAAdtuC,EAAA4R,GAIE,IAAA,GAHC3R,GAAMmC,EAAYuoC,SAAA3nC,EAAAhD,EAAA4R,GACnBw8B,KAEI5nC,EAAA,EAAIA,EAAAA,EAAIA,SAAQpE,EAAAA,CAEhB,IAAA,GADFyK,GAAI,EACElB,EAAAA,EAAAA,EAAAA,EAAO5K,GAAAA,MAAY4F,SAAM1G,EAAA,CAC7B,GAAA0L,GAAGA,EAAa4iC,MAAbtuC,EAA4BuG,GAAAG,MAAUgF,GAAAA,GACvC6iC,KAAAA,EAASz1B,MAEVlM,IA9CLuhC,EAASvhC,EAAM,WAAaA,EAmDxBhI,GAAAA,KACAzB,KAAAA,GAAAA,KAAMw7B,GAFIz6B,EAAZgC,MAKDtB,GAAAupC,EAAAxP,GAhDCx7B,KAAMw7B,GA0DT,OALGz6B,GAAAA,EAASA,KAAOb,SAAKsS,EAAAC,GACjB,MAAAD,GAAOA,GAAAC,EAAOA,MAKtBo1B,YAAO9mC,SAAPU,EAAAjB,GAEFqnC,IAAAA,GAtCYp+B,GAAA,EAsCZo+B,EAAAA,EAAaztB,EAAA5Z,EAAA+C,MAAAvE,SAAAob,EAAa5Z,CACxB,GAAGiB,GAAH9D,EAAa4F,MAAA/C,EAAA+C,MAAA6W,GAAA3Y,GACX8G,KAAAA,EAAAoN,MAEDlM,IA9CD,MAAOA,IAAOhI,GAmDZ6oC,YAAI9O,GAEJyP,cACEjrC,KAAA,YACEqrC,WAAAA,SAAAA,EAAAzuC,EAAA4R,GAED,GAAA3R,GAAIyqC,EAAagE,SAAb1rC,EAAyBhD,EAAA4R,GAG7B08B,GAAAzpC,IAAA,EAAAzB,KAAA,OACFe,GAAAmqC,EACF,IAAAruC,EAAAmC,OAAA,EAAA,CA1DS,IAAA,GAQJosC,MARIhoC,EAAA,EAAAA,EAAAvG,EAAAmC,SAAAoE,EA6DZskC,IAAU,GAAAttB,GAAA,EAAAA,EAAAvd,EAAAuG,GAAS3B,MAAItB,SAAbia,EAA2B,CAC/BmxB,GAAAA,GAAJ5tC,EAAA4F,MAAA1G,EAAAuG,GAAAG,MAAA6W,GAAA3Y,KACI+pC,IAAJjjC,EAAA4iC,WAAA,QAAA5iC,EAAAvI,OAAAorC,KAjDQA,EAAS,QAAU7iC,EAAKvI,MAAQuI,EAAK9G,IAwD1C,IAAA,GAAA+5B,KAAA4P,GACFrqC,EAAAgC,MAAGtB,GAAI2Y,EAAIA,GACPha,KAAMmD,GAKXxC,GAACA,EAAA/B,QAAA,GAAausC,GAGJxqC,EAAAb,KAAA,SAAAsS,EAAAC,GA1cX,MAAAD,GAAA/Q,GAAAgR,EAAAhR,KA8ZC,MAAOV,IAoDP8mC,YAAI9mC,SAAUmqC,EAAd1qC,GACA,GAAAiB,IAASzC,EACP,OAAIosC,CAMEA,KAAAA,GAHJE,GAAU,EACRD,EAAW1tC,EAETytC,EAAAA,EAAAA,EAAAA,EAAS7nC,MAAAvE,SAAcgB,EAAvB,CAED,GAAAw7B,GAAAh7B,EAAA+C,MAAA6W,EACFzc,GAAA4F,MAAAi4B,EAAA/5B,IACF0pC,YAlDI3P,EAAI/5B,IAAMA,EAmDf4pC,GAAeD,EAAAA,IAEPA,EAAAA,IAAAE,IACJtrC,EAAMw7B,EAAAA,MAKRz6B,MAAAA,GAASuqC,GAGTvqC,SAAAA,SAASA,EAAOb,EAAKE,GAKxB,IAAA,GAJOmrC,GAAA,EAEDC,EAHH,EAKHpoC,EAAA,EAAAA,EAAAjD,EAAAoD,MAAAvE,SAAAoE,EAnDC,GAAGjD,EAAMoD,MAAMH,GAAG3B,IAAMA,EAAI,CAoD9B8pC,EAAOxqC,EAAPwC,MAAAH,GAAAqF,GApCS,OAwCP,IAAA,GAAA2R,GAAO,EAAAA,EAAPha,EAAAmD,MAAAvE,SAAAob,EAED,GAAAha,EAAAmD,MAAA6W,GAAA3Y,IAAAA,EAAA,CAnDG+pC,EAAOprC,EAAMmD,MAAM6W,GAAG3R,GAoD1B,OAGE,MAAGF,GAAKkjC,GAEJnB,YAAA,EAEDlB,WAAA,GAEJsC,aAnDH1rC,KAAM,WAoDJ4O,WAAO,SAAPhP,EAAAhD,EAAA4R,GArDS,GAAA3R,GAAAyqC,EAAAC,SAAA3nC,EAAAhD,EAAA4R,GAwDL+8B,GAAJ9pC,IAAA,EAAAzB,KAAA,OACIwrC,GAAJN,EAlDA,IAAGruC,EAAMmC,OAAS,EAAG,CAsDjBusC,IAAAA,GAFAH,MAEAG,EAAOprC,EAAAA,EAAAA,EAAAnB,SAAPoE,EACA,IAAA,GAAAgX,GAAA,EAAAA,EAAAvd,EAAAuG,GAAAG,MAAAvE,SAAAob,EAAA,CAED,GAAA7R,GAAA5K,EAAA4F,MAAA1G,EAAAuG,GAAAG,MAAA6W,GAAA3Y,KACF8G,IAAAA,EAAAkjC,YAAA,QAAAljC,EAAAvI,OAAAorC,KAAGA,EAAQhxB,OAAQ7W,EAANvD,MAAduI,EAAA9G,IAMC,IAAA,GAAA+5B,KAAA4P,GAADrqC,EAAOyqC,MAvEE/pC,GAAA2pC,EAAA5P,GAyEX8O,KAAY9O,GAKZ5sB,GADM7N,EADI/B,QAAA,GAEEksC,GAGAnqC,EAAAb,KAAA,SAAAsS,EAAAC,GALF,MAAAD,GAAA/Q,GAAAgR,EAAAhR,KAxCR,MAAOV,IAET8mC,YAAa,SAASpmC,EAAIjB,GACxB,GAAGiB,IAAO,EACR,OAAO,CAGT,KAAI,GAAI2Y,GAAE,EAAEA,EAAE5Z,EAAK+C,MAAMvE,SAASob,EAAG,CACnC,GAAIohB,GAAMh7B,EAAK+C,MAAM6W,EAErB,IADWzc,EAAY4F,MAAMi4B,EAAI/5B,IACzBgqC,YACHjQ,EAAI/5B,IAAMA,EACX,OAAO,EAKb,OAAO,GAETimC,SAAU,SAASjmC,EAAItB,EAAOC,GAI5B,IAAI,GAHAmrC,GAAO,EACPC,EAAO,EAEHpoC,EAAE,EAAEA,EAAEjD,EAAMoD,MAAMvE,SAASoE,EACjC,GAAGjD,EAAMoD,MAAMH,GAAG3B,IAAMA,EAAI,CAC1B8pC,EAAOprC,EAAMoD,MAAMH,GAAGqF,GACtB,OAGJ,IAAI,GAAI2R,GAAE,EAAEA,EAAEha,EAAMmD,MAAMvE,SAASob,EACjC,GAAGha,EAAMmD,MAAM6W,GAAG3Y,IAAMA,EAAI,CAC1B+pC,EAAOprC,EAAMmD,MAAM6W,GAAG3R,GACtB,OAGJ,MAAO+iC,GAAOD,GAEhBjB,YAAY,EACZlB,WAAY,GAEduC,YACE3rC,KAAM,OACN4O,WAAY,SAAShP,EAAUhD,EAAO4R,GACpC,MAAO7Q,GAAY+qB,aAErB4hB,YAAY,IAliBpBrC,EAAAjlC,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,cAAA,kBAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,gBAAAqU;cCDA,WAIA,QAASt8B,GAAO5N,EAAaE,EAASD,EAAQupB,GAA9C,GAAA5D,IAAgB5lB,OAAaE,MAA7B+B,KAAsChC,mCAAgB2G,IAAA,IAGhD8e,IADJ9X,OAAIgY,MAAAA,KAAmB,kBAAgB3jB,IAAM,uCAC7C2L,OAAI8X,KAAAA,KACC9X,gBAAe3L,IAAM,iCAMtB2L,OAAA,KAAA3L,KAAA,SAAA2E,IAAA,oCACCgH,OAAQ,MAAO3L,KAAM,aAAY2E,IAAM,2CAHvCgH,OAAQ,KAAM3L,KAAM,WAAY2E,IAAM,sCAO3CgH,OAAIigC,KAAAA,KAAAA,YAAoB9hC,IAAaxM,sCAErCqO,OAAGigC,MAAAA,KAAmB,WAAAjnC,IAAA,qCACpBrJ,OAAQsH,MAAQ6gB,KAAAA,aAAa9e,IAASknC,qCAGnCD,EAAA9hC,aAAAxM,QAAA,iBACFwlB,EAJD,IAKD8oB,IALCtwC,QAAQsH,QAAQ6gB,EAAa,SAASooB,EAAY/oC,GAOhDgpC,EAAYhiC,QAAAA,IACZ2Y,EAAYopB,IAKX,IAAAC,GAAAhiC,aAAAxM,QAAA,kBACFmlB,EAJD,IAiBAwB,OAZD6nB,IALCxwC,QAAQsH,QAAQ6gB,EAAa,SAASooB,EAAY/oC,GAOjD2f,EAAAA,QAAmBkB,EAAAhY,QAAAmgC,EAAA15B,QAAAy5B,EAAAlnC,MAAA,IACpB8d,EAAYK,KAKZa,MAAAA,IACAb,EAAAA,IAIEW,YAAAA,EACAE,iBAAKA,EALPb,YAAcA,EAOZL,UAAIspB,EAEF9nB,aAAG4nB,SAAWlgC,GAEbrP,KAAAqnB,iBAAAhf,IAAAA,CAJH,IAAIonC,KAOJA,SAAAA,QAAcpoB,EAAAA,SAAdkoB,EAAA/oC,GACA2gB,EAAcsoB,QAAdpoB,EAAAhY,QACAogC,EAAKtoB,KAALooB,KAIAE,EAAIC,KAAAA,GALJvoB,EAAcsoB,EAOdzwC,KAAAA,YAAgBmoB,GAGbjT,kBAAA,SAAAy7B,GACF,GAJDD,GAAA,IAMA1wC,SAAKitB,QAAAA,EAAYyjB,SAAjBH,EAAA/oC,GA/BG+oC,EAAAlgC,QAAAsgC,IA2BCD,EAAcH,KAUhB5tC,KAAAA,YAAAA,IAGAspB,YAAOvD,SAAPzB,GACDA,GAAAA,GAAAjmB,KAAAwmB,cALCxmB,KAAKwmB,YAAcP,EAOrBtkB,IACA6L,aAAQ2Y,QAAL,gBAA2BoF,EAAUlc,QACtC1N,IACDspB,EAAAvD,SAHD,IAAI6D,GAAWvrB,KAAKwrB,aAOpB,OAAAxrB,KAAAmmB,WAAAoF,GAlDGvrB,KAAAgsB,aAAA/F,GAgDHjmB,KAAKuQ,QAWH/C,aAAAA,SAAapH,GAEb3E,GAAAA,GAAAA,KAAa0R,YAEXnT,KAAAmmB,UAAIoF,EACJ9pB,eAAAA,WAAsB8pB,aACtB9pB,aAAAA,WAAawkB,kBACbxkB,IACAA,EAAAA,QACEwpB,GAAOvD,CACR,GAFD6D,GAAAvrB,KAAAwrB,aAGD/pB,GAAAqxB,OAAAvH,EACF9pB,EAAAwkB,SAAAjmB,KAAAmmB,UAAA9d,IAvEE5G,EAAA4N,OAAArP,KAAAmmB,UAAA9W,OAmEC5N,EAAa8O,KAAK,aAAe,WAOvCib,EAAa9D,aAOZ8D,YAjFI,WA2EH,QAAGhe,aAAaxM,QAAQ,cAgBzBkrB,YA3FI,SAAAje,GAoFCA,EAYHT,aACI6X,QAAA,YAAA,KAJP9U,aAAMnK,WAAW,aAMb3E,KAAAA,aAAaqxB,KAAbtM,cAGFjW,KAAA,WACE9O,KAAAA,cACAA,EAAAA,OAAA,GAGHzB,KAAA4vC,UAAA5vC,KAAAwmB,YA3GH/kB,EAAAqxB,OAAA,GAsGO9yB,KAAKmmB,YACN1kB,EAAawkB,SAAWjmB,KAAKmmB,UAAU9d,IACvC5G,EAAa4N,OAASrP,KAAKmmB,UAAU9W,QAEvC3N,EAAQuqB,YAAYjsB,KAAKwmB,eApJ/BxnB,QAAAO,OAAA,SAAA+3B,QAAA,UAAA,eAAA,WAAA,UAAA,SAAAjoB;cCDA,WAIA,QAASxP,GAAW0B,GADpBvC,OACAkU,SAASrT,SAAW0B,EAApB2C,GACE,GAAA2rC,GAAO7vC,KAAAyH,eACLyL,KAAU28B,IAAAlR,MAASv0B,QAAWlG,EAAMkG,GAAA7J,QAElCsvC,EAAGzlC,GAAaylC,MAAbppC,KAAuBk4B,GAGxBkR,EAAOzlC,GAAWnB,YAAc,GAAIE,OAAQygB,UAD5CimB,KAAAA,kBAAkBtvC,EAAW2D,EAA7BkG,GAAA7J,QAGDP,KALD+F,kBAMKqE,GAAAlG,KAKP8D,mBAAqB,SAAS9H,EAAW2H,GAAzCG,KAAAA,gBAAqB9H,GACnB2H,GAAKioC,IAAgB5vC,IAArB2H,EAAA3H,GAAAuP,KAAA5H,EAAA3H,GAAAuP,IAAAtK,IACAqI,aAAG3F,QAAU3H,YAAV2H,EAAiCA,GAAO3H,IAAWuP,KAKxDpP,YAAa,SAAS+J,EAAW2lC,GAAjC1vC,GAAAA,GAAAA,KAAaoH,eAGX,OAFA2C,GAAI7J,KAAQyvC,mBAAZ5lC,EAAA7J,GACA6J,KAAAA,kBAAiB4lC,EAAAA,GACZjqC,GAIPiqC,mBAAoB,SAAS5lC,EAAW6lC,GAAxCD,GAAAA,GAAoB,CAClB,IAAA5lC,EAAI8lC,YAAJ,MAAA9lC,EAAA1H,OAAA,EAAA,CACA,GAAG0H,GAAU+lC,EAAYA,YAAQ/lC,IAC/B,IAAAgmC,EAAIA,EAAahmC,CACjB,GAAGgmC,GAAan5B,OAAG7M,EAAA+3B,OAAAiO,EAAA,EAAAhmC,EAAA1H,OAAA0tC,EAAA,GACjBC,GAAIA,IACJH,EAAgBG,EAAG,EACjBH,EAAAA,EAAiBG,OAAAA,EAAaD,EAA9B,KAMN,IAAA,GAAIE,GAAelmC,IAAfkmC,CACJ,GAAAlmC,GAAQkmC,CAMN,IALAJ,EAAgBI,IAChBlmC,EAAG8lC,EAAoB,KAAAA,EAAA,OAIpB9lC,IAAa6lC,IAId,KAJFC,KAQF,MAAA9lC,IAGF+E,YAAAA,SAAajP,GACX,GAAA2H,GAAIA,KAASJ,eACbvH,KAAGA,WACQ2H,GAAO3H,GACdF,KAAK8vC,gBAAgB,MACrB9vC,KAAKuwC,WAAW1oC,KAItB9B,kBAAAA,SAAmBqE,EAAA2lC,GACjB,GAAAxvC,GAAIA,KAAQkH,eACZ2C,KAAGA,IACD7J,EAAAA,GAAAA,MAAAwvC,EACAxvC,EAAAA,GAAA0I,YAAA,GAA+BE,OAAYygB,WAIzCrpB,EAAA6J,IAAA7J,MAAAwvC,EAAA9mC,YAAA,GAAAE,OAAAygB,WAIL5pB,KAhFIuwC,WAAAhwC,IAmFHgwC,WAAI1G,SAAAA,GACJr8B,GAAAA,GAAAzL,KAAqBC,UAAcsjB,EACpC9X,cArFI6X,QAAA,aAAAC,SAAAC,gBAAAskB,KAwFHrpC,UAAKgwC,SAALjhC,EAAAnP,EAAAE,GAiBDN,KAzGIwwC,YAyFDjhC,EAkBJihC,EAhBIlwC,EAAM8P,WAoBR9P,EAAIkH,YAlBFlH,EAAMmQ,UAoBRnQ,EAAGF,IACDE,EAAAqP,WACAvP,EAAAA,QACDE,EAHD4M,iBAKE5M,EAAI4I,WACJ1B,EAAAA,UACAlH,EAAAkR,cACDlR,EAAAmR,eAnBCnR,EAAMqR,YAqBRnK,EAAAA,UACAA,EAAAA,YAGAA,YAAAA,SACAA,EAAWpH,EAAcyM,EAAUA,EAAnC4D,EAAAhB,EAAAE,EAAA9C,EAAAK,EAAAiD,EAAAG,EACA9I,EAAWpH,EAAc8M,EAAzBoE,EAA4CpE,GAE5C1F,GAAAA,GAAWpH,KAAAA,eAEXoH,IAAAA,IAAWpH,IAAcqR,GAAiBA,EAE1CjK,EAAWpH,MAlBN,IAAGmP,IAAgB/H,GAAY,CAqBpC,GAAA0B,GAAKqnC,EAAW/oC,EA1IbA,GAAApH,GAAA8I,QAwHM1B,GAAW+H,GAuBlB/H,EAAIqiC,GAAAA,WAA2B4G,EAC/BjpC,EAAIA,GAAazF,YAAW8nC,EAC5BriC,EAAOA,GAAPiJ,UAAAA,EACDjJ,EACKmf,GACLlX,IAAAA,EArBDjI,EAAWpH,GAAcuP,WAAaA,EAuBtCnI,EAAApH,GAAAyM,QAAAA,EACDrF,EAvJIpH,GAAA8M,iBAAAA,EAkIH1F,EAAWpH,GAAc+P,WAAaA,EAuBxCkW,EAAAA,GAzJK/V,UAAAA,EA0JLjG,EAAAA,GAAiBmH,cAAAA,EACfhK,EAAIpH,GAAJqR,eAAuBA,EACrBjK,EAAK6e,GAAe7Y,YAAaxM,EACjCwG,EAAGpH,GAAHkR,UAAsBA,EACpB9J,EAAIA,GAAa8H,UAAK7H,EAEpB+F,KAAAA,WAAAA,IAGH/F,cAAA,WACF,IArBC,GAAIoiC,GAAkBvkB,SAASmrB,oBAAoBjjC,aAAaxM,QAAQ,cA/IvE,OAsKSqlB,MAAAA,MAAZwjB,GAGFiG,MAAAA,IAGItiC,UAID6Y,aAAA,KACFhc,gBAAA,WAjLH,IAAArK,KAAAqmB,eAmLDrmB,KAAAqmB,aAAA7Y,aAAAxM,QAAA,gBAxLDhB,KAAAqmB,cAAA,CAmKU,GAAI7e,GAAaxH,KAAKyH,eACjBzH,MAAKqmB,eAAgB7e,KACxBgG,aAAapH,WAAW,gBACxBpG,KAAKqmB,aAAe,MAK1B,MAAOrmB,MAAKqmB,cAGdypB,gBAAiB,SAAS5vC,GACxBF,KAAKqmB,aAAenmB,EAChBA,EAIFsN,aAAa6X,QAAQ,eAAgBnlB,GAHrCsN,aAAapH,WAAW,eAAgBlG,KAhLhDlB,QAAAO,OAAA,SAAA+3B,QAAA,cAAA,eAAAz3B;cCDA,WAIA,QAASyB,GAAWD,GAApB,OAEEqvC,YAAO,SAAAr6B,GAGH,GAAIpP,MADNypC,IAuBE,OArBA1xC,SAAI4kC,QAAJvtB,EAAA,SAAApI,EAAA0C,GAGe,OAAV1C,GAAoC,MAAlBA,EAAMoV,WAD7BrkB,EAAQsH,QAAQ+P,GACdutB,EAAG31B,EAAAA,OAAAY,WAGA+0B,EAFD31B,EAGKqR,QAAAzQ,SAAA,EAAA5H,MAAAgH,EAAAoV,aAMTrkB,QAAQsH,QAAQs9B,EAAM,SAAS31B,EAAO0C,GAAtC3R,QAAQsH,QAAQs9B,EAAM38B,MAAA,SAAAgF,EAAqBzF,GACzCxH,EAAQsH,YAAcW,EAAtB4H,UACE5H,EAAGgF,KAAKupB,OAMLn0B,EAAY6F,WAAWD,IAGhC6c,kBAAmB,SAASvjB,EAAO+e,GAAnCwE,GAAAA,GAAAA,CAQE,OAPA9kB,SAAI6P,QAAAA,EAAJ,SAAAZ,EAAA0C,GACA3R,GAAQsH,EAAQ/F,OAAO0N,EAASA,OAAO0C,GACrC9B,MAKKA,GAGT8hC,iBAAkB,SAASt6B,GAA3Bs6B,GAAAA,KAeE,OAZA3xC,SAAQsH,QAAQ+P,EAAY,SAASpI,EAAO0C,GAA5C3R,IAGOiP,EAAMjH,UAATC,EAAGgH,EAAMjH,OAAWiH,EAAAjH,WAApBiH,EAGQA,QACNhH,EAAAA,EAAQA,OAAM+H,EAAOf,WAK3B5M,EAAOA,WAAY6F,IAGrBsD,4BAAAA,SAA6BtB,EAAA3I,GAC3B,GAAAqwC,GAAIA,KAAaC,cAAKA,GACtBC,EAAIA,KAAgBH,iBAAKA,GACzBttB,EAAIA,KAAWqtB,YAAKA,GACpB5B,EAAIA,EAAW8B,OAAW5hC,GAAXA,OAAiCA,EAMhD,OALG,OAAH9F,EAAGA,WAAAA,EAA2BA,UAAMoG,OAAN,IAC5Bw/B,EAAAA,EAAWA,OAAS9/B,EAAO9F,YAE7B4lC,EAAAA,EAAWztC,WAAY6F,GAEvBlH,KAAO+wC,mBAAKA,EAALjC,IAGTiC,mBAAAA,SAAoB7nC,EAAA4nC,GAYlB,QAAAE,GAASA,GACP,GAAAC,GAAIA,EAAU5vC,MAAY4F,EAAMgF,GAChC,OAAAilC,GAAGA,EAAWD,IACZh6B,OAAOA,EAAOi6B,EAAWD,IAAX9kC,KAIf,EAID,QAAI8kC,GAAU5vC,GACd,GAAA4vC,GAAGC,EAAmBC,MAAOllC,EAAA9G,GAC3B,OAAA+rC,GAAOj6B,EAAOi6B,MAEXj6B,OAAAi6B,EAAAD,EAAAE,MAAAhlC,KAGN,EAMA,QAAAilC,GAAAnlC,GAHCA,EAAKE,IAAMnC,KAAKyoB,MAKlBxmB,EAAAE,KAASklC,EAAAA,EAAaplC,KAAA,EAAAqlC,EAAArlC,KAInB,QAFDolC,GAGKlsC,GACH,GAAA8G,GAAOilC,EAAS/kC,EACjB,OAAAF,IACF9G,GAAAA,EAAAgH,IAAA8K,OAAAhL,EAAAE,KAAAqiB,GAAAviB,EAAAuiB,KAGIviB,GAAA9G,EAAHgH,IAAiB,EAAAqiB,GAAA,GADnB,QAAS+iB,GAAQtlC,GAMjBA,EAAIkE,IAAJ,GACA1L,EAAKgC,KAAAwF,GAsLH,QAAAulC,GAAArsC,EAAAssC,EAAAtlC,GAEA,GAAAulC,IAAGD,EAAiBvoC,GAAM2D,CAExB6kC,IAAGC,GAAaC,EAAA,GAAAF,GAAA,EAAAvhC,GAEfuhC,GAAA,EAAAG,EAAA1lC,GAGH,IAAA2lC,GAAIC,CACJ,IAAA7oC,EAAI8oC,SAAAA,EAAJnlC,QAAA1H,GAAA,EAAA,CACA,GAAG+D,GAAHgoC,EAAkB7vC,EAAA0L,SAAA7D,EAAA2D,QAAA1H,IAAA8sC,QAChBD,KADFF,EAGKA,GAAA,EAAA76B,OAAA06B,EAAAxlC,OAAA,EAAA8K,OAAA3G,KAGLihC,GAAGroC,GAAMgE,EAAAA,IAAAA,GACP6kC,IAAAA,GAAe7oC,EADjB8oC,EAGK,CAeJ,IAbAA,EADCD,EAAAA,QACD7oC,EAAA2D,QAAA1H,GAGI4sC,GAGCA,EADF7oC,EAAAgE,iBACMglC,EAAAA,iBAA4B/sC,GAI/B,IAGN6sC,EACF,GAAAD,EAAA,EAAA,CAVK,GAAII,GAAuBjB,EAAW7vC,EAAY0L,SAAS7D,EAAMgE,iBAAiB/H,IAAI8sC,QAY5F,IAAAE,EAAA,CACIjpC,GAAAA,GAADwoC,GAA2B/hC,EAAAA,OAANwiC,EAAkCxiC,OAA1D,EAA8EsH,OAAA3G,GAC5EkhC,IAAAA,GAAiBrsC,EAAjB,IAAuBitC,IAAQjmC,SAI/BqlC,IAAAA,GAAAA,EAAiB,IAAMa,IAAQlmC,IAvRjC,GAAA1H,MACAysC,IACA,KAAAhoC,EAAIA,cAADA,EAAuBA,gBAAvBA,EAA+CA,eAChD,QAGFlK,SAAAA,QAAQsH,EAAR,SAA+B2F,EAASA,GACtCilC,EAAAA,EAAWjlC,IAAXA,GAmDD,IAAAkE,EAKAA,GAVI,cAAgBjH,GAWhBA,EAAAiH,WAAA,IAJL,EAAA,IAAIG,EAKFA,GAGF,aAAApH,GAHcA,EAAMoH,UAAY,IAItB+gC,CAAV,IAAIz7B,GAAMy7B,EAAS,EAQnBD,GAAIkB,GACJlB,EAAAA,EALA,IAAImB,GAAMlB,EAAS,EAQnBD,GAAIoB,GACJpB,EAAAA,EALA,IAAIkB,GAAMjB,EAAS,EAQnBD,GAAAkB,GACAf,EAAIkB,EAEJrB,IAAAA,GAAQqB,EAAR,EACAlB,GAAAA,GANAA,EAAQiB,EAURpd,IAAAA,GAAAic,EAAgBllC,GAChBilC,GAAAA,KAAQhc,EAARjpB,IAAA8K,OAAA/N,EAAAyI,YAAA+qB,IACA6U,EAAAA,GANAA,EAAQkB,EAURC,IAAAA,GAAMvmC,EAAWslC,EACjBF,GAAAA,KAAQmB,EAARvmC,IAAA8K,OAAA/N,EAAAyI,YAAAmrB,iBANAsU,EAAQhc,GAQRmc,EAAIoB,EAEJvB,IAAAA,GAAQuB,EAAR,KALAD,GAAMvmC,IAAMnC,KAAKynC,IAAI,IAAKrc,EAAIjpB,IAAI8K,OAAO/N,EAAMsI,cAAc+qB,WAQ7DgV,EAAIqB,EAEJA,IAAAA,GAAOzmC,EAAWslC,EAClBF,GAAAA,KAAQqB,EAARzmC,IAAA8K,OAAA/N,EAAAyI,YAAAorB,cANAqU,EAAQuB,GAQRpB,EAAAoB,EAEA,IAAAC,GAAAvB,EAAA,KALAuB,GAAOzmC,IAAMnC,KAAKynC,IAAI,IAAKkB,EAAKxmC,IAAI8K,OAAO/N,EAAMsI,cAAc+qB,WAQ/DgV,EAAIa,EAKF,IAAAS,GAAIC,EAAYzB,KAEhBe,EAAIW,EAAQ1B,GANV2B,EAAU3B,EAAS,EAGvB,KAAInoC,EAAMyG,YAAqC,GAAvBzG,EAAMyG,WAAWxK,GAAS,CAQhDitC,GAAAA,GAAAf,EAAeyB,IACfV,EAAepoC,EAAA,KACfooC,EAAQjmC,EAAOnC,MAGfooC,EAAcpoC,EAAKyoB,MAEnB8e,GAAAA,KAAQa,EAARjmC,IANAimC,EAAQjmC,KAAOnC,KAAKyoB,MAAM7c,EAAIzJ,IAAI8K,OAAO/N,EAAMyI,YAAYgrB,iBAQ3DqW,EAAAA,KAAAhpC,KAAe8oC,MAAAA,EAAf3mC,IAAA8K,OAAA/N,EAAAyI,YAAAirB,gBAEAoW,EAAAA,IAAAhpC,KAAeA,MAAKyoB,EAAUtmB,KAAI8K,GAAAA,EAAO/N,GAAMyI,EAAYirB,OAN3DwV,EAAQjmC,IAAMnC,KAAKyoB,MAAM2f,EAAQjmC,KAAO,EAAE0mC,EAAK1mC,IAAI4mC,EAAM5mC,MAQzD6mC,EAAAA,KAAAhpC,KAAcA,MAAAipC,EAAmB9mC,IAAKmmC,EAAAnmC,KACtC6mC,EAAAA,GAEAzB,EAAAA,KAAQyB,EAAR7mC,IACD6mC,EAAA7mC,KAAAnC,KAAAyoB,MAAA7c,EAAAzJ,IAAA8K,OAAA/N,EAAAyI,YAAAgrB,iBANCqW,EAAQ7mC,KAAOnC,KAAKyoB,MAAM8f,EAAIpmC,IAAI8K,OAAO/N,EAAMyI,YAAYirB,gBAS7DoW,EAAIE,IAAU7B,KAAAA,MAAd2B,EAAA7mC,KAAA,GAAA6kC,EAAAgC,GAAAG,EAAAhnC,OANE6mC,EAAQ7mC,IAAMnC,KAAKyoB,MAAMugB,EAAQ7mC,KAAO,EAAE0mC,EAAK1mC,IAAI4mC,EAAM5mC,MAQ3D6mC,EAAA7mC,KAAAnC,KAAAyoB,MAAAwgB,EAAA9mC,IAAAmmC,EAAAnmC,KACAolC,EAAIroC,GAGF,GAAAmpC,GAAIe,EAAQ/B,GANV6B,EAAU7B,EAAS,EAUrB,KAAAnoC,EAAImqC,YAAJ,GAAgBhC,EAAS1hC,WAAzBxK,GAAA,CANA,GAAImuC,GAAYjC,EAAS,IAQzBgB,EAAeiB,EAAUnnC,KACzBkmC,EAAQlmC,EAAOnC,MAGfqoC,EAAcA,EAAQlmC,OACtBkmC,EAAAhB,EAAoB5e,MAEpB8e,GAAAA,KAAQc,EAARlmC,IANAkmC,EAAQlmC,KAAOnC,KAAKyoB,MAAM6f,EAAInmC,IAAI8K,OAAO/N,EAAMyI,YAAYkrB,qBAS3DqW,EAAAA,IAAAlpC,KAAgBsoC,MAAAD,EAAQp7B,KAAO/N,GAAMyI,EAAAA,GAAYkrB,EAAjD1wB,OANAkmC,EAAQlmC,IAAMkmC,EAAQlmC,KAAO,EAAE0mC,EAAK1mC,IAAIinC,EAAMjnC,KAQ9C+mC,EAAAA,KAAAlpC,KAAcA,MAAAupC,EAAmBpnC,IAAKyJ,EAAAzJ,KACtC+mC,EAAAA,KAAAlpC,KAAckpC,MAAQ/mC,EAAS0mC,IAAK1mC,EAAIinC,KACxCF,EAAAA,GAEA3B,EAAAA,KAAQ2B,EAAR/mC,IACD+mC,EAAA/mC,KAAAmmC,EAAAnmC,IAAA8K,OAAA/N,EAAAyI,YAAAkrB,oBAGDqW,EAAA/mC,IAAAnC,KAAAyoB,MAAAygB,EAAA/mC,KAAA,GAAA6kC,EAAAkC,GAAAM,EAAArnC,OACA+mC,EAAIO,IAAOpC,EAAAllC,KAAX,EAAA0mC,EAAA1mC,IAAAinC,EAAAjnC,KACAsnC,EAAAtnC,KAAaomC,KAAA9f,MAAQxb,EAAatF,IAAAA,EAANxF,KAC5BilC,EAAQqC,KAARzpC,KAAAyoB,MAAA4gB,EAAAlnC,IAAAmmC,EAAAnmC,KAPEolC,EAAQ2B,GAKV,GAAIO,GAAOpC,EAAS,GASpBoC,GAAAtnC,KAAIunC,EAAAA,IAAa1pC,OAASd,EAAOuqC,YAAWx8B,UAC5CxS,EAAAA,EAEA,IAAAkvC,GAAAtC,EAAA,KACAoC,GAAAtnC,KAAIynC,EAAOvC,IACXuC,EAAKznC,EACLilC,IAAAA,GAAAC,EAAA,MANIqC,EAAa1pC,KAAKynC,IAAI,IAAOgC,EAAKtnC,IAAM8K,OAAO/N,EAAMsI,cAAcgrB,WAAcqX,EAAS1nC,IAS9F1H,GAAIqvC,MAAAA,GAAAA,KAAczC,IAAAA,GALlB,IAAIuC,GAAOvC,EAAS,IASpBuC,GAAAznC,MAAAyJ,EAAAzJ,IAAAmmC,EAAAnmC,KAAA8K,OAAA/N,EAAAyI,YAAAksB,sCACAuT,EAAI2C,GACJxC,EAAAA,EANA,IAAIuC,GAAczC,EAAS,MAS3BO,EAAWP,KAASI,IAApB,EAAAmC,EAAAznC,IAAAjD,EAAAuI,eAAAgrB,gBAAAqX,EAAA3nC,IACA0lC,IAAK1lC,GAAL,KAAiBslC,IAAIznC,EAAciN,GAGnC,IAAA88B,GAAA1C,EAAA,GACAE,GAAIyC,EACJzC,IAAAA,GAAQyC,OAAR9qC,EAAAsI,cAAAyiC,cAEApC,EAAIqC,EAAQ7C,KACZE,GAAAA,KAAQ2C,KAARzC,IAAAznC,KAAAmC,IAAA,IAAA8K,OAAA88B,EAAA5nC,KAAAgoC,EAAAnqC,KAAAoqC,IAAAn9B,OAAA88B,EAAA5nC,KAAAgoC,EAAA,MAAA,GAPA5C,EAAQM,GAYRN,EATaF,EAAS,KAYtBE,EATYF,EAAS,KAYnBE,EATYF,EAAS,KAYrBE,EADAG,EAAiBgC,KA2CfxqC,EAAMyG,YAAqC,GAAvBzG,EAAMyG,WAAWxK,IAAkC,GAAvB+D,EAAMyG,WAAWxK,IAYrEqsC,EAAA,KAAAY,EAAAjmC,IAAA6mC,EAAA7mC,KARIjD,EAAMyG,YAAqC,GAAvBzG,EAAMyG,WAAWxK,IAAkC,GAAvB+D,EAAMyG,WAAWxK,IAYrEqsC,EAAeH,KAAAA,EAAfllC,IAAA+mC,EAAA/mC,KAGAjD,EAAImrC,YAAJ,GAAoBnrC,EAApByG,WAAAxK,IACAkvC,EAAYC,KAASnoC,EAAMooC,IAAAA,EAAgBpoC,IAA3C+mC,EAAA/mC,IAAA6mC,EAAA7mC,IAID,IAlXImoC,GAAAjD,EAAA,KAwWHiD,GAASnoC,IAAMsmC,EAAGtmC,KAAO,EAAEumC,EAAMvmC,IAEjC,IAAIooC,GAAWlD,EAAS,KAYxBkD,GACErrC,IAAMoI,EAAAA,KACNpI,EAAAA,EAAMoI,IAEN,IAAA+iC,GAAOhD,EACL,KASL,OAJEgD,GAVDloC,KAWKmoC,EAAAnoC,IAAAooC,EAAApoC,KAAA,EACHolC,EAAA8C,GAlYC5vC,GAoXLosC,cAAe,SAAS3nC,GAqBtBlK,MACEkK,GAAG+E,WACD+0B,EAAAA,UAAAA,SAAA,IAFJ79B,GAAA,EAAAgH,IAAAjD,EAAAoI,UAAA0qB,WAbK72B,GAAG,EAAGgH,IAAIjD,EAAMoI,UAAU2qB,UAoB/B92B,GAAI69B,EAAAA,IAAAA,EAAJ1xB,UAAoB4qB,eAClB/2B,GAAA,EAAOgH,IAAPjD,EAAAoI,UAAA6qB,cAQAkH,cAAIryB,SAAU9M,EAAAoH,EAAgB9E,GAE9B,GAAAw8B,GAAWhyB,IAQP,IAPFhS,QAAAsH,QAAQ0K,EAAR,SAAsB/C,EAAAzH,GAlBxB,GAAGyH,EAAMumC,YAActwC,EAAKiB,IAAM8I,EAAMi1B,YAAch/B,EAAKkH,eAEzD,YAkBE43B,EAAUA,MAKVA,EACE,MAAA,KAQE52B,KALD,GAAA5F,GAAA,EACFiuC,KAECC,GAAItoC,EAEFA,GAAAA,CACD,GAAA4E,GAFD,cAGKxK,EACH4F,EAAAA,mBAAA5F,CACD,IAAA8E,GAAA0F,IAAA1F,IAAAqpC,IAAA3R,IApBL,GAAG13B,EAAK0F,GAAW,EAAG,CAuBhByjC,GAAAA,GAAAA,EAAmBroC,GAIjBwoC,EAAIC,EAAO3V,GACX4V,EAAAzzC,EAAQqB,mBAAwBkyC,EAC9BH,IAAAA,GAAAA,EAAAA,QAEH,IAAA,GADEI,GAAAC,EAAAC,QAAA7V,GACFp4B,EAAA,EAAAA,EAAA+tC,EAAAnyC,SAAAoE,EACF2tC,EAAAhuC,KAAAouC,EAAA/tC,QAIF,CACH4tC,GAAAA,EAfI,IANEtoC,EAsBP0oC,GAAAA,EAAAE,MAtBgBF,EAAIE,MAGJ,IAAQJ,EAGhB1V,EAAM,EAwBnB5xB,EAAe7G,MAAAtB,GAAAiH,EAAA6oC,OAAgBL,EAAAzoC,IAAA+yB,QAGvB4R,IAAAA,EAAAA,WAAgBh7B,QAAK66B,KAAAA,EAAiBrwC,CACtC+iB,GAANwxB,GAAiB3V,EAAKwR,MAAAA,IAChB5B,GAAW7nC,OAAM2pC,GAAAA,EAAW5hC,GAAO/H,GAChCqI,EAAN7I,MAAmBnG,GAAMgP,EAAU5M,OAAQkyC,EAAAzoC,IAAA0oC,EAAA,YAQ/CH,IAAA,CA9dLluC,KA6cM,MAAOiuC,IAGTnnC,cAAe,SAAShN,GACtB,GAAI2G,KAYJ,OAXAA,GAAM2pC,WAAa5wC,KAAK6wC,cAAcvwC,GACtC2G,EAAM6pC,cAAgB9wC,KAAK2wC,iBAAiBrwC,EAAMC,OAClD0G,EAAMoc,SAAWrjB,KAAK0wC,YAAYpwC,EAAMC,OACxC0G,EAAM6nC,SAAW7nC,EAAM2pC,WAAW5hC,OAAO/H,EAAM6pC,eAAe9hC,OAAO/H,EAAMoc,UACxE/iB,EAAMgP,WAAahP,EAAMgP,UAAU5M,SACpCuE,EAAMqI,UAAYhP,EAAMgP,UACxBrI,EAAM6nC,SAAW7nC,EAAM6nC,SAAS9/B,OAAO1O,EAAMgP,YAE/CrI,EAAM6nC,SAAWztC,EAAY6F,WAAWD,EAAM6nC,UAE9C7nC,EAAM0B,gBAAkB3I,KAAK+wC,mBAAmBzwC,EAAO2G,EAAM6nC,UACtD7nC,IA5dbjI,QAAAO,OAAA,SAAA+3B,QAAA,cAAA,cAAAh2B;cCDA,WAIA,QAASG,GAAaqG,EAAcg2B,EAAYoX,EAAgBvjB,GAAhE,GAAAwjB,GAAA,GAAsBrtC,gBAIpBstC,KAGIlX,IAAJ,QAEAmX,WAAO,WAGH,MAAOF,GAAe7pC,MACvB6H,MAJI,WAOHgiC,EAAiB,GAAIG,gBADvBniC,EAAQoiC,UAAW,IACjBJ,KAAAA,QAAAA,EACAA,KAAAA,gBAAeI,EACfH,KACAlX,MAGDsX,YAbI,WAgBH,MAAGx1C,MAAK8yB,MAtBI,4BADZqiB,mBAiCFrjB,QAAS,EAATA,gBA1BK,EA2BL9L,OAAAA,EAGAC,SAAW,KAAXA,OAAAA,KAGA1V,KAAO,SAASmD,EAAUkjB,GAExB,GAAG52B,KAAK6T,WAAR+iB,QAYE,IARAsH,KACAxqB,GACEwqB,EAAAA,KAAiBz3B,GAEnBmwB,GACEwe,EAAAA,KAAiB3uC,IAGnBzG,KAAIgmB,eAAKA,CACPhmB,KAAAgmB,gBAAA,CACA,IAAAzE,GAAIA,KAEJxe,EAAIA,IACJ/C,MAAGimB,UAAiB,IAAjBjmB,KAAiBimB,WAClBljB,EAAAA,KAAWkjB,SAAA,IAAAjmB,KAAsBw1C,gBAE9BzyC,aAAYyK,QAAaxM,oBAC1BD,eAAAA,WAAeqF,aACfoH,aAAAA,WAAapH,mBAIjB03B,EAAAA,WAAWO,0BACX8W,EAAAA,gBAGIn2C,EAAyDiP,SAAAA,GAAMjP,QAA/DsH,QAAA43B,EAAA,SAAAjwB,EAAA0C,GAAA1C,EAAAuM,MAGA06B,WACAA,EAAAO,gBAAAl0B,EAAAlS,OAAAkS,EAAA8zB,cAEA9zB,EAAWm0B,IAAXn0B,EAAAlS,QACArQ,EAAAA,QAAQsH,EAAiD2H,QAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAAAA,MAAAmnC,KACzDA,EAAAA,WAAA,2BAED,SACD56B,GACExb,QAAQsH,QAAQ43B,EAAkB,SAAAjwB,EAAA0C,GAAqB1C,EAAAuM,KAAEvM,EAAAowB,WAAA,0BAAM9c,EAA/DyE,gBAAA,EACA8X,EAAAA,QAAWO,MASrBxqB,SAAW,WAAXA,IAAAA,KAAAA,OAAW,CACAie,KAAQ7L,SAAA,IAAAjmB,KAAAw1C,eAGAhoC,aAAaxM,QAAQ,oBAApCD,eAAGgC,WAAYyK,aACbzM,aAAAA,WAAeqF,mBAIjBpG,KAAK8xB,OAASqjB,EAAeQ,kBAA7B31C,KAAK8xB,SACLojB,EAAAO,gBAAgBz1C,KAAAqP,OAAArP,KAAAq1C,cACdH,EAAAA,IAAAA,KAAeO,QACf9jB,KAAAA,gBAAoBtiB,GAGvB,MAAArP,MAAA8xB,QAIH7R,UAAY,SAAS9a,EAAGywC,GAAxB31B,GAAAA,KAAAA,OACE,IACE,GAAIvc,EACF,KAAAyB,EACA,MAAA,EAME,IAAG,iBAFHzB,EAAAA,EAAOyxC,UAAel1B,IAGpB,MAAA,IAAOvc,CAIX,IAAAkyC,GAAGA,EAED,GAAG,gBAAAA,GAED,IAAA,GADAC,GAAIA,EAASD,MAAQ3/B,KACjB7B,EAAA,EAAIA,EAAAA,EAAIA,SAAS1R,EAAAA,CACnB,GAAAgX,GAAIA,EAAMm8B,EACP,IAAHn8B,EAAGA,QAAI5D,OACL4D,EAAAA,EAAMm8B,GAAA7yC,QAAUA,SAAQ,IACxB0W,EAAAA,EAAMy7B,UAAel1B,IAGvBvc,EAAAA,EAAOA,QAAKV,IAAQoR,EAAA,IAAbsF,OAKVhW,GAAAA,EAAAV,QAAA,MAAA4yC,EAIJ,OACDlyC,GAEC,MAAAijB,GACFnkB,QAAAgD,IAAA,sBAAAL,EAAAywC,EAAAjvB,GAjJL,MAAA,IAAAxhB,IAZFnG,QAAAO,OAAA,SAAA+3B,QAAA,gBAAA,eAAA,aAAA,iBAAA,aAAA71B;cCDA,WAO0B,QAA1ByzC,GAAAptC,EAAAg2B,GA6DI,OADJ2X,gBAAA,SAAApmC,EAAA/D,GAAA,GAAS4pC,GAAAA,GAAeptC,IAAcg2B,GAAY,CACvC,GAAAgY,GAAAC,EAAA1mC,EACHomC,KAAAA,GAAAA,KAAiBK,GACVzmC,EAAAA,GAAU/D,EAAQ+D,MArEjC6lC,EAAAxuC,SAAA,eAAA,cAAA1H,QAAAO,OAAA,SAAA+3B,QAAA,iBAAA4d,EAMA,IAAIa,IADJC,KACAC,6BAAA,WAAIF,YAAAA,OACAC,cAAK,OACDE,aAAA,OACAC,mBAAa,SACbC,cAAA,OACAC,eAAA,OACAzgC,IAAA,KACA28B,IAAA,KACAD,IAAA,KACAzqC,OAAA,KACAS,OAAA,KACAguC,gBAVC,OAWDC,qBAXC,UAYDC,OAAA,KACArtB,QAAA,KACAstB,eAAA,UACA3sB,MAAA,KACA4sB,wCAhBC,gBAiBDC,wCAjBC,YAkBDnE,IAAA,KACAuB,GAAA,OACA6C,KAAA,QACAC,KAAA,QACApD,KAAA,OACAqD,KAAA,SACAC,QAAA,MACAC,OAAA,MACAC,SAAA,MACAC,QAAA,MACAC,KAAA,QACAxE,KAAA,QACA7G,QAAA,KACAC,OAAA,KACAE,MAAA,OACAJ,OAAA,KACAK,oBAlCC,QAmCDkL,qBAnCC,OAoCDC,kBApCC,OAqCDC,iBAAA,OACAhkC,KAAA,KACAN,OAAA,KACAukC,KAAA,KACAC,OAAA,KACAC,UAAA,KACAC,YAAQ,OACRC,WAAA,QAEAC,KACAN,iBAAY,kBA/CXD,kBADiB,mBAkDtBO,oBAAK,kBACDR,qBAAmB,kBACnBnL,MAAA;cC3DR,WAIA,QAAS5qC,KAGL,QAAAw2C,GAAY5tC,GACb,MAAAD,MAAAyoB,MAAAxmB,EAAAE,KAEC,QAAA2rC,GAAO7rC,GACR,GAAAizB,GAAAjoB,OAAAhL,EAAAE,IACD,OAAA+yB,GAAS4Y,IACH5Y,EAEFA,EAAA,IAEGl1B,KAAGk1B,MAAMA,EAAA,KAAQ,GAAA,IAAjBA,EAGGA,IACNl1B,KAAOA,MAAKC,EAAMi1B,KAAX,IAGPA,EAAOl1B,IAEJA,KAAAC,MAAAi1B,EAAA,KAAA,IAAA,IAGNl1B,KAAAC,MAAAi1B,EAAA,KAAA,IAGA,QAAA6Y,GAAA9rC,GADC,MAAQjC,MAAKC,MAAe,IAATgC,EAAKE,KAAW,IAAO,IAKxC,OACAlF,OACAo5B,GAAKl7B,GAACA,EAADzB,KAAQA,MAAR+xB,QAAqBA,EAArBuiB,KAAuCA,EAAvCxpB,GAAkDA,GAAlD2iB,KAA0DA,KAA1DhC,YAAsEA,EAAtEN,WAAwFA,GAC7FvO,GAAKn7B,GAACA,EAADzB,KAAQA,MAAR+xB,QAAqBA,EAArBuiB,KAAuC5iB,EAAvC5G,GAAkDA,GAAlD2iB,KAA0DA,KAA1DhC,YAAsEA,EAAtEN,WAAwFA,GAC7FtO,GAAKp7B,GAACA,EAADzB,KAAQA,MAAR+xB,QAAsBA,EAAtBuiB,KAAwCC,EAAAA,GAAa,GAAGD,KAAK,KAAMxpB,YAAQ2gB,EAAYN,WAAMpgB,GAClG+R,GAAKr7B,GAACA,EAADzB,KAAQA,MAAM+xB,QAAWA,EAASoiB,KAASx+B,EAAMmV,GAAjD,GAAuDA,KANtD,KAAA2gB,YAAA,EAAAN,WAAA,GAONpO,GAAKt7B,GAACA,EAADzB,KAAQA,OAAR+xB,QAAsBA,EAAtBwiB,YAAwCA,EAAxCD,KAAwDA,EAAxDxpB,GAAmEA,GAAnE2gB,YAA2EA,EAA3E1gB,QAA6FA,GAA7FogB,WAA0GA,GAC/GnO,GAAKv7B,GAACA,EAADzB,KAAQA,UAAR+xB,QAAyBA,EAAzBpc,MAA2CA,EAA3CmV,GAAuDA,IAC5DmS,GAAKx7B,GAACA,EAADzB,KAAQA,OAAR+xB,QAAsBA,EAASqiB,YAAkB,EAAMtpB,KAAI,EAAI2gB,GAAAA,GAAAA,YAT9D,EAAA1gB,QAAA,GAAAogB,WAAA,GAUNjO,GAAKz7B,GAACA,EAADzB,KAAQA,UAAc+xB,QAASqiB,EAA/Bz+B,MAA4C+b,EAA5C5G,GAAuDA,IAC5DqS,GAAK17B,GAACA,EAAIzB,KAAIA,OAAM+xB,QAAQA,EAASqiB,KAAatpB,EAAQ0pB,GAAAA,GAAAA,YAXpD,GAYNpX,GAAK37B,GAACA,EAAIzB,KAAIA,OAAM+xB,QAAfqiB,EAAuCA,KAAAA,EAAatpB,GAAI,GAAI0pB,YAAU,GAC3EC,IAAKhzC,GAACA,GAADzB,KAASA,OAAT+xB,QAAuBA,EAAvBjH,GAA6CwpB,GAAKE,UAAU,GACjEE,IAAKjzC,GAACA,GAADzB,KAASA,cAAT+xB,QAA8BA,EAA9BjH,GAAoDA,GAApD0pB,UAA4DA,GACjEnX,IAAK57B,GAACA,GAADzB,KAASA,OAAT+xB,QAAuBA,EAAvBuiB,KAA6CxpB,EAAQ0pB,GAAAA,GAAAA,YAfpD,GAgBNG,IAAKlzC,GAACA,GAADzB,KAASA,cAAT+xB,QAA8BA,EAA9BjH,GAAoDA,GAApD0pB,UAA4DA,GACjEI,IAAKnzC,GAACA,GAADzB,KAASA,OAAM+xB,QAASA,EAAxBjH,GAA4CwpB,GAAKE,UAAM/I,GAC5DoJ,IAAKpzC,GAACA,GAADzB,KAASA,cAAc+xB,QAASsiB,EAAgBvpB,GAAM2gB,GAAAA,UAAY,GACvEnO,IAAK77B,GAACA,GAADzB,KAASA,QAAM+xB,QAAUA,EAASsiB,KAAWC,EAAK7I,YAAMA,GAC7DlO,IAAK97B,GAACA,GAADzB,KAASA,OAAM+xB,QAASA,EAASsiB,KAAWC,EAAK7I,YAAMA,GAC5DjO,IAAK/7B,GAACA,GAADzB,KAASA,SAAM+xB,QAAYA,EAASsiB,KAAW3iB,EAAK+Z,YAAMA,GAC/DhO,IAAKh8B,GAACA,GAADzB,KAASA,QAAM+xB,QAAWA,EAASsiB,KAAW3iB,EAAK+Z,YAAMA,GAC9DqJ,IAAKrzC,GAACA,GAADzB,KAASA,WAAM+xB,QAAaA,EAASsiB,KAAW3iB,EAAK+Z,YAAMA,GAChEsJ,IAAKtzC,GAACA,GAADzB,KAASA,UAAM+xB,QAAYA,EAASsiB,KAAW3iB,EAAK+Z,YAAMA,GAC/DuJ,IAAKvzC,GAACA,GAADzB,KAASA,YAAY+xB,QAASqiB,EAAa1iB,KAAK,EAAM5G,YAAc,GACzEmqB,IAAKxzC,GAACA,GAADzB,KAASA,WAAY+xB,QAASqiB,EAAa1iB,KAAK,EAAM5G,YAAc,GACzE4S,IAAKj8B,GAACA,GAADzB,KAASA,KAAT+xB,QAAqBA,EAAkBuiB,KAAK,EAAM7I,GAAAA,GAAAA,KAAlD,KA3BCA,YAAA,GA0BN9N,IAAMl8B,GAAI,GAAIzB,KAAM,KAAM+xB,QAASqiB,EAAa1iB,KAAK,EAAM5G,GAAI,GAAI2iB,KAAM,MAGzE7P,IAAAn8B,GAAA,GAAAzB,KAAA,KAAA+xB,QAAAoiB,EAAAG,KAAA,EAAA7I,YAAA,GAEAyJ,IAAMzzC,GAAI,GAAIzB,KAAM,OAAQ+xB,QAASoiB,EAASG,KAAK,EAAMxpB,GAAI,GAAIqgB,WAAW,GAG5EgK,IAAK1zC,GAACA,GAADzB,KAASA,OAAT+xB,QAAuBA,EAASsiB,KAAWC,EAAKxpB,GAlC/C,GAAAqgB,WAAA,GAoCNiK,IAAK3zC,GAACA,GAADzB,KAASA,OAAT+xB,QAAuBA,EAAvBuiB,KAA2CA,GAChDe,IAAK5zC,GAACA,GAADzB,KAASA,OAAT+xB,QAAuBA,EAAvBuiB,KAA2C5iB,GAChD4jB,IAAK7zC,GAACA,GAADzB,KAASA,OAAM+xB,QAASA,EAASsiB,KAAWE,GACjDgB,IAAK9zC,GAACA,GAADzB,KAASA,OAAM+xB,QAAYA,EAASsiB,KAApC,GACLmB,IAAK/zC,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxBwiB,YAA4CA,GAA5CD,KAA6DA,GAClEmB,IAAKh0C,GAACA,GAADzB,KAASA,WAAT+xB,QAA2BA,EAA3Bpc,MAA+CA,GACpD+/B,IAAKj0C,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxBwiB,YA1CC,GAAAD,KAAA,GA2CNqB,IAAKl0C,GAACA,GAADzB,KAASA,WAAe+xB,QAASsiB,EAAW3iB,MAAK,GACtDkkB,IAAKn0C,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxBL,KAA4C8iB,GACjDqB,IAAKp0C,GAACA,GAADzB,KAASA,QAAM+xB,QAAgBA,EAASsiB,KAAAA,GAC7CyB,IAAKr0C,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxByiB,UAAiD,EA9ChD9iB,KAAA,GA+CNqkB,IAAKt0C,GAACA,GAADzB,KAASA,eAAT+xB,QAA+BA,EAA/ByiB,UAAwD,EA/CvD9iB,KAAA,GAgDNskB,IAAKv0C,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxBuiB,KAA4CE,GACjDyB,IAAKx0C,GAACA,GAADzB,KAASA,eAAT+xB,QAA+BA,EAA/BL,KAAmD8iB,GACxD0B,IAAKz0C,GAACA,GAADzB,KAASA,QAAT+xB,QAAwBA,EAAxByiB,UAA4CA,EAA5C9iB,KAA4DA,GACjEykB,IAAK10C,GAACA,GAADzB,KAASA,eAAa+xB,QAASsiB,EAAgBG,UAnD9C,EAAA9iB,KAAA,GAoDN0kB,IAAK30C,GAACA,GAADzB,KAASA,QAAa+xB,QAASsiB,EAAW3iB,UAA1C,EApDCA,KAAA,GAqDN2kB,IAAK50C,GAACA,GAADzB,KAASA,MAAM+xB,QAAfsiB,EAAuCA,KAAAA,GAC5CiC,IAAK70C,GAACA,GAADzB,KAASA,MAAM+xB,QAAcA,EAASsiB,KAAAA,GAD3CkC,IAAM90C,GAAI,GAAIzB,KAAM,cAAe+xB,QAASsiB,EAAW3iB,KAAK,GAG5D8kB,IAAA/0C,GAAA,GAAAzB,KAAA,aAAA+xB,QAAAsiB,EAAAG,UAAA,EAAA9iB,KAAA,GAEA+kB,KAAOh1C,GAAI,IAAKzB,KAAM,QAAS+xB,QAASsiB,EAAWG,UAAU,EAAMF,KAAK,EAAMnJ,WAAW,GAGzFuL,KAAKj1C,GAACA,IAADzB,KAAUA,QAAV+xB,QAAwBA,EAASqiB,UAAkB,EAAMtpB,KAAzD,EAAkE2gB,WAAY,GAEnF5N,KAAAp8B,GAAMA,IAAIzB,KAAKA,OAAM+xB,QAAWA,EAASqiB,KAApC,EAAiDI,GAAAA,IAAjD/I,YAAA,GACLkL,KAAAl1C,GAAMA,IAAIzB,KAAKA,YAAV+xB,QAA2BA,EAASqiB,UAAaI,EAAUF,KAAM5iB,GACtEklB,KAAAn1C,GAAMA,IAAIzB,KAAKA,UAAa+xB,QAASoiB,EAASK,UAAzC,EAAyD7+B,KAAzD,GADLkhC,KAAMp1C,GAAI,IAAKzB,KAAM,UAAW+xB,QAASqiB,EAAaI,UAAU,EAAM9iB,KAAK,GAG3EolB,KAAAr1C,GAAA,IAAAzB,KAAA,MAAA+xB,QAAAoiB,EAAAK,UAAA,EAAA7+B,MAAA,EAAA+b,KAAA,GAGAqlB,MAAAt1C,GAAOA,KAAIzB,KAAMA,MAAM+xB,QAAQA,EAASqiB,gBAAa9sC,EAAgB6B,QAAMA,UAASqrC,UAAWA,EAAU7+B,MAAMA,GAD/GqhC,MAAOv1C,GAAI,KAAMzB,KAAM,OAAQ+xB,QAASqiB,EAAa9sC,gBAAgB,EAAM6B,QAAS,UAAWqrC,UAAU,EAAM7+B,MAAM,GAGrHshC,MAAAx1C,GAAOA,KAAIzB,KAAMA,OAAM+xB,QAAQA,EAAzBzqB,gBAAA,EAA6DqqB,QAA7D,UAxEA6iB,UAAA,EAAA7+B,MAAA,GAwENuhC,MAAOz1C,GAAI,KAAMzB,KAAM,OAAQ+xB,QAASsiB,EAAWG,UAAU,EAAM7iB,WAAY,GAG/EwlB,MAAA11C,GAAOA,KAAIzB,KAAMA,OAAM+xB,QAAjBsiB,EAAyCA,UAAWG,EAAAA,WAAgBF,GAE1E8C,MAAA31C,GAAOA,KAAIzB,KAAMA,cAAkB+xB,QAASsiB,EAAWG,UAAU,EAAMF,KAAK,EAAM3iB,WAAY,IAD9F0lB,MAAO51C,GAAI,KAAMzB,KAAM,KAAM+xB,QAASsiB,EAAWG,UAAU,EAAMF,KAAK,EAAM3iB,WAAY,IAGxF2lB,MAAA71C,GAAOA,KAAIzB,KAAMA,WAAa+xB,QAASqiB,EAAa9sC,UAAAA,EAAgBgtC,KAA9D,EAAoEnrC,WAAS,KAEnFouC,MAAA91C,GAAOA,KAAIzB,KAAMA,MAAM+xB,QAAQA,EAASqiB,gBAAa9sC,EAAgB6B,QAAMA,YAASqrC,UAAaA,EAAU7+B,MAAMA,GADjH6hC,MAAO/1C,GAAI,KAAMzB,KAAM,OAAQ+xB,QAASqiB,EAAa9sC,gBAAgB,EAAM6B,QAAS,YAAaqrC,UAAU,EAAM7+B,MAAM,GAGvH8hC,MAAAh2C,GAAOA,KAAIzB,KAAMA,OAAM+xB,QAAaA,EAASqiB,gBAAaI,EAApDrrC,QAnFA,YAAAqrC,UAAA,EAAA7+B,MAAA,GAmFN+hC,MAAOj2C,GAAI,KAAMzB,KAAM,YAAa+xB,QAASqiB,EAAaI,UAAU,GAGpEmD,MAAAl2C,GAAOA,KAAIzB,KAAMA,YAAgB+xB,QAASsiB,EAAWC,UAtF/C,GAwFNsD,KAAAn2C,GAAOA,IAAIzB,KAAMA,SAAM+xB,QAAWA,EAASsiB,KAAWC,GADtDuD,MAAOp2C,GAAI,KAAMzB,KAAM,UAAW+xB,QAASsiB,EAAWC,KAAK,GAG3DwD,MAAAr2C,GAAOA,KAAIzB,KAAMA,UAAc+xB,QAASqiB,EAAlCE,KAA+ChtC,GAErDywC,MAAAt2C,GAAOA,KAAIzB,KAAMA,OAAM+xB,QAAUA,EAASqiB,gBA5FpC,EAAAI,UAAA,EAAA7+B,MAAA,GA8FNqiC,MAAAv2C,GAAOA,KAAIzB,KAAMA,SAAM+xB,QAAUA,EAA3BuiB,KAA+CA,GACrD2D,MAAAx2C,GAAOA,KAAIzB,KAAMA,SAAM+xB,QAAUA,EAASsiB,KAAWC,GACrD4D,MAAAz2C,GAAOA,KAAIzB,KAAMA,SAAM+xB,QAAUA,EAASsiB,KAAW3iB,GACrDymB,MAAA12C,GAAOA,KAAIzB,KAAMA,SAAX+xB,QAA0BA,EAA1BuiB,KAA8C5iB,GACpD0mB,MAAA32C,GAAOA,KAAIzB,KAAMA,SAAX+xB,QAA0BA,EAA1BL,KAA8CA,GADpD2mB,MAAO52C,GAAI,KAAMzB,KAAM,QAAS+xB,QAASsiB,EAAW3iB,KAAK,GAGzD4mB,MAAA72C,GAAA,KAAAzB,KAAA,QAAA+xB,QAAAsiB,EAAA3iB,KAAA,GAGA6mB,OAAA92C,GAAQA,MAAIzB,KAAOA,YAAM+xB,QAAaA,EAASsiB,UAAWG,EAAUF,KAAMA,GAvGpEkE,OADH/2C,GAAA,MAAAzB,KAAA,YAAA+xB,QAAAsiB,EAAAG,UAAA,EAAAF,KAAA,GAwGHmE,OAAQh3C,GAAI,MAAOzB,KAAM,YAAa+xB,QAASsiB,EAAWG,UAAU,EAAMF,KAAK,IAO/Eh2B,WACAqe,GAAIl7B,GAAEA,EAAFzB,KAAgB,UACpB48B,GAAIn7B,GAAEA,EAAFzB,KAAgB,SACpB68B,GAAIp7B,GAAEA,EAAFzB,KAAgB,QANV88B,GA5GPr7B,GAAA,EAAAzB,KAAA,QAiHH+8B,GAAMt7B,GAAI,EAAGzB,KAAO,UAKtB2c,GAAAA,GAAAA,EAAY3c,KAAA,cAIV2c,WACA+7B,MAAA,SAAOC,MALG,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAMVC,MAAA,OAAQC,MANE,OAMWC,MAAQ,OAAaC,MAAQ,OAAAC,MAAa,OAAQC,MAAA,OAAaC,MAAQ,OAAAC,MAAa,OAAQC,MAAA,OACjHC,KAAI,QAAAC,KAAc,QAAIC,KAAA,QAAkBC,KAAA,QAAcC,KAAI,QAAAC,KAAc,QAAIC,KAPlE,QAOoFC,KAAA,QAAcC,KAAI,QAChHC,KAAA,SAAOC,KAAA,SARGC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SASVC,MAAA,eACAC,MAAA,YAVUC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAWVzG,GAAA,aAXUC,GAAA,aAAAC,GAAA,aAAAwG,GAAA,aAAA/d,GAAA,aAAAC,GAAA,aAAA+d,GAAA,aAAAC,GAAA,aAAA/d,GAAA,aAYVge,MAAA,eACAC,MAAA,cAAOC,MAAmB,cAAOC,MAAA,cAA0BC,MAAA,cAA0BC,MAAA,cAAmBC,MAAO,cAAmBC,MAAO,cAAAC,MAAmB,cAAOC,MAbzJ,cAcVC,MAAA,UACAC,MAAA,QACAC,MAAA,QAhBUC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAiBVC,MAAA,kBAAQC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAjBEC,MAtHP,kBAAAC,MAAA,kBAAAC,MAAA,kBAqIHC,MAAO,QAKT3xB,MAAAA,OACE4xB,OAAI,SAGJ5xB,aACA0Q,GAAA,EACAC,GAAA,EANYC,GA1IT,EA8IHC,GAAI,EAKNghB,GAAAA,EACE9gB,GAAA,GAGA8gB,WACAnhB,EAAA,UACAC,EAAA,YACAI,EAAA,SACAG,EAAA,QARU4gB,GAnJP,SAyJHC,GAAK,YAKP30C,IAAAA,WACE40C,IAAI,QAGJ50C,UACAszB,GAAIl7B,GAAEA,EAAFzB,KAASA,WALJ48B,GA9JNn7B,GAAA,EAAAzB,KAAA,OAAAuuC,QAAA,IAiKH1R,GAAMp7B,GAAI,EAAGzB,KAAM,MAAOuuC,QAAS,IAKrCziC,GAAAA,GAAAA,EAAc9L,KAAA,QAAAuuC,QAAA,IACZxR,GAAIt7B,GAAEA,EAAFzB,KAASA,OAAMuuC,QAAf,KAGJziC,aAJY6wB,GAtKTl7B,GAAA,EAAAzB,KAAA,iBAwKH48B,GAAMn7B,GAAI,EAAGzB,KAAM,YAKrB68B,GAAAp7B,GAAA,EAAAzB,KAAA,WACAk+C,GAAAA,GAAAA,EAAAA,KAAAA,kBAIEA,oBACArhB,GAAKp7B,GAAEA,EAAIzB,KAAIA,yBALIsxC,MAAA,MAMnBqD,IAAKlzC,GAAEA,GAAFzB,KAAUA,KAAMsxC,MAASA,IAC9B5T,IAAKj8B,GAAEA,GAAFzB,KAAUA,gBACf49B,IAAKn8B,GAAEA,GAAFzB,KAAUA,qBARIsxC,MAAA,MASnB4D,IAAKzzC,GAAEA,GAAFzB,KAAUA,SAAMsxC,MAAYA,IACjC6D,IAAK1zC,GAAEA,GAAFzB,KAAUA,QAAMsxC,MAAWA,IAChC6M,IAAK18C,GAAEA,GAAFzB,KAAUA,UAAMsxC,MAAaA,IAClC8M,IAAK38C,GAAEA,GAAFzB,KAAUA,SAAMsxC,MAAYA,IACjC+M,IAAK58C,GAAEA,GAAFzB,KAAUA,WAAasxC,MAAvB,IACLgN,IAAK78C,GAAEA,GAAFzB,KAAUA,UAAasxC,MAAO,IACnCyM,IAAKt8C,GAAEA,GAAFzB,KAAUA,YAfIsxC,MAAA,IAgBnBiN,IAAK98C,GAAEA,GAAFzB,KAAUA,WAAMsxC,MAAkBA,IACvCsE,IAAKn0C,GAAEA,GAAFzB,KAAUA,MAAVsxC,MAAwBA,MAC7BuE,IAAKp0C,GAAEA,GAAFzB,KAAUA,MAAVsxC,MAAwBA,MAC7B6E,IAAK10C,GAAEA,GAAFzB,KAAUA,SACfs2C,IAAK70C,GAAEA,GAAFzB,KAAUA,iBAAqBsxC,MApBjB,IAqBnBkN,IAAA/8C,GAAA,GAAAzB,KAAA,OAAAsxC,MAAA,MACAmN,IAAAh9C,GAAA,GAAAzB,KAAA,OAAAsxC,MAAA,MACAoN,IAAMj9C,GAAEA,GAAIzB,KAAKA,OAAMsxC,MAAA,MACvB0M,IAAMv8C,GAAEA,GAAIzB,KAAKA,OAAMsxC,MAAA,MAGvBqN,KAAKl9C,GAAA,IAAAzB,KAAA,oBAAAsxC,MAAA,KACH7vC,KAAIA,GADD,IAAAzB,KAAA,mBAAAsxC,MAAA,MAEHtxC,KAAAA,GAAM,IAAAA,KAFH,YAAAsxC,MAAA,OAGHD,KAAAA,GAAAA,IAASrxC,KAAA,YAAcsxC,MAAA,OACrBsN,KACEn9C,GAAA,IACAzB,KAAA,WAIDqxC,QAND,SAOK7V,GACH,GAAAA,EAAAppB,QAAS3Q,KAAQ8vC,EAAAA,CAClB,GAAAJ,GAAA3V,EAAAjpB,MAAA,IACF,SAzCgB9Q,GAAA,GAAA8vC,OAAA,IAAA9oC,IAAA8K,OAAA49B,EAAA,IAAA,MA2Cd1vC,GAAA,KAAA8vC,OAAA,IAAA9oC,IAAA8K,OAAA49B,EAAA,MAID,QAAO/+B,GAAAA,GAAQm/B,OAAf,IAAyB9oC,IAAA8K,OAAAioB,GAAA,QAItBqjB,KACFp9C,GAAA,IACDzB,KAAA,iBACDqxC,QAAA,SAAA7V,GAtDgB,GAAAA,EAAAppB,QAAA,KAAA,EAAA,CAgDb,GAAI++B,GAAO3V,EAAIjpB,MAAM,IAU3B,IAAsB,GAAf9Q,EAAIzC,QAAqBsyC,GAAVH,EAAUG,IA1Db,GA0DdH,EA1Dc,GA2Dd,QAAWnxC,GAAAA,MAAMA,KAAA,YAAoBsxC,IAAO/9B,OAA5C49B,EAAA,MAGP/vC,WAJE09C,KAAOr9C,GAAI,IAAKzB,KAAM,SAAUsxC,MAAO,MAwBvCyN,KAAIC,GAAAA,IAAOh/C,KAAX,mBAAAsxC,MAAA,OAGAlwC,eACAK,GAAA,EAAG06B,SAAH,EAAiBn8B,KAAA,WACfg/C,GAAAA,EAAAA,SAAA,EAAAh/C,KAAA,oBACDyB,GAFD,EAAAP,SAGK,EAAAlB,KAAA,aACHm8B,GAAAA,EAAAA,SAAO,EAAAn8B,KAAP,eACAyB,GAAA,EAAG06B,SAAQv0B,EAAX5H,KAAiB,cACfi/C,GAAAA,EAAAA,SAAAA,EAAej/C,KAAf,WACDyB,GAAA,EAAAP,SAAA,EAAAlB,KAAA,UACFyB,GAAA,IAAAP,SAAA,EAAAlB,KAAA,aAvBAyB,GAAI,IAAKP,SAAU,EAAGlB,KAAM,aAyB7ByB,GAAA,IAAIy9C,SAAAA,GAAJl/C,KAAA,SAGEk/C,cAEAz9C,GAAA,EAAAgB,SAAI08C,SAAYn/C,KAAUk/C,aAA1B37C,QAAA9B,GAAA,KAAAgH,IAAA,QAGCiM,SAAA,SAAA9M,GAED,GAAAo3C,IAAII,EACJH,GAAGG,EACDC,GAAA,EACDljB,EAAA,YAvBAA,KAAQv0B,GAyBTo3C,GAAGI,GArBHjjB,EAAO,gBA0BDmjB,KAxBJL,GAAe,EA+Bd,KAFC9iB,GAAAA,GAAO,EACPmjB,OAFF,CAKEnjB,GAED,IAAAgjB,GACI,QAAAD,CACH/iB,MAAAA,IAAOv0B,IACP03C,KAGF,IAAAF,GAAGE,EAAAA,EACD,IAAAF,IAAGC,EACDljB,KAGI,IAAA,KAAAijB,OAGH,CAGA,GA1BDjjB,GA0BCmjB,GAAA79C,GAAA29C,EAXL,IAeCJ,GACF7iB,EAAA,QAAA+iB,EAAA,OACFI,EAAA72C,IAAAb,EAAAu0B,IAEMxR,GAtUJwR,EAAA,QAAA+iB,EAAA,QA4SGI,EAAY72C,IAAMb,EAAKu0B,KA5S1BA,EAAA,aAAA+iB,EAgTGI,EAAY72C,IAAM8K,OAAO3L,EAAKu0B,KAG7BmjB,EAAY72C,IAAM,GAAK62C,EAAY72C,IAAM,EAAG,CA6B/Cs2B,GAAAA,EA1BI,IA2BR5C,EAAa5xB,aAAO20C,IA3BDt3C,GAAM,CA6BnBmQ,GAAgBxN,GAAhBwN,EAASxE,GACVwrB,KAEFugB,GAAAxtB,WAAAlqB,EAAAu0B,OAGC/oB,IAAA,CAKHuX,GAAA5nB,KAAAu8C,KAKE,MAAA30B,IAGH40B,UAAGC,SAAQj3C,EAAA9G,GACTnG,EAAAA,GAAAA,OAAQsH,IAGLY,WAAA,SAAAi8C,EAAAD,GAIL,QAAIx2C,GAAAA,GAEJ,GAAA+O,GAAAxE,OAAeH,EAAS3K,IACtBs2B,GAAIx2B,MAAOgC,EAAQ6I,KAAAA,MAAc3R,GAAI8R,MAAOtG,EAA5CxL,MACAuH,EAASjG,KAAKwF,MAAdwP,IAGFxN,EAAOvB,KAAPoK,GACDA,EAAA7I,EAAA9I,KAAAsW,EAxZL3E,EAAA7I,EAAA9I,IAAAsW,EA6YS,GAAA3E,MA3BC2rB,EAAOziC,IAgBXhB,SAAQsH,QAAQ68C,EAAQ,SAASl1C,EAAO0C,GACnC1C,GACDm1C,EAAIn1C,KAILi1C,GACDlkD,QAAQsH,QAAQ48C,EAAQ,SAASj1C,EAAO0C,GACnC1C,GACDm1C,EAAIn1C,IAKV,IAAIvB,KAEJ,KAAI,GAAIiE,KAAOmG,GAAS,CACtB,GAAI7K,IAASE,IAAM2K,EAAQnG,GAAMxL,GAAI8R,OAAOtG,GAC5CjE,GAASjG,KAAKwF,GAGhB,MAAOS,KAtZb1N,QAAAO,OAAA,SAAA+3B,QAAA,eAAAj2B","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:buildName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:buildName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build/:name*', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:cat?', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid?', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build/' + vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build/' + vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    dntData.init(fileName, columns, function() {}, function() {\r\n      vm.tryToSetItem(dntFiles);\r\n    });\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          retVal = 'not transferable';\r\n        }\r\n      }\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can sell';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not sellable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'shops';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build/' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    if(t.progressCallback) {\r\n                      t.progressCallback(msg);\r\n                    }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          angular.forEach(newItem.stats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : dntData.getValue(itemType.mainDnt, row, 'LevelLimit'),\r\n      needJobClass : dntData.getValue(itemType.mainDnt, row, 'NeedJobClass'),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}