{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","nav/export.js","nav/nav.js","nav/setup.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","otherwise","angular","module","$window","document","body","className","title","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$routeParams","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","currentGroup","saveBuildSelection","anyItems","createGroup","handleChange","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","updateRows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","localStorage","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","newJobs","getFinalJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","input","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","j","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","filter","escapeFilter","window","encodeURIComponent","percentageFilter","$stateful","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","icon","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","indexOf","startedLoading","tlocation","noRegion","dntLocation","getActionUrl","action","getActions","menu","currentBuild","extraCss","$route","dntInit","translationsStatus","progressTranslations","translate","msg","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","saveGroup","clearGroup","addAffectAmount","groupItems","$watch","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","replace","replaceItem","statMap","_","newValue","oldValue","anyChange","Number","found","each","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","getStats","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","NameID","NameIDParam","material","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","console","log","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","transferItemsFileName","initTransfers","transferItem","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","allJobs","getAllJobs","needJobClass","jobName","preInitItem","anyToLoad","setFullStats","mainDnt","canExtract","Type","canTransfer","isInSet","isPlate","hasContents","detail","canUse","getDescription","description","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","encodeItem","copy","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","jobInit","loadResults","lastJobNumber","pcStatId","pc","altStatId","altStat","statVals","newResults","numEquip","curDisplay","hideLevel","minLevel","maxLevel","hideRank","rankChecked","hideJob","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","byPath","catName","grades","searchable","savedSearchStatId","navigate","checkedRank","changeSearch","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","getBaseJobName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","initBoxes","box","sortBy","numBoxes","chooseClass","restrict","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","dnsimCategoryLinksController","collapsed","setCategory","dnsimItemIcon","link","attrs","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","dnsimJobIcon","dnsimJobIconController","JobIcon","dnsimLoading","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","display","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasStartedLoading","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","basePath","querySelector","attr","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","searchType","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","imprint","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","stripBuildName","decompressBuild","service","deleteNullProperties","set","compressBuild","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","groups","isArray","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","itemCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","3","4","5","6","7","8","9","10","noCustom","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","165","222","389","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"CAAA,WACA,YAIA,SAAAA,GAAAC,GAEAA,EAEAC,KAAA,UACAC,YAAA,sBACAC,WAAA,uBAGAF,KAAA,UACAC,YAAA,oBACAC,WAAA,cAEAF,KAAA,SACAC,YAAA,mBACAC,WAAA,aAGAF,KAAA,UACAC,YAAA,wBACAC,WAAA,uBAGAF,KAAA,KACAG,WAAA,YAEAH,KAAA,WACAC,YAAA,4BACAC,WAAA,+BAEAF,KAAA,sBACAC,YAAA,4BACAC,WAAA,+BAEAF,KAAA,wBACAC,YAAA,4BACAC,WAAA,kBAEAF,KAAA,2BACAC,YAAA,4BACAC,WAAA,+BAGAF,KAAA,cACAC,YAAA,4BACAC,WAAA,+BAGAF,KAAA,wBACAC,YAAA,8BACAC,WAAA,mCAIAF,KAAA,iBACAC,YAAA,6BACAC,WAAA,2BAGAF,KAAA,SACAC,YAAA,oBACAC,WAAA,aAGAF,KAAA,sBACAC,YAAA,oBACAC,WAAA,aAIAF,KAAA,WACAC,YAAA,qBACAC,WAAA,eAGAF,KAAA,cACAC,YAAA,iCACAC,WAAA,+BAGAF,KAAA,YACAC,YAAA,yBACAC,WAAA,wBAGAF,KAAA,kBACAC,YAAA,yBACAC,WAAA,wBAGAF,KAAA,cACAC,YAAA,2BACAC,WAAA,0BAGAF,KAAA,+BACAC,YAAA,2BACAC,WAAA,0BAGAF,KAAA,yBACAC,YAAA,8BACAC,WAAA,4BAGAE,WACAD,WAAA,YA5GAE,QAAAC,OAAA,SAAAR,QAAA,iBAAAA,OCHA,WACA,YACAO,SAAAC,OAAA,SACAJ,WAAA,aACA,UACA,SAAAK,GAEAC,SAAAC,KAAAC,UAAA,eACAH,EAAAC,SAAAG,MAAA,oBCRAN,QAAAC,OAAA,SAAAJ,WAAA,oBAEA,WAAA,YAAA,cAAA,aAAA,eAAA,aAAA,mBAAA,cAAA,eAAA,UAAA,WACA,SAAAU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,YAiDA,SAAAC,KACA,IAAAC,EAAAC,SAAA,CAIA,GAAAC,IAAA,EACAC,EAAAR,EAAAS,YAAAJ,EAAAK,MAQA,IAPAxB,QAAAyB,QAAAH,EAAA,SAAAI,EAAAC,GACA,IAAAX,EAAAY,SAAAD,GAEA,YADAN,GAAA,KAKAA,GAAAN,EAAAa,WAAA,CACA,GAAAC,GAAAf,EAAAgB,YAAAX,EAAAY,UAAAZ,EAAAK,MACAZ,GAAAoB,kBAAAb,EAAAY,UAAAF,GACAV,EAAAK,MAAAS,MAAAJ,EAEAV,EAAAC,UAAA,EACAb,EAAAY,EAAAe,YAIA,QAAAC,MAvEA,GAAAhB,GAAAiB,IAEAA,MAAAC,YAAA,WACA7B,EAAA8B,KAAA,iBAAAnB,EAAAY,YAGAK,KAAAG,UAAA,WACA/B,EAAA8B,KAAA,eAAAnB,EAAAY,YAGAK,KAAAI,UAAA,WACA,GAAAC,GAAA7B,EAAA8B,YAAAvB,EAAAY,UAAAZ,EAAAK,MAAAS,MAEArB,GAAA+B,iBACAF,EACAA,EACAtB,EAAAK,MAAAoB,WACAzB,EAAAK,MAAAqB,YACA1B,EAAAK,MAAAsB,UACA3B,EAAAK,MAAAuB,IACA5B,EAAAK,MAAAwB,WACA7B,EAAAK,MAAAyB,QACA9B,EAAAK,MAAA0B,iBACA/B,EAAAK,MAAA2B,cACAhC,EAAAK,MAAA4B,eACAjC,EAAAK,MAAA6B,YACAlC,EAAAK,MAAA8B,UACAnC,EAAAK,MAAA+B,WAEA/C,EAAA8B,KAAA,UAAAG,IAGAL,KAAAhB,UAAA,EACAgB,KAAAN,YAAA,WACAb,IACAE,EAAAC,UAAA,EAEAL,EAAAyC,KAAArB,EAAAjB,EAEA,IAAAI,GAAAR,EAAAS,YAAAJ,EAAAK,MACAxB,SAAAyB,QAAAH,EAAA,SAAAI,EAAAC,GACAX,EAAAwC,KAAA7B,EAAAD,EAAAS,EAAAjB,KAGAC,EAAAe,YA8BAE,KAAAqB,eAAA,WACA5C,EAAA4C,eAAAtC,EAAAY,UAAAZ,EAAAK,QAGAY,KAAAsB,YAAA,WACA,GAAAvC,EAAAK,MAAA,CACA,GAAAmC,GAAA9C,EAAA+C,gBAAAzC,EAAAY,UAAAZ,EAAAK,MACAL,GAAAK,MAAAqC,SAAAC,eAAAC,QAAAJ,KAIAvB,KAAAsB,iBAEAM,UAAA,wBAAA,WACA,OACAC,OAAA,EACAC,kBACAnC,UAAA,aACAP,MAAA,SACAU,SAAA,aAEArC,WAAA,mBACAsE,aAAA,eACAvE,YAAA,kCCvGAI,QAAAC,OAAA,SAAAJ,WAAA,iBAEA,WAAA,aAAA,aACA,SAAAU,EAAAG,EAAAE,GACA,gBAKAoD,UAAA,qBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,gBACAsE,aAAA,OACAvE,YAAA,+BCjBAI,QAAAC,OAAA,SAAAJ,WAAA,iBACA,UAAA,YAAA,eAAA,WAAA,aACA,SAAAK,EAAAM,EAAA6D,EAAA9D,EAAAK,GACA,YAEA,IAAAO,GAAAiB,IACAjC,UAAAC,KAAAC,UAAA,aACA+B,KAAAkC,YAAA,WACAnD,EAAAoD,WAAA3D,EAAA4D,gBACArD,EAAAsD,WAAAC,OAAAC,KAAAxD,EAAAoD,YAAAK,OACAzD,EAAA0D,SACA,KAAA,GAAAC,GAAA,EAAAA,EAAA3D,EAAAsD,WAAAM,SAAAD,EACA3D,EAAA0D,OAAAG,MACAC,KAAA9D,EAAAsD,WAAAK,GACAtD,MAAAL,EAAAoD,WAAApD,EAAAsD,WAAAK,OAIA1C,KAAAkC,cAEA,aAAAD,GACAA,EAAAtC,WAAAK,KAAA8C,eACA9C,KAAA8C,aAAAb,EAAAtC,UACAnB,EAAAuE,mBAAA/C,KAAA8C,aAAA9C,KAAAmC,aAGAnC,KAAA8C,cAAA9C,KAAA8C,eAAA9C,MAAAmC,WACA/D,EAAA8B,KAAA,UAAAF,KAAA8C,cAGA9C,KAAA8C,aAAA,KAGA9C,KAAA8C,aACAhF,EAAAC,SAAAG,MAAA,iBAAA8B,KAAA8C,aAGAhF,EAAAC,SAAAG,MAAA,uBAGA8B,KAAAgD,SAAA,WACA,MAAAV,QAAAC,KAAAvC,KAAAmC,YAAAQ,OAAA,GAGA3C,KAAAiD,YAAA,WACA7E,EAAA8B,KAAA,eAGAF,KAAAkD,aAAA,WACAnE,EAAAmD,cACA/D,KAIA6B,KAAAmD,YAAA,SAAAxD,GACAnB,EAAAuE,mBAAApD,EAAAK,KAAAmC,YACA/D,EAAAgF,IAAA,UAAAzD,IAGAK,KAAAqD,QAAA,WACAjF,EAAAgF,IAAA,aAGApD,KAAAsD,OAAA,WACAlF,EAAAgF,IAAA,qBChEAxF,QAAAC,OAAA,SAAAJ,WAAA,kBAEA,eAAA,YAAA,cAAA,aAAA,eACA,SAAAwE,EAAA7D,EAAAC,EAAAC,EAAAC,GACA,gBAEAqD,UAAA,sBAAA,WACA,OACAC,OAAA,EACAC,kBACAyB,MAAA,SACAnE,MAAA,UAEA3B,WAAA,iBACAsE,aAAA,YACAvE,YAAA,gCCfAI,QAAAC,OAAA,SAAAJ,WAAA,oBAEA,eAAA,YAAA,cAAA,aAAA,eACA,SAAAwE,EAAA7D,EAAAC,EAAAC,EAAAC,GACA,YAEA,IAAAQ,GAAAiB,IAEAA,MAAAuD,MAAAjF,EAAAkF,cAAAxD,KAAAZ,OACAY,KAAAyD,gBAAAlF,EAAAmF,mBAAA1D,KAAAZ,MAAAS,OAEAG,KAAA2D,YAAA,SAAAC,GACA,GAAA7E,EAAAK,MAAAyE,WAAA,EAAA,CACA,GAAAA,GAAA,GAAAC,MAAA/E,EAAAK,MAAAyE,WACA,OAAAA,GAAAE,uBAIA/D,KAAAgE,YAAA,SAAAJ,GACA,GAAA7E,EAAAK,MAAAyE,WAAA,EAAA,CACA,GAAAA,GAAA,GAAAC,MAAA/E,EAAAK,MAAAyE,WACA,OAAAA,GAAAI,uBAIAjE,KAAAkE,gBAAA,SAAAN,GACA,GAAAO,GAAA,EAcA,OATAvG,SAAAyB,QAAAN,EAAA0E,gBAAA,SAAAW,EAAAC,GACAD,EAAAzB,OAAA,IACAwB,EAAAxB,OAAA,IACAwB,GAAA,MAEAA,GAAAC,EAAAzB,OAAA,IAAA0B,KAIAF,MAGAvC,UAAA,wBAAA,WACA,OACAC,OAAA,EACAC,kBACAnC,UAAA,aACAP,MAAA,UAEA3B,WAAA,mBACAsE,aAAA,YACAvE,YAAA,kCCpDAI,QAAAC,OAAA,SAAAJ,WAAA,sBAEA,UAAA,YAAA,eAAA,WAAA,aAAA,aAAA,OAAA,cAAA,oBAAA,YACA,SAAAK,EAAAM,EAAA6D,EAAA9D,EAAAK,EAAAF,EAAAgG,EAAAjG,EAAAkG,EAAAC,GACA,YA8QA,SAAAC,GAAAC,EAAAC,GACA,MAAAD,IAAAC,EACAC,KAAAC,MAAA,KAAA,EAAAF,EAAAD,IAAA,IAGA,EAjRA,GAAA3F,GAAAiB,IAuBA,IArBAlC,EAAAC,SAAAG,MAAA,0BACAJ,EAAAgH,SAAA,EAAA,GAEA9E,KAAAmC,WAAA3D,EAAA4D,gBACApC,KAAA+E,WAAAzC,OAAAC,KAAAvC,KAAAmC,YACAnC,KAAA+E,aACA/E,KAAA+E,eAEA/E,KAAA+E,WAAApC,OAAA,EACA3C,KAAAgF,UAAAxG,EAAAyG,kBAGAjF,KAAAgF,UAAA,KAGAhF,KAAAgF,WAAAhF,KAAAgF,YAAAhF,MAAAmC,YACAnC,KAAA+E,WAAApC,OAAA,IACA3C,KAAAgF,UAAAhF,KAAA+E,WAAA,IAIA/E,KAAAgF,UAAA,CAKAhF,KAAAkF,kBAAA,WACA,GAAA,MAAAlF,KAAAmF,eAAA,CACA,GAAAvB,GAAA7E,EAAAoD,WAAApD,EAAAiG,UACApB,KACA5D,KAAAmF,eAAAnF,KAAAoF,mBAAAxB,EAAAA,EAAA/D,QAIA,MAAAG,MAAAmF,gBAGAnF,KAAAqF,SAAA,WACA,MAAAtG,GAAAoD,WAAApD,EAAAiG,YAGAhF,KAAAsF,OAAA,SAAAC,GACAxG,EAAAyG,cAAAD,EAEAxG,EAAA0G,yBACA1G,EAAA2G,2BACA3G,EAAA4G,2BACA5G,EAAA6G,8BAGA5F,KAAAoF,mBAAA,SAAAxB,EAAA/D,GACA,GAAAgG,GAAAvH,EAAAwH,cAAAlC,GACAmC,EAAAzH,EAAA0H,iBAAAnG,GACAoG,EAAA3H,EAAA4H,YAAArG,GACAsG,EAAAN,EAAAO,OAAAL,GAAAK,OAAAH,EAMA,OALA,OAAArC,EAAAzC,WAAAyC,EAAAzC,UAAAwB,OAAA,IACAwD,EAAAA,EAAAC,OAAAxC,EAAAzC,YAEAgF,EAAA9H,EAAAgI,WAAAF,GAEA7H,EAAA8G,mBAAAxB,EAAAuC,IAOAnG,KAAAsG,SACA,QACA,OACA,OACA,OAGAtG,KAAAuG,iBACA,KAAA,GAAAC,KAAAnI,GAAAkF,MACAlF,EAAAkF,MAAAiD,GAAAC,gBACAzG,KAAAuG,eAAA3D,KAAA4D,EAIAxG,MAAA0G,aACA1G,KAAA0G,UAAA,KAAA,EACA1G,KAAA0G,UAAA,IAAA,EACA1G,KAAA0G,UAAA,IAAA,EACA1G,KAAA0G,UAAA,GAAA,EAEA1G,KAAAwF,iBAEAxF,KAAA2G,QAEA3G,KAAA4G,WAAA,WACA7H,EAAA4H,QAEA/I,QAAAyB,QAAAN,EAAAoD,WAAApD,EAAAiG,WAAAnF,MAAA,SAAAmC,EAAAuD,GACA,GAAA,YAAAvD,EAAA6E,SAAA,CACA,GAAAC,GAAA/H,EAAA2H,UAAA1E,EAAA+E,eACAD,IAAA,GAAAA,IACAA,EAAA,EAIA,KADA,GAAAE,GAAA,IACA,CAKA,GAJAjI,EAAA4H,KAAAK,KACAjI,EAAA4H,KAAAK,GAAAjI,EAAAkI,iBAGAlI,EAAA4H,KAAAK,GAAAF,GAAAvB,MAAA,EAAA,CACAvD,EAAA+E,iBACA/E,EAAA+E,eAAA,EAGA,IAAAG,GAAAnI,EAAAoI,SAAAnF,EAAAuD,EACAxG,GAAA4H,KAAAK,GAAAF,GAAAI,CACA,OAGAF,QAOAjI,EAAA4H,KAAAhE,OAAA,IACA5D,EAAA4H,KAAA5H,EAAA4H,KAAAhE,OAAA,GAAA5D,EAAAkI,kBAIAjH,KAAAiH,cAAA,SAAAG,GACA,OAAArI,EAAAoI,UAAAJ,eAAA,SAAAhI,EAAAoI,UAAAJ,eAAA,QAAAhI,EAAAoI,UAAAJ,eAAA,QAAAhI,EAAAoI,UAAAJ,eAAA,SAGA/G,KAAAmH,SAAA,SAAAnF,EAAAuD,GACA,OAAAvD,KAAAA,EAAAuD,MAAAA,IAGAvF,KAAAqH,MAAA,SAAAC,GACAvI,EAAAyG,kBACA8B,EAAA/B,OAAA,GACAxG,EAAAuG,OAAAgC,EAAA/B,OAIAxG,EAAAwI,KAAAD,IAIAtH,KAAAuH,KAAA,SAAAD,GAEA,GAAAzH,GAAAd,EAAAoD,WAAApD,EAAAiG,WAAAnF,KACA,IAAAyH,EAAA/B,OAAA,EAAA,CACA,GAAAiC,GAAAF,EAAAtF,KAAA+E,cAEAhI,GAAA0I,YAAAH,EAAAtF,KAAAnC,EAAAd,EAAAyG,eAAAuB,gBACAhI,EAAA0I,YAAA5H,EAAAd,EAAAyG,eAAAgC,GACA3H,EAAAyH,EAAA/B,OAAA1F,EAAAd,EAAAyG,eACA3F,EAAAd,EAAAyG,eAAA8B,EAAAtF,SAEA,CACA,GAAAA,GAAAnC,EAAAd,EAAAyG,cACAzG,GAAA0I,YAAAzF,EAAAsF,EAAAtF,KAAA+E,gBACAlH,EAAA6H,OAAA3I,EAAAyG,cAAA,GACA3F,EAAA+C,KAAAZ,GAGAjD,EAAAoG,eAAA,KACApG,EAAAyG,iBACAzG,EAAA6H,aACA7H,EAAA4I,uBACAxJ,KAGA6B,KAAAyH,YAAA,SAAAzF,EAAA4F,GACA,GAAAC,KACAjK,SAAAyB,QAAA2C,EAAAuB,MAAA,SAAAuE,EAAAvC,GACAqC,GACAC,EAAAjF,MAAA4D,GAAAsB,EAAAtB,GAAAuB,IAAAD,EAAAC,KAAAH,EAAA,SAIA5F,EAAAgG,iBAAAH,EACA7F,EAAA+E,eAAAa,EAEA5F,EAAAiG,UAAA5J,EAAAgI,WAAArE,EAAAgG,iBAAAhG,EAAAuB,QAIAvD,KAAA2H,uBACA3H,KAAAkI,uBAAA,SAAAC,EAAAC,EAAApG,GAEA,GADAhC,KAAAqI,mBAAAD,EAAApG,GACAhC,KAAA2H,oBAAAS,GACA,MAAApI,MAAA2H,oBAAAS,GAAAD,IAIAnI,KAAAqI,mBAAA,SAAAD,EAAApG,GACA,IAAAjD,EAAA4I,oBAAAS,IAAArJ,EAAAyG,kBAAA,CAGAxF,KAAA2H,oBAAAS,KAEA,IAAAxE,GAAA7E,EAAAoD,WAAApD,EAAAiG,WACAsD,EAAA1E,EAAA/D,MAAAd,EAAAyG,eAEAqC,KACAU,IACAvG,GAAAuB,QACA3F,QAAAyB,QAAA2C,EAAAuB,MAAA,SAAAuE,EAAAvC,GACAsC,EAAAjF,MAAA4D,GAAAsB,EAAAtB,GAAAuB,IAAAD,EAAAC,KAAAO,EAAAvB,eAAA,SAEAwB,EAAAlK,EAAAgI,WAAAwB,EAAA7F,EAAAuB,QAGAsE,KACAjK,QAAAyB,QAAAiJ,EAAA/E,MAAA,SAAAuE,EAAAvC,GACAsC,EAAAjF,MAAA4D,GAAAsB,EAAAtB,GAAAuB,IAAAD,EAAAC,KAAA/F,EAAA+E,eAAA,QAEA,IAAAyB,GAAAnK,EAAAgI,WAAAwB,EAAAS,EAAA/E,OAEA9D,IAAA8D,MAAAgF,IAAAhF,MAAAiF,GACA5K,SAAAyB,QAAAuE,EAAA/D,MAAA,SAAA4I,EAAAlD,GACAvD,IAAAyG,GAAAH,IAAAG,GACAhJ,EAAAmD,KAAA6F,IAIA,IAAAC,GAAA3J,EAAAqG,mBAAAxB,EAAAnE,GACAkJ,EAAA5J,EAAAmG,mBAEA,KAAA,GAAAsB,KAAAnI,GAAAkF,MACAlF,EAAAkF,MAAAiD,GAAAC,iBACA1H,EAAA4I,oBAAAS,GAAA5B,GAAA/B,EAAA1F,EAAA6J,QAAApC,EAAAkC,GAAAX,IAAAhJ,EAAA6J,QAAApC,EAAAmC,GAAAZ,QAKA/H,KAAA6I,YAAA,SAAArC,GACA,GAAAsC,GAAA,EACA,IAAA,WAAAzK,EAAAkF,MAAAiD,GAAA3F,QAAA,CACA,GAAAkI,GAAA,CACAhK,GAAAoD,WAAApD,EAAAiG,WAAAnE,UACAkI,EAAAhK,EAAAoD,WAAApD,EAAAiG,WAAAnE,QAAA2F,IAEAsC,GAAAzK,EAAA2K,SAAAD,GAAAlG,SAEA,IAAA,aAAAxE,EAAAkF,MAAAiD,GAAA3F,QAAA,CACA,GAAAkI,GAAA,CACAhK,GAAAoD,WAAApD,EAAAiG,WAAAlE,mBACAiI,EAAAhK,EAAAoD,WAAApD,EAAAiG,WAAAlE,iBAAA0F,IAEAsC,GAAAzK,EAAA2K,SAAAD,GAAAlG,KAEA,MAAAiG,GAAA,IAAAzK,EAAAkF,MAAAiD,GAAA3D,MAGA7C,KAAA4I,QAAA,SAAApC,EAAAjD,GAEA,IAAA,GADA0F,GAAA1F,EAAAZ,OACAD,EAAA,EAAAA,EAAAuG,IAAAvG,EACA,GAAAa,EAAAb,GAAA8D,IAAAA,EACA,MAAAjD,GAAAb,EAGA,QAAA8D,GAAAA,EAAAuB,IAAA,IAYA/H,KAAAkJ,KAAA,WACA1K,EAAAoB,kBAAAb,EAAAiG,UAAAjG,EAAAoD,WAAApD,EAAAiG,WAAAnF,OACAzB,EAAA8B,KAAA,UAAAnB,EAAAiG,YAGAhF,KAAA4G,iBChSAhJ,QAAAC,OAAA,SAAAJ,WAAA,aAEA,WAAA,YAAA,cAAA,aAAA,eAAA,aACA,SAAAU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,YAEA,IAAAO,GAAAiB,IAEAA,MAAAuD,MAAAjF,EAAAkF,cAAAxD,KAAAZ,MAEA,IAAA+J,GAAAC,aAAAzH,QAAA,uBACA3B,MAAAqJ,SAAA9K,EAAA+K,OAAAH,GACAnJ,KAAAqJ,WACAF,EAAA,SACAnJ,KAAAqJ,SAAA9K,EAAA+K,OAAA,WAGAtJ,KAAAuJ,iBAAA,WACA,GAAAC,GAAAjL,EAAAmF,mBAAA1D,KAAAZ,MAAAS,MACA,OAAAd,GAAAsK,SAAAxG,OAAA2G,GACAA,EAAAzK,EAAAsK,SAAAxG,UAOA7C,KAAAyJ,cAAA,WACA,MAAAlL,GAAAmL,YAGA1J,KAAA2J,oBAAA,SAAAC,GACA5J,KAAAqJ,SAAA9K,EAAA+K,OAAAM,GACAR,aAAAS,QAAA,uBAAAD,IAGA5J,KAAA2D,YAAA,SAAAC,GACA,GAAA7E,EAAAK,MAAAyE,WAAA,EAAA,CACA,GAAAA,GAAA,GAAAC,MAAA/E,EAAAK,MAAAyE,WACA,OAAAA,GAAAE,uBAIA/D,KAAAgE,YAAA,SAAAJ,GACA,GAAA7E,EAAAK,MAAAyE,WAAA,EAAA,CACA,GAAAA,GAAA,GAAAC,MAAA/E,EAAAK,MAAAyE,WACA,OAAAA,GAAAI,uBAIAjE,KAAA8J,eAAA,WACA,OAAA/K,EAAAsK,SAAAU,QAAA/J,KAAAuJ,mBAAA5G,OAAA5D,EAAAsK,SAAAU,QAGA/J,KAAAgK,aAAA,WACA,GAAAC,GAAA,GACAC,EAAAnL,EAAAK,MAAAS,KAEA,IAAA,kBAAAd,EAAAsK,SAAAxG,KAAA,CACA,GAAAsH,GAAA,EACAC,EAAA,CACAxM,SAAAyB,QAAA6K,EAAA,SAAAlI,EAAAuD,GACAvD,EAAA6E,UAAA9H,EAAAsK,SAAAxG,KACAuH,IAEApI,EAAAqI,oBACAF,GAAAnI,EAAAqI,qBAIAJ,EAAAG,EAAA,MAAAD,MAEA,IAAA,mBAAApL,EAAAsK,SAAAxG,KAAA,CAEA,GAAAyH,GAAA,EACAC,EAAA,EACAC,IACA5M,SAAAyB,QAAA6K,EAAA,SAAAlI,EAAAuD,GACA,GAAAvD,EAAA6E,UAAA9H,EAAAsK,SAAAxG,KAAA,CACA,GAAA4H,GAAAzI,EAAA0I,WACAD,KACAA,EAAA,GAGAA,IAAAD,KACAA,EAAAC,GAAA,GAEAD,EAAAC,KACAH,QAEAtI,GAAA2I,qBACAJ,GAAAvI,EAAA2I,sBAIAV,EAAA,GACArM,QAAAyB,QAAAmL,EAAA,SAAAI,EAAAH,GACAR,EAAAtH,OAAA,IACAsH,GAAA,KAEAA,GAAAW,IAGAX,EAAAK,EAAA,KAAAL,EAAA,OAAAM,MAEA,CACA,GAAAM,GAAA,CACAjN,SAAAyB,QAAA6K,EAAA,SAAAlI,EAAAuD,GACAvD,GAAAA,EAAA6E,UAAA9H,EAAAsK,SAAAxG,MACAgI,MAIAZ,EAAAY,CACA,IAAAC,GAAAvM,EAAA+K,OAAAvK,EAAAsK,SAAAxG,KACAiI,IAAA,eAAAA,KACAb,GAAA,MAAAa,EAAAC,aAIA,MAAAd,GAAA,IAAAlL,EAAAsK,SAAAxG,MAGA7C,KAAAkD,aAAA,WACAnE,EAAAwE,MAAAjF,EAAAkF,cAAAzE,EAAAK,OACAL,EAAAe,YAGAE,KAAAgL,WAAA,SAAAhJ,GACAA,EAAAgJ,YAAA,CACA,IAAAC,KACArN,SAAAyB,QAAAN,EAAAK,MAAAS,MAAA,SAAA4I,EAAAlD,GACAkD,IAAAA,EAAAuC,YACAC,EAAArI,KAAA6F,KAIA1J,EAAAK,MAAAS,MAAAoL,EACAzM,EAAAoB,kBAAAb,EAAAY,UAAAsL,GACAlM,EAAAmE,mBAIAtB,UAAA,iBAAA,WACA,OACAC,OAAA,EACAC,kBACAnC,UAAA,aACAP,MAAA,SACAU,SAAA,YACAoL,OAAA,WAEAzN,WAAA,YACAsE,aAAA,YACAvE,YAAA,0BC1JAI,QAAAC,OAAA,SAAAJ,WAAA,mBAEA,YAAA,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBACA,SAAAW,EAAA6D,EAAA9D,EAAAK,EAAAI,EAAA0F,EAAAjG,EAAAkG,GACA,YAGAvE,MAAAmL,UAAA,EACA,QAAAlJ,KACAjC,KAAA6C,KAAAZ,EAAAY,MAGA7C,KAAAA,UAAA,WACAxB,EAAAoB,kBAAAI,KAAA6C,SACAzE,EAAA8B,KAAA,gBCdAtC,QAAAC,OAAA,SAAAJ,WAAA,iBAEA,UAAA,YAAA,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YACA,SAAAK,EAAAM,EAAA6D,EAAA9D,EAAAK,EAAAI,EAAA0F,EAAAjG,EAAAkG,EAAAC,GACA,YAEA,IAAAzF,GAAAiB,IACAA,MAAAmC,WAAA3D,EAAA4D,gBACApC,KAAA4D,SACA5D,KAAAmL,UAAA,EACA,aAAAlJ,IACAjC,KAAAgF,UAAA/C,EAAAtC,UACAK,KAAAgF,YAAAhF,MAAAmC,aACAnC,KAAA4D,MAAA5D,KAAAmC,WAAAnC,KAAAgF,WACAhF,KAAAmL,UAAA,IAIAnL,KAAAgF,UAAA,GAEAhF,KAAAoL,aAAApL,KAAAgF,UACAhF,KAAAmB,aACAnB,KAAAgJ,SAAA3K,EAAA2K,SACAhJ,KAAAqL,YAAAhN,EAAAgN,YAEArL,KAAA4D,MAAAhD,WACAZ,KAAAY,WAAAZ,KAAA4D,MAAAhD,WAGAZ,KAAAY,WAAAvC,EAAAgN,YAAA,GAGArL,KAAA4D,MAAA/C,QACAb,KAAAa,QAAAb,KAAA4D,MAAA/C,QAGAb,KAAAa,QAAAxC,EAAA2K,SAAA,GAGAhJ,KAAA4D,MAAA9C,iBACAd,KAAAc,iBAAAd,KAAA4D,MAAA9C,iBAGAd,KAAAc,iBAAAzC,EAAA2K,SAAA,GAGAhJ,KAAA4D,MAAApD,WACAR,KAAAQ,WAAAR,KAAA4D,MAAApD,WAGAR,KAAAQ,WAAA,GAGAR,KAAA4D,MAAAnD,YACAT,KAAAS,YAAAT,KAAA4D,MAAAnD,YAGAT,KAAAS,YAAA,GAGAT,KAAA4D,MAAAlD,WAAAV,KAAA4D,MAAAlD,UAAA,EACAV,KAAAU,UAAAV,KAAA4D,MAAAlD,UAGAV,KAAAU,UAAA,EAGAV,KAAAoB,KAAA,SAAArC,GACA,GAAAuM,GAAAhH,EAAAiH,cACAD,GAAA3I,OAAA,GACAxE,EAAA,WAEA,OAAAY,GAAA6E,OACAhG,QAAAyB,QAAAiM,EAAA,SAAA1B,EAAA4B,GACA5B,EAAApD,IAAAzH,EAAA6E,MAAAjD,IAAA6F,KACAzH,EAAA4B,IAAAiJ,KAKA7K,EAAA0M,kBAKAzL,KAAA0L,OAAA,WACA5N,EAAAgH,SAAA,EAAA,IAOAN,EAAApD,KAAA,WAAArC,EAAAqC,KAAArC,KAEAiB,KAAA2L,WAAA,SAAAC,EAAAC,GACA,MAAArH,GAAAsH,YAAAD,GAAAD,IAEA5L,KAAA+L,iBAAA,SAAAH,GACA,MAAApH,GAAAwH,eAAAhM,KAAAW,IAAA6F,IAAAoF,IAEA5L,KAAAiM,eAAA,SAAAL,GACA,MAAApH,GAAA0H,aAAAlM,KAAAS,YAAAT,KAAAW,IAAA6F,IAAAoF,IAGA5L,KAAAmM,iBAAA,WACA,OAAAnM,KAAAgF,eAIAhF,KAAAgF,YAAAhF,MAAAmC,cACAnC,KAAAmL,UAAAnL,KAAAgF,WAAAhF,KAAAoL,eAQApL,KAAAoM,GAAA,WACA,GAAArL,GAAAyD,EAAAsH,YAAA9L,KAAAQ,YACAQ,EAAAwD,EAAAsH,YAAA9L,KAAAS,aACAQ,EAAAuD,EAAAwH,eAAAhM,KAAAW,IAAA6F,IACAtF,EAAAsD,EAAA0H,aAAAlM,KAAAS,YAAAT,KAAAW,IAAA6F,IACArF,EAAAqD,EAAA6H,aAAArM,KAAAU,UAEAV,MAAAmL,WACAnL,KAAAoL,aAAApL,KAAAgF,UACAxG,EAAA8B,YAAAN,KAAAgF,eAGAxG,EAAA+B,iBACAP,KAAAoL,aACApL,KAAAgF,UACAhF,KAAAQ,WACAR,KAAAS,YACAT,KAAAU,UACAV,KAAAW,IACAX,KAAAY,WACAZ,KAAAa,QACAb,KAAAc,iBACAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA/C,EAAA8B,KAAA,UAAAF,KAAAgF,YAGAhF,KAAAyL,aAAA,WACAzL,KAAAmB,UAAAqD,EAAA6H,aAAArM,KAAAU,YAIAvC,EAAA,WACA,GAAAmO,GAAAvO,SAAAwO,eAAA,iBACAD,KACAA,EAAAE,QACAF,EAAAG,kBAAA,EAAA,YC3JA7O,QAAAC,OAAA,SAAAJ,WAAA,gBAEA,WAAA,aAAA,aAAA,WAAA,eAAA,OAAA,UAAA,mBACA,SAAAU,EAAAG,EAAAE,EAAAkO,EAAAnO,EAAA+F,EAAA1F,EAAAH,GACA,YAEA,IAAAM,GAAAiB,IACAjB,GAAA4N,cAAA,GACA5N,EAAA6N,WAAA,EACA7N,EAAA8N,SACA9N,EAAA+N,WAEA9M,KAAA+M,WAAA,WACAhO,EAAAiO,eACAjO,EAAA+N,QAAAJ,EAAAO,WAAAlO,EAAAsK,SAAAtK,EAAAK,MAAAL,EAAA8N,OACA,GAAA9N,EAAA+N,QAAAnK,QACA5D,EAAAmO,aAAAnO,EAAA+N,QAAA,MAKA9M,KAAAkN,aAAA,SAAAtD,GACA,GAAA1C,GAAAwF,EAAAS,WAAAvD,EAAA7K,EAAAsK,SAAAtK,EAAA6N,WAGA,IAFA7N,EAAA8N,MAAAjK,KAAAsE,GACAnI,EAAA6N,aACAF,EAAAU,kBAAArO,EAAAsK,SAAAtK,EAAA6N,YAUA7N,EAAAgO,iBAVA,CAEA,GAAAM,GAAAX,EAAA/K,QAAA5C,EAAA8N,OACAS,EAAA7O,EAAAU,YAAAkO,EACAzP,SAAAyB,QAAAiO,EAAA,SAAAhO,EAAAC,GACAX,EAAAwC,KAAA7B,EAAAD,EAAA,aAAA,WAAAP,EAAAwO,aAAAD,EAAAD,OAEAtO,EAAAwO,aAAAD,EAAAD,KAQArN,KAAAuN,aAAA,SAAAD,EAAAtL,GACA,IAAApD,EAAA4O,aAAA,CAEA,GAAAvO,IAAA,CAOA,IANArB,QAAAyB,QAAAiO,EAAA,SAAAhO,EAAAC,GACAX,EAAAY,SAAAD,KACAN,GAAA,KAIAA,GACAF,EAAA8N,MAAAlK,OAAA,EAAA,CACA5D,EAAA0O,QACA,IAAAJ,GAAA5O,EAAAiP,WAAA1L,EACAxD,GAAAmP,SAAA5O,EAAAY,UAAA0N,GACAtO,EAAAK,MAAAS,MAAA+C,KAAAyK,GACAtO,EAAAe,cAMAE,KAAA4N,MAAA,WACA7O,EAAA6N,WAAA,EACA7N,EAAA8N,SACA1O,EAAA,WACAY,EAAAgO,gBAIA/M,KAAAgN,WAAA,WACA,MAAAjO,GAAA4N,eAAA5N,EAAAsK,SAAAxG,MAGA7C,KAAA6N,MAAA,WACA9O,EAAA4N,cAAA5N,EAAAsK,SAAAxG,KAEAyB,EAAAlD,KAAA,aAAArC,EAAA6O,OACAhP,EAAAwC,KAAA,kBAAA,KAAA,aAAArC,EAAA6O,OACArP,EAAA6C,KAAArC,EAAAsK,SAAAxG,KAAA9D,EAAA6O,QAGA5N,KAAA8N,WAAA,WACA,MAAApB,GAAAoB,WAAA/O,EAAAsK,SAAAtK,EAAAK,WAGAY,KAAAyN,OAAA,WACA1O,EAAA4N,cAAA,GACA5N,EAAA6O,SAGA5N,KAAA+N,KAAA,WACA,GAAA,GAAAhP,EAAA6N,WACA7N,EAAA0O,aAEA,CACA,EAAA,CACA1O,EAAA6N,aACA7N,EAAA8N,MAAAmB,KAEA,IAAAC,GAAAvB,EAAAO,WAAAlO,EAAAsK,SAAAtK,EAAAK,MAAAL,EAAA8N,aACAoB,EAAAtL,QAAA,GAAA5D,EAAA6N,WAAA,EAEA7N,GAAAgO,kBAKAnL,UAAA,oBAAA,WACA,OACAC,OAAA,EACAC,kBACAuH,SAAA,YACAjK,MAAA,SACAO,UAAA,aACAG,SAAA,aAEArC,WAAA,eACAsE,aAAA,WACAvE,YAAA,8BCvHAI,QAAAC,OAAA,SAAAJ,WAAA,iBACA,SAAA,UAAA,SAAA,YAAA,eAAA,aAAA,UAAA,WAAA,eAAA,WAAA,mBAAA,cAAA,OAAA,YAAA,aAAA,cACA,SAAAyQ,EAAApQ,EAAAqQ,EAAA/P,EAAA6D,EAAAzD,EAAAI,EAAAT,EAAAQ,EAAAE,EAAAJ,EAAAC,EAAA4F,EAAAE,EAAAlG,EAAAD,GACA,YAqDA,SAAAS,MAEAF,EAAA4O,cAAA7O,EAAAa,YAAA8E,EAAA9E,YAIArB,EAAA,WACA,GAAA6G,GAAAkJ,EAAAvO,UACAiE,EAAAsK,EAAA9O,KAEA8O,GAAAvN,IAAA2D,EAAA8J,QAAAF,EAAAvN,IAAA6F,IAEA0H,EAAAnN,cAAAyD,EAAAsH,YAAAoC,EAAA1N,YACA0N,EAAAlN,eAAAwD,EAAAsH,YAAAoC,EAAAzN,aACAyN,EAAAvN,MACAuN,EAAAjN,YAAAuD,EAAAwH,eAAAkC,EAAAvN,IAAA6F,IACA0H,EAAAhN,UAAAsD,EAAA0H,aAAAgC,EAAAzN,YAAAyN,EAAAvN,IAAA6F,KAEA0H,EAAA/M,UAAAqD,EAAA6H,aAAA6B,EAAAxN,UAEA,IAAAjB,GAAAf,EAAAgB,YAAAsF,EAAApB,EACA/E,KAEAqP,EAAA/L,cACA+L,EAAA9O,OACAS,MAAAJ,EACAoE,WAAAD,EAAAC,WAEArD,WAAA0N,EAAA1N,WACAC,YAAAyN,EAAAzN,YACAC,UAAAwN,EAAAxN,UACAC,IAAAuN,EAAAvN,IACAC,WAAAsN,EAAAtN,WACAC,QAAAqN,EAAArN,QACAC,iBAAAoN,EAAApN,iBACAC,cAAAmN,EAAAnN,cACAC,eAAAkN,EAAAlN,eACAC,YAAAiN,EAAAjN,YACAC,UAAAgN,EAAAhN,UACAC,UAAA+M,EAAA/M,WAEA+M,EAAA/L,WAAA6C,GAAAkJ,EAAA9O,MACA8O,EAAA3K,MAAAjF,EAAAkF,cAAA0K,EAAA9O,MAEA,IAAAmC,GAAA9C,EAAA+C,gBAAA0M,EAAAvO,UAAAuO,EAAA9O,MACA8O,GAAA9O,MAAAqC,SAAAC,eAAAC,QAAAJ,KAIA,QAAAxB,MA3FA,GATAhC,SAAAC,KAAAC,UAAA,aACAH,EAAAC,SAAAG,MAAA,cAEAiQ,EAAAE,kBAAApM,EAAAkM,QAEAD,EAAAvO,UAAA,GACAuO,EAAA9O,SAGA,KAAA6C,IAAA,KAAAA,GAAA,CACAiM,EAAAvO,UAAAsC,EAAAqM,EAEAJ,EAAA1N,WAAAyB,EAAAsM,EACAL,EAAAzN,YAAAwB,EAAAuM,EACAN,EAAAxN,UAAAuB,EAAAwM,EACAP,EAAAvN,KAAA6F,GAAAvE,EAAAyM,GACAR,EAAAtN,WAAAvC,EAAAgN,YAAApJ,EAAA0M,GACAT,EAAArN,QAAAxC,EAAA2K,SAAA/G,EAAA2M,GACAV,EAAApN,iBAAAzC,EAAA2K,SAAA/G,EAAA4M,EAEA,IAAAhP,MAEAiP,EAAA7M,EAAAS,CAEA9E,SAAAyB,QAAAyP,EAAAC,MAAA,KAAA,SAAAC,EAAAzJ,GACA,GAAAvD,GAAAvD,EAAAwQ,WAAAD,EAEAhN,GAAAwE,GAAA,GACA3G,EAAA+C,KAAAZ,KAIAkM,EAAA9O,SACA8O,EAAA/L,cACA+L,EAAA/L,WAAA+L,EAAAvO,WAAAuO,EAAA9O,MACA8O,EAAA9O,MAAAS,MAAAA,EACAqO,EAAAgB,WAAA,EAEAtR,QAAAyB,QAAAX,EAAAS,YAAA+O,EAAA9O,OAAA,SAAAE,EAAAC,GACAX,EAAAwC,KAAA7B,EAAAD,EAAAS,EAAAjB,KAGAH,EAAAyC,KAAArB,EAAAjB,GACAwF,EAAAlD,KAAArB,EAAAjB,GACA0F,EAAApD,KAAAtC,GAEAX,IAGA+P,EAAAlL,SAAAV,OAAAC,KAAA2L,EAAA/L,YAAAQ,OAAA,EAsDAuL,EAAA9N,UAAA,WACA,GAAA+O,GAAA3Q,EAAA8B,YAAA4N,EAAAvO,UAAAuO,EAAA9O,MAAAS,MAGArB,GAAA+B,iBACA4O,EACAA,EACAjB,EAAA1N,WACA0N,EAAAzN,YACAyN,EAAAxN,UACAwN,EAAAvN,IACAuN,EAAAtN,WACAsN,EAAArN,QACAqN,EAAApN,iBACAoN,EAAAnN,cAAAmN,EAAAlN,eAAAkN,EAAAjN,YAAAiN,EAAAhN,UAAAgN,EAAA/M,WAEA/C,EAAAgF,IAAA,UAAA+L,OC5HA,WACA,YACAvR,SAAAC,OAAA,SAAAuR,OAAA,UAAA,WAGA,QAAAC,GAAA/C,GACA,MAAAA,GACAgD,OAAAC,mBAAAjD,GAEA,GAGA,MAAA+C,SCZA,WACA,YACAzR,SAAAC,OAAA,SAAAuR,OAAA,cAAA,WAGA,QAAAI,GAAAlD,GACA,MAAA,gBAAAA,GACA1H,KAAAC,MAAA,IAAAyH,EAAA,KAAA,IAAA,IAGAA,EAKA,MAFAkD,GAAAC,WAAA,EAEAD,QCfA5R,QAAAC,OAAA,SAAAJ,WAAA,cACA,SAAA,UAAA,aACA,SAAAyQ,EAAApQ,EAAAU,GACA,YAEAT,UAAAC,KAAAC,UAAA,eACAH,EAAAC,SAAAG,MAAA,sBAEA,IAAAwR,GAAAlR,EAAA4D,eACA8L,GAAAyB,WAAAC,KAAAC,UAAAH,EAAA,KAAA,GAEAxB,EAAAhF,KAAA,WACAE,aAAAS,QAAA,aAAAiG,SAAAC,gBAAA7B,EAAAyB,iBCZA/R,QAAAC,OAAA,SAAAJ,WAAA,WACA,SAAA,YAAA,eAAA,SAAA,eAAA,aACA,SAAAyQ,EAAA9P,EAAAO,EAAAwP,EAAA5P,EAAAC,GACA,YAEA,IAAAwR,IAAA9P,KAAA,QAAA2C,KAAA,GAAAoN,KAAA,iBAGAC,GAAAF,GACAG,IACAjQ,KAAA,SAAA2C,KAAA,SAAAoN,KAAA,WACA/P,KAAA,SAAA2C,KAAA,OAAAoN,KAAA,WACA/P,KAAA,QAAA2C,KAAA,QAAAoN,KAAA,UACAD,GAGAI,GAAAlQ,KAAA,QAAA2C,KAAA,QAAAoN,KAAA,UAEAI,IACAnQ,KAAA,SAAA2C,KAAA,SAAAoN,KAAA,UACAG,GACAlQ,KAAA,SAAA2C,KAAA,OAAAoN,KAAA,WACA/P,KAAA,QAAA2C,KAAA,QAAAoN,KAAA,UACAD,EAKA7B,GAAA/M,OAEA8M,EAAAoC,SAAA,WACA,MAAA,IAAAlS,EAAA8B,OAAAqQ,QAAA,YAGArC,EAAAgB,UAAA,WACA,MAAAvQ,GAAA6R,iBACA7R,EAAAa,YACA,MAAA2O,EAAAsC,WACA,IAAAtC,EAAAsC,UAAArN,MACA8K,EAAAwC,YAGAxC,EAAAwC,SAAA,WACA,MAAA,OAAAvC,EAAAwC,aAGAzC,EAAA0C,aAAA,SAAAC,GACA,GAAA,UAAAA,EAAAhO,KAAA,CACA,GAAAiI,GAAA1B,aAAAzH,QAAA,uBAAAkP,EAAAhO,KACA,OAAAiI,GACA+F,EAAA3Q,KAAA,QAAA4K,EAGA+F,EAAA3Q,KAIA,MAAA2Q,GAAA3Q,MAIAgO,EAAA4C,WAAA,WAEA,GAAAC,GAAA,KAEAC,EAAAxS,EAAAyG,iBACA,IAAA+L,EAAA,CACA,GAAA7O,GAAA3D,EAAA4D,eACA4O,KAAA7O,KACA6O,EAAA,MAoCA,MAhCA,OAAA7C,EAAAwC,aAAA,IAAAxC,EAAAwC,YAAAvN,IACA2N,EAAAb,EAEA,MAAA/B,EAAAsC,WAAA,IAAAtC,EAAAsC,UAAArN,IACA2N,EAAAb,EAEAc,GAAA,QAAAA,GACAD,EAAAV,EACAD,EAAAlQ,KAAA,SAAA8Q,EACAZ,EAAAvN,KAAAmO,GAGAD,EADA,eAAA3S,EAAA8B,QAAA,MAAAiO,EAAAwC,YACAR,EAGAA,EAGAvS,QAAAyB,QAAA0R,EAAA,SAAAnH,EAAA4B,SACA5B,GAAAqH,SACA,GAAA7S,EAAA8B,OAAAyC,OACA,GAAAiH,EAAA1J,KAAAyC,SACAiH,EAAAqH,SAAA,UAGArH,EAAA1J,KAAAyC,OAAA,GAAA,GAAAvE,EAAA8B,OAAAqQ,QAAA,IAAA3G,EAAA1J,QACA,UAAA0J,EAAA1J,MAAA,WAAA9B,EAAA8B,SACA0J,EAAAqH,SAAA,aAKAF,MAIAnP,UAAA,eAAA,WACA,OACApE,YAAA,qBC/GAI,QAAAC,OAAA,SAAAJ,WAAA,aACA,SAAA,UAAA,SAAA,WAAA,eAAA,UAAA,WAAA,SACA,SAAAyQ,EAAApQ,EAAAoT,EAAA/S,EAAAQ,EAAAwS,EAAAtS,EAAAsP,GACA,YA+DA,SAAAiD,KACAC,EAAA,2CAAA1S,EAAA2S,UAAA,KAAA,KAAA3S,EAAA2S,UAAA,KAAA,QAAA3S,EAAA2S,UAAA,MACApD,EAAAgB,WAAA,EAGA,QAAAnP,GAAAwR,GACApT,EACA,WACA,MAAA+P,EAAAsD,aACAtD,EAAAsD,YAAA5O,KAAA2O,KAKA,QAAAF,GAAAE,GACApT,EACA,WACA,MAAA+P,EAAAuD,oBACAvD,EAAAuD,mBAAA7O,KAAA2O,KA/EAxT,SAAAC,KAAAC,UAAA,eACAH,EAAAC,SAAAG,MAAA,sBAEAgQ,EAAAwD,eAAA,EACAxD,EAAAgB,UAAAvQ,EAAA6R,iBAAA7R,EAAAa,WACA0O,EAAAuD,sBACAvD,EAAAyD,YAAAxD,EAAAwD,WAEA,IAAAC,GAAA,GACAC,EAAA1D,EAAA2D,iBAAA1O,GACA,OAAAyO,IACAA,EAAAD,GAGA1D,EAAA6D,SAAAF,EACA3D,EAAA6D,UAAAH,EACA1D,EAAAsD,aAAA,mBAGAtD,EAAAsD,aAAA,kBAAAtD,EAAA6D,UAGA7D,EAAA8D,YAAA,SAAA5O,GACA8K,EAAA6D,SAAA3O,EACA8K,EAAAgB,WAAA,EACAhB,EAAA+D,eACApT,IAEAqP,EAAAuD,qBACA,IAAAS,GAAA9I,aAAAzH,QAAA,iBACA,OAAAuQ,GAAAA,EAAA3B,QAAAnN,QACA1B,eAAAsJ,WAAA,aAEArM,EAAAiP,QACAjP,EAAAoT,SAAA3O,EACAzE,EAAAyC,KAAAiQ,EAAAD,IAGAlD,EAAAiE,iBAAA,WACAjE,EAAAsD,aAAA,uCACArD,EAAAsC,UAAA,KACAtC,EAAAwC,YAAA,KACAhS,EAAAiP,QACAlM,eAAA0Q,QACAhJ,aAAAgJ,QACApS,KAAAiS,eACA9T,EAAA,WACA4T,SAAAM,KAAA,GACAN,SAAAO,QAAA,MAIApE,EAAAqE,aAAA,WACArE,EAAAuD,sBACA/P,eAAAsJ,WAAA,aACAnM,IACAF,EAAAiP,QACAjP,EAAAoT,SAAA5D,EAAAsC,UAAArN,IACAzE,EAAAyC,KAAAiQ,EAAAD,IA0BAlD,EAAA+D,aAAA,WACApT,IACAqP,EAAA6D,UAAAH,IACAzD,EAAAqE,aAAAtE,EAAA6D,UAEA5D,EAAA/M,OACA+M,EAAA2D,iBAAA3D,QAAAA,EAAAsC,UAAAtC,SACAxP,EAAAiP,QACAjP,EAAAyC,KAAAiQ,EAAAD,IAEAlD,EAAAsD,aACA,iBACA,kBAAAtD,EAAA6D,YAIA7D,EAAAuE,aAAA,WACAvE,EAAA6D,UAAAH,IACA1D,EAAAsD,aACA,kBAAAtD,EAAA6D,SACA,oCAEApT,EAAAyC,KAAArB,EAAA,WACAoR,EAAApR,UChHAnC,QAAAC,OAAA,SAAAJ,WAAA,uBAEA,cAAA,aAAA,aAAA,eAAA,SACA,SAAAY,EAAAC,EAAAE,EAAAD,EAAA2P,GACA,YAsIA,SAAAzJ,GAAAC,EAAAC,GACA,MAAAD,IAAAC,EAEAC,KAAAC,MAAA,KAAA,EAAAF,EAAAD,IAAA,IAGA,EAuLA,QAAAgO,KACAlU,EAAAuE,mBAAAhE,EAAAiG,UAAAjG,EAAAoD,YAlUA,GAAApD,GAAAiB,IAoBA,IAlBAA,KAAAmC,WAAA3D,EAAA4D,gBACApC,KAAA+E,WAAAzC,OAAAC,KAAAvC,KAAAmC,YACAnC,KAAA+E,aACA/E,KAAA+E,eAEA/E,KAAA+E,WAAApC,OAAA,EACA3C,KAAAgF,UAAAxG,EAAAyG,kBAGAjF,KAAAgF,UAAA,KAGAhF,KAAAgF,WAAAhF,KAAAgF,YAAAhF,MAAAmC,YACAnC,KAAA+E,WAAApC,OAAA,IACA3C,KAAAgF,UAAAhF,KAAA+E,WAAA,IAIA/E,KAAAgF,UAAA,CAIAhF,KAAAuG,iBACA,KAAA,GAAAC,KAAAnI,GAAAkF,MACAlF,EAAAkF,MAAAiD,GAAAC,gBACAzG,KAAAuG,eAAA3D,KAAA4D,EAIAxG,MAAA2S,WAAA,WACA5T,EAAA6T,gBAAA,KACA7T,EAAA4I,uBAEA5I,EAAA8T,WAAA,KACA9T,EAAAoG,eAAA,MAGA+I,EAAA4E,OAAA,gBAAA,WACA/T,EAAA4T,eAGA3S,KAAA+S,mBAAA,SAAAjL,GAGA,MAFA9H,MAAAgT,iBAEAhT,KAAA4S,gBAAA9K,IAGA9H,KAAAkI,uBAAA,SAAAC,EAAAC,EAAApG,GAEA,MADAhC,MAAAqI,mBAAAD,EAAApG,GACAhC,KAAA2H,oBAAAS,GAAAD,IAGAnI,KAAAkF,kBAAA,WAEA,GAAA,MAAAlF,KAAAmF,eAAA,CAEA,GAAAvB,GAAA7E,EAAAoD,WAAApD,EAAAiG,UACApB,KACA5D,KAAAmF,eAAAnF,KAAAoF,mBAAAxB,EAAAA,EAAA/D,QAIA,MAAAG,MAAAmF,gBAGAnF,KAAAqF,SAAA,WACA,MAAAtG,GAAAoD,WAAApD,EAAAiG,YAGAhF,KAAAoF,mBAAA,SAAAxB,EAAA/D,GACA,GAAAgG,GAAAvH,EAAAwH,cAAAlC,GACAmC,EAAAzH,EAAA0H,iBAAAnG,GACAoG,EAAA3H,EAAA4H,YAAArG,GACAsG,EAAAN,EAAAO,OAAAL,GAAAK,OAAAH,EAMA,OALA,OAAArC,EAAAzC,WAAAyC,EAAAzC,UAAAwB,OAAA,IACAwD,EAAAA,EAAAC,OAAAxC,EAAAzC,YAEAgF,EAAA9H,EAAAgI,WAAAF,GAEA7H,EAAA8G,mBAAAxB,EAAAuC,IAGAnG,KAAAgT,eAAA,WAEA,IAAAjU,EAAA6T,gBAAA,CAMA,GAAAjK,GAAA5J,EAAAmG,oBACAtB,EAAA7E,EAAAoD,WAAApD,EAAAiG,WACAvF,IACAmE,GAAA/D,QACAJ,EAAAmE,EAAA/D,MAAAuG,QAAArH,EAAAiD,OAEA,IAAA0G,GAAA3J,EAAAqG,mBAAAxB,EAAAnE,EAEAO,MAAA4S,kBACA,KAAA,GAAApM,KAAAnI,GAAAkF,MACAlF,EAAAkF,MAAAiD,GAAAC,iBACA1H,EAAA6T,gBAAApM,GAAA/B,EAAA1F,EAAA6J,QAAApC,EAAAkC,GAAAX,IAAAhJ,EAAA6J,QAAApC,EAAAmC,GAAAZ,QAKA/H,KAAAqI,mBAAA,SAAAD,EAAApG,GACA,IAAAjD,EAAA4I,oBAAAS,GAAA,CAIA,GAAAxE,GAAA7E,EAAAoD,WAAApD,EAAAiG,WACAvF,GAAAV,EAAAiD,KACApE,SAAAyB,QAAAuE,EAAA/D,MAAA,SAAA4I,EAAAlD,GACAvD,IAAAyG,GACAhJ,EAAAmD,KAAA6F,IAIA,IAAAC,GAAA3J,EAAAqG,mBAAAxB,EAAAnE,GACAkJ,EAAA5J,EAAAmG,mBAEAlF,MAAA2H,oBAAAS,KACA,KAAA,GAAA5B,KAAAnI,GAAAkF,MACAlF,EAAAkF,MAAAiD,GAAAC,iBACA1H,EAAA4I,oBAAAS,GAAA5B,GAAA/B,EAAA1F,EAAA6J,QAAApC,EAAAkC,GAAAX,IAAAhJ,EAAA6J,QAAApC,EAAAmC,GAAAZ,QAeA/H,KAAA4I,QAAA,SAAApC,EAAAjD,GAEA,IAAA,GADA0F,GAAA1F,EAAAZ,OACAD,EAAA,EAAAA,EAAAuG,IAAAvG,EACA,GAAAa,EAAAb,GAAA8D,IAAAA,EACA,MAAAjD,GAAAb,EAGA,QAAA8D,GAAAA,EAAAuB,IAAA,IAGA/H,KAAA6I,YAAA,SAAArC,GACA,GAAAsC,GAAA,EACA,IAAA,WAAAzK,EAAAkF,MAAAiD,GAAA3F,QAAA,CACA,GAAAkI,GAAA,CACAhK,GAAAoD,WAAApD,EAAAiG,WAAAnE,UACAkI,EAAAhK,EAAAoD,WAAApD,EAAAiG,WAAAnE,QAAA2F,IAEAsC,GAAAzK,EAAA2K,SAAAD,GAAAlG,SAEA,IAAA,aAAAxE,EAAAkF,MAAAiD,GAAA3F,QAAA,CACA,GAAAkI,GAAA,CACAhK,GAAAoD,WAAApD,EAAAiG,WAAAlE,mBACAiI,EAAAhK,EAAAoD,WAAApD,EAAAiG,WAAAlE,iBAAA0F,IAEAsC,GAAAzK,EAAA2K,SAAAD,GAAAlG,KAEA,MAAAiG,GAAA,IAAAzK,EAAAkF,MAAAiD,GAAA3D,MAGA7C,KAAAiT,cAAA,WAGA,QAAAC,GAAAC,GACA,GAAAA,EAAA,CAEA,IAAA,GADAD,GAAA,EACAxQ,EAAA,EAAAA,EAAA0Q,EAAAzQ,SAAAD,EACAyQ,EAAA5C,QAAA6C,EAAA1Q,IAAA,GACAwQ,GAGA,OAAAA,GAGA,SAZA,GAAAE,EAgBA,IAAA,MAAArU,EAAA8T,YAAA9T,EAAAiG,WAAAjG,EAAAiG,YAAAjG,GAAAoD,YAAApD,EAAAiD,MAAAjD,EAAAiD,KAAA6E,SAAA,CACA9H,EAAA8T,aAEA,IAAAhT,KACAjC,SAAAyB,QAAAN,EAAAoD,WAAApD,EAAAiG,WAAAnF,MAAA,SAAAmC,EAAAuD,GACAvD,EAAAqR,cAAA,OAAArR,EAAAsR,YAAA,SAAAtR,EAAAsR,WACAtR,EAAAqR,cAAAtU,EAAAiD,KAAAqR,cACAxT,EAAA+C,KAAAZ,GAGAA,EAAA6E,UAAA9H,EAAAiD,KAAA6E,UACAhH,EAAA+C,KAAAZ,KAIAjD,EAAAiD,KAAAa,OACAuQ,EAAArU,EAAAiD,KAAAa,KAAAkM,MAAA,MAEAlP,EAAA2C,KAAA,SAAA+Q,EAAAC,GACA,MAAAN,GAAAM,EAAA3Q,MAAAqQ,EAAAK,EAAA1Q,QAGAjF,QAAAyB,QAAAQ,EAAA,SAAAmC,EAAAuD,GACAvD,EAAAa,MAAA9D,EAAAiD,KAAAa,MACA9D,EAAA8T,WAAAjQ,KAAAZ,KAIApE,QAAAyB,QAAAQ,EAAA,SAAAmC,EAAAuD,GACAvD,EAAAa,MAAA9D,EAAAiD,KAAAa,MACA9D,EAAA8T,WAAAjQ,KAAAZ,KAIA,MAAAjD,GAAA8T,YAGA7S,KAAAyT,kBAAA,WACA,GAAA3I,GAAAvM,EAAA+K,OAAAtJ,KAAAgC,KAAA6E,UACAhH,EAAAG,KAAAiT,eAEA,IAAAnI,GAAAA,EAAAf,QACAlK,EAAA8C,QAAAmI,EAAAf,OACA,OAAA,CAIA,IAAAe,GAAAA,EAAA4I,aACA7T,EAAA8C,QAAAmI,EAAA4I,YAAA,CACA,IAAA,GAAAhR,GAAA,EAAAA,EAAA7C,EAAA8C,SAAAD,EACA,IAAA7C,EAAA6C,GAAA2Q,aACA,OAAA,CAIA,QAAA,EAGA,OAAA,GAGArT,KAAA2T,UAAA,WAEA,GAAAC,IAAA,EACAD,EAAA,IACA/V,SAAAyB,QAAAN,EAAAgG,WAAA,SAAAC,EAAAO,GACAqO,GACA,MAAAD,IACAA,EAAA3O,GAGAA,GAAAjG,EAAAiG,YACA4O,GAAA,KAIA,MAAAD,IACAA,EAAA5U,EAAAgG,WAAA,IAGAhG,EAAAiG,UAAA2O,EACAjB,IACA3T,EAAA4T,cAGA3S,KAAA6T,UAAA,WAEA,GAAAC,IAAA,EACAD,EAAA,IACAjW,SAAAyB,QAAAN,EAAAgG,WAAA,SAAAC,EAAAO,GACAP,GAAAjG,EAAAiG,YACA8O,GAAA,GAGAA,IACAD,EAAA7O,KAIA,MAAA6O,IACAA,EAAA9U,EAAAgG,WAAAhG,EAAAgG,WAAApC,OAAA,IAGA5D,EAAAiG,UAAA6O,EACAnB,IACA3T,EAAA4T,cAGA3S,KAAA+T,WAAA,WACAvV,EAAAmP,SAAA5O,EAAAiG,UAAAjG,EAAAiD,MACAhC,KAAAmC,WAAA3D,EAAA4D,gBACArD,EAAA4T,cAGA3S,KAAAgU,QAAA,SAAAhS,GACAA,EAAAiS,aAAA,CACA,IAAAhJ,KACArN,SAAAyB,QAAAN,EAAAoD,WAAApD,EAAAiG,WAAAnF,MAAA,SAAA4I,EAAAlD,GACAkD,EAAAwL,YAEAhJ,EAAArI,KAAA7D,EAAAiD,MAGAiJ,EAAArI,KAAA6F,KAIAjK,EAAAoB,kBAAAb,EAAAiG,UAAAiG,GACAjL,KAAAmC,WAAA3D,EAAA4D,gBACArD,EAAA4T,kBAQA/Q,UAAA,2BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,sBACAsE,aAAA,WACAvE,YAAA,mCCpVAI,QAAAC,OAAA,SAAAJ,WAAA,sBAEA,cAAA,SACA,SAAAY,EAAA6P,GACA,YAEA,IAAA,MAAAlO,KAAAgC,MACA,UAAAhC,KAAAgC,KAAAsR,WAAA,CAIA,GAAAvU,GAAAiB,IAEAA,MAAAkU,WAGAC,EAAA9U,QAAAN,EAAAiD,KAAAuB,MAAA,SAAAuE,GAEA/I,EAAAmV,QAAApM,EAAAtB,IAAAsB,EAAAC,KAGA,KAAA,GAAAI,KAAA9J,GAAAkF,MACA2K,EAAA4E,OAAA,oBAAA3K,EAAA,IAAA,SAAAiM,EAAAC,GAEA,GAAAD,GAAAC,EAAA,CAIA,GAAAC,IAAA,EACA5L,IACA,KAAA,GAAAP,KAAApJ,GAAAmV,QAEA,GAAAnV,EAAAmV,QAAA/L,IAAAoM,OAAAxV,EAAAmV,QAAA/L,IAOA,CACAO,EAAA9F,MACA4D,GAAA+N,OAAApM,GACAJ,IAAAwM,OAAAxV,EAAAmV,QAAA/L,KAGA,IAAAqM,IAAA,CACAL,GAAAM,KAAA1V,EAAAiD,KAAAuB,MAAA,SAAAuE,GACAA,EAAAtB,IAAA2B,IACAqM,GAAA,EAEArM,IAAApJ,GAAAmV,SAAApM,EAAAC,KAAAhJ,EAAAmV,QAAA/L,KACAmM,GAAA,MAKAE,IACAF,GAAA,OAxBAH,GAAAM,KAAA1V,EAAAiD,KAAAuB,MAAA,SAAAuE,GACAA,EAAAtB,IAAA2B,IACAmM,GAAA,IA2BAA,KAEAvV,EAAAiD,KAAAuB,MAAAmF,EACA3J,EAAAe,mBAOA8B,UAAA,0BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,qBACAsE,aAAA,WACAvE,YAAA,mCCjFAI,QAAAC,OAAA,SAAAJ,WAAA,2BAEA,UAAA,cAAA,QAAA,WAAA,eACA,SAAAmB,EAAAP,EAAAwB,EAAA1B,EAAAQ,GACA,YAEA,IAAA,MAAAqB,KAAAgC,OACA,cAAAhC,MAAAgC,OACAhC,KAAA0U,SAAA7U,EAAAG,KAAAgC,KAAAsR,aAGAtT,KAAA0U,UAAA,cAAA1U,MAAA0U,UAAA,CAIA,GAAA3V,GAAAiB,IAEAjB,GAAA4V,aAAA,KACA5V,EAAA6V,YAAA,KACA7V,EAAA8V,iBAAA,KACA9V,EAAA+V,gBAAA,GACA/V,EAAAgW,sBACA,MAAAhW,EAAAiD,KAAAgG,mBACAjJ,EAAAiD,KAAAgG,qBAGAhI,KAAAgV,eAAA,WAGA,GAFAjW,EAAAiD,KAAAgG,oBAEAjJ,EAAA4V,cAAA5V,EAAA4V,aAAAhS,OAAA,EAAA,CAEA,gBAAA5D,GAAAiD,KAAA+E,iBACAhI,EAAAiD,KAAA+E,eAAA,EACAhI,EAAAe,WAGA,KAAA,GAAA4C,GAAA,EAAAA,EAAA3D,EAAA4V,aAAAhS,SAAAD,EACA3D,EAAAiD,KAAA+E,gBAAAhI,EAAA4V,aAAAjS,GAAAuS,cACAlW,EAAA6V,YAAA7V,EAAA4V,aAAAjS,GAEA3D,EAAAiD,KAAAgG,iBAAA3J,EAAA6W,SAAAnW,EAAA6V,cAEA7V,EAAAiD,KAAA+E,eAAA,GAAAhI,EAAA4V,aAAAjS,GAAAuS,eACAlW,EAAA8V,iBAAA9V,EAAA4V,aAAAjS,GACA3D,EAAA8V,iBAAAM,SAAA,IACApW,EAAA+V,gBAAAlQ,KAAAC,MAAA9F,EAAA8V,iBAAAM,SAAA,KAAA,GAAA,IAGApW,EAAA+V,gBAAAlQ,KAAAC,MAAA9F,EAAA8V,iBAAAM,SAAA,KAAA,OAOAnV,KAAAoV,kBAAA,WAEA,GAAA,MAAArW,EAAA4V,cACA5V,EAAA4V,aAAAhS,OAAA,GACA,gBAAA5D,GAAAiD,KAAA+E,eAAA,CAEA,IAAA,GAAArE,GAAA,EAAAA,EAAA3D,EAAA4V,aAAAhS,SAAAD,EACA,GAAA3D,EAAAiD,KAAA+E,eAAA,GAAAhI,EAAA4V,aAAAjS,GAAAuS,aACA,OAAA,CAGA,QAAA,EAGA,OAAA,GAIAjV,KAAAqV,kBAAA,SAAAC,GACAvW,EAAAiD,KAAA+E,eAAAuO,EACAvW,EAAAgW,sBACAhW,EAAAiW,iBACAjW,EAAAe,YAGAE,KAAAuV,gBAAA,WACA,IAAA,GAAA7S,GAAA3D,EAAAiD,KAAA+E,eAAA,GAAArE,GAAA3D,EAAA4V,aAAAjS,EAAA,KAAAA,EACA,GAAAA,EACA3D,EAAAgW,mBAAAnS,MAAAgI,OAAA,IAGA7L,EAAAgW,mBAAAnS,KAAA7D,EAAAyW,UAAAzW,EAAA4V,aAAAjS,EAAA,MAKA1C,KAAAyV,gBAAA,WACA1W,EAAAgW,qBACA,KAAA,GAAArS,GAAA3D,EAAAiD,KAAA+E,eAAArE,EAAA,IAAAA,EACA3D,EAAAgW,mBAAAnS,KAAA7D,EAAAyW,UAAAzW,EAAA4V,aAAAjS,EAAA,IAGA3D,GAAAgW,mBAAAnS,MAAAgI,OAAA,KAGA5K,KAAAwV,UAAA,SAAAZ,GACA,OACAhK,OAAAgK,EAAAK,aACA1R,MAAAlF,EAAA6W,SAAAN,KAIA5U,KAAA0V,gBAAA,WACA,IAAA3W,EAAA4V,cAAA5V,EAAAiD,MAAAjD,EAAAiD,KAAA2T,eACA/W,EAAAY,SAAAT,EAAA2V,SAAAkB,YAAA,CACA,GAAAC,GAAA9W,EAAAiD,KAAA2T,aACA5W,GAAA4V,aAAA/V,EAAAkX,KAAA/W,EAAA2V,SAAAkB,WAAA,YAAAC,GACA9W,EAAAiW,iBAIA,MAAAjW,GAAA4V,aAGA,IAAApV,GAAA,kBAEAS,MAAA+V,cAAA,WACAnX,EAAAwC,KAAA7B,EAAA,KAAA,aAAA,WACApB,EAAA,WAEA,GAAAY,EAAA8V,iBAAA,CAIA9V,EAAAiX,YACA,KAAA,GAAAtT,GAAA,EAAAA,GAAA,IAAAA,EAAA,CACA,GAAAuT,GAAAlX,EAAA8V,iBAAA,aAAAnS,GACAwT,EAAAnX,EAAA8V,iBAAA,gBAAAnS;AACA,GAAAuT,EAAA,GAAAC,EAAA,EAAA,CAEA,GAAArW,GAAAjB,EAAAkX,KAAAvW,EAAA,KAAA0W,EACA,IAAA,GAAApW,EAAA8C,OACA5D,EAAAiX,UAAApT,MAAAwE,IAAA8O,EAAArT,KAAA,YAAAoT,EAAA,UAEA,CACA,GAAAjU,GAAAnC,EAAA,GACAgD,EAAAlE,EAAA2S,UAAAtP,EAAAmU,OAAAnU,EAAAoU,YAEA,IAAApU,EAAA,CACA,GAAAqU,IACAjP,IAAA8O,EACAjG,KAAAjO,EAAAsU,eACAC,KAAAvU,EAAAwU,KACAC,WAAAzU,EAAA0U,WACA7T,KAAAA,EAEA9D,GAAAiX,UAAApT,KAAAyT,aASAzX,EAAAY,SAAAD,IACAS,KAAA+V,oBAOAnU,UAAA,+BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,0BACAsE,aAAA,WACAvE,YAAA,wCCjLAI,QAAAC,OAAA,SAAAJ,WAAA,yBAEA,UAAA,QAAA,cACA,SAAAmB,EAAAiB,EAAAxB,GACA,YA0FA,SAAAsY,KACA,GAAAC,MACAC,EAAA,IAqBA,OAnBA,OAAA9X,EAAA+X,YACAlZ,QAAAyB,QAAAN,EAAA+X,WAAA,SAAAtI,EAAAjJ,GACA,GAAAhC,KACA3F,SAAAyB,QAAAhB,EAAA6W,SAAA1G,GAAA,SAAA1G,EAAAiP,GACA1Y,EAAAkF,MAAAuE,EAAAtB,IAAAwQ,MACAzT,EAAAX,KAAAkF,KAIAvE,EAAAZ,OAAA,EACAiU,EAAApI,EAAAhI,IAAAjD,EAEAsT,IACAD,EAAApI,EAAAhI,OACAqQ,EAAArI,EAAAhI,MAKAoQ,EA1GA,GALA5W,KAAA8W,WAAA,KACA9W,KAAAiX,UAAA,KACAjX,KAAAkX,oBAAA,EACAlX,KAAAmX,kBAEA,MAAAnX,KAAAgC,OAEA,cAAAhC,MAAAgC,OACAhC,KAAA0U,SAAA7U,EAAAG,KAAAgC,KAAAsR,aAGAtT,KAAA0U,UAAA1U,KAAAgC,KAAAoV,KAAA,gBAAApX,MAAA0U,UAAA,CAIA,GAAA3V,GAAAiB,IAEAA,MAAAqX,cAAA,WACA,IAAAtY,EAAA+X,YACA/X,EAAAiD,MAAAjD,EAAAiD,KAAAoV,KAAA,gBAAArY,GAAA2V,SAAA,CACA,GAAAoC,GAAAlY,EAAAkX,KAAA/W,EAAA2V,SAAA4C,aAAA,KAAAvY,EAAAiD,KAAAoV,IAEA,IAAAN,EAAAnU,QACA5D,EAAAkY,UAAAH,EAAA,GACA/X,EAAA+X,WAAAlY,EAAAkX,KAAA/W,EAAA2V,SAAA4C,aAAA,cAAAvY,EAAAkY,UAAAM,aACAxY,EAAAoY,eAAAR,EAAA5X,EAAA+X,aAEA,kBAAA/X,GAAA2V,WACAoC,EAAAlY,EAAAkX,KAAA/W,EAAA2V,SAAA8C,eAAA,KAAAzY,EAAAiD,KAAAoV,KAEA,GAAAN,EAAAnU,SACA5D,EAAAkY,UAAAH,EAAA,GACA/X,EAAA+X,WAAAlY,EAAAkX,KAAA/W,EAAA2V,SAAA8C,eAAA,cAAAzY,EAAAkY,UAAAM,aACAxY,EAAAoY,eAAAR,EAAA5X,EAAA+X,cAMA,MAAA/X,GAAA+X,YAGA9W,KAAAyX,cAAA,WACA,IAAA,GAAA/U,GAAA,EAAAA,EAAA3D,EAAA+X,WAAAnU,SAAAD,EACA,GAAA3D,EAAAkY,UAAAzQ,IAAAzH,EAAA+X,WAAApU,GAAA8D,GAKA,MAJAzH,GAAAkY,UAAAlY,EAAA+X,WAAApU,EAAA,GACA3D,EAAAiD,KAAAoV,IAAArY,EAAAkY,UAAAzQ,GACAzH,EAAAe,gBACAE,KAAAkX,oBAAA,IAMAlX,KAAA0X,cAAA,WACA,IAAA,GAAAhV,GAAA,EAAAA,EAAA3D,EAAA+X,WAAAnU,SAAAD,EACA,GAAA3D,EAAAkY,UAAAzQ,IAAAzH,EAAA+X,WAAApU,GAAA8D,GAKA,MAJAzH,GAAAkY,UAAAlY,EAAA+X,WAAApU,EAAA,GACA3D,EAAAiD,KAAAoV,IAAArY,EAAAkY,UAAAzQ,GACAzH,EAAAe,gBACAE,KAAAkX,oBAAA,IAMAlX,KAAA2X,gBAAA,SAAAP,GACA,IAAA,GAAA1U,GAAA,EAAAA,EAAA3D,EAAA+X,WAAAnU,SAAAD,EACA,GAAA0U,GAAArY,EAAA+X,WAAApU,GAAA8D,GAKA,MAJAzH,GAAAkY,UAAAlY,EAAA+X,WAAApU,GACA3D,EAAAiD,KAAAoV,IAAArY,EAAAkY,UAAAzQ,GACAzH,EAAAmY,oBAAA,MACAnY,GAAAe,YAMAE,KAAA4X,iBAAA,WAEA,MADA5X,MAAAqX,iBACAtY,EAAA+X,YAAA/X,EAAA+X,WAAAnU,QAAA,IAAA5D,EAAAkY,WAAAlY,EAAAkY,UAAAzQ,IAAAzH,EAAA+X,WAAA,GAAAtQ,IAGAxG,KAAA6X,gBAAA,WAEA,MADA7X,MAAAqX,iBACAtY,EAAA+X,YAAA/X,EAAA+X,WAAAnU,QAAA,IAAA5D,EAAAkY,WAAAlY,EAAAkY,UAAAzQ,IAAAzH,EAAA+X,WAAA/X,EAAA+X,WAAAnU,OAAA,GAAA6D,QAkCA5E,UAAA,6BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,wBACAsE,aAAA,WACAvE,YAAA,sCCtIAI,QAAAC,OAAA,SAAAJ,WAAA,qBAEA,WAAA,UAAA,aACA,SAAAU,EAAAS,EAAAN,GACA,YA4CA,SAAAwZ,GAAAvG,IA1CA,GAAA,MAAAvR,KAAAgC,MACA,UAAAhC,KAAAgC,KAAAsR,WAAA,CAIAtT,KAAAgC,KAAA+E,iBACA/G,KAAAgC,KAAA+E,eAAA,EAGA,IAAAhI,GAAAiB,IAEAA,MAAA+X,WAAA,WACA,GAAAC,GAAA,4BAAAjZ,EAAAiD,KAAAiW,YAAAlZ,EAAAiD,KAAAkW,IAAA,SACAtZ,GAAAwC,KAAA4W,EAAA,KAAAF,EAAA,WAAA3Z,EAAA,WACAY,EAAAoZ,UAAAvZ,EAAAkX,KAAAkC,EAAA,aAAAjZ,EAAAiD,KAAAwE,SAIAxG,KAAAuV,gBAAA,WACAvV,KAAAmY,WAAAnY,KAAAgC,KAAA+E,eAAA/G,KAAAmY,UAAAxV,SACA3C,KAAAgC,KAAA+E,iBACAhI,EAAAe,aAIAE,KAAAoY,gBAAA,WACA,MAAApY,MAAAmY,WAAAnY,KAAAgC,MAAAhC,KAAAgC,KAAA+E,gBAAA/G,KAAAmY,UAAAxV,QAGA3C,KAAAyV,gBAAA,WACAzV,KAAAgC,KAAA+E,eAAA,EACA/G,KAAAgC,KAAA+E,iBAGA/G,KAAAgC,KAAA+E,eAAA,EAGAhI,EAAAe,YAGAE,KAAA+X,iBAOAnW,UAAA,yBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,oBACAsE,aAAA,WACAvE,YAAA,kCC9DAI,QAAAC,OAAA,SAAAJ,WAAA,qBAEA,UAAA,cAAA,QACA,SAAAmB,EAAAP,EAAAwB,GACA,YA8DA,SAAAwY,KACA,GAAAC,KAUA,OATAvZ,GAAAiD,KAAAuW,QAAA,GACA3a,QAAAyB,QAAAN,EAAAyZ,OAAA,SAAAC,EAAAlT,GACA,GAAAkT,EAAAjS,IAAAzH,EAAAiD,KAAAuW,QAEA,YADAD,EAAA/S,KAMA+S,EAvEA,GAAA,MAAAtY,KAAAgC,KAAA,CACA,cAAAhC,MAAAgC,OACAhC,KAAA0U,SAAA7U,EAAAG,KAAAgC,KAAAsR,aAGAtT,KAAAwY,OAAA,IACA,IAAAzZ,GAAAiB,IAEAA,MAAA0Y,UAAA,WACA,GAAAnT,GAAA8S,GACA9S,KACAA,GAAAxG,EAAAyZ,OAAA7V,SACA4C,EAAA,EAEA,IAAAkT,GAAA1Z,EAAAyZ,OAAAjT,EACAxG,GAAAiD,KAAAuW,QAAAE,EAAAjS,GACAzH,EAAAiD,KAAA2W,WAAAta,EAAA6W,SAAAuD,GACA1Z,EAAAe,YAGAE,KAAA4Y,aAAA,WACA,MAAA,OAAA7Z,EAAAyZ,QAAAH,KAAAtZ,EAAAyZ,OAAA7V,OAAA,GAGA3C,KAAA6Y,aAAA,WACA,MAAA,IAAAR,KAGArY,KAAA8Y,UAAA,WACA,GAAAvT,GAAA8S,GACA9S,KACAA,EAAA,IACAA,EAAAxG,EAAAyZ,OAAA7V,OAAA,EAEA,IAAA8V,GAAA1Z,EAAAyZ,OAAAjT,EACAxG,GAAAiD,KAAAuW,QAAAE,EAAAjS,GACAzH,EAAAiD,KAAA2W,WAAAta,EAAA6W,SAAAuD,GACA1Z,EAAAe,YAGAE,KAAA+Y,YAAA,WACAha,EAAAiD,KAAAuW,QAAA,KACAxZ,EAAAiD,KAAA2W,WAAA,KACA5Z,EAAAe,YAGAE,KAAAgZ,UAAA,WACA,GAAA,MAAAja,EAAAiD,MAAA,MAAAjD,EAAA2V,SAAA,MAAA,KACA,IAAA,MAAA3V,EAAAyZ,OAAA,CACA,GAAAS,GAAAla,EAAAiD,KAAA0I,WACAuO,IACAra,EAAAY,SAAAT,EAAA2V,SAAAwE,YACAna,EAAAyZ,OAAA5Z,EAAAkX,KAAA/W,EAAA2V,SAAAwE,SAAA,cAAAD,IAKA,MAAAla,GAAAyZ,YAqBA5W,UAAA,yBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,oBACAsE,aAAA,WACAvE,YAAA,kCC7FAI,QAAAC,OAAA,SAAAJ,WAAA,wBAEA,WACA,YAEA,OAAAuC,KAAAgC,MACA,QAAAhC,KAAAgC,KAAAsR,aAIAtT,KAAAyH,YAAA,SAAA0R,GACA,GAAA,GAAAA,EACAnZ,KAAAgC,KAAA+E,eAAA,KACA/G,KAAAgC,KAAAgG,wBAEA,CACAhI,KAAAgC,KAAA+E,eAAAoS,CAEA,IAAAtR,KACAjK,SAAAyB,QAAAW,KAAAgC,KAAAuB,MAAA,SAAAuE,EAAAvC,GACAsC,EAAAjF,MAAA4D,GAAAsB,EAAAtB,GAAAuB,IAAAD,EAAAC,KAAAoR,EAAA,SAGAnZ,KAAAgC,KAAAgG,iBAAAH,EAEA7H,KAAAF,gBAIA8B,UAAA,4BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,QACAlC,SAAA,aAEArC,WAAA,uBACAsE,aAAA,WACAvE,YAAA,qCCtCAI,QAAAC,OAAA,SAAAJ,WAAA,mBAEA,WAAA,UAAA,cACA,SAAAU,EAAAS,EAAAwa,GACA,YAEA,IAAA,MAAApZ,KAAAgC,KAAA,CACA,GAAA,IAAAhC,KAAAgC,KAAAqX,QAAA,GAAArZ,KAAAgC,KAAAqX,QAAA,KAAArZ,KAAAgC,KAAAqX,QAAA,KAAArZ,KAAAgC,KAAAqX,OAEA,WADAC,SAAAC,IAAA,qBAAAvZ,KAAAgC,KAAAqX,OAIA,IA4BAna,GA5BAH,EAAAiB,KAEAwZ,GACA,uBACA,6BACA,kCACA,4BACA,gCACA,iCACA,gCACA,oCACA,6BACA,4BACA,+BACA,gCACA,4BACA,mCACA,gCACA,2BACA,sCACA,kCACA,iCACA,8BAEAC,EAAA,mBACAC,EAAA,wBACAC,EAAA,8BAGA,KAAA3Z,KAAAgC,KAAAqX,QAAA,KAAArZ,KAAAgC,KAAAqX,QAAA,KAAArZ,KAAAgC,KAAAqX,OACAna,GAAAua,EAAAC,EAAAC,GAEA,GAAA3Z,KAAAgC,KAAAqX,SACAna,GAAAua,GAAArT,OAAAoT,GAGA,KAAA,GAAA9W,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA9D,EAAAwC,KAAAlC,EAAAwD,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAA6a,qBAKA5Z,MAAA4Z,gBAAA,WACAN,QAAAC,IAAA,gBAAAvZ,KAAAgC,KAAAzC,SAEA,KAAA,GAAAmD,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA,IAAA9D,EAAAY,SAAAN,EAAAwD,IACA,MAIA,IAAAmK,GAAAjO,EAAAkX,KAAA9V,KAAAgC,KAAAzC,SAAA,UAAA,KAAAS,KAAAgC,KAAAwE,GACA,IAAAqG,EAAAlK,OAAA,EAAA,CACA,GAAAgM,GAAA9B,EAAA,EACA9N,GAAAc,SAGA,IAAAd,EAAAiD,KAAAqX,QAAA,KAAAta,EAAAiD,KAAAqX,QAAA,KAAAta,EAAAiD,KAAAqX,OACAta,EAAA8a,cAAAlL,EAAAmL,YAEA,GAAA/a,EAAAiD,KAAAqX,QACAta,EAAAgb,cAAApL,EAAAmL,cAMA9Z,KAAA+Z,cAAA,SAAAC,GACA,IAAA,GAAAC,GAAA,EAAAA,EAAAT,EAAA7W,SAAAsX,EACAlb,EAAAmb,sBAAAF,EAAAR,EAAAS,KAIAja,KAAAka,sBAAA,SAAAF,EAAAG,GAEA,GAAAC,GAAAxb,EAAAkX,KAAAqE,EAAA,KAAAH,EACA,IAAA,GAAAI,EAAAzX,YAEA,CACA,GAAA0X,GAAAD,EAAA,GAAAE,QAEAlS,EAAA,CACA,GAAA,CACAA,GACA,IAAAmS,GAAAH,EAAA,GAAA,UAAAhS,GACAoS,EAAAJ,EAAA,GAAA,OAAAhS,EAAA,SACAqS,EAAAL,EAAA,GAAA,OAAAhS,EAAA,OAEA,IAAAoS,EACA,GAAAD,EACAxb,EAAAgb,cAAAS,EAAAL,OAEA,CAEA,GAAAO,GAAA9b,EAAAkX,KAAA2D,EAAA,KAAAe,EACA,IAAAE,EAAA/X,OAAA,EAAA,CACA,GAAAgY,GAAAvB,EAAAwB,gBAAAF,EAAA,GAGA3b,GAAAc,MAAA+C,MACAiY,MAAAJ,EACAJ,KAAAA,EACArY,KAAA2Y,YAKAH,KAIAxa,KAAA6Z,cAAA,SAAAG,GAEA,IAAA,GADAc,IAAApB,EAAAC,GACAjX,EAAA,EAAAA,EAAAoY,EAAAnY,SAAAD,EAAA,CAEA,GAAAqY,GAAAnc,EAAAoc,QAAAF,EAAApY,GACA4W,SAAAC,IAAA,QAAAS,EAAAe,EAEA,KAAA,GAAAE,GAAA,EAAAA,EAAAF,EAAApY,SAAAsY,EAAA,CACA,GAAAC,GAAAH,EAAAE,EACA,IAAAC,EAAAC,UAAAnB,GAAAkB,EAAAE,KAAA,CAEA,GAAAV,GAAA9b,EAAAkX,KAAA2D,EAAA,KAAAyB,EAAAG,OACAX,GAAA/X,OAAA,GACA5D,EAAAc,MAAA+C,MACAiY,MAAAK,EAAAI,MACAjB,KAAAa,EAAAK,KACAvZ,KAAAoX,EAAAwB,gBAAAF,EAAA,cASA9Y,UAAA,uBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,kBACAsE,aAAA,OACAvE,YAAA,gCC9JAI,QAAAC,OAAA,SAAAJ,WAAA,qBAEA,WAAA,UAAA,cAAA,cAAA,eACA,SAAAU,EAAAS,EAAAwa,EAAA/a,EAAAM,GACA,YAEA,IAAA,MAAAqB,KAAAgC,KAAA,CAEA,GAAAjD,GAAAiB,IACAjB,GAAAyc,SAaA,KAAA,GAXAC,IACA,2BACA,kCACA,iCACA,iCACA,mCACA,gCAEAhC,EAAA,mBAEAva,EAAAuc,EAAArV,QAAAqT,IACA/W,EAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA9D,EAAAwC,KAAAlC,EAAAwD,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAA2c,gBAKA1b,MAAA0b,WAAA,WACA,IAAA,GAAAhZ,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA,IAAA9D,EAAAY,SAAAN,EAAAwD,IACA,MAIA3D,GAAAyc,SACA,KAAA,GAAA9Y,GAAA,EAAAA,EAAA+Y,EAAA9Y,SAAAD,EACA3D,EAAA4c,UAAAF,EAAA/Y,GAIA,KAAA,GADAkZ,MACAlZ,EAAA,EAAAA,EAAA3D,EAAAyc,OAAA7Y,SAAAD,EAAA,CAEA,IAAA,GADA8R,IAAA,EACA9F,EAAA,EAAAA,EAAAkN,EAAAjZ,SAAA+L,EACA,GAAA3P,EAAAyc,OAAA9Y,GAAA2X,MAAAuB,EAAAlN,GAAA2L,MACAtb,EAAAyc,OAAA9Y,GAAA7C,MAAA8C,QAAAiZ,EAAAlN,GAAA7O,MAAA8C,OAAA,CAEA6R,GAAA,CACA,KAAA,GAAAqH,GAAA,EAAAA,EAAA9c,EAAAyc,OAAA9Y,GAAA7C,MAAA8C,SAAAkZ,EACA9c,EAAAyc,OAAA9Y,GAAA7C,MAAAgc,GAAA7Z,KAAAwE,IAAAoV,EAAAlN,GAAA7O,MAAAgc,GAAA7Z,KAAAwE,IACAzH,EAAAyc,OAAA9Y,GAAA7C,MAAAgc,GAAAzU,KAAAwU,EAAAlN,GAAA7O,MAAAgc,GAAAzU,MACAoN,GAAA,GAMAA,GACAoH,EAAAhZ,KAAA7D,EAAAyc,OAAA9Y,IAIA3D,EAAAyc,OAAAI,GAGA5b,KAAA2b,UAAA,SAAApc,GAGA,IAAA,GAFAuc,GAAAld,EAAAkX,KAAAvW,EAAA,iBAAAR,EAAAiD,KAAAwE,IAEA9D,EAAA,EAAAA,EAAAoZ,EAAAnZ,SAAAD,EAAA,CAWA,IAVA,GAAAuY,GAAAa,EAAApZ,GAEAqZ,GACAvV,GAAAyU,EAAAzU,GACAjH,SAAAA,EAAAyU,QAAA,UAAA,IACAqG,KAAAY,EAAAe,KAAA,IAAA,IACAnc,UAGA6O,EAAA,IACA,CACAA,GACA,IAAAuN,GAAA,OAAAvN,EAAA,KACAwN,EAAA,OAAAxN,EAAA,KACA,MAAAuN,IAAAhB,IACA,KAGA,IAAApb,GAAAjB,EAAAkX,KAAA2D,EAAA,KAAAwB,EAAAgB,GACApc,GAAA8C,OAAA,GACAoZ,EAAAlc,MAAA+C,MACAZ,KAAAoX,EAAAwB,gBAAA/a,EAAA,IACAuH,IAAA6T,EAAAiB,KAKAnd,EAAAyc,OAAA5Y,KAAAmZ,SAKAna,UAAA,yBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,oBACAsE,aAAA,OACAvE,YAAA,kCC/GAI,QAAAC,OAAA,SAAAJ,WAAA,0BAEA,WAAA,UAAA,cAAA,QACA,SAAAU,EAAAS,EAAAwa,EAAAvZ,GACA,YAEA,IAAA,MAAAG,KAAAgC,KAAA,CAQA,IAAA,GANAjD,GAAAiB,KAEAmc,EAAA,gCACA1C,EAAA,mBAEAva,GAAAid,EAAA1C,GACA/W,EAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA9D,EAAAwC,KAAAlC,EAAAwD,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAAqd,iBAKApc,MAAAoc,YAAA,WACA,IAAA,GAAA1Z,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA,IAAA9D,EAAAY,SAAAN,EAAAwD,IACA,MAIA,IAAA2Z,GACA1N,EAAAyK,EAAAkD,YAAAvd,EAAAiD,KACA2M,IAAAA,EAAA4N,cAAA,IACAF,EAAA1N,EAAA4N,cAGA,IAAA7H,GAAA7U,EAAAd,EAAAiD,KAAAsR,WAEA,IAAAoB,GAAA/F,EAAA6N,UAEA,IAAA,GADA7H,GAAA/V,EAAAkX,KAAApB,EAAAkB,WAAA,YAAAjH,EAAA6N,WACA9Z,EAAA,EAAAA,EAAAiS,EAAAhS,SAAAD,EACA,GAAAiS,EAAAjS,GAAAuS,cAAAlW,EAAAiD,KAAA+E,eAAA,CACAsV,EAAA1H,EAAAjS,GAAA+Z,YACA,OAKA1d,EAAAc,SACAwc,GACAtd,EAAA2d,SAAAL,IAIArc,KAAA2c,QAAA,WACA,GAAAhO,GAAAyK,EAAAkD,YAAAtc,KAAAgC,KACA,OAAAuS,QAAA5F,EAAAiO,gBAAA,IAAA,KAGA5c,KAAA0c,SAAA,SAAAL,GAGA,GAAAjC,GAAAxb,EAAAkX,KAAAqG,EAAA,KAAAE,EACA,IAAA,GAAAjC,EAAAzX,YAEA,CACA,GAAA0X,GAAAD,EAAA,GAAAE,QAEAlS,EAAA,CACA,GAAA,CACAA,GACA,IAAAmS,GAAAH,EAAA,GAAA,UAAAhS,GACAoS,EAAAJ,EAAA,GAAA,OAAAhS,EAAA,SACAqS,EAAAL,EAAA,GAAA,OAAAhS,EAAA,OAEA,IAAAoS,EACA,GAAAD,EACAxb,EAAA2d,SAAAlC,OAEA,CACA,GAAAE,GAAA9b,EAAAkX,KAAA2D,EAAA,KAAAe,EACAE,GAAA/X,OAAA,GAGA5D,EAAAc,MAAA+C,MACAiY,MAAAJ,EACAJ,KAAAA,EACArY,KAAAoX,EAAAwB,gBAAAF,EAAA,aAKAF,SAKA5Y,UAAA,8BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,yBACAsE,aAAA,OACAvE,YAAA,uCCxGAI,QAAAC,OAAA,SAAAJ,WAAA,qBAEA,WAAA,UAAA,cAAA,cAAA,eACA,SAAAU,EAAAS,EAAAwa,GACA,YA8BA,SAAAyD,KAEA,IAAA,GADAlW,GAAA/H,EAAAkX,KAAAgH,EAAA,SAAA/d,EAAAiD,KAAAwE,IACAuW,EAAA,EAAAA,EAAApW,EAAAhE,SAAAoa,EAGA,IAFA,GAAAC,GAAArW,EAAAoW,GACAzV,EAAA,IACA,CACAA,GACA,IAAAsE,GAAA,qBAAAtE,CACA,MAAAsE,IAAAoR,IACA,KAGA,IAAAC,GAAAre,EAAAkX,KAAA2D,EAAA,KAAAuD,EAAApR,GACAqR,GAAAta,OAAA,GACA5D,EAAAc,MAAA+C,KAAAwW,EAAAwB,gBAAAqC,EAAA,MA1CA,GAAA,MAAAjd,KAAAgC,KAAA,CAEA,GAAAjD,GAAAiB,IACAjB,GAAAc,QAMA,KAAA,GAJAid,GAAA,oBACArD,EAAA,mBAEAyD,GAAAJ,EAAArD,GACA/W,EAAA,EAAAA,EAAAwa,EAAAva,SAAAD,EACA9D,EAAAwC,KAAA8b,EAAAxa,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAAoe,cAKAnd,MAAAmd,SAAA,WACA,IAAA,GAAAza,GAAA,EAAAA,EAAAwa,EAAAva,SAAAD,EACA,IAAA9D,EAAAY,SAAA0d,EAAAxa,IACA,MAIA3D,GAAAc,SACAgd,SAwBAjb,UAAA,yBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,oBACAsE,aAAA,OACAvE,YAAA,kCC/DAI,QAAAC,OAAA,SAAAJ,WAAA,mBAEA,WAAA,UAAA,cAAA,cAAA,eACA,SAAAU,EAAAS,EAAAwa,GACA,YA0DA,SAAAgE,GAAA7d,GAEA,IAAA,GADAoH,GAAA/H,EAAAkX,KAAAvW,EAAA,YAAAR,EAAAiD,KAAAqb,OACAN,EAAA,EAAAA,EAAApW,EAAAhE,SAAAoa,EAAA,CACA,GAAAE,GAAAre,EAAAkX,KAAA2D,EAAA,KAAA9S,EAAAoW,GAAAvW,GACAyW,GAAAta,OAAA,GACA5D,EAAAc,MAAA+C,KAAAwW,EAAAwB,gBAAAqC,EAAA,MA7DA,GAAA,MAAAjd,KAAAgC,KAAA,CAEA,GAAAjD,GAAAiB,IACAjB,GAAAc,QAgCA,KAAA,GA9BAX,IACA,8BACA,mCACA,yCACA,yCACA,+BACA,+BACA,wCACA,0BACA,0BACA,kCACA,qCACA,iCACA,+BACA,oCACA,0CACA,0CACA,gCACA,gCACA,yCACA,2BACA,2BACA,mCACA,uCAIAua,EAAA,mBAEAyD,EAAAhe,EAAAkH,QAAAqT,IACA/W,EAAA,EAAAA,EAAAwa,EAAAva,SAAAD,EACA9D,EAAAwC,KAAA8b,EAAAxa,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAAoe,cAKAnd,MAAAmd,SAAA,WACA,IAAA,GAAAza,GAAA,EAAAA,EAAAwa,EAAAva,SAAAD,EACA,IAAA9D,EAAAY,SAAA0d,EAAAxa,IACA,MAIA3D,GAAAc,QACA,KAAA,GAAA6C,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA0a,EAAAle,EAAAwD,SAeAd,UAAA,uBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,kBACAsE,aAAA,OACAvE,YAAA,gCCjFAI,QAAAC,OAAA,SAAAJ,WAAA,oBAEA,WAAA,UAAA,cAAA,cAAA,eACA,SAAAU,EAAAS,EAAAwa,EAAA/a,EAAAM,GACA,YAoGA,SAAA2e,GAAA/d,GAGA,IAAA,GAFAge,GAAA3e,EAAAkX,KAAAvW,EAAA,YAAAR,EAAAiD,KAAAwE,IAEA9D,EAAA,EAAAA,EAAA6a,EAAA5a,SAAAD,EAAA,CACA,GAAAmM,GAAA0O,EAAA7a,GAEA8a,EAAA5e,EAAAkX,KAAA2D,EAAA,KAAA5K,EAAA4O,eACAC,EAAA9e,EAAAkX,KAAA2D,EAAA,KAAA5K,EAAA8O,eAEAC,GACAC,SAAAhP,EAAAiP,OACAC,QAAApf,EAAA2S,UAAAzC,EAAAmP,WACA3D,KAAA,EACA4D,gBAAA,EACAC,aAAA,EACAC,MAAA/E,EAAAwB,gBAAA4C,EAAA,IACAlV,MAAA8Q,EAAAwB,gBAAA8C,EAAA,IACAU,SAAA,EACAC,SAAA,EAGAT,GAAAC,WAAAxf,GAAAigB,YACAV,EAAAC,SAAAxf,EAAAigB,UAAAV,EAAAC,WAGA,GAAAhP,EAAA0P,cACAX,EAAAvD,MAAAxL,EAAA2P,mBAEA,GAAA3P,EAAA0P,cACAX,EAAAM,cAAArP,EAAA2P,mBAEA,GAAA3P,EAAA0P,cACAX,EAAAK,iBAAApP,EAAA2P,mBAGAZ,EAAAQ,SAAAvP,EAAA2P,mBAGA,GAAA3P,EAAA4P,cACAb,EAAAvD,MAAAxL,EAAA6P,mBAEA,GAAA7P,EAAA4P,cACAb,EAAAM,cAAArP,EAAA6P,mBAEA,GAAA7P,EAAA4P,cACAb,EAAAK,iBAAApP,EAAA6P,mBAGAd,EAAAS,SAAAxP,EAAA6P,mBAGAd,EAAAvD,KAAAuD,EAAAvD,KAAA,IAAA,IAEAtb,EAAA4f,UAAA/b,KAAAgb,IAvJA,GAAA,MAAA5d,KAAAgC,KAAA,CAEA,GAAAjD,GAAAiB,IACAjB,GAAA4f,YASA,KAAA,GAPAC,GAAA,2BACAC,EAAA,kCACAC,EAAA,gCAEArF,EAAA,mBAEAva,GAAA4f,EAAAD,EAAAD,EAAAnF,GACA/W,EAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA9D,EAAAwC,KAAAlC,EAAAwD,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAAggB,eAKA/e,MAAA+e,UAAA,WACA,IAAA,GAAArc,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA,IAAA9D,EAAAY,SAAAN,EAAAwD,IACA,MAIA3D,GAAA4f,aACArB,EAAAsB,GACAtB,EAAAuB,GACAvB,EAAAwB,EAIA,KAAA,GADAE,MACAtc,EAAA,EAAAA,EAAA3D,EAAA4f,UAAAhc,SAAAD,EAAA,CAEA,IAAA,GADA8R,IAAA,EACA9F,EAAA,EAAAA,EAAAsQ,EAAArc,SAAA+L,EACA,GAAA3P,EAAA4f,UAAAjc,GAAAqb,SAAAiB,EAAAtQ,GAAAqP,SACAhf,EAAA4f,UAAAjc,GAAA2X,MAAA2E,EAAAtQ,GAAA2L,MACAtb,EAAA4f,UAAAjc,GAAAyb,MAAA3X,IAAAwY,EAAAtQ,GAAAyP,MAAA3X,IACAzH,EAAA4f,UAAAjc,GAAA0b,SAAA5X,IAAAwY,EAAAtQ,GAAA0P,SAAA5X,IACAzH,EAAA4f,UAAAjc,GAAA4F,MAAA9B,IAAAwY,EAAAtQ,GAAApG,MAAA9B,IACAzH,EAAA4f,UAAAjc,GAAA2b,SAAA7X,IAAAwY,EAAAtQ,GAAA2P,SAAA7X,GAAA,CACAgO,GAAA,CACA,OAIAA,GACAwK,EAAApc,KAAA7D,EAAA4f,UAAAjc,IAIA3D,EAAA4f,UAAAK,OAuGApd,UAAA,wBAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,mBACAsE,aAAA,OACAvE,YAAA,iCC1KAI,QAAAC,OAAA,SAAAJ,WAAA,wBAEA,WAAA,UAAA,cAAA,cACA,SAAAU,EAAAS,EAAAwa,EAAA/a,GACA,YAEA,IAAA,MAAA2B,KAAAgC,KAAA,CAEA,GAAAjD,GAAAiB,IACAjB,GAAAkgB,oBAOA,KAAA,GALAC,GAAA,8BACAzF,EAAA,mBACA0F,EAAA,kCAEAjgB,GAAAggB,EAAAzF,EAAA0F,GACAzc,EAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA9D,EAAAwC,KAAAlC,EAAAwD,GAAA,KAAA,aAAA,WACAvE,EAAA,WACAY,EAAAqgB,mBAKApf,MAAAof,cAAA,WACA,IAAA,GAAA1c,GAAA,EAAAA,EAAAxD,EAAAyD,SAAAD,EACA,IAAA9D,EAAAY,SAAAN,EAAAwD,IACA,MAGA3D,GAAAkgB,oBAEA,IAAAI,GAAAzgB,EAAAkX,KAAAqJ,EAAA,SAAApgB,EAAAiD,KAAAwE,GACA,IAAA6Y,GAAAA,EAAA1c,OAAA,EAGA,IAAA,GAFA2c,GAAA1gB,EAAAkX,KAAAoJ,EAAA,eAAAngB,EAAAiD,KAAA+E,gBAEArE,EAAA,EAAAA,EAAA4c,EAAA3c,SAAAD,EAAA,CACA,GAAAkM,GAAA0Q,EAAA5c,EACA,IAAAkM,EAAA4H,MAAAzX,EAAAiD,KAAAuU,KAAA/P,IAAAoI,EAAA8H,YAAA3X,EAAAiD,KAAAyU,WAAA,CAEA,GAAA+G,GAAA5e,EAAAkX,KAAA2D,EAAA,KAAA7K,EAAA2Q,aACA7B,EAAA9e,EAAAkX,KAAA2D,EAAA,KAAA7K,EAAA4Q,YAEAzgB,GAAAkgB,kBAAArc,MACA6c,MAAA7Q,EAAA8Q,YACA3Y,eAAA6H,EAAA+Q,mBACAtF,KAAAzL,EAAAuG,SAAA,IAAA,IACAoB,KAAAlY,EAAAuhB,UAAAhR,EAAAiR,YACAzB,SAAAxP,EAAAkR,eACA3B,MAAA/E,EAAAwB,gBAAA4C,EAAA,IACAa,SAAAzP,EAAAmR,eACAzX,MAAA8Q,EAAAwB,gBAAA8C,EAAA,aAQA9b,UAAA,4BAAA,WACA,OACAC,OAAA,EACAC,kBACAE,KAAA,SAEAvE,WAAA,uBACAsE,aAAA,OACAvE,YAAA,qCCnEAI,QAAAC,OAAA,SAAAJ,WAAA,YACA,SAAA,UAAA,UAAA,cAAA,QAAA,OAAA,mBAAA,eAAA,eAAA,YAAA,SAAA,cAAA,WACA,SAAAyQ,EAAApQ,EAAAc,EAAAP,EAAAwB,EAAAyE,EAAA7F,EAAAwD,EAAAtD,EAAAP,EAAA+P,EAAAiL,EAAAjb,GACA,YAyFA,SAAA6hB,KACA,GACAC,GAAA3b,EAAA4b,YACAtiB,SAAAyB,QAAA4gB,EAAA,SAAAtf,EAAA4E,GACA,GAAA5E,EAAA6F,IAAA0H,EAAAlM,KAAAme,aAEA,YADAjS,EAAAkS,QAAAzf,EAAAkC,QAMA,QAAAzB,KACA8M,EAAAmS,YAAAnS,EAAAlM,KACAkM,EAAAlM,KAAA,IAEA,IAAAse,IAAA,CAEA1iB,SAAAyB,QAAAZ,EAAAU,YAAA+O,EAAAmS,aAAA,SAAA/gB,EAAAC,GACAX,EAAAY,SAAAD,KACAX,EAAAwC,KAAA7B,EAAAD,EAAAwY,EAAA,WAAAhZ,MACAwhB,GAAA,KAIA3hB,EAAAa,aACAb,EAAAyC,KAAA0W,EAAA,WAAAhZ,MACAwhB,GAAA,GAGAhc,EAAA9E,aACA8E,EAAAlD,KAAA0W,EAAA,WAAAhZ,MACAwhB,GAAA,GAGAA,GACAxhB,IAKA,QAAAA,KACA,IAAAF,EAAA4O,cAAA7O,EAAAa,YAAA8E,EAAA9E,WAAA,CAEA,GADA0O,EAAAlM,KAAAvD,EAAAiP,WAAAQ,EAAAmS,aACA,MAAAnS,EAAAlM,KACA,MAGAue,KACAziB,EAAAC,SAAAG,MAAA,iBAAAgQ,EAAAlM,KAAAa,KACA,UAAAqL,EAAAlM,KAAAsR,aAEA,UAAApF,EAAAlM,KAAA6E,WACAqH,EAAAlM,KAAAkW,KAAA,OAAAhK,EAAAlM,KAAAkW,IAIAhK,EAAAlM,KAAAkW,IAAA,MAHAhK,EAAAlM,KAAAkW,IAAA,OAOAhK,EAAAlM,KAAAme,aAAA,GACAH,IAGA9R,EAAAlM,KAAAzC,UACA2O,EAAAlM,KAAAsR,aAAAzT,IAAAA,EAAAqO,EAAAlM,KAAAsR,YAAAkN,UACAtS,EAAAlM,KAAAzC,SAAAM,EAAAqO,EAAAlM,KAAAsR,YAAAkN,QAAAxM,QAAA,UAAA,IAAAA,QAAA,aAAA,KAKA,IAAAiJ,GAAA7D,EAAAkD,YAAApO,EAAAlM,KACAib,GAAAV,cAAA,IACArO,EAAAuS,YAAA,IAGA,GAAAxD,EAAAyD,MAAA,GAAAzD,EAAAyD,OAAAxS,EAAAlM,KAAA+E,eAAA,IACAmH,EAAAyS,aAAA,GAGAzS,EAAAlM,KAAAqb,QACAnP,EAAA0S,SAAA,GAGA,GAAA1S,EAAAlM,KAAAqX,SACAnL,EAAA2S,SAAA,GAGA,IAAA3S,EAAAlM,KAAAqX,QAAA,GAAAnL,EAAAlM,KAAAqX,QAAA,KAAAnL,EAAAlM,KAAAqX,QAAA,KAAAnL,EAAAlM,KAAAqX,QACAnL,EAAA4S,aAAA,EACA5S,EAAA6S,OAAA,YAEA,MAAA7S,EAAAlM,KAAA6E,UACAqH,EAAA8S,QAAA,EACA9S,EAAA6S,OAAA,OAEA7S,EAAAuS,WACAvS,EAAA6S,OAAA,UAEA7S,EAAAyS,YACAzS,EAAA6S,OAAA,WAEA7S,EAAA2S,QACA3S,EAAA6S,OAAA,QAGA7S,EAAA6S,OAAA,SAMA,QAAAR,KAEArS,EAAAlM,KAAAiG,UAAAiG,EAAAlM,KAAAuB,MAEA,MAAA2K,EAAAlM,KAAAgG,kBAAAkG,EAAAlM,KAAAgG,iBAAArF,OAAA,IACAuL,EAAAlM,KAAAiG,UAAA5J,EAAAgI,WAAA6H,EAAAlM,KAAAgG,iBAAAkG,EAAAlM,KAAAiG,YAGA,MAAAiG,EAAAlM,KAAA2W,YAAAzK,EAAAlM,KAAA2W,WAAAhW,OAAA,IACAuL,EAAAlM,KAAAiG,UAAA5J,EAAAgI,WAAA6H,EAAAlM,KAAA2W,WAAAzK,EAAAlM,KAAAiG,YAIA,QAAA6P,GAAAvG,IApNApD,EAAAE,kBAAApM,EAAAkM,QAEArQ,EAAAgH,SAAA,EAAA,GAEAoJ,EAAAkS,QAAA,KAEAlS,EAAAlM,KAAAvD,EAAAwQ,WAAAhN,EAAAS,GACA,cAAAwL,GAAAlM,OACAkM,EAAAwG,SAAA7U,EAAAqO,EAAAlM,KAAAsR,aAGApF,EAAAlM,KAAAiE,SAAA,KACAiI,EAAAlM,KAAAqb,MAAA,KACAnP,EAAA6S,OAAA,KAEA7S,EAAA+S,eAAA,WACA,GAAA/S,EAAAlM,KAAAkf,YACA,MAAAhT,GAAAlM,KAAAkf,WAEA,IAAAhT,EAAAwG,UACA,SAAAxG,EAAAwG,SAAA7R,MACAlE,EAAAa,YACAZ,EAAAY,SAAA0O,EAAAwG,SAAA8L,SAAA,CAEA,GAAAvD,GAAAre,EAAAkX,KAAA5H,EAAAwG,SAAA8L,QAAA,KAAAtS,EAAAlM,KAAAwE,GACA,IAAAyW,GAAAA,EAAAta,OAAA,GAAAsa,EAAA,GAAAkE,cAAA,EACA,MAAAxiB,GAAA2S,UAAA2L,EAAA,GAAAkE,cAAAlE,EAAA,GAAAmE,wBAGA,IAAAlT,EAAAlM,KAAAzC,UACAX,EAAAY,SAAA0O,EAAAlM,KAAAzC,SAAA,WAAA,CAEA,GAAA0d,GAAAre,EAAAkX,KAAA5H,EAAAlM,KAAAzC,SAAA,UAAA,KAAA2O,EAAAlM,KAAAwE,GACA,IAAAyW,GAAAA,EAAAta,OAAA,GAAAsa,EAAA,GAAAkE,cAAA,EACA,MAAAxiB,GAAA2S,UAAA2L,EAAA,GAAAkE,cAAAlE,EAAA,GAAAmE,oBAGA,MAAA,IAGAlT,EAAAmT,gBAAA,WAEA,GAAAC,GAAA,iBACA,IAAA3iB,EAAAa,YACAZ,EAAAY,SAAA8hB,IACApT,EAAAlM,KAAAqR,aAAA,EAAA,CAIA,GAAAkO,GAAA3iB,EAAAkX,KAAAwL,EAAA,eAAApT,EAAAlM,KAAAqR,aAEA,IAAAkO,GAAAA,EAAA5e,OAAA,GAAA4e,EAAA,GAAApL,OAAA,EAEA,MAAAxX,GAAA2S,UAAAiQ,EAAA,GAAApL,QAAAqL,cAGA,MAAA,IAGAtT,EAAAuT,UAAA,SAAAV,GACA7S,EAAA6S,OAAAA,GAGA7S,EAAAwT,iBAAA,WACA,GAAAzE,GAAA7D,EAAAkD,YAAApO,EAAAlM,KACA,IAAAib,GAAA,gBAAAA,IAAA,UAAAA,IAAA,GAAAA,EAAA0E,OAAA,CACA,GAAA,GAAA1E,EAAA2E,aACA,MAAA,2BAEA,IAAA,GAAA3E,EAAA2E,aACA,MAAA,mBAGA,MAAA,IAGA1T,EAAAhL,aAAA,WAEA,UAAAgL,EAAAlM,KAAAsR,WACAlV,EAAAkF,OAAA,IAAA7E,EAAAojB,WAAA3T,EAAAlM,QAGAue,IACArS,EAAAlM,KAAApE,QAAAkkB,KAAA5T,EAAAlM,QA0CAZ,OClIA,WACA,YAGA,SAAA2gB,GAAA9f,EAAA7D,EAAAD,EAAA6jB,EAAA1d,GAqEA,QAAA2d,KACAljB,EAAA4B,KACAqhB,EAAAC,eAAAljB,EAAA4B,KAAAuhB,KAAA,SAAAzf,GACAA,EAEA1D,EAAAojB,UAAA1f,EAIA1D,EAAAojB,eA3EA,GAAApjB,GAAAiB,IAEAjB,GAAAqjB,WAAA,GACArjB,EAAAsjB,gBAAA,EAEA/d,EAAAlD,KAAA,KAAA,WACAa,EAAAqgB,QACAvjB,EAAA4B,IAAA2D,EAAA8J,QAAAnM,EAAAqgB,OACAL,OAIAjiB,KAAA0L,OAAA,WACAvN,EAAA,WACAC,EAAAkF,OAAA,QAAAvE,EAAA4B,IAAA6F,OAIAxG,KAAAuiB,gBAAA,SAAAC,GACAzjB,EAAAqjB,WAAArjB,EAAAsjB,gBAAAG,EACAzjB,EAAAsjB,gBAAA,GAGAtjB,EAAA0jB,WAAA,KACA1jB,EAAA2jB,kBAAA,WAGA,GAAA,MAAA3jB,EAAA0jB,WAAA,CACA1jB,EAAA0jB,aACA,KAAA,GAAAE,KAAA5jB,GAAAojB,UACA,IAAA,GAAAxiB,KAAAZ,GAAAojB,UAAAQ,GACA5jB,EAAA0jB,WAAA7f,MACA+f,IAAAA,EACA9f,KAAAlD,EACAuH,KAAAnI,EAAAojB,UAAAQ,GAAAhjB,KAOA,IAAA,GADAijB,MACAlgB,EAAA,EAAAA,EAAA3D,EAAA0jB,WAAA9f,SAAAD,EAAA,CAEA,GAAAmgB,GAAA9jB,EAAA0jB,WAAA/f,EACA,IAAA3D,EAAAqQ,QAAArQ,EAAAqQ,OAAAzM,OAAA,EAAA,CACA,GAAAsX,GAAAlb,EAAAqQ,OAAA0T,aACA,IAAAD,EAAAhgB,KAAAigB,cAAAvS,QAAA0J,UACA4I,EAAA3b,KAAA6b,OACAF,EAAA3b,KAAA6b,MAAAD,cAAAvS,QAAA0J,QAEA,SAOA,GAFA2I,EAAAhgB,KAAAigB,GAEAD,EAAAjgB,QAAA5D,EAAAqjB,WACA,MAKA,MADArjB,GAAAsjB,gBAAAO,EAAAjgB,OACAigB,GApEAhlB,QAAAC,OAAA,SAAAJ,WAAA,mBAAA,eAAA,YAAA,WAAA,gBAAA,OAAAskB,OCFA,WACA,YAGA,SAAAiB,GAAA5kB,EAAA6D,EAAA+f,EAAAxjB,GASA,QAAAykB,KACAjB,EAAAkB,cAAAnkB,EAAA4jB,KAAAT,KAAA,SAAAzf,GACAA,EACA1D,EAAAokB,aAAA1gB,EAGA1D,EAAAokB,kBAKA,QAAAC,KACApB,EAAAoB,WAAArkB,EAAA4jB,KAAAT,KAAA,SAAAc,GACAA,EACAjkB,EAAAikB,QAAAA,EAGAjkB,EAAAikB,aAvBA,GAAAjkB,GAAAiB,IACAjB,GAAA4jB,IAAA1gB,EAAA0gB,IAEAM,IACAG,IAwBApjB,KAAAqjB,KAAA,SAAA1jB,EAAAP,GAEA,GAAAiB,GAAA7B,EAAA8B,YAAAX,EAAAP,EAAAS,MAEArB,GAAA+B,iBACAF,EACAA,EACAjB,EAAAoB,WACApB,EAAAqB,YACArB,EAAAsB,UACAtB,EAAAuB,IACAvB,EAAAwB,WACAxB,EAAAyB,QACAzB,EAAA0B,iBACA1B,EAAA2B,cACA3B,EAAA4B,eACA5B,EAAA6B,YACA7B,EAAA8B,UACA9B,EAAA+B,WAEApC,EAAA0D,OAAAjE,EAAA4D,gBAEAhE,EAAA8B,KAAA,UAAAG,IAvDAzC,QAAAC,OAAA,SAAAJ,WAAA,eAAA,YAAA,eAAA,gBAAAulB,OCFA,WACA,YAGA,SAAA3f,GAAAjF,EAAAI,EAAAwjB,EAAA/f,EAAAkM,GAcA,QAAA8U,KACA,GAAAK,GAAAvkB,EAAAwkB,SACAD,IACAtB,EAAAkB,cAAAI,EAAAX,KAAAT,KAAA,SAAAzf,GACAA,EACA1D,EAAAokB,aAAA1gB,EAGA1D,EAAAokB,kBAMA,QAAAC,KACA,GAAAE,GAAAvkB,EAAAwkB,SACAD,IACAtB,EAAAoB,WAAAE,EAAAX,KAAAT,KAAA,SAAAc,GACAA,EACAjkB,EAAAikB,QAAAA,EAGAjkB,EAAAikB,aA0CA,QAAAQ,GAAAC,GACAnK,QAAAC,IAAAkK,GA5EA,GAAA1kB,GAAAiB,IAEAjB,GAAA2kB,KAAAzhB,EAAAyhB,KAEA1B,EAAA2B,QAAAzB,KAAA,SAAAoB,GACAL,IACAG,IAEArkB,EAAA0D,OAAAjE,EAAA4D,kBA+BApC,KAAA4jB,YAAA,WACA5B,EAAA4B,YAAA7kB,EAAAikB,SAAAd,KAAAkB,GAAApB,SAAAwB,IAGAxjB,KAAAujB,QAAA,WACA,MAAAvB,GAAAuB,WAGAvjB,KAAAkJ,KAAA,SAAAvJ,EAAAP,GACAA,EAAAyE,YAAA,GAAAC,OAAA+f,UACA7B,EAAA8B,UAAAnkB,EAAAP,GAAA8iB,KAAAe,GAAAjB,SAAAwB,GACAzkB,EAAAglB,aAAA,MAGA/jB,KAAAgkB,aAAA,SAAArkB,GACAA,IAAAZ,GAAAokB,eACApkB,EAAA0D,OAAA9C,GAAAwO,SACApP,EAAA0D,OAAA9C,GAAAwO,OAAApP,EAAAokB,aAAAxjB,GAAAwO,QAGApP,EAAA0D,OAAA9C,GAAAskB,QACAllB,EAAA0D,OAAA9C,GAAAskB,MAAAllB,EAAAokB,aAAAxjB,GAAAskB,OAGAllB,EAAA0D,OAAA9C,GAAAojB,QACAhkB,EAAA0D,OAAA9C,GAAAojB,MAAAhkB,EAAAokB,aAAAxjB,GAAAojB,QAIAhkB,EAAA0D,OAAA9C,GAAAwO,SACApP,EAAA0D,OAAA9C,GAAAwO,OAAAA,EAAAwC,YAAAxC,QAGApP,EAAAglB,aAAApkB,GAOAK,KAAAkkB,cAAA,WACAlC,EAAAkC,cAAAnlB,EAAAokB,eAGAnjB,KAAAmkB,cAAA,WACA,MAAAplB,GAAAikB,SAAAjkB,EAAAikB,QAAAoB,UACArlB,EAAAikB,QAAAoB,UAGA,IAIApkB,KAAAqkB,mBAAA,WACA,MAAAlQ,GAAAmQ,KAAAvlB,EAAAokB,eAGAnjB,KAAAukB,aAAA,WACA,MAAApQ,GAAAmQ,KAAAvlB,EAAA0D,SAGAzC,KAAAqjB,KAAA,SAAA1jB,EAAAP,GAEA,GAAAiB,GAAA7B,EAAA8B,YAAAX,EAAAP,EAAAS,MAEArB,GAAA+B,iBACAF,EACAA,EACAjB,EAAAoB,WACApB,EAAAqB,YACArB,EAAAsB,UACAtB,EAAAuB,IACAvB,EAAAwB,WACAxB,EAAAyB,QACAzB,EAAA0B,iBACA1B,EAAA2B,cACA3B,EAAA4B,eACA5B,EAAA6B,YACA7B,EAAA8B,UACA9B,EAAA+B,WAEApC,EAAA0D,OAAAjE,EAAA4D,iBAGApC,KAAAwkB,QAAA,WACAxC,EAAAwC,WAGAzlB,EAAA0lB,YAAA,SAAA9kB,GACAZ,EAAA2lB,cAAA/kB,GAGAZ,EAAA4lB,iBAAA,WACA,GAAAC,GAAAzQ,EAAA5R,KAAAxD,EAAA0D,QAAA2D,OAAA+N,EAAA5R,KAAAxD,EAAAokB,cACA,OAAAhP,GAAA0Q,KAAAD,EAAApiB,QAAA,IAGAzD,EAAA+lB,kBAAA,SAAAnlB,GACAnB,EAAAoB,kBAAAD,MACAZ,EAAA2lB,cAAA,KACA3lB,EAAA0D,OAAAjE,EAAA4D,iBAGArD,EAAAgmB,aAAA,SAAAplB,GACAZ,EAAAimB,eAAArlB,GAGAZ,EAAAkmB,mBAAA,SAAAtlB,GACAqiB,EAAAkD,YAAAvlB,EAAAZ,EAAAokB,aAAAxjB,IAAAuiB,KAAAe,GACAlkB,EAAAimB,eAAA,MAzJApnB,QAAAC,OAAA,SAAAJ,WAAA,eAAA,YAAA,aAAA,gBAAA,eAAA,SAAA4F,OCFA,WACA,YAGA,SAAA8hB,GAAAnD,EAAA5jB,EAAA6D,EAAAzD,EAAAF,GAgCA,QAAA8kB,KACApB,EAAAoB,WAAArkB,EAAA4jB,KAAAT,KAAA,SAAAc,GACAA,EACAjkB,EAAAikB,QAAAA,EAGAjkB,EAAAikB,aAKA,QAAA3d,KACA2c,EAAA3c,SAAAtG,EAAA4jB,IAAA5jB,EAAAY,WAAAuiB,KAAA,SAAA9iB,GACAA,GACAL,EAAAK,MAAAA,EACAL,EAAAwE,MAAAjF,EAAAkF,cAAApE,IAGAL,EAAAK,WA/CA,GAAAL,GAAAiB,IACAjB,GAAA4jB,IAAA1gB,EAAA0gB,IACA5jB,EAAAY,UAAAsC,EAAAtC,UAEA0F,IACA+d,IAEArkB,EAAAqmB,YAAA,WACA,GAAA/kB,GAAA7B,EAAA8B,YAAAvB,EAAAY,UAAAZ,EAAAK,MAAAS,MAEArB,GAAA+B,iBACAF,EACAA,EACAtB,EAAAK,MAAAoB,WACAzB,EAAAK,MAAAqB,YACA1B,EAAAK,MAAAsB,UACA3B,EAAAK,MAAAuB,IACA5B,EAAAK,MAAAwB,WACA7B,EAAAK,MAAAyB,QACA9B,EAAAK,MAAA0B,iBACA/B,EAAAK,MAAA2B,cACAhC,EAAAK,MAAA4B,eACAjC,EAAAK,MAAA6B,YACAlC,EAAAK,MAAA8B,UACAnC,EAAAK,MAAA+B,WAEA/C,EAAA8B,KAAA,UAAAG,IA/BAzC,QAAAC,OAAA,SAAAJ,WAAA,iBAAA,gBAAA,YAAA,eAAA,aAAA,aAAA0nB,OCFAvnB,QAAAC,OAAA,SAAAJ,WAAA,cACA,SAAA,WAAA,SAAA,eAAA,YAAA,eAAA,SACA,SAAAyQ,EAAA/P,EAAA+S,EAAAjP,EAAA7D,EAAAO,EAAAwP,GACA,YAEAA,GAAA/M,OACAzC,EAAAyC,KACA,SAAAmQ,KAGA,WACApT,MAGA+P,EAAAC,OAAAA,EAEAD,EAAAmX,eAAA,WACA,MAAAlX,GAAAwC,aAEAzC,EAAAoX,aAAA,WACA,MAAAnX,GAAAsC,WAGAvC,EAAAqX,eAAA,WAEA,MAAApX,GAAAwD,aAGAzD,EAAAsX,aAAA,WACA,MAAA7mB,GAAAa,WACAb,EAAA2S,UAAA,OAGA,IAIApD,EAAAuX,aAAA,SAAA1T,GACA5D,EAAAsX,aAAA1T,GACA7D,EAAAwX,MAAA,GAGAxX,EAAA8D,YAAA,SAAAD,GACA9P,EAAAkM,QACAlM,EAAAkM,OAAA4D,EAAA5D,OACA+C,EAAAyU,aAAA1jB,GACAiP,EAAAoB,UAGAnE,EAAA6D,YAAAD,GAEA7D,EAAAwX,MAAAxX,EAAAwX,SAIA9jB,UAAA,kBAAA,WACA,OACApE,YAAA,2BCzDA,WACA,YAaA,SAAAooB,GAAA9nB,EAAAU,EAAAJ,EAAAC,EAAAE,EAAAJ,GAKA6B,KAAA6lB,YAAAxnB,EAAAwnB,YAEA7lB,KAAAoiB,WAAA,GACApiB,KAAA8lB,eAAA,EAEA,MAAA9lB,KAAA+lB,aACA/lB,KAAA+lB,WAAA,IAGA/lB,KAAAgmB,WAAA,WACA,MAAAhmB,MAAA6lB,aAGA7lB,KAAAimB,eAAA,WACA,MAAA,IAAAjmB,KAAA+lB,YAAA,MAAA/lB,KAAA+lB,WACA,sBAGA/lB,KAAA+lB,YAIA/lB,KAAAkmB,iBAAA,WACA,IAAAlmB,KAAA+lB,YAAA,MAAA/lB,KAAA+lB,aACA/lB,KAAA+lB,WAAA/lB,KAAAimB,kBAEA7nB,EAAA8B,KAAA,kBAAAF,KAAA+lB,aA1CAnoB,QAAAC,OAAA,SAAA+D,UAAA,uBAAA,WACA,OACAC,SACAC,oBAEArE,YAAA,UAAA,aAAA,YAAA,cAAA,eAAA,WAAAmoB,GACA7jB,aAAA,cACAvE,YAAA,oCCVAI,QAAAC,OAAA,SAAAJ,WAAA,kBACA,SAAA,UAAA,eAAA,WAAA,YACA,eACA,eACA,OACA,cACA,cACA,SACA,aACA,SACAyQ,EAAApQ,EAAAmE,EAAA9D,EAAAC,EACAO,EACAJ,EACA+F,EACAjG,EACA+a,EACAjL,EACA3P,GACA,YAwFA,SAAA4C,KAEAkD,EAAA9E,WACA2mB,IAGA7hB,EAAAlD,KAAA0W,EAAA,WAAA3Z,EAAAgoB,KAGA5nB,EAAA6C,KAAArC,EAAAR,aAAAsE,KAAAujB,GAGA,QAAAtO,GAAAvG,IAIA,QAAA4U,KAEA,GAAAxnB,EAAAa,YAAA8E,EAAA9E,WAAA,CAGA,GAAA8L,GAAAhH,EAAAiH,cAEAD,GAAA5D,OAAA,EAAA,EAAA3I,EAAAuF,KAAA,IACAvF,EAAAuF,KAAAgH,EACAvM,EAAAkhB,QAAA3b,EAAA4b,YAEA,IAAAmG,GAAA9R,OAAAnL,aAAAzH,QAAA,aACA,OAAA0kB,GACAzoB,QAAAyB,QAAAiM,EAAA,SAAA1B,EAAA4B,GACA,GAAA5B,EAAApD,IAAA6f,EAEA,YADAtnB,EAAA4B,IAAAiJ,MAeA,QAAAwc,KACAjoB,EAAA,WACAY,EAAAqjB,WAAA,GACArjB,EAAA6jB,QAAAoD,MAIA,QAAAA,KAEA,GAAA9b,GAAA3L,EAAAme,SAAA3d,EAAAR,aAAAsE,KACA,IAAA,MAAAqH,EAEA,MAAA,KAGAA,GAAAA,EAAA1H,KAAA,SAAA2b,EAAA7V,GACA,MAAAA,GAAAmO,WAAA0H,EAAA1H,YAGA,IAAA6P,KACA,OAAAvnB,GAAA+I,OACAwe,EAAAvnB,EAAA+I,KAAAye,GAGA,IAAAC,KACA,YAAAznB,GAAA+I,OACA0e,EAAAznB,EAAA+I,KAAA2e,QAOA,KAAA,GAJAC,MACAC,KACAC,EAAA1c,EAAAvH,OACAkkB,EAAA,EACAnkB,EAAA,EAAAA,EAAAkkB,IAAAC,EAAA9nB,EAAAqjB,YAAArjB,EAAA+I,KAAAtB,IAAA,KAAA9D,EAAA,CACA,GAAA6L,GAAArE,EAAAxH,EACA,IAAA6L,EAAA,CAEA,IAAAxP,EAAAR,aAAAuoB,YACAvY,EAAAkI,WAAA1X,EAAAgoB,UAAAxY,EAAAkI,WAAA1X,EAAAioB,UACA,QAIA,KAAAjoB,EAAAR,aAAA0oB,UACA1Y,EAAAgI,OAAAxX,EAAAmoB,YAAA3Y,EAAAgI,KAAA/P,IACA,QAIA,KAAAzH,EAAAR,aAAA4oB,SACApoB,EAAA4B,KAAA5B,EAAA4B,IAAA6F,QACAzH,EAAA4B,IAAAymB,WAAA7Y,EAAA4R,cACA,QAMA,IADA/G,EAAAiO,SAAA9Y,GACAA,EAAA1H,UAAA9H,EAAAR,aAAAsE,KACA,QAIA,IAAA,IAAA9D,EAAAgnB,WAAA,CAEA,GAAAuB,GAAAvoB,EAAAgnB,WAAAhX,MAAA,IACAuY,GAAA3kB,SACA2kB,GAAAvoB,EAAAgnB,YAGA,KAAA,GADAwB,IAAA,EACAC,EAAA,EAAAA,EAAAF,EAAA3kB,SAAA6kB,EACA,GAAAjZ,EAAA1L,KAAAigB,cAAAvS,QAAA+W,EAAAE,GAAA1E,mBAAA,CACAyE,GAAA,CACA,OAIA,IAAAA,EACA,SAIA,GAAAxoB,EAAA+I,KAAAtB,IAAA,EAAA,CAIA,IAAA,GAHAihB,IAAA,EAEAC,KACA7Y,EAAA,EAAAA,EAAAN,EAAAhL,MAAAZ,SAAAkM,EAAA,CACA,GAAA/G,GAAAyG,EAAAhL,MAAAsL,EACA,IAAA/G,EAAAtB,IAAAzH,EAAA+I,KAAAtB,GAAA,CACAihB,GAAA,EACAC,EAAAhlB,EAAAmkB,EACAa,EAAA7Y,EAAA0F,OAAAzM,EAAAC,IACA,OAEAD,EAAAtB,IAAA8f,GACAmB,GAAA,EACAC,EAAAhlB,EAAAmkB,EACAa,EAAA7Y,EAAA0F,OAAAzM,EAAAC,MAEAD,EAAAtB,IAAAggB,IACAiB,GAAA,EACAC,EAAAhlB,EAAAmkB,EACAa,EAAA7Y,EAAA0F,OAAAzM,EAAAC,MAIA,IAAA0f,EACA,QAGAf,GAAA9jB,KAAA8kB,GAIAf,EAAA/jB,KAAA2L,GACAsY,KAIA,GAAA9nB,EAAA+I,KAAAtB,IAAA,EAAA,CAEA,GAAAsf,GAAAlhB,KAAA+iB,IAAAd,EAAA9nB,EAAAqjB,WAEAsE,GAAAA,EAAAlkB,KAAA,SAAAolB,EAAAC,GACA,MAAAA,GAAAhZ,EAAA+Y,EAAA/Y,GAIA,KAAA,GADAiZ,MACAplB,EAAA,EAAAA,EAAAojB,IAAApjB,EACAolB,EAAAllB,KAAA+jB,EAAAD,EAAAhkB,GAAAA,GAEAikB,GAAAmB,EAKA,MAFA/oB,GAAAsjB,gBAAAsE,EAAAhkB,OAEAgkB,EA5QA,GAAA5nB,GAAAiB,IAGA,IADAjB,EAAAR,aAAAA,EAAAwpB,OAAA9lB,EAAA6I,MACA/L,EAAAR,aAAA,CACA,GAAAypB,GAAA5e,aAAAzH,QAAA,uBAUA,OATAqmB,KACAA,EAAA,UAGAjpB,EAAAR,aAAAA,EAAA+K,OAAA0e,QACAjpB,EAAAR,cAEAH,EAAAkF,OAAA,MAAAvE,EAAAR,aAAA2B,OAKApC,EAAAC,SAAAG,MAAA,iBAAAa,EAAAR,aAAAsE,KAAAigB,cAEA/jB,EAAA4B,KAAA6F,MAAA3D,KAAA,IACA9D,EAAAuF,MAAAvF,EAAA4B,KACA5B,EAAAkhB,WACAlhB,EAAAgoB,SAAA,EACAhoB,EAAAioB,SAAA,GACAjoB,EAAAqjB,WAAA,GACArjB,EAAAsjB,gBAAA,EACAtjB,EAAAkpB,OAAA5pB,EAAAuhB,UACA7gB,EAAA+I,MAAAtB,MAAA3D,KAAA,IACA9D,EAAAwE,OAAAxE,EAAA+I,MACA/I,EAAA6jB,QAAA,KAEAhlB,QAAAyB,QAAAhB,EAAAkF,MAAA,SAAAuE,EAAAK,GACAL,EAAAogB,YACAnpB,EAAAwE,MAAAX,KAAAkF,IAIA,IAAAif,GAAAxS,OAAAnL,aAAAzH,QAAA,YACAolB,GAAA,GAAAA,EAAA,MACAhoB,EAAAgoB,SAAAA,EAEA,IAAAC,GAAAzS,OAAAnL,aAAAzH,QAAA,YACAqlB,GAAA,GAAAA,EAAA,MACAjoB,EAAAioB,SAAAA,GAGAjoB,EAAAgnB,WAAA3c,aAAAzH,QAAA,cACA5C,EAAAgnB,aACAhnB,EAAAgnB,WAAA,GAGA,IAAAoC,GAAA/e,aAAAzH,QAAA,aACAwmB,OAAAA,IAAA9pB,GAAAkF,QACAxE,EAAA+I,KAAAzJ,EAAAkF,MAAA4kB,IAGAppB,EAAAqpB,SAAA,WACA,GAAAJ,GAAA5e,aAAAzH,QAAA,uBACAqmB,KACAjpB,EAAAR,aAAAA,EAAA+K,OAAA0e,GACAjpB,EAAAR,cAEAH,EAAAkF,OAAA,MAAAvE,EAAAR,aAAA2B,QAKAnB,EAAAmK,KAAA,WACAnK,EAAAR,aAAAuoB,YACA1d,aAAAS,QAAA,WAAA9K,EAAAgoB,UACA3d,aAAAS,QAAA,WAAA9K,EAAAioB,WAGAjoB,EAAAR,aAAA4oB,SACA,MAAApoB,EAAA4B,KACAyI,aAAAS,QAAA,YAAA9K,EAAA4B,IAAA6F,IAIAzH,EAAA+I,MACAsB,aAAAS,QAAA,aAAA9K,EAAA+I,KAAAtB,IAGA4C,aAAAS,QAAA,aAAA9K,EAAAgnB,aA0CAhnB,EAAAmoB,YAAA7oB,EAAAgqB,YAEAtpB,EAAAupB,aAAA,WACAvpB,EAAAmK,OACAkd,KA8IArnB,EAAAwjB,gBAAA,WACApkB,EAAA,WACAY,EAAAqjB,YAAA,GACArjB,EAAA6jB,QAAAoD,OAIA7X,EAAA/M,OACAzC,EAAAa,WACA4B,IAGAzC,EAAAyC,KAAA0W,EAAA,WAAA3Z,EAAAiD,QC/SA,WACA,YAeA,SAAAmnB,GAAAzqB,EAAAK,EAAAK,EAAA2P,EAAA7J,EAAA3F,EAAAC,EAAAP,EAAAE,EAAAH,GAsDA,QAAAoqB,GAAAC,GAEA,MAAA,OAAAA,EACA,uBAAAA,EAAAjH,cAAA,UAGA,KAIA,QAAAkH,KAEA,GAAA3pB,EAAA4pB,aAAA5pB,EAAA4B,IAAA6F,GACA,MAAAzH,GAAA6pB,MAIA,IAAAC,KACA,IAAA9pB,EAAA4B,IAAA6F,IAAA,EAAA,CACA,GAAAsiB,GAAAxkB,EAAAykB,eAAAhqB,EAAA4B,IACAkoB,GAAAjmB,KAAAkmB,GAGAlrB,QAAAyB,QAAAwpB,EAAA,SAAAC,EAAAvjB,GACA,GAAAyjB,GAAAR,EAAAM,EACAE,KACApqB,EAAAY,SAAAwpB,GAKAC,EAAAJ,EAAA9pB,EAAA4B,KAHA/B,EAAAwC,KAAA4nB,EAAA,KAAAlR,EAAA,WAAA3Z,EAAA,WAAA8qB,EAAAJ,EAAA9pB,EAAA4B,YAUA,QAAAsoB,GAAAJ,EAAAloB,GAEA5B,EAAA6pB,SACA,IAAAM,IAAA,CACAtrB,SAAAyB,QAAAwpB,EAAA,SAAAC,EAAAvjB,GACA,GAAAyjB,GAAAR,EAAAM,EACAlqB,GAAAY,SAAAwpB,KACAE,GAAA,KAIAA,IACAtrB,QAAAyB,QAAAwpB,EAAA,SAAAC,EAAAvjB,GAKA,IAAA,GAJAyjB,GAAAR,EAAAM,GAEAF,EAAAhqB,EAAAoc,QAAAgO,GACAG,EAAAP,EAAAjmB,OACAkM,EAAA,EAAAA,EAAAsa,IAAAta,EACA,GAAA,GAAA+Z,EAAA/Z,GAAAsH,SAIAyS,EAAA/Z,GAAAua,aAAA,GACAR,EAAA/Z,GAAAwa,aAAA,GACAT,EAAA/Z,GAAAya,aAAA,GACAV,EAAA/Z,GAAA0a,aAAA,GACAX,EAAA/Z,GAAA2a,aAAA,GACAZ,EAAA/Z,GAAA4a,aAAA,GAAA,CAEA,GAAApc,IAAAsB,EAAAia,EAAA/Z,GAEAxB,GAAA7G,GAAAoiB,EAAA/Z,GAAArI,GACA6G,EAAAxG,SAAA,SACAwG,EAAAiG,WAAA,SACAjG,EAAAxK,KAAAlE,EAAA2S,UAAAsX,EAAA/Z,GAAAsH,OAAAyS,EAAA/Z,GAAAuH,aACA/I,EAAA8S,aAAAyI,EAAA/Z,GAAA6a,QACArc,EAAAkJ,KAAAlY,EAAAuhB,UAAA,GACAvS,EAAA4K,YAAA6Q,EAAAtH,cACAnU,EAAA4C,KAAA2Y,EAAA/Z,GAAAyH,eAEAvX,EAAA6pB,OAAAhmB,KAAAyK,MAKAtO,EAAA4pB,YAAAhoB,EAAA6F,IAsDA,QAAAsR,GAAAvG,IAIA,QAAA4U,KACA,GAAAxnB,EAAAa,YAAA8E,EAAA9E,WAAA,CACA,GAAA8L,GAAAhH,EAAAiH,cAEAxM,GAAAuF,MAAAvF,EAAAuF,KAAA3B,QACA2I,EAAA5D,OAAA,EAAA,EAAA3I,EAAAuF,KAAA,IAEAvF,EAAAuF,KAAAgH,EACAvM,EAAAkhB,QAAA3b,EAAA4b,YAEA,IAAAmG,GAAA9R,OAAAnL,aAAAzH,QAAA,aAEA,OAAA0kB,GACAzoB,QAAAyB,QAAAiM,EAAA,SAAA1B,EAAA4B,GACA,GAAA5B,EAAApD,IAAA6f,EAGA,YAFAtnB,EAAA4B,IAAAiJ,KAOA7K,EAAAinB,cAIA,QAAA5kB,KAEAkD,EAAA9E,WACArB,EAAAgoB,GAGA7hB,EAAAlD,KAAA0W,EAAA,WAAA3Z,EAAAgoB,KAjOA,GAAApnB,GAAAiB,IAEAjB,GAAAkhB,WACAlhB,EAAAiqB,QAAA,GACAjqB,EAAA6pB,UACA7pB,EAAA4pB,eAEA5pB,EAAAR,aAAAA,EAAA+K,OAAA,UAEAvK,EAAAgnB,WAAA3c,aAAAzH,QAAA,cACA5C,EAAAgnB,aACAhnB,EAAAgnB,WAAA,IAGA5X,EAAA/M,OACAzC,EAAAa,WACA4B,IAGAzC,EAAAyC,KAAA0W,EAAA,WAAA3Z,EAAAiD,KAGArC,EAAAqpB,SAAA,WACAjqB,EAAA,WACAY,EAAAR,cACAH,EAAA8B,KAAAnB,EAAAR,aAAA2B,SAKAnB,EAAAmQ,UAAA,WAEA,IAAAvQ,EAAAa,WAMA,MAJAb,GAAA6R,gBACA7R,EAAAyC,KAAA0W,EAAA,eAGA,CAGA,IAAAgR,GAAAxkB,EAAAykB,eAAAhqB,EAAA4B,KACAqoB,EAAAR,EAAAM,EACA,UAAAE,GACApqB,EAAAY,SAAAwpB,KA+FAjqB,EAAA4qB,eAAA,WACAnrB,EAAAorB,gBAAA7qB,EAAA8mB,aACA9mB,EAAA8mB,YAAArnB,EAAAqrB,kBAGA9qB,EAAAinB,WAAA,WAEA,GAAA4C,GAAAF,GACA,IAAA,MAAAE,EACA,QAGA7pB,GAAA4B,KAAA5B,EAAA4B,IAAA6F,IAAA,GACA4C,aAAAS,QAAA,YAAA9K,EAAA4B,IAAA6F,IAEA4C,aAAAS,QAAA,aAAA9K,EAAAgnB,WAKA,KAAA,GAHAY,MACAwC,EAAAP,EAAAjmB,OAEAD,EAAA,EAAAA,EAAAymB,IAAAzmB,EAAA,CACA,GAAA6L,GAAAqa,EAAAlmB,EAEA,IAAA,IAAA3D,EAAAgnB,WAAA,CACA,GAAAuB,GAAAvoB,EAAAgnB,WAAAhX,MAAA,IACAuY,GAAA3kB,SACA2kB,GAAAvoB,EAAAgnB,YAGA,KAAA,GADAwB,IAAA,EACAC,EAAA,EAAAA,EAAAF,EAAA3kB,SAAA6kB,EACA,GAAAjZ,EAAA1L,MAAA0L,EAAA1L,KAAAinB,WAAAhH,cAAAvS,QAAA+W,EAAAE,GAAA1E,mBAAA,CACAyE,GAAA,CACA,OAIA,IAAAA,EACA,SAIAxoB,EAAA4B,IAAA6F,IAAA,IAAAzH,EAAA4B,IAAAymB,WAAA7Y,EAAA4R,eAIAwG,EAAA/jB,KAAA2L,GAEA,MAAAoY,IAzMA/oB,QAAAC,OAAA,SAAA+D,UAAA,uBAAA;AACA,OACAC,SACAC,kBACAnB,IAAA,OACA2D,KAAA,SAEA7G,YAAA,UAAA,WAAA,aAAA,SAAA,OAAA,eAAA,UAAA,cAAA,eAAA,YAAA8qB,GACAxmB,aAAA,cACAvE,YAAA,oCCZAI,QAAAC,OAAA,SACAJ,WAAA,aACA,UAAA,WAAA,cAAA,SAAA,eAAA,UACA,SAAAK,EAAAK,EAAAE,EAAA8P,EAAAxP,EAAAC,GAEA,YAEA,IAAAG,GAAAiB,IAEAjB,GAAAgrB,MAAA,KACAhrB,EAAAqjB,WAAA,GACArjB,EAAA+mB,eAAA,EACA/mB,EAAA6jB,QAAA,KAEA7jB,EAAAgnB,WAAA3c,aAAAzH,QAAA,kBACA,MAAA5C,EAAAgnB,aACAhnB,EAAAgnB,WAAA,IAGAjoB,EAAAC,SAAAG,MAAA,2BAEA,IAAAqB,GAAA,kBAEAX,GAAAwC,KAAA7B,EAAA,KAAA,aAAA,WACApB,EAAA,WACAY,EAAAirB,gBAIAjrB,EAAAirB,UAAA,WACA,GAAAprB,EAAAY,SAAAD,IAAAZ,EAAAa,WAAA,CACAT,EAAAgrB,QAIA,KAAA,GAFAld,GAAAjO,EAAAoc,QAAAzb,GAEAmD,EAAA,EAAAA,EAAAmK,EAAAlK,SAAAD,EAAA,CACA,GAAAwE,GAAA2F,EAAAnK,EACA,IAAAwE,EAAAiP,OAAA,EAAA,CACA,GAAA8T,IACAzjB,GAAAU,EAAAV,GACA3D,KAAAlE,EAAA2S,UAAApK,EAAAiP,OAAAjP,EAAAkP,aACAG,KAAAlY,EAAAuhB,UAAA1Y,EAAAsP,MACAvG,KAAA/I,EAAAoP,eACAG,WAAAvP,EAAAwP,WACAnX,SAAA2H,EAAA3H,SAEAR,GAAAgrB,MAAAnnB,KAAAqnB,IAIAlrB,EAAAgrB,MAAA5V,EAAA+V,OAAAnrB,EAAAgrB,MAAA,QAEA5rB,EAAA,WACAY,EAAAwjB,sBAKAxjB,EAAAinB,WAAA,WAKA,GAJA,MAAAjnB,EAAAgrB,OACAhrB,EAAAirB,YAGA,MAAAjrB,EAAAgrB,MACA,QAMA,KAAA,GAHApD,MACAwD,EAAAprB,EAAAgrB,MAAApnB,OACAkkB,EAAA,EACAnkB,EAAA,EAAAA,EAAAynB,GAAAtD,EAAA9nB,EAAAqjB,aAAA1f,EAAA,CACA,GAAA6L,GAAAxP,EAAAgrB,MAAArnB,EAEA,IAAA,IAAA3D,EAAAgnB,WAAA,CACA,GAAAuB,GAAAvoB,EAAAgnB,WAAAhX,MAAA,IACA,IAAAuY,EAAA3kB,SACA2kB,GAAAvoB,EAAAgnB,YAGA,KAAA,GADAwB,IAAA,EACAC,EAAA,EAAAA,EAAAF,EAAA3kB,SAAA6kB,EACA,GAAAjZ,EAAA1L,MAAA0L,EAAA1L,KAAAinB,WAAAhH,cAAAvS,QAAA+W,EAAAE,GAAA1E,mBAAA,CACAyE,GAAA,CACA,OAIA,IAAAA,EACA,SAIAZ,EAAA/jB,KAAA2L,GACAsY,IAIA,MADA9nB,GAAAsjB,gBAAAsE,EAAAhkB,OACAgkB,GAGA5nB,EAAAupB,aAAA,WACAlf,aAAAS,QAAA,iBAAA9K,EAAAgnB,YAEAhnB,EAAAqjB,WAAA,GACArjB,EAAA6jB,QAAA7jB,EAAAinB,cAGAjnB,EAAAwjB,gBAAA,WACApkB,EAAA,WAEAY,EAAAqjB,YAAA,GACArjB,EAAA6jB,QAAA7jB,EAAAinB,mBC9GA,WACA,YAIA,SAAAoE,KACA,OACAC,SAAA,IACAxoB,SACAC,kBACAnB,IAAA,OACA2pB,SAAA,aAEA9sB,YAAA,+BACAuE,aAAA,OACAtE,YACA,UAAA,YAAA,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YACA8sB,IAIA,QAAAA,GAAAzsB,EAAAM,EAAA6D,EAAA9D,EAAAK,EAAAI,EAAA0F,EAAAjG,EAAAkG,EAAAC,GAkCA,QAAAsT,GAAAvG,IAjCAvR,KAAAuL,aAAA,WAGA,IAAA,GAFA0U,GAAA3b,EAAAiH,eACAif,KACA9b,EAAA,EAAAA,EAAAuR,EAAAtd,SAAA+L,EACApK,EAAAykB,eAAA9I,EAAAvR,KAAA1O,KAAAyqB,MACAD,EAAA5nB,KAAAqd,EAAAvR,GAGA,OAAA8b,IAGAxqB,KAAA0qB,YAAA,WACA,MAAApmB,GAAAomB,eAGA1qB,KAAAggB,WAAA,SAAA2K,GAEA,IAAA,GADA1K,GAAA3b,EAAA4b,aACAxR,EAAA,EAAAA,EAAAuR,EAAAtd,SAAA+L,EACA,GAAAuR,EAAAvR,GAAAC,EAAAic,aAAAD,EACA,MAAA1K,GAAAvR,GAAA7L,MAKA7C,KAAA0L,OAAA,SAAA/K,GACAX,KAAAW,IAAAA,EACAA,GACAX,KAAAsqB,YAKAhmB,EAAAlD,KAAA0W,EAAA3Z,GAnDAP,QAAAC,OAAA,SAAA+D,UAAA,mBAAAwoB,MCHA,WACA,YAIA,SAAAS,GAAAtsB,EAAAH,GACA,OACAisB,SAAA,IACAxoB,SACAC,kBACAgpB,SAAA,YACAhgB,IAAA,OACAhL,SAAA,aAEAtC,YAAA,uCACAC,YAAA,eAAAstB,GACAhpB,aAAA,QAIA,QAAAgpB,GAAAxsB,GAEA,GAAAQ,GAAAiB,IAEAjB,GAAA2K,WAAAnL,EAAAmL,WACA3K,EAAAisB,WAAA,EAEAjsB,EAAAksB,YAAA,SAAApa,GAEA9R,EAAA+L,IAAA+F,EACAzH,aAAAS,QAAA,uBAAAgH,EAAAhO,MAEA9D,EAAA+rB,WACA/rB,EAAAisB,WAAAjsB,EAAAisB,WAGAjsB,EAAAe,UACAf,EAAAe,YAlCAlC,QAAAC,OAAA,SAAA+D,UAAA,sBAAA,eAAA,YAAAipB,OCHA,WACA,YAIA,SAAAK,GAAAzsB,EAAAL,EAAA+P,GACA,OACAkc,SAAA,IACAxoB,OACAG,KAAA,SAEAxE,YAAA,kCACA2tB,KAAA,SAAAjd,EAAArN,EAAAuqB,GAEAld,EAAA4E,OAAA,OAAA,SAAAsB,EAAAC,GACAD,IACAlG,EAAAmd,UAAAnd,EAAAod,aAIApd,EAAAod,QAAA,WACA,GAAApd,EAAAlM,MAAAkM,EAAAlM,KAAAiO,KAAA,EAAA,CACA,GAEAsb,GAFAC,EAAA5mB,KAAA6mB,MAAAvd,EAAAlM,KAAAiO,KAAA,IAAA,EAUA,OANAsb,GADA,UAAArd,EAAAlM,KAAA6E,SACA,YAGA,WAGA2kB,EAAA,EACAD,EAAAC,EAAA,OAGAD,EAAA,IAAAC,EAAA,OAGA,MAAA,OAGAtd,EAAAmd,UAAAnd,EAAAod,UAEApd,EAAAwd,gBAAA,WACA,MAAAxd,GAAAlM,MAAAkM,EAAAlM,KAAAiO,KAAA,EACA/B,EAAAlM,KAAAiO,KAAA,GAAA,GAAA,EAEA,GAGA/B,EAAAyd,gBAAA,WACA,MAAAzd,GAAAlM,MAAAkM,EAAAlM,KAAAiO,KAAA,EACA,GAAArL,KAAA6mB,MAAAvd,EAAAlM,KAAAiO,KAAA,IAAA,IAAA,EAEA,KApDArS,QAAAC,OAAA,SAAA+D,UAAA,iBAAA,mBAAA,YAAA,SAAAspB,OCHA,WACA,YAIA,SAAAU,GAAAntB,EAAAL,EAAA+P,GACA,OACAkc,SAAA,IACAxoB,OACAG,KAAA,QACA6pB,QAAA,YAEAruB,YAAA,kCACA2tB,KAAA,SAAAjd,EAAArN,EAAAuqB,GACAld,EAAA4d,SAAA,gBAAA3d,EAAAwC,YAAAxC,OAAA,MAAA1P,EAAAojB,WAAA3T,EAAAlM,MAGAkM,EAAA4E,OAAA,OAAA,SAAAsB,EAAAC,GACAD,IACAlG,EAAA4d,SAAA,gBAAA3d,EAAAwC,YAAAxC,OAAA,MAAA1P,EAAAojB,WAAA3T,EAAAlM,WAhBApE,QAAAC,OAAA,SAAA+D,UAAA,iBAAA,mBAAA,YAAA,SAAAgqB,OCHA,WACA,YAIA,SAAAG,KACA,OACA1B,SAAA,IACAxoB,SACAC,kBACAE,KAAA,SAEAxE,YAAA,iCACAC,WAAAuuB,EACAjqB,aAAA,QAIA,QAAAiqB,KAEAhsB,KAAA0rB,gBAAA,WACA,MAAA1rB,MAAAgC,MAAAhC,KAAAgC,KAAA2M,GAAA3O,KAAAgC,KAAA2M,EAAAsd,QAAA,EACAjsB,KAAAgC,KAAA2M,EAAAsd,QAAA,EAAA,GAAA,EAEA,GAGAjsB,KAAA2rB,gBAAA,WACA,MAAA3rB,MAAAgC,MAAAhC,KAAAgC,KAAA2M,GAAA3O,KAAAgC,KAAA2M,EAAAsd,QAAA,EACA,GAAArnB,KAAA6mB,MAAAzrB,KAAAgC,KAAA2M,EAAAsd,QAAA,GAAA,EAEA,GA5BAruB,QAAAC,OAAA,SAAA+D,UAAA,gBAAAmqB,OCHA,WACA,YAIA,SAAAG,GAAAttB,EAAAD,EAAAR,GAEA,OACAksB,SAAA,IACA8B,YAAA,EACAtqB,OACAuqB,YAAA,gBAEA5uB,YAAA,gCACA2tB,KAAA,SAAAjd,EAAArN,EAAAuqB,GACAld,EAAAme,IAAA,yBAAA,WACAne,EAAAoe,iBAGApe,EAAAme,IAAA,qBAAA,WACAne,EAAAoe,iBAGApe,EAAAme,IAAA,qBAAA,WACAluB,EAAA,WACA+P,EAAAqe,WAAA,MAIAre,EAAAme,IAAA,yBAAA,WACAluB,EAAA,WACA+P,EAAAqe,WAAA,MAIAre,EAAAse,WAAA,EACAte,EAAAoe,aAAA,WACA,GAAAG,GAAA7tB,EAAA4O,YACA7O,GAAAa,YAEAitB,IAGAtuB,EAAA,YACA+P,EAAAse,WAAAC,IAAAve,EAAAwe,eACAxe,EAAAwe,YAAAD,GAEAve,EAAAse,WAAAC,KAIAve,EAAAoe,eACApe,EAAAqe,WAAA,IAjDA3uB,QAAAC,OAAA,SAAA+D,UAAA,gBAAA,UAAA,eAAA,WAAAsqB,OCHA,WACA,YAIA,SAAAS,KAEA,OACAtC,SAAA,IACAc,KAAA,SAAAtpB,EAAAhB,EAAAuqB,GACA,GAAAwB,IAAA,CACA/rB,GAAAgsB,GAAA,QAAA,SAAAC,GACA,IAAAF,EACA,IAEA5sB,KAAA+sB,eAAA,EACA/sB,KAAAgtB,aAAAhtB,KAAA4J,MAAAjH,OAAA,EACAiqB,GAAA,EACA,MAAAnJ,GAEAzjB,KAAAitB,SACAL,GAAA,KAKA/rB,EAAAgsB,GAAA,OAAA,SAAAC,GACAF,GAAA,MAxBAhvB,QAAAC,OAAA,SAAA+D,UAAA,yBAAA+qB,OCHA,WACA,YAIA,SAAAO,GAAA7uB,GACA,OACAgsB,SAAA,IACAxoB,OACA0B,MAAA,SACAnE,MAAA,SACA+tB,SAAA,YACAC,UAAA,aACAhe,OAAA,WAEA+b,KAAA,SAAAjd,EAAArN,EAAAuqB,GAaA,QAAAiC,KAcA,QAAAC,GAAAC,GACA,GAAAC,GAAA3sB,EAAA4sB,OACAD,GAAAE,IAAA,UAAAC,GACAH,EAAAI,KAAAL,GAEAM,EAAAC,MAAAN,GACAK,EAAAL,EACAO,EAAAnrB,KAAA4qB,GApBA3sB,EAAA6sB,IAAA,UAAA,OACA,IAAAnqB,GAAA2K,EAAA3K,KACAA,KACAA,EAAA2K,EAAAif,UAGAvvB,QAAAyB,QAAA0uB,EAAA,SAAAnkB,EAAA4B,GACA5B,EAAAokB,UAGA,IAAAC,IAAA,EACAJ,EAAAhtB,CAYAjD,SAAAyB,QAAAkE,EAAA,SAAAuE,EAAA0D,GACA,GAAA0iB,GAAA,EAEA,IAAApmB,EAAAtB,KAAAnI,GAAAkF,MAAA,CAEA,GAAA4qB,GAAA9vB,EAAAkF,MAAAuE,EAAAtB,GACA,KAAA0H,EAAAkB,QAAA,QAAA+e,IAAAA,EAAAnX,KACA,MAGA,IAAA9I,EAAAkB,SAAA+e,EAAAjgB,EAAAkB,QACA,MAYA,IATA6e,IACAC,GAAAE,GAEAH,GAAA,EAEA,cAAAnmB,KACAomB,GAAApmB,EAAAumB,WAAA,UAGAngB,EAAA9O,MACA,GAAA,WAAA+uB,EAAAttB,QAAA,CACA,GAAAkI,GAAA,CACAmF,GAAA9O,MAAAyB,UACAkI,EAAAmF,EAAA9O,MAAAyB,QAAA2F,IAEA0nB,GAAA7vB,EAAA2K,SAAAD,GAAAlG,KAAA,aAEA,IAAA,aAAAsrB,EAAAttB,QAAA,CACA,GAAAkI,GAAA,CACAmF,GAAA9O,MAAA0B,mBACAiI,EAAAmF,EAAA9O,MAAA0B,iBAAA0F,IAEA0nB,GAAA7vB,EAAA2K,SAAAD,GAAAlG,KAAA,SAIAqrB,GAAAC,EAAAtrB,KAAA,UAAAsrB,EAAAG,QAAAxmB,GACAqmB,EAAAI,YAAA,GACA3wB,QAAAyB,QAAAkE,EAAA,SAAAirB,EAAAC,GACA,GAAAD,EAAAhoB,IAAA2nB,EAAAI,YAIA,YAHAC,EAAAzmB,KAAAD,EAAAC,MACAmmB,GAAA,IAAAC,EAAAG,QAAAE,WAQAP,KACAC,GAAAE,GAEAH,GAAA,EAEA,cAAAnmB,KACAomB,GAAApmB,EAAAumB,WAAA,oBAGAH,GAAApmB,EAAAtB,GAAA,UAAAsB,EAAAC,GAGAulB,GAAAY,KApGA,GAAAE,EAKAA,GAJAlgB,EAAAkf,UAIA,SAAAlf,EAAAkf,UAAA,IAHA,EAMA,IAAAW,MACAJ,EAAA9sB,EAAA6sB,IAAA,UA+FAxf,GAAA4E,OAAA,QAAA,SAAAsB,EAAAC,GACAD,GACAiZ,MAIAnf,EAAA4E,OAAA,WAAA,SAAAsB,EAAAC,GACAD,GACAiZ,QA9HAzvB,QAAAC,OAAA,SAAA+D,UAAA,cAAA,cAAAsrB,OCHA,WACA,YAIA,SAAAwB,KACA,OACAC,QAAA,UACAxD,KAAA,SAAAtpB,EAAAhB,EAAAuqB,EAAAwD,GACAA,EAAAC,SAAAjsB,KAAA,SAAAgH,GACA,MAAA,GAAAA,IAEAglB,EAAAE,YAAAlsB,KAAA,SAAAgH,GACA,MAAAmlB,YAAAnlB,EAAA,QAVAhM,QAAAC,OAAA,SAAA+D,UAAA,sBAAA8sB,MCHA,WACA,YAIA,SAAAA,KACA,OACAC,QAAA,UACAxD,KAAA,SAAAtpB,EAAAhB,EAAAuqB,EAAAwD,GACAA,EAAAC,SAAAjsB,KAAA,SAAAgH,GACA,MAAA,GAAAA,EAAA,MAEAglB,EAAAE,YAAAlsB,KAAA,SAAAgH,GACA,MAAA,KAAAmlB,WAAAnlB,EAAA,QAVAhM,QAAAC,OAAA,SAAA+D,UAAA,uBAAA8sB,MCHA,WACA,YAGA,SAAAlqB,GAAA5F,EAAA2F,EAAAD,EAAAjG,GASA,QAAAyZ,GAAAvG,IAPA,GAAAyd,GAAA,iCACAC,EAAA,gCACAC,EAAA,0BAEAC,EAAA,wBACAC,EAAA,iCAMA,QACAhuB,KAAA,SAAAiuB,GACA/qB,EAAAlD,KAAA0W,EAAAuX,GACAzwB,EAAAwC,KAAA4tB,EAAAzqB,EAAA+qB,wBAAAxX,EAAAuX,GACAzwB,EAAAwC,KAAA6tB,EAAA1qB,EAAAgrB,kBAAAzX,EAAAuX,GACAzwB,EAAAwC,KAAA8tB,EAAA3qB,EAAAirB,sBAAA1X,EAAAuX,GACAzwB,EAAAwC,KAAA+tB,EAAA,KAAArX,EAAAuX,GACAzwB,EAAAwC,KAAAguB,EAAA,KAAAtX,EAAAuX,IAGAhjB,aAAA,SAAA3L,GACA,GAAAS,KACA,IAAAT,EAAA,EAAA,CACA,GAAA6E,GAAA3G,EAAA6wB,SAAAN,EAAA,KAAAzuB,EACA,IAAA,GAAA6E,EAAA5C,OAAA,CACA,GAAA8L,GAAA7P,EAAA8wB,OAAAP,EAAA5pB,EAAA,GACA,IAAAkJ,EAAA,CACA,GAAAkhB,GAAA/wB,EAAA6wB,SAAAL,EAAA,cAAA3gB,EAAAmhB,mBACA,IAAA,GAAAD,EAAAhtB,OAAA,CACA,GAAA6L,GAAA5P,EAAA8wB,OAAAN,EAAAO,EAAA,GACAnhB,KACArN,EAAA9C,EAAA6W,SAAA1G,OAMA,MAAArN,IAGA2K,YAAA,SAAA2T,GACA,GAAAA,EAAA,EAAA,CACA,GAAAla,GAAA3G,EAAA6wB,SAAAR,EAAA,KAAAxP,EACA,IAAA,GAAAla,EAAA5C,OACA,MAAA/D,GAAA8wB,OAAAT,EAAA1pB,EAAA,IAIA,UAGAyG,eAAA,SAAAsW,GACA,GAAAA,EAAA,EAAA,CACA,GAAA/c,GAAA3G,EAAA6wB,SAAAT,EAAA,KAAA1M,EACA,IAAA,GAAA/c,EAAA5C,OACA,MAAA/D,GAAA8wB,OAAAV,EAAAzpB,EAAA,IAIA,UAGA2G,aAAA,SAAAuT,EAAA6C,GACA,GAAA7C,EAAA,GAAA6C,EAAA,EAAA,CACA,GAAA/c,GAAA3G,EAAA6wB,SAAAP,EAAA,KAAA,IAAA3a,OAAA+N,GAAA/N,OAAAkL,GAAA,IACA,IAAA,GAAAla,EAAA5C,OACA,MAAA/D,GAAA8wB,OAAAR,EAAA3pB,EAAA,IAIA,WA1EA3H,QAAAC,OAAA,SAAAgyB,QAAA,aAAA,UAAA,oBAAA,OAAA,cAAArrB,OCHA,WACA,YAGA,SAAAD,KACA,OACAic,SACArK,QAAA,EAAAgL,eAAA,EAAA/K,aAAA,EAAAgL,oBAAA,EACAV,MAAA,EAAA5G,YAAA,EAAAgW,YAAA,EAAAC,YAAA,EAAArZ,YAAA,EAAAsZ,cAAA,EAAAxZ,MAAA,EACAyZ,QAAA,EAAAC,aAAA,EAAAC,YAAA,EAAAC,gBAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,QAAA,EAAAC,aAAA,EAAAC,YAAA,EACAC,SAAA,EAAAC,cAAA,EAAAC,aAAA,EACAvV,WAAA,EACAwV,SAAA,EACAC,iBAAA,EAAArQ,cAAA,EAAAsQ,cAAA,EAAA5b,gBAAA,EAAAqL,QAAA,EAAApF,eAAA,EAAAK,gBAAA,GAEAuV,UACAC,WAAA,GAEAxc,YACA4G,WAAA,EAAAvH,cAAA,EAAAod,cAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,SAAA,EAAArd,UAAA,EACAsH,cAAA,EACA8C,aAAA,EAAAO,gBAAA,EAAAN,aAAA,EAAAO,gBAAA,EAAA0S,aAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,kBAAA,EACA9C,QAAA,EAAA+C,aAAA,EAAA3C,QAAA,EAAA4C,aAAA,EAAAzC,QAAA,EAAA0C,aAAA,EAAAvC,QAAA,EAAAwC,aAAA,EAAArC,QAAA,EAAAsC,aAAA,EAAAnC,QAAA,EAAAoC,aAAA,EAAAjC,QAAA,EAAAkC,aAAA,EAAA/B,QAAA,EAAAgC,aAAA,EAAA7B,QAAA,EAAA8B,aAAA,EAAA3B,SAAA,EAAA4B,cAAA,GAEAnc,cACAC,aAAA,EAAAmc,aAAA,EAAAC,gBAAA,EACA1D,QAAA,EAAA+C,aAAA,EACA3C,QAAA,EAAA4C,aAAA,EACAzC,QAAA,EAAA0C,aAAA,EACAvC,QAAA,EAAAwC,aAAA,EACArC,QAAA,EAAAsC,aAAA,EACAnC,QAAA,EAAAoC,aAAA,EACAjC,QAAA,EAAAkC,aAAA,EACA/B,QAAA,EAAAgC,aAAA,EACA7B,QAAA,EAAA8B,aAAA,EACA3B,SAAA,EAAA4B,cAAA,EACAG,SAAA,EAAAC,cAAA,EACAC,SAAA,EAAAC,cAAA,EACAC,SAAA,EAAAC,cAAA,EACAC,SAAA,EAAAC,cAAA,EACAC,SAAA,EAAAC,cAAA,EACAC,SAAA,EAAAC,cAAA,GAEAC,QACA9T,MAAA,GAEA+T,OAAA,KACAvb,SAAA,KACAwb,SACAC,SAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAlK,aAAA,EAAAqB,SAAA,GAEAuD,uBACAuF,UAAA,EAAAC,SAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,QAAA,GAEA7F,mBACA8F,OAAA,EACAC,UAAA,EACAC,WAAA,EACAC,cAAA,EACAC,iBAAA,GAEAnG,yBACAoG,IAAA,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,oBAAA,EAAAC,OAAA,EAAAC,iBAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,mBAAA,EAAAC,WAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,sCAAA,IAnEAj5B,QAAAC,OAAA,SAAAgyB,QAAA,qBAAAtrB,OCHA,WACA,YAIA,SAAA3F,GAAAk4B,EAAA34B,GAEA,QAAA44B,GAAApmB,EAAAqmB,EAAAC,GAEA,GAAAC,IACAC,OAAA,GAAAC,WAEAC,QAAA,EACA7mB,gBAAA,EAEAwmB,KAAAA,EAEArmB,YAAAA,EACA2mB,iBAAA,KACAC,qBAEAn2B,KAAA,SAAArB,EAAAsvB,GAEA,GAAArvB,KAAAq3B,OACAhI,QAMA,IAHArvB,KAAAs3B,iBAAAv3B,EACAC,KAAAu3B,kBAAA30B,KAAAysB,IAEArvB,KAAAwQ,eAAA,CACAxQ,KAAAwQ,gBAAA,CACA,IAAA5B,GAAA5O,IAEAA,MAAAm3B,OAAAF,WAAAA,EAEAj3B,KAAA2Q,aACA3Q,KAAA2Q,YAAAvN,KACApD,KAAA2Q,YAAAvN,IAAAT,SAEAm0B,EAAAU,WAAA,sBAEAr5B,EAAA,WACAyQ,EAAAuoB,OAAAM,sBACA7oB,EAAA+B,YAAAvN,IAAA,IAAA4zB,EACA,SAAAzlB,GAAA,MAAA3C,EAAA0oB,kBAAA1oB,EAAA0oB,iBAAA/lB,IACA,SAAAsR,EAAAtjB,GAEAqP,EAAAyoB,QAAA,EAEAz5B,QAAAyB,QAAAuP,EAAA2oB,kBAAA,SAAA3tB,EAAA4B,GACA5B,MAEAgF,EAAA2oB,qBACAT,EAAAU,WAAA,uBAEA,SAAAjmB,GACAulB,EAAAU,WAAA,sBACA5oB,EAAA4B,gBAAA,EACA5B,EAAAyoB,QAAA,SAWAzpB,MAAA,WACA5N,KAAAm3B,OAAA,GAAAC,WACAp3B,KAAAq3B,QAAA,EACAr3B,KAAAwQ,gBAAA,GAIA,OAAA0mB,GAGA,OACAQ,WACAC,eACAhnB,YAAA,KAEAqB,YAAA,SAAAD,GACA/R,KAAA2Q,YAAAoB,CACA,IAAAnD,GAAA5O,IACApC,SAAAyB,QAAAW,KAAA03B,QAAA,SAAA9tB,EAAA4B,GACA5B,EAAA+G,aAAAoB,IACAnI,EAAA+G,YAAAoB,EACAnD,EAAAhB,MAAApC,OAKApK,KAAA,SAAA7B,EAAA03B,EAAAl3B,EAAAsvB,GACAtvB,IACAA,EAAA,cAEAR,IAAAS,MAAA03B,SACAn4B,EAAAoD,OAAA,IACA3C,KAAA03B,QAAAn4B,GAAAw3B,EAAA/2B,KAAA2Q,YAAApR,EAAA03B,IAGAj3B,KAAA03B,QAAAn4B,GAAA6B,KAAArB,EAAAsvB,IAEArU,QAAA,SAAAzb,GACA,GAAAS,KAAAR,SAAAD,GAAA,CAGA,IAAA,GAFA43B,GAAAn3B,KAAA03B,QAAAn4B,GAAA43B,OACAruB,EAAA,GAAA8uB,OAAAT,EAAAU,SACAn1B,EAAA,EAAAA,EAAAy0B,EAAAU,UAAAn1B,EACAoG,EAAApG,GAAAy0B,EAAAzH,OAAAhtB,EAGA,OAAAoG,GAGA,UAGAgN,KAAA,SAAAvW,EAAAu4B,EAAAluB,GAIA,IAAA,GAHAgZ,GAAA5iB,KAAAyvB,SAAAlwB,EAAAu4B,EAAAluB,GACAd,KACAivB,EAAAnV,EAAAjgB,OACAD,EAAA,EAAAA,EAAAq1B,IAAAr1B,EACAoG,EAAAlG,KAAA5C,KAAA0vB,OAAAnwB,EAAAqjB,EAAAlgB,IAGA,OAAAoG,IAEA2mB,SAAA,SAAAlwB,EAAAu4B,EAAAluB,GAEA,GAAA5J,KAAAR,SAAAD,GAAA,CACAA,IAAAS,MAAA23B,cACA33B,KAAA23B,YAAAp4B,MAGA,IAAA43B,GAAAn3B,KAAA03B,QAAAn4B,GAAA43B,OACAa,EAAAb,EAAAc,cAAAH,GAEAI,EAAAl4B,KAAA23B,YAAAp4B,EAEA,MAAAu4B,IAAAI,IAAA,CACA,GAAA3yB,KACA2yB,GAAAJ,GAAAvyB,CAMA,KAAA,GAFA2B,GAAAiwB,EAAAjwB,KACA+B,EAAA/B,EAAAvE,OACAoa,EAAA,EAAAA,EAAA9T,IAAA8T,EAAA,CACA,GAAApO,GAAAzH,EAAA6V,GACAob,EAAAxpB,EAAAqpB,EAEAG,KAAA5yB,GAIAA,EAAA4yB,GAAAv1B,KAAAma,GAHAxX,EAAA4yB,IAAApb,IAQA,MAAAnT,KAAAsuB,GAAAJ,GACAI,EAAAJ,GAAAluB,MAOA,UAEApK,SAAA,SAAAD,GACA,MAAAA,KAAAS,MAAA03B,SAAA13B,KAAA03B,QAAAn4B,GAAA83B,QAEAe,kBAAA,SAAA74B,GACA,MAAAS,MAAAR,SAAAD,IAAAA,IAAAS,MAAA03B,SAAA13B,KAAA03B,QAAAn4B,GAAAiR,gBAEA5C,MAAA,SAAArO,GACAA,IAAAS,MAAA03B,UACA13B,KAAA03B,QAAAn4B,GAAAqO,cACA5N,MAAA03B,QAAAn4B,SACAS,MAAA23B,YAAAp4B,KAGA84B,SAAA,WACA,GAAAzpB,GAAA5O,IACApC,SAAAyB,QAAAW,KAAA03B,QAAA,SAAA9tB,EAAA4B,GACAoD,EAAAhB,MAAApC,MAGAgC,WAAA,WACA,GACAgH,GAAA,CAOA,OANA5W,SAAAyB,QAAAW,KAAA03B,QAAA,SAAA9tB,EAAA4B,IACA5B,EAAAytB,QAAAztB,EAAA4G,gBACAgE,MAIAA,GAEA8jB,WAAA,SAAA/4B,GACA,MAAAS,MAAAR,SAAAD,GACAS,KAAA03B,QAAAn4B,GAAA43B,OAAAU,QAGA,GAGAnI,OAAA,SAAAnwB,EAAAgG,GACA,MAAAvF,MAAAR,SAAAD,GACAS,KAAA03B,QAAAn4B,GAAA43B,OAAAzH,OAAAnqB,OAMAgzB,YAAA,SAAAh5B,EAAA2H,EAAAsxB,GACA,MAAAx4B,MAAAR,SAAAD,GACA2H,EAAAlH,KAAA03B,QAAAn4B,GAAA43B,OAAAsB,YAAAD,IAGA,MAGAE,YAAA,SAAAn5B,EAAA2H,GACA,MAAAlH,MAAAR,SAAAD,GACAS,KAAA03B,QAAAn4B,GAAA43B,OAAAuB,YAAAxxB,GAGA,MAGAyxB,SAAA,SAAAp5B,EAAAgG,EAAAizB,GACA,MAAAx4B,MAAAR,SAAAD,GACAS,KAAA03B,QAAAn4B,GAAA43B,OAAAwB,SAAApzB,EAAAizB,GAGA,OA9OA56B,QAAAC,OAAA,SAAAgyB,QAAA,WAAA,aAAA,WAAAjxB,OCHA,WACA,YAGA,SAAAuS,GAAAtR,EAAAyE,EAAA1F,EAAAwa,GACA,MAAA,UAAArZ,GA2BA,QAAA64B,GAAArzB,GAEAA,EAAAszB,EAAAl2B,OACAk2B,EAAAtzB,GAAAnE,KAAArB,EAAA,WACA84B,EAAAtzB,GAAA/F,aACA,YAAAq5B,GAAAtzB,IACAxF,EAAA,eAAA84B,EAAAtzB,GAAAhG,UAEAq5B,EAAArzB,EAAA,MAKAxF,EAAA,4BAtCAA,EAAA,gBAEA,IAAA84B,IAAAv0B,EAGA1G,SAAAyB,QAAAQ,EAAA,SAAAmC,EAAAwJ,GACA,OAAAA,GACA5N,QAAAyB,QAAA2C,EAAA,SAAA4H,EAAAkvB,GACA,GAAAA,EAAAvoB,QAAA,QAAAuoB,EAAAn2B,OAAA,EAAA,CACA,GAAAo2B,IACA33B,KAAA,SAAArB,EAAAsvB,GACAzwB,EAAAwC,KAAAwI,EAAA,KAAA7J,EAAAsvB,IAEA7vB,SAAA,WACA,MAAAZ,GAAAY,SAAAoK,IAEArK,SAAAqK,EAGAivB,GAAAj2B,KAAAm2B,QAuBAH,EAAA,IA9CAh7B,QAAAC,OAAA,SAAAgyB,QAAA,WAAA,QAAA,OAAA,UAAA,cAAA1e,OCHA,WACA,YAGA,SAAAtS,GAAAgB,EAAAyE,EAAA1F,GACA,MAAA,YAEAhB,QAAAyB,QAAAQ,EAAA,SAAAm5B,EAAAn2B,GACAm2B,EAAAprB,UAGAtJ,EAAAsJ,QACAhP,EAAAy5B,YATAz6B,QAAAC,OAAA,SAAAgyB,QAAA,YAAA,QAAA,OAAA,UAAAhxB,OCHA,WACA,YAIA,SAAAJ,GAAAw6B,EAAAp5B,EAAAjB,EAAAwa,EAAA/a,EAAAkG,EAAAjG,EAAAK,EAAAJ,EAAA4P,GAEA,OAEA0T,WAAA,SAAA7f,EAAAk3B,GACA,GAAAl3B,EAAA,CACA,GAAA8M,EAmDA,OAjDA,UAAA9M,EAAA6E,UACAiI,EAAA,UACAlR,QAAAyB,QAAA2C,EAAAuB,MAAA,SAAAuE,EAAAvC,GAEAuJ,GADAvJ,EAAA,EACA,IAGA,KAEAuJ,GAAAhH,EAAAtB,GAAAsjB,SAAA,IAAA,IAAAhiB,EAAAC,OAGA/F,EAAAwE,KACAsI,EAAA,IAAA9M,EAAAwE,GAAAsjB,SAAA,IAAA,KACA,cAAA9nB,GACA8M,GAAA9M,EAAAsR,WAEA,gBAAAtR,GAEA8M,GAAA9M,EAAAm3B,aAEAn3B,EAAAzC,WACAuP,GAAA,KAAA9M,EAAAzC,WAGAyC,EAAA+E,gBAAA,GAAA/E,EAAA+E,kBACA+H,GAAA,KAAA9M,EAAA+E,eAAA+iB,SAAA,KAEA9nB,EAAAoV,IAAA,IACAtI,GAAA,KAAA9M,EAAAoV,IAAA0S,SAAA,KAKA9nB,EAAAuW,QAAA,IACAzJ,GAAA,KAAA9M,EAAAuW,QAAAuR,SAAA,KAEA,UAAA9nB,EAAA6E,WACAiI,GAAA,KAAA9M,EAAAiW,aAEAjW,EAAAkW,MACApJ,GAAA,KAAA9M,EAAAkW,MAIAlW,EAAAa,OAAAq2B,IACApqB,GAAA,KAAA9M,EAAAa,KAAAmR,QAAA,KAAA,KAAAA,QAAA,MAAA,MAGAlF,EAGA,MAAA,IAGAG,WAAA,SAAAD,GACA,GAAAhN,KAsDA,OApDAgN,IACApR,QAAAyB,QAAA2P,EAAAD,MAAA,KAAA,SAAAqqB,EAAAC,GACA,GAAA,KAAAD,EAAAE,OAAA,GACAt3B,EAAAwE,GAAA+yB,SAAAH,EAAAI,OAAA,GAAA,QAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAA+E,eAAAwyB,SAAAH,EAAAI,OAAA,GAAA,QAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAoV,IAAAmiB,SAAAH,EAAAI,OAAA,GAAA,QAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAqb,MAAAkc,SAAAH,EAAAI,OAAA,GAAA,QAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAuW,QAAAghB,SAAAH,EAAAI,OAAA,GAAA,QAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAiW,YAAAmhB,EAAAI,OAAA,OAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAkW,IAAAkhB,EAAAI,OAAA,OAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAsR,WAAA8lB,EAAAI,OAAA,OAEA,IAAA,KAAAJ,EAAAE,OAAA,GACAt3B,EAAAa,KAAAu2B,EAAAI,OAAA,GAAAxlB,QAAA,IAAA,SAEA,IAAA,KAAAolB,EAAAE,OAAA,GAAA,CACAt3B,EAAAuB,QACA,IAAAk2B,GAAAL,EAAAI,OAAA,EACA57B,SAAAyB,QAAAo6B,EAAA1qB,MAAA,KAAA,SAAA2qB,EAAAC,GACA,GAAAC,GAAAF,EAAA3qB,MAAA,IACA/M,GAAAuB,MAAAX,MACA4D,GAAA+yB,SAAAK,EAAA,GAAA,IACA7xB,IAAAwM,OAAAqlB,EAAA,YAIA,KAAAR,EAAAE,OAAA,KAEAt3B,EAAAzC,SAAA65B,EAAAI,OAAA,GACA57B,QAAAyB,QAAAQ,EAAA,SAAAyT,EAAA9H,GACA8H,EAAAkN,SAAA,GAAAlN,EAAAkN,QAAAjQ,QAAAvO,EAAAzC,SAAA,OACAyC,EAAAsR,WAAA9H,QAOAxJ,GAGAR,gBAAA,SAAAwD,EAAApB,GACA,GAAAi2B,MACAC,EAAA95B,IAEA,IAAA,MAAA4D,EACA,MAAA,EAGAhG,SAAAyB,QAAAuE,EAAA/D,MAAA,SAAAmC,EAAAwJ,GACA,GAAAsD,GAAAgrB,EAAAjY,WAAA7f,GAAA,EACA8M,IAAAA,EAAAnM,QACAk3B,EAAAj3B,KAAAkM,IAIA,IAAAhG,GAAA,qBAAAqF,EAAAwC,YAAAxC,MAyBA,OAtBAvK,GAAApD,aACAsI,GAAA,MAAAlF,EAAApD,YAEAoD,EAAAnD,cACAqI,GAAA,MAAAlF,EAAAnD,aAEAmD,EAAAlD,YACAoI,GAAA,MAAAlF,EAAAlD,WAEAkD,EAAAjD,KAAAiD,EAAAjD,IAAA6F,KACAsC,GAAA,MAAAlF,EAAAjD,IAAA6F,IAEA5C,EAAAhD,YAAAgD,EAAAhD,WAAA4F,KACAsC,GAAA,MAAAlF,EAAAhD,WAAA4F,IAEA5C,EAAA/C,SAAA+C,EAAA/C,QAAA2F,KACAsC,GAAA,MAAAlF,EAAA/C,QAAA2F,IAEA5C,EAAA9C,kBAAA8C,EAAA9C,iBAAA0F,KACAsC,GAAA,MAAAlF,EAAA9C,iBAAA0F,IAEAsC,GAAA,MAAAixB,UAAA/0B,GAAA,MAAA60B,EAAAG,KAAA,MAIA34B,eAAA,SAAA2D,EAAApB,GAEA,GAAA1D,GAAAF,KAAAwB,gBAAAwD,EAAApB,GACAq2B,EAAAr8B,QAAAiD,QAAA9C,SAAAm8B,cAAA,SAAAC,KAAA,QACA54B,EAAA+N,OAAAyC,SAAAqoB,KAAArrB,MAAAkrB,GAAA,GAAAA,EAAA/5B,EACAgH,GAAA3F,QAAAA,EACA+X,SAAAC,IAAA,yBAAAhY,GAEA03B,EAAAoB,KACA,6FAAAnzB,GAAAozB,QACA,SAAApzB,EAAAqzB,EAAAj0B,EAAAjJ,GACAuG,EAAAnC,SAAAyF,EAAAV,GACA9E,eAAAmI,QAAA3J,EAAAgH,EAAAV,MAEAg0B,MAAA,SAAAtzB,EAAAqzB,EAAAj0B,EAAAjJ,OAQAqQ,WAAA,SAAA1L,GAEA,GAAA,MAAAA,EAAA,CAgBA,GAVA,gBAAAA,KAAAA,EAAAsR,aACAtR,EAAAsR,WAAAtR,EAAAm3B,cAIA,UAAAn3B,EAAAsR,aACAtR,EAAAsR,WAAA,QAIA,UAAAtR,EAAAsR,YAAA,UAAAtR,EAAA6E,SAEA,MADA7E,GAAA6E,SAAA,SACA7E,CAEA,IAAA,UAAAA,EAAAsR,YAAA,UAAAtR,EAAA6E,SAAA,CAEA7E,EAAA+E,iBACA/E,EAAA+E,eAAA,EAGA,IAAA0zB,GAAA,uBAAAz4B,EAAAiW,YAAA,UACAyiB,EAAA,KACA,QAAA14B,EAAAkW,MACAwiB,EAAA,MAEA,IAAAC,GAAA,4BAAA34B,EAAAiW,YAAAyiB,EAAA,UAEAviB,EAAAvZ,EAAAkX,KAAA2kB,EAAA,KAAAz4B,EAAAwE,IAAA,GACAo0B,EAAAh8B,EAAAoc,QAAA2f,GAEAE,IACAj9B,SAAAyB,QAAAu7B,EAAA,SAAAhxB,EAAArE,GACA,GAAAqE,EAAAkxB,YAAA94B,EAAAwE,IAAAoD,EAAAmxB,YAAA/4B,EAAA+E,eAEA,YADA8zB,EAAAjxB,IAKA,IAAAyD,IACA7G,GAAAxE,EAAAwE,GACA8M,WAAAtR,EAAAsR,WACAzM,SAAA7E,EAAAsR,WACA6M,aAAAhI,EAAAuR,QACAzR,YAAAjW,EAAAiW,YACA1B,KAAAlY,EAAAuhB,UAAA,GACA7Y,eAAA/E,EAAA+E,eACAlE,KAAAlE,EAAA2S,UAAA6G,EAAAhC,OAAAgC,EAAA/B,aACA8K,YAAAviB,EAAA2S,UAAAupB,EAAAG,mBAAAH,EAAAI,yBACAhrB,KAAAkI,EAAA7B,eACA4B,IAAAlW,EAAAkW,IAIA,OADA7K,GAAA9J,MAAAjF,EAAA48B,cAAA7tB,EAAA8K,EAAAyiB,GACAvtB,EAEA,GAAArL,EAAAsR,aAAAzT,GAAA,CAEA,GAAA6U,GAAA7U,EAAAmC,EAAAsR,YACA6nB,EAAAv8B,EAAAkX,KAAApB,EAAA8L,QAAA,KAAAxe,EAAAwE,GACA,IAAA20B,EAAAx4B,OAGA,CACA,GAAAgM,GAAAwsB,EAAA,GAEAC,EAAA,EACA5sB,EAAA,KAEA6sB,EAAAz8B,EAAAkX,KAAApB,EAAA4C,aAAA,KAAAtV,EAAAoV,IAKA,IAJAikB,EAAA14B,SACA04B,EAAAz8B,EAAAkX,KAAApB,EAAA4C,aAAA,cAAA3I,EAAAmL,cAGAuhB,EAAA14B,OAAA,CACA,GAAA04B,GAAAz8B,EAAAkX,KAAApB,EAAA8C,eAAA,KAAAxV,EAAAoV,IACAikB,GAAA14B,SACA04B,EAAAz8B,EAAAkX,KAAApB,EAAA8C,eAAA,cAAA7I,EAAAmL,aAIA,GAAAuhB,EAAA14B,OAAA,EAGA,GAFA6L,EAAA6sB,EAAA,GAEA7sB,EAAA+I,aAAA5I,EAAAmL,WAGAtL,EAAA,KACA8K,QAAAC,IAAA,qBAEA,CACA,GAAAzC,GAAAlY,EAAAkX,KAAApB,EAAA4C,aAAA,cAAA9I,EAAA+I,YACA3Z,SAAAyB,QAAAyX,EAAA,SAAAlN,EAAA4B,GACA4vB,GAAAxxB,EAAA+pB,iBAKA,GAAAtmB,GAAA+L,EAAAkiB,WAAA5mB,EAAA7R,KAAA8L,EAAAH,EAAA4sB,EACAhiB,GAAAiO,SAAAha,GACA9O,EAAAg9B,gBAAAluB,EAAAsB,EAEA,IAAA6sB,GAAA,IAQA,IANAA,EADA,WAAAnuB,EAAAxG,UAAA,GAAAwG,EAAAgM,OACA,WAGA,YAGAmiB,GACA58B,EAAAY,SAAAkV,EAAA8mB,KAAA58B,EAAAY,SAAAkV,EAAA+f,QAAA,CACApnB,EAAApH,WACA,IAAAw1B,GAAA78B,EAAAkX,KAAApB,EAAA8mB,GAAA,KAAAx5B,EAAAwE,GACA,IAAAi1B,EAAA94B,OAAA,EAAA,CACA0K,EAAAgQ,MAAAoe,EAAA,GAAArJ,SACA,IAAAsJ,GAAA98B,EAAAkX,KAAApB,EAAA+f,OAAA,KAAAgH,EAAA,GAAArJ,UACAsJ,GAAA/4B,OAAA,IACA0K,EAAApH,SAAA5H,EAAA6W,SAAAwmB,EAAA,MAOA,GADAruB,EAAApF,UAAAoF,EAAA9J,MACAvB,EAAA+E,gBAAA,EAGA,GAFAsG,EAAAtG,eAAA/E,EAAA+E,eAEA,UAAAsG,EAAAxG,cAGA,IAAA,YAAAwG,EAAAxG,SAAA,CACA,GAAAgB,KACAjK,SAAAyB,QAAAgO,EAAA9J,MAAA,SAAAuE,EAAAvC,GACAsC,EAAAjF,MAAA4D,GAAAsB,EAAAtB,GAAAuB,IAAAD,EAAAC,KAAAsF,EAAAtG,eAAA,SAGAsG,EAAArF,iBAAAH,EACAwF,EAAApF,UAAA5J,EAAAgI,WAAAgH,EAAArF,iBAAAqF,EAAA9J,WAEA,CACA,GAAAoR,GAAA/V,EAAAkX,KAAApB,EAAAkB,WAAA,YAAAvI,EAAAsI,cACA/X,SAAAyB,QAAAsV,EAAA,SAAAC,EAAArP,GACA,GAAAqP,EAAAK,cAAA5H,EAAAtG,eAGA,MAFAsG,GAAArF,iBAAA3J,EAAA6W,SAAAN,QACAvH,EAAApF,UAAA5J,EAAAgI,WAAAgH,EAAArF,iBAAAqF,EAAA9J,UAOA,GAAAvB,EAAAuW,QAAA,EAAA,CACAlL,EAAAkL,QAAAvW,EAAAuW,OACA,IAAAC,GAAA5Z,EAAAkX,KAAApB,EAAAwE,SAAA,KAAAlX,EAAAuW,QACAC,GAAA7V,OAAA,IACA0K,EAAAsL,WAAAta,EAAA6W,SAAAsD,EAAA,IACAnL,EAAApF,UAAA5J,EAAAgI,WAAAgH,EAAApF,UAAAoF,EAAAsL,iBAGA,IAAAhK,EAAAsjB,gBAAA,CACA5kB,EAAAhD,kBAAA,EACAgD,EAAA1C,mBAAA,CACA,IAAAsS,GAAAre,EAAAkX,KAAA,8BAAA,gBAAAnH,EAAAsjB,gBACAhV,IAAAA,EAAAta,OAAA,IACA,GAAAsa,EAAA,GAAA0e,kBAAAtuB,EAAAhD,oBACA,GAAA4S,EAAA,GAAA2e,kBAAAvuB,EAAAhD,oBACA,GAAA4S,EAAA,GAAA4e,kBAAAxuB,EAAAhD,oBACA,GAAA4S,EAAA,GAAA6e,kBAAAzuB,EAAAhD,oBAEA,GAAA4S,EAAA,GAAA0e,kBAAAtuB,EAAA1C,qBACA,GAAAsS,EAAA,GAAA2e,kBAAAvuB,EAAA1C,qBACA,GAAAsS,EAAA,GAAA4e,kBAAAxuB,EAAA1C,qBACA,GAAAsS,EAAA,GAAA6e,kBAAAzuB,EAAA1C,sBAIA,MAAA0C,GApHAiM,QAAAC,IAAA,QAAAvX,EAAAwE,GAAA,iBAAAkO,EAAA8L,SAwHA,GAAAxe,EAAAzC,SAAA,CACA,GAAAsN,GAAAjO,EAAAkX,KAAA9T,EAAAzC,SAAA,UAAA,KAAAyC,EAAAwE,GACA,IAAAqG,EAAAlK,OAAA,EAAA,CACA,GAAAgM,GAAA9B,EAAA,GACAQ,GACA7G,GAAAxE,EAAAwE,GACAU,KAAAyH,EACA8H,WAAA9H,EAAA+H,WACAyJ,aAAAxR,EAAAqhB,aACA3W,OAAA1K,EAAA+R,KACArN,aAAA1E,EAAAujB,aACA3b,KAAAlY,EAAAuhB,UAAAjR,EAAA6H,MACAjX,SAAAyC,EAAAzC,SACA2hB,YAAAviB,EAAA2S,UAAA3C,EAAAwS,cAAAxS,EAAAyS,oBAIA,OADAhI,GAAAiO,SAAAha,GACAA,EAGA,OAAAxK,KAAA,gBAIA,OAAAA,KAAA,wBAAAb,EAAAsR,cAIAnU,YAAA,SAAA6C,GAEA,GAAAsL,KAEA,IAAA,MAAAtL,OAEA,CASA,IARAA,EAAAsR,YAAAtR,EAAAm3B,eAAAt5B,KACAmC,EAAAsR,WAAAtR,EAAAm3B,cAGA,UAAAn3B,EAAAsR,aACAtR,EAAAsR,WAAA,QAGAtR,EAAAsR,aAAAzT,GAAA,CACA,GAAA6U,GAAA7U,EAAAmC,EAAAsR,WAEAhG,GAAA,mBAAA,KACAA,EAAA,+BAAA,KAEAA,EAAAoH,EAAA8L,SAAAjc,EAAAic,QACA,gBAAA9L,KACApH,EAAAoH,EAAA4C,cAAA/S,EAAA+S,cAEA,kBAAA5C,KACApH,EAAAoH,EAAA8C,gBAAAjT,EAAA+S,cAGA,cAAA5C,KACApH,EAAAoH,EAAAkB,YAAArR,EAAAqR,YAGA,aAAAlB,KACApH,EAAAoH,EAAAqnB,WAAAx3B,EAAAw3B,WAGA,YAAArnB,KACApH,EAAAoH,EAAAyd,UAAA5tB,EAAA4tB,UAGA,UAAAzd,KACApH,EAAAoH,EAAA+f,QAAAlwB,EAAAkwB,QAGA,UAAA/f,KACApH,EAAAoH,EAAA8f,QAAAjwB,EAAAiwB,QAGA,YAAA9f,KACApH,EAAAoH,EAAAwE,UAAA3U,EAAA2U,cAGA,IAAA,UAAAlX,EAAAsR,YAAA,UAAAtR,EAAA6E,SAAA,CACA,GAAA4zB,GAAA,uBAAAz4B,EAAAiW,YAAA,SACA3K,GAAAmtB,GAAA,IACA,IAAAE,GAAA,4BAAA34B,EAAAiW,YAAA,YACA3K,GAAAqtB,GAAA,KACAA,EAAA,4BAAA34B,EAAAiW,YAAA,aACA3K,EAAAqtB,GAAA,SAEA,UAAA34B,EAAA6E,QAGA7E,GAAAzC,WACA+N,EAAAtL,EAAAzC,SAAA,WAAA,MAIA,MAAA+N,KAzdA1P,QAAAC,OAAA,SAAAgyB,QAAA,oBACA,QAAA,QAAA,UAAA,cAAA,cAAA,oBAAA,aAAA,eAAA,eAAA,SAAApxB,OCJA,WACA,YAGA,SAAAC,GAAAD,GAGA,OACAiB,YAAA,SAAAsF,EAAApB,GACA,GAAAnE,KAQA,OAPA7B,SAAAyB,QAAAuE,EAAA/D,MAAA,SAAAmC,EAAAwJ,GACA,GAAA6B,GAAA5O,EAAAiP,WAAA1L,EACAqL,IACA5N,EAAAmD,KAAAyK,KAIA5N,GAGAN,YAAA,SAAAyE,GAEA,GAAAo4B,KAUA,OATAp+B,SAAAyB,QAAAuE,EAAA/D,MAAA,SAAAmC,EAAAi6B,GAEA,GAAA3uB,GAAA7O,EAAAU,YAAA6C,EAEApE,SAAAyB,QAAAiO,EAAA,SAAA1D,EAAA4B,GACAwwB,EAAAxwB,GAAA5B,MAIAoyB,IA7BAp+B,QAAAC,OAAA,SAAAgyB,QAAA,eAAA,mBAAAnxB,OCHA,WACA,YAIA,SAAAH,GAAA6a,EAAAvZ,EAAAjB,GAEA,OACA8K,aACAxJ,KAAA,SAAA2C,KAAA,SAAAq5B,WAAA,SAAAjV,UAAA,EAAAE,SAAA,EAAAL,WAAA,EAAA/b,YAAA,IAAAhB,OAAA,IACA7J,KAAA,UAAA2C,KAAA,UAAAq5B,WAAA,YAAAnxB,YAAA,IAAA2I,YAAA,EAAA3J,OAAA,EAAAoyB,eAAA,EAAA,KACAj8B,KAAA,SAAA2C,KAAA,SAAAq5B,WAAA,YAAAnxB,YAAA,IAAA2I,YAAA,EAAA3J,OAAA,EAAAoyB,eAAA,EAAA,EAAA,EAAA,EAAA,KACAj8B,KAAA,cAAA2C,KAAA,cAAAq5B,WAAA,YAAA/U,SAAA,EAAApd,OAAA,EAAA2J,YAAA,EAAAyoB,eAAA,EAAA,EAAA,MACAj8B,KAAA,QAAA2C,KAAA,QAAAq5B,WAAA,QAAAnyB,OAAA,EAAA2J,YAAA,EAAAyoB,eAAA,EAAA,EAAA,MACAj8B,KAAA,iBAAA2C,KAAA,iBAAAq5B,WAAA,OAAA/U,SAAA,EAAApd,OAAA,EAAA2J,YAAA,EAAAyoB,eAAA,MACAj8B,KAAA,kBAAA2C,KAAA,kBAAAq5B,WAAA,OAAA/U,SAAA,EAAApd,OAAA,GAAA2J,YAAA,GAAAyoB,eAAA,MACAj8B,KAAA,qBAAA2C,KAAA,qBAAAq5B,WAAA,SAAA/U,SAAA,EAAApc,YAAA,MAAAhB,OAAA,GAAA2J,YAAA,GAAAyoB,eAAA,MACAj8B,KAAA,oBAAA2C,KAAA,oBAAAq5B,WAAA,SAAAjV,UAAA,EAAAE,SAAA,EAAApc,YAAA,IAAAhB,OAAA,EAAA2J,YAAA,GAAAyoB,eAAA,MACAj8B,KAAA,WAAA2C,KAAA,WAAAq5B,WAAA,WAAA/U,SAAA,EAAApc,YAAA,MAAAhB,OAAA,GAAA2J,YAAA,GAAAyoB,eAAA,GAAA,MACAj8B,KAAA,UAAA2C,KAAA,UAAAq5B,WAAA,OAAAnxB,YAAA,IAAAhB,OAAA,EAAA2J,YAAA,EAAAoT,WAAA,EAAAqV,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,MACAj8B,KAAA,UAAA2C,KAAA,UAAAq5B,WAAA,UAAApV,WAAA,EAAAK,SAAA,IACAjnB,KAAA,OAAA2C,KAAA,OAAAq5B,WAAA,OAAAnxB,YAAA,IAAAhB,OAAA,EAAA2J,YAAA,EAAAyT,SAAA,EAAAL,WAAA,EAAAqV,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,MACAj8B,KAAA,SAAA2C,KAAA,SAAAq5B,WAAA,QAAAC,eAAA,IAAAhV,SAAA,EAAAL,WAAA,IACA5mB,KAAA,SAAA2C,KAAA,SAAAu5B,WAAA,WACAl8B,KAAA,SAAA2C,KAAA,SAAAu5B,WAAA,WAGA9yB,OAAA,SAAAzG,GACA,GAAAiG,GAAA,IAOA,OANAlL,SAAAyB,QAAAW,KAAA0J,WAAA,SAAAL,EAAA9D,GACA8D,EAAAxG,MAAAA,IACAiG,EAAAO,KAIAP,GAGAif,OAAA,SAAAllB,GACA,GAAAiG,GAAA,IAOA,OANAlL,SAAAyB,QAAAW,KAAA0J,WAAA,SAAAL,EAAA9D,GACA8D,EAAAnJ,MAAA2C,IACAiG,EAAAO,KAIAP,GAGA4T,SAAA,SAAA7Z,GACA,GAAAiI,GAAA9K,KAAAsJ,OAAAzG,EACA,IAAAiI,GAAA,cAAAA,GAAA,CACA,GAAAhC,KACAlL,SAAAyB,QAAAQ,EAAA,SAAAm5B,EAAAqD,GACArD,EAAA30B,MAAAyG,EAAAoxB,YAAApzB,IACAkwB,EAAAn5B,OAAAm5B,EAAAsD,SACAljB,EAAAmjB,UAAAvD,GAIAlwB,EADAkwB,EAAAn5B,MACAiJ,EAAA1C,OAAA4yB,EAAAn5B,OAGA,OAKA,IAAA28B,KACA,IAAA1zB,EAAA,CACA,GAAA/J,GAAAiB,IACApC,SAAAyB,QAAAyJ,EAAA,SAAA9G,EAAAuD,IACAvD,EAAA6E,UAAAiE,EAAAjI,MACA9D,EAAA09B,aAAA3xB,EAAA9I,EAAAA,EAAAkF,SAEAlF,EAAA6E,SAAAhE,EACA25B,EAAA55B,KAAAZ,MAKA,MAAAw6B,GAGA,MAAA,OAIAC,aAAA,SAAA3xB,EAAA9I,EAAA06B,GAEA,GAAA16B,EAAAsR,aAAAzT,IAAAA,EAAAmC,EAAAsR,YAAAjP,MAAAyG,EAAAoxB,WACA,OAAA,CAGA,IAAAl6B,EAAA0S,UAAA5J,EAAAjI,KACA,OAAA,CAGA,IAAAiI,EAAAqxB,eAEA,IAAA,GAAAz5B,GAAA,EAAAA,EAAAoI,EAAAqxB,cAAAx5B,SAAAD,EACA,GAAAoI,EAAAqxB,cAAAz5B,IAAAV,EAAAqR,cAAAqpB,GAAA5xB,EAAAqxB,cAAAz5B,IAAAg6B,EAAAxK,aAAA,CAEA,GAAA,SAAAlwB,EAAAsR,WACA,MAAAtR,GAAA06B,SAAA,GAAAA,EAAAlmB,MAAAxU,EAAAuU,MAAA,GAAAvU,EAAAuU,KAAA/P,GACA,qBAAAsE,EAAAjI,KAGA,sBAAAiI,EAAAjI,IAGA,IAAA,OAAAb,EAAAsR,WAAA,CACA,GAAAqpB,GAAA/9B,EAAAkX,KAAAjW,EAAA+8B,IAAApI,OAAA,KAAAxyB,EAAAwE,GACA,IAAAm2B,EAAAh6B,OAAA,EAEA,MAAA,IAAAg6B,EAAA,GAAAjc,KACA,kBAAA5V,EAAAjI,KAEA,GAAA85B,EAAA,GAAAjc,MACA,mBAAA5V,EAAAjI,KAQA,OAAA,OAIA,IAAAb,EAAAsR,aAAAzT,GACA,MAAAA,GAAAmC,EAAAsR,YAAAjP,MAAAyG,EAAAoxB,UAGA,QAAA,GAGA96B,KAAA,SAAAyB,EAAAwsB,GACA,GAAAvkB,GAAA9K,KAAAsJ,OAAAzG,EACAiI,IAAA,cAAAA,IACAlN,QAAAyB,QAAAQ,EAAA,SAAAm5B,EAAAqD,GACArD,EAAA30B,MAAAyG,EAAAoxB,YACAlD,EAAA53B,KAAA,aAAAiuB,MAMAkM,gBAAA,SAAAv5B,EAAA06B,GACA,GAAA39B,GAAAiB,IAEApC,SAAAyB,QAAAW,KAAA0J,WAAA,SAAAoB,EAAAvF,GACAxG,EAAA09B,aAAA3xB,EAAA9I,EAAA06B,KACA16B,EAAA6E,SAAAiE,EAAAjI,SAKAa,mBAAA,SAAA7D,GACA,GAAAg9B,KACA,IAAAh9B,EAAA,CACA,GAAAi9B,KACAl/B,SAAAyB,QAAAQ,EAAA,SAAAmC,EAAAuD,GACAvD,IACAA,EAAA6E,WAAAi2B,KACAA,EAAA96B,EAAA6E,cAEAi2B,EAAA96B,EAAA6E,UAAAjE,KAAAZ,MAIApE,QAAAyB,QAAAW,KAAA0J,WAAA,SAAAL,EAAA9D,GAEA,GAAA8D,EAAAxG,OAAAi6B,GAAA,CAEA,GAAAC,GAAAD,EAAAzzB,EAAAxG,MAAAL,KAAA,SAAA2b,EAAA7V,GACA,GAAA,YAAAe,EAAAxG,KAAA,CAEA,GAAAm6B,GAAA7e,EAAApX,cACAi2B,KAAAA,EAAA,EACA,IAAAC,GAAA30B,EAAAvB,cAGA,IAFAk2B,IAAAD,EAAA,GAEAA,GAAAC,EACA,MAAAA,GAAAD,MAGA,CAAA,GAAA,OAAA7e,EAAA7K,YAAA,SAAA6K,EAAA7K,WACA,MAAAhL,GAAAmO,WAAA0H,EAAA1H,UAEA,IAAA,gBAAA0H,IAAA,gBAAA7V,GACA,MAAA6V,GAAA9K,aAAA/K,EAAA+K,aAGA,MAAA8K,GAAAtb,KAAAq6B,cAAA50B,EAAAzF,OAEAg6B,GAAAxzB,EAAAxG,MAAAk6B,MAGAF,GAAAxzB,EAAAxG,WAIAjF,QAAAyB,QAAAQ,EAAA,SAAAmC,EAAAuD,IACAvD,GAAAA,EAAA6E,WAAAg2B,KAEAA,EAAAM,WAAA,KAIA,MAAAN,KAhNAj/B,QAAAC,OAAA,SAAAgyB,QAAA,gBACA,cAAA,QAAA,UAAAtxB,OCJA,WACA,YAKA,SAAA6a,GAAAza,EAAAC,EAAAP,EAAAwB,GAUA,QAAAy7B,GAAA8B,EAAAzuB,EAAAH,EAAA4sB,GAKA,OACAl0B,KAAAyH,EACAsI,UAAAzI,EACAhI,GAAAmI,EAAAnI,GACA40B,WAAAA,EACA9nB,WAAA8pB,EACA3mB,WAAA9H,EAAA+H,WACAyJ,aAAAxR,EAAAqhB,aACA3W,OAAA1K,EAAA+R,KACArN,aAAA1E,EAAAujB,aACA3b,KAAAlY,EAAAuhB,UAAAjR,EAAA6H,MACAY,IAAA,KACAvU,KAAA,KACAU,MAAA,KACA85B,eAAA,KACAx2B,SAAA,KACA0R,QAAA,MAIA,QAAAgkB,GAAA7nB,GAEA,IAAA9V,EAAAY,SAAAkV,EAAA8L,SACA,MAAA,KAGA,KAAA7hB,EAAAa,WACA,MAAA,KAGA,IAAA,gBAAAkV,KAAA9V,EAAAY,SAAAkV,EAAA4C,cACA,MAAA,KAGA,IAAA,kBAAA5C,KAAA9V,EAAAY,SAAAkV,EAAA8C,gBACA,MAAA,KAGA,IAAA3J,IAAA,GAAA/J,OAAA+f,SAEAnP,GAAA7U,QAEA,KAAA,GADAg4B,GAAAj5B,EAAA05B,WAAA5jB,EAAA8L,SACAzD,EAAA,EAAAA,EAAA8a,IAAA9a,EAAA,CACA,GAAAugB,GAAA1+B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,QACAwgB,EAAA3+B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,cACAygB,EAAA5+B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,OAGA,IAAA,GAAAugB,GACA,GAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,GACA,KAAAA,KACA5oB,EAAAqS,UAAAwW,GAAA7oB,EAAAqS,aACArS,EAAAsS,UAAAuW,GAAA7oB,EAAAsS,aACAtS,EAAA+oB,SAAAD,GAAA9oB,EAAA+oB,SAAA,CAEA,GAAAC,GAAA9+B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,kBACA4gB,EAAA/+B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,eACA6gB,EAAAh/B,EAAA+5B,SAAAjkB,EAAA8L,QAAAzD,EAAA,aAGA,IAAA2gB,EAAA,GAAAC,EAAA,GAAAC,EAAA,EAAA,CACA,GAAAjvB,GAAA/P,EAAA8wB,OAAAhb,EAAA8L,QAAAzD,EAEA,IAAA,SAAArI,EAAArQ,KAAA,CAEA,IAAA,GADAw5B,IAAA,EACAn7B,EAAA,EAAAA,EAAAgS,EAAA7U,MAAA8C,SAAAD,EACA,GAAAgS,EAAA7U,MAAA6C,GAAAyd,cAAAxR,EAAAqhB,cACAtb,EAAA7U,MAAA6C,GAAA+T,YAAA9H,EAAA+H,YACAhC,EAAA7U,MAAA6C,GAAAuU,WAAAvC,EAAA7U,MAAA6C,GAAAuU,UAAAM,aAAAqmB,EAAA,CACAC,GAAA,CACA,OAIA,GAAAA,EACA,SAIA,GAAA/mB,KACA8mB,GAAA,GAAA,gBAAAlpB,KACAoC,EAAAlY,EAAAkX,KAAApB,EAAA4C,aAAA,cAAAsmB,IAEA9mB,EAAAnU,QAAA,kBAAA+R,KACAoC,EAAAlY,EAAAkX,KAAApB,EAAA8C,eAAA,cAAAomB,IAIA,IAAAE,GAAAhnB,EAAAnU,MACA,IAAAm7B,EAGA,CAEA,IAAA,GADA1C,GAAA,EACA5sB,EAAA,EAAAA,EAAAsvB,IAAAtvB,EACA4sB,GAAAtkB,EAAAtI,GAAAmlB,cAGA,KAAA,GAAAnlB,GAAA,EAAAA,EAAAsvB,IAAAtvB,EAAA,CAGA,IAAA,GADAgG,IAAA,EACAupB,EAAA,EAAAA,EAAAvvB,IAAAuvB,EACA,GAAAC,EAAAlnB,EAAAtI,GAAAsI,EAAAinB,IAAA,CACAvpB,GAAA,CACA,OAIA,IAAAA,EAAA,CACA,IAAA,GAAAupB,GAAAvvB,EAAA,EAAAuvB,EAAAD,IAAAC,EACAC,EAAAlnB,EAAAtI,GAAAsI,EAAAinB,MACAjnB,EAAAtI,GAAAmlB,gBAAA7c,EAAAinB,GAAApK,eAIAjf,GAAA7U,MAAA+C,KAAA04B,EAAA5mB,EAAA7R,KAAA8L,EAAAmI,EAAAtI,GAAA4sB,UAzBA1mB,GAAA7U,MAAA+C,KAAA04B,EAAA5mB,EAAA7R,KAAA8L,EAAA,KAAA,MAiCA,GAAAsvB,IAAA,GAAAn6B,OAAA+f,UACAqa,EAAAD,EAAApwB,CACAyL,SAAAC,IAAA,mBAAA2kB,EAAA,IAAA,SAAAxpB,EAAA7R,MAGA,QAAAm7B,GAAAG,EAAAC,GAIA,IAFA,GAAA17B,GAAA,EACAgM,EAAA,IACA,CACA,GAAA2vB,GAAA,QAAA37B,EACA47B,EAAA,QAAA5vB,CAWA,IATA,KAAAyvB,EAAAE,KACA37B,IACA27B,EAAA,QAAA37B,GAEA,KAAA07B,EAAAE,KACA5vB,IACA4vB,EAAA,QAAA5vB,KAGA2vB,IAAAF,IAAAG,IAAAF,IACA,OAAA,CAGA,MAAAC,IAAAF,IACA,OAAA,CAEA,MAAAG,IAAAF,IACA,OAAA,CAGA,IAAAD,EAAAE,QAAAD,EAAAE,OACA,OAAA,CAGA,MAAAH,EAAAE,IAAA,GAAAD,EAAAE,IAAA,GACA,OAAA,CAGA,IAAAH,EAAAE,IAAAD,EAAAE,GACA,OAAA,CAGA,IAAAC,GAAA,QAAA77B,EAAA,QACA87B,EAAA,QAAA9vB,EAAA,OACA,IAAAyvB,EAAAI,IAAAH,EAAAI,GACA,OAAA,IAGA97B,GAIA,QAAA2kB,GAAArlB,GAEA,GAAAA,EAAAkF,KAAA,CACA,GAAAyH,GAAA3M,EAAAkF,KACAsH,EAAAxM,EAAAiV,SAUA,IARA,MAAAjV,EAAAa,OACAb,EAAAa,KAAAlE,EAAA2S,UAAA3C,EAAAwH,OAAAxH,EAAAyH,eAGApU,EAAA0I,aAAAiE,EAAAmhB,WAAA,IACA9tB,EAAA0I,YAAAiE,EAAAmhB,YAGA,MAAA9tB,EAAAuB,MAAA,CACA,GAAAA,GAAAlF,EAAA6W,SAAAvG,EACA,IAAAH,EAAA,CACA,GAAA2I,GAAA9Y,EAAA6W,SAAA1G,EACAjL,GAAAlF,EAAAgI,WAAA9C,EAAA4T,GAGAnV,EAAAuB,MAAAA,EAGAoL,EAAAqjB,UAAAhwB,EAAAy8B,UACAz8B,EAAAy8B,QAAA9vB,EAAAqjB,SAGA,MAAAhwB,EAAA08B,YACA18B,EAAAiO,KAAAtB,EAAA2H,eACAtU,EAAAiO,MAAA,SAAAjO,EAAAsR,aACAtR,EAAAiO,KAAA,QAIAtB,EAAA6N,YAAAxa,EAAA2T,gBACA3T,EAAA2T,cAAAhH,EAAA6N,WAGAhO,IACAxM,EAAAoV,IAAA5I,EAAAhI,GAEA,OAAAxE,EAAAq7B,iBACAr7B,EAAAq7B,eAAAsB,EAAAnwB,EAAAxM,EAAAo5B,oBAIAp5B,GAAAkF,WACAlF,GAAAiV,WAIA,QAAA0nB,GAAAnwB,EAAA4sB,GAEA,GAAA5sB,GAAAA,EAAAmlB,eAAA,GAAA,GAAAyH,EAAA,CACA,GAAAwD,GAAAh6B,KAAAC,MAAA2J,EAAAmlB,eAAAyH,EAAA,IAAA,KAAA,GACA,IAAA,KAAAwD,EACA,MAAAA,GAAA,IAIA,MAAA,MAGA,QAAAtiB,GAAAta,GAEA,GAAAzC,GAAA,KACAmV,EAAA7U,EAAAmC,EAAAsR,WAYA,IAVAtR,EAAAzC,UAAAX,EAAAY,SAAAwC,EAAAzC,SAAA,qBACAA,EAAAyC,EAAAzC,SAAA,oBAEAyC,EAAAzC,UAAAX,EAAAY,SAAAwC,EAAAzC,SAAA,WACAA,EAAAyC,EAAAzC,SAAA,UAEAmV,GAAA9V,EAAAY,SAAAkV,EAAA8L,WACAjhB,EAAAmV,EAAA8L,SAGAjhB,EAAA,CACA,GAAA0d,GAAAre,EAAAkX,KAAAvW,EAAA,KAAAyC,EAAAwE,GACA,IAAAyW,GAAAA,EAAAta,OAAA,EACA,MAAAsa,GAAA,GAIA,SAGA,QAAArC,GAAAjM,GACA,MAAAA,IAIAnI,GAAAmI,EAAAnI,GACA3D,KAAAlE,EAAA2S,UAAA3C,EAAAwH,OAAAxH,EAAAyH,aACAG,KAAAlY,EAAAuhB,UAAAjR,EAAA6H,MACAvG,KAAAtB,EAAA2H,eACAG,WAAA9H,EAAA+H,WACAnX,SAAAoP,EAAApP,aA5TA,OACAg9B,UAAAA,EACAlV,SAAAA,EACAiU,WAAAA,EACAhf,YAAAA,EACA1B,gBAAAA,GAVAhd,QAAAC,OAAA,SAAAgyB,QAAA,eACA,eAAA,UAAA,cAAA,QAAAzW,OCJA,WACA,YAIA,SAAAvZ,GAAAlB,EAAAC,EAAA2F,GA2JA,QAAAnD,GAAArB,EAAAsvB,GACA,GAAA/b,GAAAtT,IACAsT,GAAAgpB,SAAA,EAEAhpB,EAAAzT,MACAwvB,KAIA1wB,EAAAyC,KAAArB,EAAA,WAAA8+B,EAAAvrB,EAAA+b,KACAzwB,EAAAwC,KAAAkS,EAAAkN,QAAAjc,EAAAic,QAAAzgB,EAAA,WAAA8+B,EAAAvrB,EAAA+b,KACA,gBAAA/b,IACA1U,EAAAwC,KAAAkS,EAAAgE,aAAA/S,EAAA+S,aAAAvX,EAAA,WAAA8+B,EAAAvrB,EAAA+b,KAEA,kBAAA/b,IACA1U,EAAAwC,KAAAkS,EAAAkE,eAAAjT,EAAA+S,aAAAvX,EAAA,WAAA8+B,EAAAvrB,EAAA+b,KAEA,UAAA/b,IACA1U,EAAAwC,KAAAkS,EAAAkhB,OAAAjwB,EAAAiwB,OAAAz0B,EAAA,WAAA8+B,EAAAvrB,EAAA+b,KAGAwP,EAAAvrB,EAAA+b,IAIA,QAAAwP,GAAAvrB,EAAA+b,IACA1wB,EAAAa,aACAZ,EAAAY,SAAA8T,EAAAkN,UACA,gBAAAlN,KAAA1U,EAAAY,SAAA8T,EAAAgE,eACA,kBAAAhE,KAAA1U,EAAAY,SAAA8T,EAAAkE,iBACA,UAAAlE,KAAA1U,EAAAY,SAAA8T,EAAAkhB,UAEAnF,IACA/b,EAAAgpB,SAAA,GA1LA,GAAAwC,IAEA5gC,OACAsiB,QAAA,oCACAnc,KAAA,SACA0iB,SAAA,EACA0W,QAAA,GAGAsB,MACAve,QAAA,0CACAlJ,aAAA,kCACAE,eAAA,yCACA0B,SAAA,iDACA7U,KAAA,QACA0iB,SAAA,GACA0W,QAAA,GAEAuB,MACAxe,QAAA,sCACAnc,KAAA,WACAiT,aAAA,+CACAyP,SAAA,GACA0W,QAAA,GAEAb,KACApc,QAAA,yCACAlJ,aAAA,8CACAE,eAAA,yCACA5B,WAAA,4CACA4e,OAAA,oCACAnwB,KAAA,OACA0iB,SAAA,GACA0W,QAAA,GAEAwB,OACAze,QAAA,mCACAlJ,aAAA,wCACAjT,KAAA,SACA0iB,SAAA,GACA0W,QAAA,GAEA59B,OACA2gB,QAAA;AACA2R,SAAA,8BACA4J,UAAA,+BACAnmB,WAAA,gCACA0B,aAAA,kCACAmd,OAAA,gCACApwB,KAAA,YACA0iB,SAAA,GACA0W,QAAA,GACAyB,IACA1e,QAAA,uCACA2R,SAAA,wCACA4J,UAAA,yCACAnmB,WAAA,gCACA0B,aAAA,kCACA4B,SAAA,iDACAub,OAAA,gCACApwB,KAAA,YACA0iB,SAAA,GACA0W,QAAA,GACA0B,MACA3e,QAAA,oCACA2R,SAAA,qCACA4J,UAAA,sCACAnmB,WAAA,uCACA0B,aAAA,yCACAmd,OAAA,gCACApwB,KAAA,YACA0iB,SAAA,GACA0W,QAAA,GACA2B,OACA5e,QAAA,iCACA2R,SAAA,kCACA4J,UAAA,mCACAnmB,WAAA,gCACA6e,OAAA,gCACApwB,KAAA,YACA0iB,SAAA,GACA0W,QAAA,GAEA4B,OACA7e,QAAA,wCACA2R,SAAA,yCACA4J,UAAA,0CACAtH,OAAA,qCACApwB,KAAA,OACA0iB,SAAA,EACA0W,QAAA,GACA6B,OACA9e,QAAA,wCACA2R,SAAA,yCACA4J,UAAA,0CACAtH,OAAA,qCACApwB,KAAA,OACA0iB,SAAA,EACA0W,QAAA,GACA8B,OACA/e,QAAA,wCACA2R,SAAA,yCACA4J,UAAA,0CACAtH,OAAA,qCACApwB,KAAA,OACA0iB,SAAA,EACA0W,QAAA,GACA+B,MACAhf,QAAA,kCACA2R,SAAA,mCACA4J,UAAA,oCACAtH,OAAA,qCACApwB,KAAA,OACA0iB,SAAA,EACA0W,QAAA,GACAgC,OACAjf,QAAA,mCACA2R,SAAA,oCACA4J,UAAA,qCACAtH,OAAA,qCACApwB,KAAA,OACA0iB,SAAA,EACA0W,QAAA,GACAiC,OACAlf,QAAA,qCACA2R,SAAA,qCACAsC,OAAA,qCACApwB,KAAA,QACA0iB,SAAA,EACA0W,QAAA,GACAkC,SACAnf,QAAA,8BACAnc,KAAA,UACA0iB,SAAA,EACA0W,QAAA,GAgBA,OAXA7/B,SAAAyB,QAAAy/B,EAAA,SAAAxrB,EAAA9H,GACA8H,EAAAzQ,KAAA2I,EACA8H,EAAAgpB,SAAA,EACAhpB,EAAAzT,MAAA,KACAyT,EAAAlS,KAAAA,EACAkS,EAAA1F,MAAA,WACA0F,EAAAzT,MAAA,KACAyT,EAAAgpB,SAAA,KAIAwC,EA1JAlhC,QAAAC,OAAA,SAAAgyB,QAAA,SACA,eAAA,UAAA,oBAAAhwB,OCJA,WACA,YAGA,SAAAyE,GAAA1F,EAAAD,EAAA4F,GAEA,GAAAhF,GAAA,kBACA03B,EAAA1yB,EAAAmwB,OAEA,QACAn1B,SAAAA,EACA0gB,QAAA,KAEAzgB,SAAA,WACA,MAAAZ,GAAAY,SAAAD,IAGA64B,kBAAA,WACA,MAAAx5B,GAAAw5B,kBAAA74B,IAGA6B,KAAA,SAAArB,EAAAsvB,GACAzwB,EAAAwC,KAAA7B,EAAA03B,EAAAl3B,EAAA,WACAsvB,OAIAzhB,MAAA,WACA5N,KAAAigB,QAAA,KACArhB,EAAAgP,MAAArO,IAGAgM,aAAA,WACA,GAAAjH,MACAs7B,EAAA5/B,KAAAkgB,YACA,IAAA0f,EAEA,IAAA,GADA/H,GAAA+H,EAAAj9B,OACAoa,EAAA,EAAAA,EAAA8a,IAAA9a,EACA,GAAA6iB,EAAA7iB,GAAApO,EAAAimB,WAAAgL,EAAA7iB,GAAApO,EAAAsd,QAAA,GACA3nB,EAAA1B,KAAAg9B,EAAA7iB,GAKA,OAAAzY,IAGAomB,YAAA,WACA,GAAA5hB,MACA+2B,KAEA/F,EAAA95B,IASA,OARApC,SAAAyB,QAAAW,KAAAuL,eAAA,SAAA5K,EAAA6K,GACAq0B,EAAA/F,EAAA/Q,eAAApoB,IAAAA,IAGA/C,QAAAyB,QAAAwgC,EAAA,SAAAl/B,EAAAyf,GACAtX,EAAAlG,KAAAwd,KAGAtX,GAGAoX,WAAA,WACA,GAAA,MAAAlgB,KAAAigB,SAAAjgB,KAAAR,YAAAb,EAAAa,WAAA,CAIA,IAAA,GAHA8E,MACA4C,EAAAtI,EAAAoc,QAAAzb,GACAs4B,EAAA3wB,EAAAvE,OACAoa,EAAA,EAAAA,EAAA8a,IAAA9a,EACAzY,EAAAA,EAAA3B,QAAA3C,KAAA8/B,UAAA54B,EAAA6V,GAGA/c,MAAAigB,QAAA3b,EAEA,MAAAtE,MAAAigB,SAGA7R,QAAA,SAAA5H,GACA,GAAAU,GAAAlH,KAAAkgB,YACA,IAAAhZ,EAEA,IAAA,GADA2wB,GAAA3wB,EAAAvE,OACAoa,EAAA,EAAAA,EAAA8a,IAAA9a,EACA,GAAA7V,EAAA6V,GAAAvW,IAAAA,EACA,MAAAU,GAAA6V,IAMA+iB,UAAA,SAAAnxB,GACA,GAAAC,GAAA5O,IACA,QACA2O,EAAAA,EACAnI,GAAAmI,EAAAnI,GACA3D,KAAAlE,EAAA2S,UAAA3C,EAAAgmB,SACAvN,WAAA,SAAAnM,GACA,MAAArM,GAAAwY,WAAAzY,EAAAsM,MAKAmM,WAAA,SAAAzY,EAAAsM,GACA,GAAA,GAAAA,EAAA,OAAA,CACA,IAAAtM,EAAAnI,IAAAyU,EACA,OAAA,CAGA,IAAA8kB,GAAApxB,EAAAmmB,SAEA,KAAAiL,EAAA,OAAA,CACA,IAAAA,GAAA9kB,EAAA,OAAA,CAEA,IAAA+kB,GAAAhgC,KAAAoO,QAAA2xB,EACA,SAAAC,GACAhgC,KAAAonB,WAAA4Y,EAAArxB,EAAAsM,IAMA8N,eAAA,SAAApoB,GACA,GAAAX,KAAAR,WAAA,CACA,GAAAogC,GAAA5/B,KAAAkgB,YACA,IAAA0f,EAEA,IAAA,GADA/H,GAAA+H,EAAAj9B,OACAoa,EAAA,EAAAA,EAAA8a,IAAA9a,EACA,GAAA6iB,EAAA7iB,GAAAvW,IAAA7F,EAAAgO,EAAAkmB,UAAA,GAAA+K,EAAA7iB,GAAApO,EAAAic,YACA,MAAAgV,GAAA7iB,GAAApO,EAAAic,YAMA,MAAA,QAlIAhtB,QAAAC,OAAA,SAAAgyB,QAAA,QAAA,UAAA,eAAA,oBAAAvrB,OCHA,WACA,YAIA,SAAA0d,GAAAlkB,EAAAmiC,EAAA5hC,GA2BA,QAAA+C,KACAkY,QAAAC,IAAA,QACA2mB,SAAAC,eACAC,OAAA,0CACAC,WAAA,4BACAC,YAAA,mCACAC,cAAA,0BAIA,QAAA5c,KACA,MAAAsc,GAAA,SAAAO,EAAAC,GACA,GAAAC,GAAAR,SAAAQ,MAEAA,GAAAC,mBAAA,SAAArd,GACA,MAAAA,GACAhK,QAAAC,IAAA,eACAzb,EAAAiU,SAAAqoB,KAAA,eAGA9gB,QAAAC,IAAA,aACAinB,EAAAld,QAMA,QAAAF,GAAAT,GAEA,MADArJ,SAAAC,IAAA,eACA0mB,EAAA,SAAAO,EAAAC,GACAP,SAAAU,WAAAC,IAAA,WAAAle,GAAAme,KAAA,QAAA,SAAAC,GAEAP,EADAO,EACAA,EAAA5I,cASA,QAAA9yB,GAAAsd,EAAAhjB,GAEA,MADA2Z,SAAAC,IAAA,aACA0mB,EAAA,SAAAO,EAAAC,GACAP,SAAAU,WAAAC,IAAA,UAAAle,EAAA,IAAAqe,EAAArhC,IAAAmhC,KAAA,QAAA,SAAAC,GAEAP,EADAO,EACAE,EAAAF,EAAA5I,eASA,QAAAvU,GAAAZ,GACA,MAAAid,GAAA,SAAAO,EAAAC,GACA,GAAAnd,GAAA4d,EAAA3d,SACAD,KACAN,EAAAplB,QAAAkkB,KAAAkB,GACAme,EAAAne,GAAA,GACAkd,SAAAU,WAAAC,IAAA,WAAAvd,EAAAX,KAAAye,IAAApe,GAAAd,KAAAse,MAKA,QAAAtd,GAAAP,GAEA,MADArJ,SAAAC,IAAA,cACA0mB,EAAA,SAAAO,EAAAC,GACAnnB,QAAAC,IAAA,kBACA2mB,SAAAU,WAAAC,IAAA,UAAAle,GAAAme,KAAA,QAAA,SAAA3d,GACA,GAAAA,EAAA,CACA,GAAAra,MACAqvB,EAAAhV,EAAAgV,KACA,KAAA,GAAAx4B,KAAAw4B,GACArvB,EAAAnJ,GAAAshC,EAAA9I,EAAAx4B,GAEA6gC,GAAA13B,OAGA03B,WAMA,QAAAve,GAAAthB,GAEA,MADA2Y,SAAAC,IAAA,oBACA0mB,EAAA,SAAAO,EAAAC,GACAnnB,QAAAC,IAAA,iBAAA5Y,EAAA6F,IACA05B,SAAAU,WAAAC,IAAA,cAAAlgC,EAAA6F,IAAAs6B,KAAA,QAAA,SAAA3e,GACA7I,QAAAC,IAAA,MAEAinB,EADAre,EACAA,EAAAgW,cASA,QAAAkJ,GAAAjiC,GAEAA,EAAAS,OACAsU,EAAAM,KAAArV,EAAAS,MAAA,SAAAmC,SACAA,GAAAiG,WAIA,IAAAq5B,GAAA1xB,KAAAC,UAAAzQ,EACA,OAAA0Q,UAAAC,gBAAAuxB,GAGA,QAAAL,GAAAM,GACA,GAAAD,GAAAxxB,SAAA0xB,oBAAAD,GACAniC,EAAAwQ,KAAA6xB,MAAAH,EAgBA,OAdAliC,GAAAS,OACAsU,EAAAM,KAAArV,EAAAS,MAAA,SAAAmC,GACAA,EAAAiG,UAAAjG,EAAAuB,MAEAvB,EAAAgG,kBAAAhG,EAAAgG,iBAAArF,SACAX,EAAAiG,UAAA5J,EAAAgI,WAAArE,EAAAgG,iBAAAhG,EAAAiG,YAGAjG,EAAA2W,YAAA3W,EAAA2W,WAAAhW,SACAX,EAAAiG,UAAA5J,EAAAgI,WAAArE,EAAA2W,WAAA3W,EAAAiG,cAKA7I,EAGA,QAAA0kB,GAAAnkB,EAAAP,GACA,GAAAkkB,GAAA4d,EAAA3d,UACAme,IACA,IAAApe,IACAlkB,EAAAxB,QAAAkkB,KAAA1iB,GACA+hC,EAAA/hC,GAAA,GAEAsiC,EAAA9+B,KACAs9B,SAAAU,WAAAC,IAAA,UAAAvd,EAAAX,IAAA,IAAAqe,EAAArhC,IAAAyhC,IAAAC,EAAAjiC,KAGAA,EAAAuB,KAAAvB,EAAAuB,IAAA6F,IAAA,CACA8S,QAAAC,IAAA,eAEA,IAAArS,KACA9H,GAAAqB,cACAyG,EAAAy6B,IAAAviC,EAAAqB,aAEArB,EAAA+O,SACAjH,EAAAiH,OAAA/O,EAAA+O,QAEA/O,EAAA2jB,QACA7b,EAAA6b,MAAA3jB,EAAA2jB,OAEA3jB,EAAA6kB,QACA/c,EAAA+c,MAAA7kB,EAAA6kB,OAGAkd,EAAAj6B,GAAA,GAEAw6B,EAAA9+B,KACAs9B,SAAAU,WAAAC,IAAA,cAAAzhC,EAAAuB,IAAA6F,GAAA,IAAA8c,EAAAX,IAAA,IAAAqe,EAAArhC,IAAAyhC,IAAAl6B,IAIA,MAAA+4B,GAAA2B,IAAAF,GAGA,QAAAP,GAAAU,EAAAC,GACA,IAAA,GAAAp/B,KAAAm/B,GACAE,SAAAF,EAAAn/B,SACAm/B,GAAAn/B,GACAo/B,GAAA,gBAAAD,GAAAn/B,IACAy+B,EAAAU,EAAAn/B,GAAAo/B,GAKA,QAAAtd,KACA,GAAAkc,GAAAR,SAAAQ,MACA,OAAAT,GAAA,SAAAO,EAAAC,GACAC,EAAAlc,UAAAtC,KAAA,WACAse,KACA,SAAAhG,GACAiG,QAKA,QAAAvc,GAAAzhB,GACA,GAAAi+B,GAAAR,SAAAQ,OACApd,EAAA4d,EAAA3d,SAEA,OAAA0c,GAAA,SAAAO,EAAAC,GAEA,GAAAuB,IACA9B,SAAAU,WAAAC,IAAA,UAAAvd,EAAAX,KAAAqL,SACAkS,SAAAU,WAAAC,IAAA,WAAAvd,EAAAX,KAAAqL,SACAkS,SAAAU,WAAAC,IAAA,WAAAvd,EAAAX,KAAAqL,UAEAiU,IACA,KAAA,GAAAtiC,KAAA8C,GACAA,EAAA9C,GAAAgB,KACAshC,EAAAr/B,KAAAH,EAAA9C,GAAAgB,IAAA6F,GAIAy7B,GAAA9tB,EAAA0Q,KAAAod,GACA9tB,EAAAM,KAAAwtB,EAAA,SAAAz7B,GACAw7B,EAAAp/B,KACAs9B,SAAAU,WAAAC,IAAA,cAAAr6B,EAAA,IAAA8c,EAAAX,KAAAqL,YAIAiS,EAAA2B,IAAAI,GAAA9f,KAAA,WACA5I,QAAAC,IAAA,gBACA+J,EAAAA,YAAApB,KAAA,WACA5I,QAAAC,IAAA,gBACAmnB,EAAAlc,UAAAtC,KAAA,WACA5I,QAAAC,IAAA,cACAinB,KACA,SAAAhG,GACAiG,YAOA,QAAAvb,GAAAvlB,EAAAP,GAEA,GAAA4iC,MACA1e,EAAA4d,EAAA3d,SAWA,OAVAD,KACA0e,EAAAp/B,KACAs9B,SAAAU,WAAAC,IAAA,UAAAvd,EAAAX,IAAA,IAAAqe,EAAArhC,IAAAquB,UAEA5uB,EAAAuB,KACAqhC,EAAAp/B,KACAs9B,SAAAU,WAAAC,IAAA,cAAAzhC,EAAAuB,IAAA6F,GAAA,IAAA8c,EAAAX,IAAA,IAAAqe,EAAArhC,IAAAquB,WAIAiS,EAAA2B,IAAAI,GAGA,QAAAhB,GAAArhC,GACA,MAAAA,GAAAqU,QAAA,eAAA,IAtRAsF,QAAAC,IAAA,uBAEA,IAAA2nB,IACAvd,MAAAA,EACAJ,QAAA,WACA,MAAA2c,UAAAQ,OAAAwB,aAEA1d,QAAAA,EACAN,cAAAA,EAEAhB,cAAAA,EACAgC,YAAAA,EACApB,UAAAA,EACAze,SAAAA,EACA4c,eAAAA,EAEAmB,WAAAA,EACAQ,YAAAA,EAEAod,eAAAA,EAKA,OAFA5/B,KAEA8/B,EA3BAtjC,QAAAC,OAAA,SAAAgyB,QAAA,iBAAA,UAAA,KAAA,cAAA7N,OCHA,WACA,YAGA,SAAAtV,GAAA9N,EAAAD,EAAA4F,EAAAhG,EAAA6a,EAAA9U,EAAAjG,GAkfA,QAAAsD,GAAAkL,GAEA,IAAA,GADA7K,GAAA,KACA2M,EAAA,EAAAA,EAAA9B,EAAAlK,SAAAgM,EACA9B,EAAA8B,GAAAwf,IAAAgU,aACAngC,EAAA6K,EAAA8B,GAAA/E,MAIA,KAAA,GAAA+E,GAAA,EAAAA,EAAA9B,EAAAlK,SAAAgM,EACA9B,EAAA8B,GAAAwf,IAAAiU,WACAv1B,EAAA8B,GAAAwf,IAAAiU,UAAAv1B,EAAA8B,GAAA/E,MAAApD,GAAAxE,EAIA,OAAAA,GAGA,QAAAqgC,GAAAh5B,EAAAjK,EAAAyN,EAAAy1B,GACAA,IACAA,EAAA,KAQA,KAAA,GALAp4B,GAAA3L,EAAAme,SAAArT,EAAAxG,MACAiG,KAEA+B,EAAAX,EAAAvH,OAEAD,EAAA,EAAAA,EAAAmI,IAAAnI,EAAA,CAEA,GAAAV,GAAAkI,EAAAxH,EAEA,MAAAtD,EAAAuB,IAAA6F,GAAA,GAAAxE,EAAAme,aAAA,IAAA7b,EAAA8iB,WAAAhoB,EAAAuB,IAAAgO,EAAA3M,EAAAme,cAAA,CAGA/G,EAAAiO,SAAArlB,EAGA,KAAA,GADAugC,IAAA,EACA5zB,EAAA,EAAAA,EAAA9B,EAAAlK,SAAAgM,EACA,GAAA9B,EAAA8B,GAAA6zB,cAAA31B,EAAA8B,GAAA6zB,YAAAxgC,GAAA,CACAugC,GAAA,CACA,OAQA,GAJAA,GACAz5B,EAAAlG,KAAAZ,GAGA8G,EAAAnG,QAAA2/B,EACA,OASA,MALAx5B,GAAAA,EAAAtG,KAAA,SAAA2b,EAAA7V,GACA,MAAA6V,GAAAtb,KAAAq6B,cAAA50B,EAAAzF,QAtiBA,OACA4/B,UACAC,cACA7/B,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAIA,IAAA,GAFA81B,MAEAp0B,EAAA,EAAAA,EAAAlF,EAAA8yB,cAAAx5B,SAAA4L,EAAA,CACA,GAAAq0B,GAAAv5B,EAAA8yB,cAAA5tB,GAEAs0B,EAAA,CACA,IAAAzjC,EAAAS,MACA,IAAA,GAAA6C,GAAA,EAAAA,EAAAtD,EAAAS,MAAA8C,SAAAD,EACAtD,EAAAS,MAAA6C,GAAA2Q,cAAAuvB,GACAC,GAKA,MAAAA,GAAAx5B,EAAAqK,aAAA,CAIA,GAAA6N,GAAA3iB,EAAAkX,KAAA,kBAAA,eAAA8sB,GACAE,EAAA,EACA,IAAAvhB,GAAAA,EAAA5e,OAAA,GAAA4e,EAAA,GAAApL,OAAA,EACA,GAAA2sB,GAAAnkC,EAAA2S,UAAAiQ,EAAA,GAAApL,QAAAqL,aAEAmhB,GAAA//B,MAAA4D,GAAAo8B,EAAA//B,KAAAigC,EAAAthB,iBAGA,MAAAmhB,IAEAH,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAqR,cAAA7M,IAGAu8B,iBACAlgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAIA,IAAA,GAFA81B,MAEAp0B,EAAA,EAAAA,EAAAlF,EAAA8yB,cAAAx5B,SAAA4L,EAAA,CAIA,IAAA,GAHAq0B,GAAAv5B,EAAA8yB,cAAA5tB,GAEAs0B,EAAA,EACAngC,EAAA,EAAAA,EAAAtD,EAAAS,MAAA8C,SAAAD,EACAtD,EAAAS,MAAA6C,IAAAtD,EAAAS,MAAA6C,GAAA2Q,cAAAuvB,GACAC,GAIA,IAAA,IAAAD,GAAA,IAAAA,GACA,GAAAC,GAAA,EACA,aAIA,IAAAA,GAAA,EACA,QAIA,IAAAthB,GAAA3iB,EAAAkX,KAAA,kBAAA,eAAA8sB,EACA,IAAArhB,GAAAA,EAAA5e,OAAA,GAAA4e,EAAA,GAAApL,OAAA,EAAA,CACA,GAAA2sB,GAAAnkC,EAAA2S,UAAAiQ,EAAA,GAAApL,QAAAqL,aAEAmhB,GAAA//B,MAAA4D,GAAAo8B,EAAA//B,KAAAigC,EAAAthB,iBAIA,MAAAmhB,IAEAH,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAqR,cAAA7M,IAGAw8B,gBACAngC,KAAA,QACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,cAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAyU,YAAAjQ,IAGAy8B,cACApgC,KAAA,QACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,aACA2D,GAAA,GAAA3D,KAAA,cAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAyU,YAAAjQ,IAGA08B,cACArgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,WACA2D,GAAA,EAAA3D,KAAA,SACA2D,GAAA,EAAA3D,KAAA,SACA2D,GAAA,EAAA3D,KAAA,UACA2D,GAAA,EAAA3D,KAAA,YAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAuU,KAAA/P,IAAAA,IAGA28B,cACAtgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,WACA2D,GAAA,EAAA3D,KAAA,UAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAuU,KAAA/P,IAAAA,IAGA48B,kBACAvgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,SACA2D,GAAA,IAAA3D,KAAA,uBACA2D,GAAA,EAAA3D,KAAA,UACA2D,GAAA,EAAA3D,KAAA,YAGA2/B,YAAA,SAAAh8B,EAAAxE,GAEA,GADAoX,EAAAiO,SAAArlB,GACAA,EAAAa,KAAA,CAEA,GAAA0C,GAAAX,KAAAmD,IACA/F,EAAAa,KAAA0N,QAAA,WACAvO,EAAAa,KAAA0N,QAAA,cAEA,OAAA,MAAA/J,EACA,IAAAjB,EAGAvD,EAAAuU,KAAA/P,IAAAA,GAAA,GAAAjB,EAGA,OAAA,IAGA89B,aACAxgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,cACA2D,GAAA,IAAA3D,KAAA,4BACA2D,GAAA,EAAA3D,KAAA,UAGA2/B,YAAA,SAAAh8B,EAAAxE,GAEA,GADAoX,EAAAiO,SAAArlB,GACAA,EAAAa,KAAA,CACA,GAAA0C,GAAAX,KAAAmD,IACA/F,EAAAa,KAAA0N,QAAA,WACAvO,EAAAa,KAAA0N,QAAA,cACA,OAAA,MAAA/J,EACA,GAAAxE,EAAAuU,KAAA/P,IAAAjB,GAAA,EAGAvD,EAAAuU,KAAA/P,IAAAA,GAAAjB,EAAA,EAGA,OAAA,IAGA+9B,eACAzgC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,SACA2D,GAAA,EAAA3D,KAAA,SACA2D,GAAA,EAAA3D,KAAA,YAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAuU,KAAA/P,IAAAA,IAGA+8B,eACA1gC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,EAAA3D,KAAA,cACA2D,GAAA,EAAA3D,KAAA,WACA2D,GAAA,EAAA3D,KAAA,UAGA2/B,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAuU,KAAA/P,IAAAA,IAGAg9B,qBACA3gC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,QACArG,GAAA,IAAA3D,KAAA,eACA2D,GAAA,GAAA3D,KAAA,cACA2D,GAAA,GAAA3D,KAAA,cACA2D,GAAA,EAAA3D,KAAA,cAGAu/B,UAAA,SAAA57B,EAAAxE,GACAA,EAAA+E,eAAAP,IAGAi9B,WACA5gC,KAAA,SACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAGA,IAAA,GAFA62B,GAAArB,EAAAh5B,EAAAjK,EAAAyN,EAAA,MACA82B,KACAjhC,EAAA,EAAAA,EAAAghC,EAAA/gC,SAAAD,EACA,OAAAghC,EAAAhhC,GAAA8D,IACA,IAAA,MACA,IAAA,MACA,IAAA,MAEA,IAAA,KACA,IAAA,KAEA,IAAA,MACA,IAAA,MACA,IAAA,MACAm9B,EAAA/gC,KAAA8gC,EAAAhhC,IAIA,MAAAihC,IAEA71B,WAAA,SAAAzE,EAAAjK,EAAAyN,GACA,OAAA,GAEAs1B,YAAA,GAEAyB,aACA/gC,KAAA,UACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAEA,GAAA7K,GAAAL,EAAAkL,EACA,OAAA7K,IAAAA,EAAA2T,gBAEAnP,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,GAAA3D,KAAA,mBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,kBACA2D,GAAA,EAAA3D,KAAA,mBAIA2D,GAAA,EAAA3D,KAAA,kBAGAu/B,UAAA,SAAA57B,EAAAxE,GACAA,EAAA+E,eAAAP,IAGAq9B,UACAhhC,KAAA,SACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GACA,MAAAw1B,GAAAh5B,EAAAjK,EAAAyN,IAEAs1B,YAAA,GAEA2B,eACAjhC,KAAA,QACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GACA,GAAAhN,GAAAwiC,EAAAh5B,EAAAjK,EAAAyN,EAAA,EAIA,OAAAhN,GAAA8C,OAAA,IACA6D,GAAA3G,EAAA,GAAA4+B,QAAA57B,KAAAhD,EAAA,GAAA4+B,cAMA+D,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAy8B,SAAAj4B,IAGAu9B,cACAlhC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAIA,IAAA,GAHAhN,GAAAwiC,EAAAh5B,EAAAjK,EAAAyN,GACAm3B,KACAC,KACAvhC,EAAA,EAAAA,EAAA7C,EAAA8C,SAAAD,EAAA,CACA,GAAAG,GAAAhD,EAAA6C,GAAAG,IACAA,KAAAmhC,KACAA,EAAAnhC,IAAA,EACAohC,EAAArhC,MACA4D,GAAA3D,EACAA,KAAAA,KAKA,MAAAohC,IAEAzB,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAa,MAAA2D,GAEA27B,YAAA,GAEA+B,sBACArhC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAKA,IAAA,GAJAhN,GAAAwiC,EAAAh5B,EAAAjK,EAAAyN,GACAm3B,KACAC,KAEAvhC,EAAA,EAAAA,EAAAtD,EAAAS,MAAA8C,SAAAD,EAAA,CACA,GAAAV,GAAA5C,EAAAS,MAAA6C,EACAshC,GAAAhiC,EAAAa,OAAA,EAGA,IAAA,GAAAH,GAAA,EAAAA,EAAA7C,EAAA8C,SAAAD,EAAA,CACA,GAAAG,GAAAhD,EAAA6C,GAAAG,IACAA,KAAAmhC,KACAA,EAAAnhC,IAAA,EACAohC,EAAArhC,MACA4D,GAAA3D,EACAA,KAAAA,KAKA,MAAAohC,IAEAzB,YAAA,SAAAh8B,EAAAxE,GACA,MAAAA,GAAAa,MAAA2D,GAEA27B,YAAA,GAEAgC,cACAthC,KAAA,YACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GAIA,IAAA,GAHAhN,GAAAwiC,EAAAh5B,EAAAjK,EAAAyN,GACAu3B,KAEA1hC,EAAA,EAAAA,EAAA7C,EAAA8C,SAAAD,EAAA,CAEA,IAAA,GADAuG,GAAA,EACAyF,EAAA,EAAAA,EAAA7O,EAAA6C,GAAAa,MAAAZ,SAAA+L,EAAA,CACA,GAAA5G,GAAAzJ,EAAAkF,MAAA1D,EAAA6C,GAAAa,MAAAmL,GAAAlI,GACAsB,KAAAA,EAAAkP,MACA/N,IAGAm7B,EAAAn7B,EAAA,WAAAA,EAGA,GAAAH,KACA,KAAA,GAAAqvB,KAAAiM,GACAt7B,EAAAlG,MACA4D,GAAA49B,EAAAjM,GACAt1B,KAAAs1B,GAQA,OAJArvB,GAAAA,EAAAtG,KAAA,SAAA+Q,EAAAC,GACA,MAAAD,GAAA/M,GAAAgN,EAAAhN,MAKAg8B,YAAA,SAAAh8B,EAAAxE,GAEA,IAAA,GADAiH,GAAA,EACAyF,EAAA,EAAAA,EAAA1M,EAAAuB,MAAAZ,SAAA+L,EAAA,CACA,GAAA5G,GAAAzJ,EAAAkF,MAAAvB,EAAAuB,MAAAmL,GAAAlI,GACAsB,KAAAA,EAAAkP,MACA/N,IAIA,MAAAA,IAAAzC,GAEA27B,YAAA,GAEAkC,YACAxhC,KAAA,OACAoK,WAAA,SAAA5D,EAAAjK,EAAAyN,GACA,MAAAxO,GAAAwnB,aAEAsc,YAAA,IAKAmC,eACAC,QAAA,aACAC,SAAA,eAAA,iBAAA,gBAAA,WAAA,eACAC,QAAA,eAAA,iBAAA,gBAAA,WAAA,eACAC,aAAA,kBAAA,eAAA,gBAAA,eAAA,YACAC,kBAAA,iBAAA,cAAA,eAAA,eAAA,WAAA,eACAC,mBAAA,iBAAA,cAAA,eAAA,eAAA,WAAA,eACAC,sBAAA,eAAA,gBAAA,uBAAA,eAAA,YACAC,qBAAA,iBAAA,uBAAA,eAAA,YACAC,UAAA,iBAAA,mBAAA,uBAAA,eAAA,WAAA,uBACAC,SAAA,eAAA,gBAAA,eAAA,YACAxF,MAAA,kBAAA,eAAA,eAAA,YACAyF,OAAA,eAAA,eAAA,eAAA,gBAAA,YACAC,QAAA,eAEAj4B,WAAA,SAAA5D,EAAAjK,EAAAyN,GACA,GAAAxD,EAAAxG,OAAA7C,MAAAskC,cAAA,CACA,GAAAa,GAAAnlC,KAAAolC,YAAA/7B,EAAAwD,EAAAlK,OACA,OAAA3C,MAAAyiC,SAAA0C,GAAAl4B,WAAA5D,EAAAjK,EAAAyN,GAGA,UAGAiB,WAAA,SAAAzE,EAAAjK,EAAAyN,GACA,GAAAxD,EAAAxG,OAAA7C,MAAAskC,cAAA,CACA,GAAAa,GAAAnlC,KAAAolC,YAAA/7B,EAAAwD,EAAAlK,OACA,OAAA3C,MAAAyiC,SAAA0C,GAAAr3B,WACA9N,KAAAyiC,SAAA0C,GAAAr3B,WAAAzE,EAAAjK,EAAAyN,GAGA7M,KAAAyiC,SAAA0C,GAAAl4B,WAAA5D,EAAAjK,EAAAyN,GAAAlK,OAAA,EAIA,OAAA,GAGAyK,kBAAA,SAAA/D,EAAAuD,GACA,MAAA5M,MAAAskC,cAAAj7B,EAAAxG,MAAAF,OAAAiK,GAEAO,WAAA,SAAAvD,EAAAP,EAAAuD,GACA,GAAAu4B,GAAAnlC,KAAAolC,YAAA/7B,EAAAuD,GACAuhB,EAAAnuB,KAAAyiC,SAAA0C,EAEA,QACAE,KAAAF,EACAv7B,MAAAA,EACAukB,IAAAA,EACAqU,YAAA,SAAAxgC,GACA,MAAAmsB,GAAAqU,YAAA54B,EAAApD,GAAAxE,MAIAL,QAAAA,EACAyjC,YAAA,SAAA/7B,EAAAuD,GACA,MAAA5M,MAAAskC,cAAAj7B,EAAAxG,MAAA+J,KA/eAhP,QAAAC,OAAA,SAAAgyB,QAAA,YAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,cAAAnjB,OCHA,WACA,YAGA,SAAAyB,GAAAxP,EAAAE,EAAAD,EAAAsS,GAEA,GAAAY,IAAA3D,OAAA,MAAAtL,KAAA,mCAAAO,IAAA,IACAuO,IACAxD,OAAA,KAAAtL,KAAA,yCAAAO,IAAA,iCACA+K,OAAA,MAAAtL,KAAA,yBAAAO,IAAA,qCACA+K,OAAA,MAAAtL,KAAA,4BAAAO,IAAA,qCACA+K,OAAA,MAAAtL,KAAA,sDAAAO,IAAA,uCACA+K,OAAA,KAAAtL,KAAA,6CAAAO,IAAA,oCACA+K,OAAA,MAAAtL,KAAA,iCAAAO,IAAA,2CAGAkiC,EAAAl8B,aAAAzH,QAAA,iBACAgP,EAAAgB,EAAA,EACA2zB,IACA1nC,QAAAyB,QAAAsS,EAAA,SAAA4zB,EAAAhgC,GACAggC,EAAAp3B,QAAAm3B,IACA30B,EAAA40B,IAKA,IAAAC,GAAAp8B,aAAAzH,QAAA,kBACA8O,EAAA,IAcA,OAbA+0B,IACA5nC,QAAAyB,QAAAsS,EAAA,SAAA4zB,EAAAhgC,GACA,GAAAggC,EAAAp3B,QAAA2D,EAAA3D,QAAAq3B,EAAAj1B,QAAAg1B,EAAAniC,QAEA,YADAqN,EAAA80B,KAMA,MAAA90B,IACAA,EAAAE,IAIAgB,YAAAA,EACAG,iBAAAA,EACAnB,YAAAA,EACAF,UAAAA,EAEA+B,aAAA,SAAApP,GAEApD,KAAA8R,iBAAA1O,IAAAA,CAEA,IAAAqiC,KACA7nC,SAAAyB,QAAAsS,EAAA,SAAA4zB,EAAAhgC,GACAggC,EAAAp3B,QAAA2D,EAAA3D,QACAs3B,EAAA7iC,KAAA2iC,KAIAE,EAAA7iC,KAAAkP,GACAH,EAAA8zB,EACAzlC,KAAA2R,YAAA8zB,GAGAp3B,kBAAA,SAAAq3B,GACA,GAAAC,GAAA,IAEA/nC,SAAAyB,QAAAsS,EAAA,SAAA4zB,EAAAhgC,GACAggC,EAAAp3B,QAAAu3B,IACAC,EAAAJ,KAIAvlC,KAAAgS,YAAA2zB,IAGA3zB,YAAA,SAAAD,GACAA,GAAAA,GAAA/R,KAAA2Q,cACA3Q,KAAA2Q,YAAAoB,EACAlT,IACAuK,aAAAS,QAAA,gBAAAkI,EAAA5D,QACAtP,IACAqS,EAAAoB,UAGA,MAAAtS,KAAAyQ,WACAzQ,KAAAylB,aAAA1T,GAGA/R,KAAAoB,QAKAqkB,aAAA,SAAA1T,GAEAA,GAAA/R,KAAAyQ,YAEAzQ,KAAAyQ,UAAAsB,EACArQ,eAAAsJ,WAAA,aACA5B,aAAA4B,WAAA,kBACAnM,IACAF,EAAAiP,QACAjP,EAAAoT,SAAA/R,KAAAyQ,UAAArN,IACAzE,EAAAyC,KAAA,aAAA,WAAA8P,EAAAoB,aAKAlR,KAAA,WACApB,KAAAyQ,YACA9R,EAAAoT,SAAA/R,KAAAyQ,UAAArN,KAEAxE,EAAAoT,YAAAhS,KAAA2Q,eA7GA/S,QAAAC,OAAA,SAAAgyB,QAAA,UAAA,eAAA,WAAA,UAAA,SAAA1hB,OCHA,WACA,YAGA,SAAA3P,GAAAD,GACA,OACAoP,SAAA,SAAA3I,EAAAhD,GACA,GAAA4jC,GAAA5lC,KAAAoC,eACA4C,KAAA4gC,IAAAhO,MAAAiO,QAAAD,EAAA5gC,GAAAnF,QAEA+lC,EAAA5gC,GAAAnF,MAAA+C,KAAAZ,GACA4jC,EAAA5gC,GAAAnB,YAAA,GAAAC,OAAA+f,UACA7jB,KAAAJ,kBAAAoF,EAAA4gC,EAAA5gC,GAAAnF,QAGAG,KAAAJ,kBAAAoF,GAAAhD,IAGAoH,aAAAS,QAAA,iBAAA7E,IAGAjC,mBAAA,SAAApD,EAAA8C,GACAzC,KAAA8lC,gBAAAnmC,GACA8C,GAAA9C,IAAA8C,IAAAA,EAAA9C,GAAAgB,KAAA8B,EAAA9C,GAAAgB,IAAA6F,IACA4C,aAAAS,QAAA,YAAApH,EAAA9C,GAAAgB,IAAA6F,KAIAlG,YAAA,SAAA0E,EAAA+gC,GACA,GAAAlmC,GAAAG,KAAAoC,eAGA,OAFA4C,GAAAhF,KAAAgmC,mBAAAhhC,EAAAnF,GACAG,KAAAJ,kBAAAoF,EAAA+gC,GACA/gC,GAGAghC,mBAAA,SAAAhhC,EAAAihC,GACA,GAAAC,GAAA,CACA,IAAAlhC,EAAAmhC,YAAA,MAAAnhC,EAAArC,OAAA,EAAA,CACA,GAAAyjC,GAAAphC,EAAAmhC,YAAA,IACA,IAAAC,EAAA,EAAA,CACA,GAAAC,GAAA9xB,OAAAvP,EAAAw0B,OAAA4M,EAAA,EAAAphC,EAAArC,OAAAyjC,EAAA,GACAC,GAAA,IACAH,EAAAG,EAAA,EACArhC,EAAAA,EAAAw0B,OAAA,EAAA4M,EAAA,KAMA,IADA,GAAAE,GAAAthC,IACA,CACA,GAAAA,GAAAshC,CAKA,IAJAJ,EAAA,IACAlhC,EAAAshC,EAAA,KAAAJ,EAAA,OAGAlhC,IAAAihC,IAIA,KAHAC,KAOA,MAAAlhC,IAGApF,kBAAA,SAAAoF,EAAA+gC,GACA,GAAAlmC,GAAAG,KAAAoC,eACA4C,KAAAnF,GACAkmC,EAAApjC,QAMA9C,EAAAmF,GAAAnF,MAAAkmC,EACAlmC,EAAAmF,GAAAnB,YAAA,GAAAC,OAAA+f,UACAza,aAAAS,QAAA,iBAAA7E,WAPAnF,GAAAmF,GACAhF,KAAA8lC,gBAAA,QAWAjmC,EAAAmF,IAAAnF,MAAAkmC,EAAAliC,YAAA,GAAAC,OAAA+f,WACAza,aAAAS,QAAA,iBAAA7E,GAIA,IAAAs8B,GAAA1xB,KAAAC,UAAAhQ,EAEAuJ,cAAAS,QAAA,aAAAiG,SAAAC,gBAAAuxB,KAGA/gC,iBAAA,SACA6K,EAAA/K,EAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAgB,GAAAnC,KAAAoC,eAEA,IAAA/B,IAAA8B,IAAAiJ,GAAA/K,EAEAA,EAAA+K,MAEA,IAAAA,IAAAjJ,GAAA,CACA,GAAAyB,GAAAzB,EAAAiJ,EACAjJ,GAAA9B,GAAAuD,QACAzB,GAAAiJ,GAGAjJ,EAAA9B,GAAAG,WAAAA,EACA2B,EAAA9B,GAAAI,YAAAA,EACA0B,EAAA9B,GAAAK,UAAAA,EACAyB,EAAA9B,GAAAM,IAAAA,EACAwB,EAAA9B,GAAAO,WAAAA,EACAuB,EAAA9B,GAAAQ,QAAAA,EACAsB,EAAA9B,GAAAS,iBAAAA,EACAqB,EAAA9B,GAAAU,cAAAA,EACAoB,EAAA9B,GAAAW,eAAAA,EACAmB,EAAA9B,GAAAY,YAAAA,EACAkB,EAAA9B,GAAAa,UAAAA,EACAiB,EAAA9B,GAAAc,UAAAA,CAEA,IAAAmgC,GAAA1xB,KAAAC,UAAA1N,EACAiH,cAAAS,QAAA,aAAAiG,SAAAC,gBAAAuxB,KAGAl/B,cAAA,WACA,IACA,GAAAk/B,GAAAxxB,SAAA0xB,oBAAAp4B,aAAAzH,QAAA,eACAQ,EAAAyN,KAAA6xB,MAAAH,EACA,OAAAn/B,GAEA,MAAAokC,IAGA,UAGA1c,eAAA,WACA,IACA,GAAAyX,GAAAxxB,SAAA0xB,oBAAAp4B,aAAAzH,QAAA,gBACAQ,EAAAyN,KAAA6xB,MAAAH,EACA,OAAAn/B,GAEA,MAAAokC,IAGA,UAGA3c,gBAAA,SAAA/pB,GACA,GAAAyhC,GAAA1xB,KAAAC,UAAAhQ,EAEAuJ,cAAAS,QAAA,cAAAiG,SAAAC,gBAAAuxB,KAGAkF,eAAA,WACA,IACA,GAAAlF,GAAAxxB,SAAA0xB,oBAAAp4B,aAAAzH,QAAA,gBACAQ,EAAAyN,KAAA6xB,MAAAH,EACA,OAAAn/B,GAEA,MAAAokC,IAGA,UAGAE,gBAAA,SAAA5mC,GACA,GAAAyhC,GAAA1xB,KAAAC,UAAAhQ,EAEAuJ,cAAAS,QAAA,cAAAiG,SAAAC,gBAAAuxB,KAGAtwB,aAAA,KACA/L,gBAAA,WACA,IAAAjF,KAAAgR,eACAhR,KAAAgR,aAAA5H,aAAAzH,QAAA,gBACA3B,KAAAgR,cAAA,CACA,GAAA7O,GAAAnC,KAAAoC,eACApC,MAAAgR,eAAA7O,KACAiH,aAAA4B,WAAA,gBACAhL,KAAAgR,aAAA,MAKA,MAAAhR,MAAAgR,cAGA80B,gBAAA,SAAAnmC,GACAK,KAAAgR,aAAArR,EACAyJ,aAAAS,QAAA,eAAAlK,KA5LA/B,QAAAC,OAAA,SAAAgyB,QAAA,cAAA,eAAArxB,OCHA,WACA,YAGA,SAAAF,GAAAD,GAEA,OAEA6H,YAAA,SAAA2M,GACA,GAAAtP,MACAm4B,IAqBA,OAnBA99B,SAAAyB,QAAAwT,EAAA,SAAAjJ,EAAA4B,GACA,OAAA5B,GAAA,MAAAA,EAAA3D,WACA2D,EAAAyT,QAAAqe,GACAA,EAAA9xB,EAAAyT,OAAAxS,WAGA6wB,EAAA9xB,EAAAyT,QAAAxS,SAAA,EAAAtH,MAAAqG,EAAA3D,aAKArI,QAAAyB,QAAAq8B,EAAA,SAAA9xB,EAAA4B,GACA5N,QAAAyB,QAAAuK,EAAArG,MAAA,SAAAuE,EAAAvC,GACAuC,EAAAumB,YAAAzkB,EAAAiB,UACAtH,EAAAX,KAAAkF,OAKAzJ,EAAAgI,WAAA9C,IAGAyC,iBAAA,SAAA6M,GACA,GAAAtP,KAcA,OAZA3F,SAAAyB,QAAAwT,EAAA,SAAAjJ,EAAA4B,GACA5B,IAEAA,EAAA3B,UACA1E,EAAAA,EAAA6C,OAAAwD,EAAA3B,WAEA2B,EAAArG,QACAA,EAAAA,EAAA6C,OAAAwD,EAAArG,WAKAlF,EAAAgI,WAAA9C,IAGA6B,mBAAA,SAAAxB,EAAAmC,GAYA,QAAA2gC,GAAA5+B,GACA,GAAA6+B,GAAAtoC,EAAAkF,MAAAuE,EAAAtB,GACA,OAAAogC,GAAAD,EAAApgB,IACAhS,OAAAqyB,EAAAD,EAAApgB,IAAAxe,KAGA,EAIA,QAAA8+B,GAAA/+B,GACA,GAAA6+B,GAAAtoC,EAAAkF,MAAAuE,EAAAtB,GACA,OAAAogC,GAAAD,EAAAG,MACAvyB,OAAAqyB,EAAAD,EAAAG,MAAA/+B,KAGA,EAIA,QAAAg/B,GAAAj/B,GACAA,EAAAC,IAAAnD,KAAA6mB,MACA3jB,EAAAC,KAAA,EAAA2+B,EAAA5+B,KAAA,EAAA++B,EAAA/+B,KAIA,QAAAk/B,GAAAxgC,GACA,GAAAsB,GAAA8+B,EAAApgC,EACA,OAAAsB,IACAtB,GAAAA,EAAAuB,IAAAwM,OAAAzM,EAAAC,KAAAwe,GAAAze,EAAAye,KAGA/f,GAAAA,EAAAuB,IAAA,EAAAwe,GAAA,GAIA,QAAA0gB,GAAAn/B,GACAA,EAAAC,IAAA,GACAe,EAAAlG,KAAAkF,GA6JA,QAAAo/B,GAAA1gC,EAAAmhB,EAAA5f,GAEA,GAAAo/B,IAAAxf,EAAA5f,GAAA,CAEAo/B,IAAAC,GAAAC,EAAA,GAAAF,EAAA,IAEAA,GAAA,EAAAG,EAAAv/B,GAIA,IAAAw/B,GAAAJ,CACA,IAAAvjC,EAAA/C,SAAA+C,EAAA/C,QAAA2F,GAAA,EAAA,CACA,GAAAghC,GAAAZ,EAAAvoC,EAAA2K,SAAApF,EAAA/C,QAAA2F,IAAAihC,QACAD,KACAD,GAAA,EAAAhzB,OAAAizB,EAAAz/B,MAGAk/B,GAAAzgC,GAAAA,EAAAuB,IAAAw/B,GACA,IAAAG,GAAA,EACAC,EAAA,CAcA,IAZAA,EADA/jC,EAAA/C,QACA+C,EAAA/C,QAAA2F,GAGA,EAGAkhC,EADA9jC,EAAA9C,iBACA8C,EAAA9C,iBAAA0F,GAGA,EAGAkhC,GAAAC,EACA,GAAAD,EAAA,EAAA,CACA,GAAAE,GAAAhB,EAAAvoC,EAAA2K,SAAApF,EAAA9C,iBAAA0F,IAAAihC,QACA,IAAAG,EAAA,CACA,GAAAC,GAAAV,GAAA,EAAA5yB,OAAAqzB,EAAA7/B,KACAk/B,IAAAzgC,GAAAA,EAAA,IAAAuB,IAAA8/B,SAIAZ,IAAAzgC,GAAAA,EAAA,IAAAuB,IAAAo/B,IAvPA,GAAAr+B,MACA89B,IACA,KAAAhjC,EAAA3C,cAAA2C,EAAA7C,gBAAA6C,EAAA5C,eACA,QAGApD,SAAAyB,QAAA0G,EAAA,SAAA+B,EAAAvC,GACAqhC,EAAA9+B,EAAAtB,IAAAsB,GA8CA,IAAAqL,GAAA6zB,EAAA,EACAD,GAAA5zB,GACA8zB,EAAA9zB,EAEA,IAAA20B,GAAAd,EAAA,EACAD,GAAAe,GACAb,EAAAa,EAEA,IAAAC,GAAAf,EAAA,EACAD,GAAAgB,GACAd,EAAAc,EAEA,IAAAC,GAAAhB,EAAA,EACAD,GAAAiB,GACAf,EAAAe,EAGA,IAAAC,GAAAjB,EAAA,GACAiB,GAAAlgC,KAAAigC,EAAAjgC,IAAAwM,OAAA3Q,EAAA3C,YAAAy0B,IACAqR,EAAAkB,GACAhB,EAAAgB,EAGA,IAAA9Z,GAAA6Y,EAAA,EACA7Y,GAAApmB,KAAAigC,EAAAjgC,IAAAwM,OAAA3Q,EAAA3C,YAAA60B,iBACAiR,EAAA5Y,GACA8Y,EAAA9Y,EAEA,IAAA+Z,GAAAlB,EAAA,KAEAkB,GAAAngC,IAAAnD,KAAA+iB,IAAA,IAAAwG,EAAApmB,IAAAwM,OAAA3Q,EAAA7C,cAAAu0B,WACA2R,EAAAiB,EAEA,IAAAC,GAAAnB,EAAA,EACAmB,GAAApgC,KAAAggC,EAAAhgC,IAAAwM,OAAA3Q,EAAA3C,YAAA80B,cACAgR,EAAAoB,GACAlB,EAAAkB,EAEA,IAAAC,GAAApB,EAAA,KAEAoB,GAAArgC,IAAAnD,KAAA+iB,IAAA,IAAAwgB,EAAApgC,IAAAwM,OAAA3Q,EAAA7C,cAAAu0B,WACA2R,EAAAmB,EAKA,IAAAC,GAAArB,EAAA,IAGA,KAAApjC,EAAAhD,YAAA,GAAAgD,EAAAhD,WAAA4F,GAAA,CACA,GAAA8hC,GAAAtB,EAAA,IACAuB,EAAAvB,EAAA,KACAwB,EAAAxB,EAAA,MAGAyB,EAAAzB,EAAA,OAEA0B,EAAA1B,EAAA,EACA0B,GAAA3gC,KAAAugC,EAAAvgC,IACA2gC,EAAA3gC,KAAAnD,KAAA6mB,MAAAtY,EAAApL,IAAAwM,OAAA3Q,EAAA3C,YAAA00B,iBACA+S,EAAA3gC,KAAAnD,KAAA6mB,MAAAqc,EAAA//B,IAAAwM,OAAA3Q,EAAA3C,YAAA20B,gBAEA8S,EAAA3gC,IAAAnD,KAAA6mB,MAAAid,EAAA3gC,KAAA,GAAA2+B,EAAAgC,GAAAH,EAAAxgC,OACA2gC,EAAA3gC,IAAAnD,KAAA6mB,MAAAid,EAAA3gC,KAAA,EAAAsgC,EAAAtgC,IAAAygC,EAAAzgC,MACA2gC,EAAA3gC,KAAAnD,KAAA6mB,MAAAgd,EAAA1gC,IAAAggC,EAAAhgC,KACAk/B,EAAAyB,EAEA,IAAAC,GAAA3B,EAAA,EACA2B,GAAA5gC,KAAAugC,EAAAvgC,IACA4gC,EAAA5gC,KAAAnD,KAAA6mB,MAAAtY,EAAApL,IAAAwM,OAAA3Q,EAAA3C,YAAA00B,iBACAgT,EAAA5gC,KAAAnD,KAAA6mB,MAAAqc,EAAA//B,IAAAwM,OAAA3Q,EAAA3C,YAAA20B,gBAEA+S,EAAA5gC,IAAAnD,KAAA6mB,MAAAkd,EAAA5gC,KAAA,GAAA2+B,EAAAiC,GAAAJ,EAAAxgC,OACA4gC,EAAA5gC,IAAAnD,KAAA6mB,MAAAkd,EAAA5gC,KAAA,EAAAsgC,EAAAtgC,IAAAygC,EAAAzgC,MACA4gC,EAAA5gC,KAAAnD,KAAA6mB,MAAAgd,EAAA1gC,IAAAggC,EAAAhgC,KACAk/B,EAAA0B,GAIA,IAAA/kC,EAAAhD,YAAA,GAAAgD,EAAAhD,WAAA4F,GAAA,CACA,GAAAoiC,GAAA5B,EAAA,IACA6B,EAAA7B,EAAA,KACA8B,EAAA9B,EAAA,MAGA+B,EAAA/B,EAAA,OAEAgC,EAAAhC,EAAA,EACAgC,GAAAjhC,KAAA6gC,EAAA7gC,IACAihC,EAAAjhC,KAAAnD,KAAA6mB,MAAAsc,EAAAhgC,IAAAwM,OAAA3Q,EAAA3C,YAAA40B,qBAEAmT,EAAAjhC,IAAAnD,KAAA6mB,MAAAud,EAAAjhC,KAAA,GAAA2+B,EAAAsC,GAAAH,EAAA9gC,OACAihC,EAAAjhC,IAAAihC,EAAAjhC,KAAA,EAAAsgC,EAAAtgC,IAAA+gC,EAAA/gC,KACAihC,EAAAjhC,KAAAnD,KAAA6mB,MAAAsd,EAAAhhC,IAAAoL,EAAApL,KACAk/B,EAAA+B,EAEA,IAAAC,GAAAjC,EAAA,EACAiC,GAAAlhC,KAAA6gC,EAAA7gC,IACAkhC,EAAAlhC,KAAAggC,EAAAhgC,IAAAwM,OAAA3Q,EAAA3C,YAAA40B,oBAEAoT,EAAAlhC,IAAAnD,KAAA6mB,MAAAwd,EAAAlhC,KAAA,GAAA2+B,EAAAuC,GAAAJ,EAAA9gC,OACAkhC,EAAAlhC,IAAAkhC,EAAAlhC,KAAA,EAAAsgC,EAAAtgC,IAAA+gC,EAAA/gC,KACAkhC,EAAAlhC,KAAAnD,KAAA6mB,MAAAsd,EAAAhhC,IAAAoL,EAAApL,KACAk/B,EAAAgC,GAKA,GAAAC,GAAAlC,EAAA,GACAkC,GAAAnhC,KAAA+/B,EAAA//B,IAAAwM,OAAA3Q,EAAA3C,YAAA+0B,UACA+Q,EAAAmC,EAEA,IAAAC,GAAAnC,EAAA,KACAkC,GAAAnhC,KAAAohC,EAAAphC,IACAk/B,EAAAiC,EACA,IAAAE,GAAApC,EAAA,MAEAI,EAAAxiC,KAAA+iB,IAAA,IAAAuhB,EAAAnhC,IAAAwM,OAAA3Q,EAAA7C,cAAAw0B,WAAA6T,EAAArhC,IACAe,GAAAlG,MAAA4D,GAAA,KAAAuB,IAAAq/B,GAGA,IAAAiC,GAAArC,EAAA,IACAqC,GAAAthC,MAAAoL,EAAApL,IAAAggC,EAAAhgC,KAAAwM,OAAA3Q,EAAA3C,YAAA41B,sCACAkQ,EAAAsC,GACApC,EAAAoC,EAEA,IAAAhC,GAAAgC,EAAAthC,IAAAnE,EAAA5C,eAAAy0B,eACAwR,IAAAzgC,GAAA,KAAAuB,IAAAs/B,EAAA,GAGA,IAAAiC,GAAAtC,EAAA,GACAC,GAAAqC,EACA,IAAAC,GAAAh1B,OAAA3Q,EAAA7C,cAAAy0B,cAEA8R,EAAAN,EAAA,KACAM,GAAAv/B,KAAAnD,KAAA+iB,IAAA/iB,KAAAmD,IAAA,IAAAwM,OAAA+0B,EAAAvhC,KAAAwhC,EAAA3kC,KAAA4kC,IAAAj1B,OAAA+0B,EAAAvhC,KAAAwhC,EAAA,MAAA,GACAtC,EAAAK,EAGA,IAAAmC,GAAAzC,EAAA,GACAC,GAAAwC,EAEA,IAAAC,GAAA1C,EAAA,GACAC,GAAAyC,EAEA,IAAAC,GAAA3C,EAAA,GACAC,GAAA0C,EAEA,IAAAC,GAAA5C,EAAA,GACAC,GAAA2C,GAmDAhmC,EAAAhD,YAAA,GAAAgD,EAAAhD,WAAA4F,IAAA,GAAA5C,EAAAhD,WAAA4F,IACA0gC,EAAA,KAAAwB,EAAA3gC,IAAA4gC,EAAA5gC,KAGAnE,EAAAhD,YAAA,GAAAgD,EAAAhD,WAAA4F,IAAA,GAAA5C,EAAAhD,WAAA4F,IACA0gC,EAAA,KAAA8B,EAAAjhC,IAAAkhC,EAAAlhC,KAGAnE,EAAAhD,YAAA,GAAAgD,EAAAhD,WAAA4F,IACA0gC,EAAA,KAAA8B,EAAAjhC,IAAA2gC,EAAA3gC,IAAAkhC,EAAAlhC,IAAA4gC,EAAA5gC,IAIA,IAAA8hC,GAAA7C,EAAA,KACA6C,GAAA9hC,IAAAkgC,EAAAlgC,KAAA,EAAAmgC,EAAAngC,IAEA,IAAA+hC,GAAA9C,EAAA,KACA8C,GAAA/hC,IAAAkgC,EAAAlgC,KAAA,EAAAqgC,EAAArgC,IAEA,IAAAgiC,GAAA/C,EAAA,KAIA,OAHA+C,GAAAhiC,KAAA8hC,EAAA9hC,IAAA+hC,EAAA/hC,KAAA,EACAk/B,EAAA8C,GAEAjhC,GAGAhD,cAAA,SAAAlC,GAEA,MACAA,GAAA1C,WACA0C,EAAA1C,UAAA6zB,SAAA,IAGAvuB,GAAA,EAAAuB,IAAAnE,EAAA1C,UAAA6zB,WACAvuB,GAAA,EAAAuB,IAAAnE,EAAA1C,UAAA8zB,UACAxuB,GAAA,EAAAuB,IAAAnE,EAAA1C,UAAA+zB,eACAzuB,GAAA,EAAAuB,IAAAnE,EAAA1C,UAAAg0B,cAQAgG,cAAA,SAAAl5B,EAAAkF,EAAAiR,GAEA,GAAA0iB,GAAA,IAQA,IAPAj9B,QAAAyB,QAAA8Y,EAAA,SAAAvO,EAAArE,GACA,GAAAqE,EAAAkxB,YAAA94B,EAAAwE,IAAAoD,EAAAmxB,YAAA/4B,EAAA+E,eAEA,YADA8zB,EAAAjxB,MAKAixB,EACA,MAAA,KAOA,KAJA,GAAAt1B,GAAA,EACAykC,KACAC,GAAA,EAEAA,GAAA,CACA,GAAAr+B,GAAA,cAAArG,EACA2kC,EAAA,mBAAA3kC,CACA,IAAA2B,GAAA0E,IAAA1E,IAAAgjC,IAAArP,IACA,GAAA3zB,EAAA0E,GAAA,EAAA,CAEA,GAAAusB,GAAA0C,EAAAqP,GAGAC,EAAAjjC,EAAA0E,GACAw+B,EAAA/rC,EAAAgsC,mBAAAF,EACA,IAAAC,GAAAA,EAAAE,QAEA,IAAA,GADAC,GAAAH,EAAAE,QAAAnS,GACAz1B,EAAA,EAAAA,EAAA6nC,EAAA5nC,SAAAD,EACAsnC,EAAApnC,KAAA2nC,EAAA7nC,QAGA,CACA,GAAAyF,EAQA,IANAA,EADAiiC,GAAAA,EAAAI,MACAJ,EAAAI,MAGA,IAAAL,EAGAhS,EAAA,EACA6R,EAAApnC,MAAA4D,GAAA2B,EAAAsiC,OAAAN,EAAApiC,IAAAowB,QAGA,IAAAA,EAAArO,WAAAvZ,QAAA,KAAA,EAAA,CACA,GAAAg6B,GAAApS,EAAAppB,MAAA,IACAw7B,GAAA5nC,OAAA,GAAA4nC,EAAA,GAAA,GACAP,EAAApnC,MAAA4D,GAAA2B,EAAAsiC,OAAAN,EAAApiC,IAAAwiC,EAAA,YAQAN,IAAA,CAGA1kC,KAGA,MAAAykC,IAGAxmC,cAAA,SAAApE,GACA,GAAAmE,KAYA,OAXAA,GAAAsC,WAAA7F,KAAA8F,cAAA1G,GACAmE,EAAAwC,cAAA/F,KAAAgG,iBAAA5G,EAAAS,OACA0D,EAAA0C,SAAAjG,KAAAkG,YAAA9G,EAAAS,OACA0D,EAAA4C,SAAA5C,EAAAsC,WAAAO,OAAA7C,EAAAwC,eAAAK,OAAA7C,EAAA0C,UACA7G,EAAA+B,WAAA/B,EAAA+B,UAAAwB,SACAY,EAAApC,UAAA/B,EAAA+B,UACAoC,EAAA4C,SAAA5C,EAAA4C,SAAAC,OAAAhH,EAAA+B,YAEAoC,EAAA4C,SAAA9H,EAAAgI,WAAA9C,EAAA4C,UAEA5C,EAAAmnC,gBAAA1qC,KAAAoF,mBAAAhG,EAAAmE,EAAA4C,UACA5C,IA7aA3F,QAAAC,OAAA,SAAAgyB,QAAA,cAAA,cAAAvxB,OCHA,WACA,YAGA,SAAAK,GAAAsD,EAAA60B,GAEA,GAAA6T,GAAA,GAAAC,gBACAC,EAAA,4BAEAC,KACAxT,IAEA,QAEA1pB,MAAA,WACA+8B,EAAA,GAAAC,gBACAD,EAAAI,UAAA,IACA/qC,KAAAq3B,QAAA,EACAr3B,KAAAwQ,gBAAA,EACAs6B,KACAxT,MAGAD,QAAA,EACA7mB,gBAAA,EAEAuB,SAAA,KAEA3Q,KAAA,SAAArB,EAAAsvB,GAEA,GAAArvB,KAAAR,WACA6vB,QAOA,IAJAiI,KACAA,EAAA10B,KAAA7C,GACA+qC,EAAAloC,KAAAysB,IAEArvB,KAAAwQ,eAAA,CACAxQ,KAAAwQ,gBAAA,CACA,IAAA5B,GAAA5O,KAEAT,EAAA,IACAS,MAAA+R,UAAA,IAAA/R,KAAA+R,WACAxS,EAAAS,KAAA+R,SAAA,IAAA84B,EAEAtrC,GAAA6J,aAAAzH,QAAA,oBACAD,eAAAsJ,WAAA,aACA5B,aAAA4B,WAAA,oBAIA8rB,EAAAU,WAAA,0BACAmT,EAAAK,gBACAzrC,EACA,SAAAgS,GACA3T,QAAAyB,QAAAi4B,EAAA,SAAA1tB,EAAA4B,GAAA5B,EAAA2H,MAEA,WACA3C,EAAAyoB,QAAA,EACAz5B,QAAAyB,QAAAyrC,EAAA,SAAAlhC,EAAA4B,GAAA5B,MACAkhC,KACAhU,EAAAU,WAAA,2BAEA,SAAAjmB,GACA3T,QAAAyB,QAAAi4B,EAAA,SAAA1tB,EAAA4B,GAAA5B,EAAA2H,KACAulB,EAAAU,WAAA,0BACA5oB,EAAA4B,gBAAA,EACA5B,EAAAyoB,QAAA,MAOA73B,SAAA,WACA,IAAAQ,KAAAq3B,OAAA,CACA,GAAA93B,GAAAS,KAAA+R,SAAA,IAAA84B,CAEAtrC,IAAA6J,aAAAzH,QAAA,oBACAD,eAAAsJ,WAAA,aACA5B,aAAA4B,WAAA,mBAGAhL,KAAAq3B,OAAAsT,EAAAM,kBACAjrC,KAAAq3B,SACAr3B,KAAAwQ,gBAAA,GAGA,MAAAxQ,MAAAq3B,QAGA/lB,UAAA,SAAA9K,EAAA0kC,GACA,GAAAlrC,KAAAq3B,OAAA,CAEA,GAAAx0B,EACA,KAAA2D,EACA,MAAA,EAKA,IAFA3D,EAAA8nC,EAAAr5B,UAAA9K,GAEA,gBAAA3D,GACA,MAAA,IAAAA,CAIA,IAAAqoC,EAEA,IAAA,GADAC,GAAAD,EAAAn8B,MAAA,KACAP,EAAA,EAAAA,EAAA28B,EAAAxoC,SAAA6L,EAAA,CACA,GAAA4I,GAAA+zB,EAAA38B,EACA,IAAA4I,EAAA7G,QAAA,OACA6G,EAAA+zB,EAAA38B,GAAAwF,QAAA,SAAA,IACAoD,EAAAuzB,EAAAr5B,UAAA8F,IAGAvU,EAAAA,EAAAmR,QAAA,IAAAxF,EAAA,IAAA4I,GAIA,MAAAvU,GAGA,MAAA,IAAA2D,IAxHA5I,QAAAC,OAAA,SAAAgyB,QAAA,gBAAA,eAAA,aAAAlxB,OCHA,WACA,YAGA,SAAAN,KAKA,QAAA+sC,GAAAtjC,GACA,MAAAlD,MAAA6mB,MAAA3jB,EAAAC,KAEA,QAAAsjC,GAAAvjC,GACA,GAAAqwB,GAAA5jB,OAAAzM,EAAAC,IACA,OAAAowB,GAAA,IACAA,EAEAA,EAAA,IACAvzB,KAAAC,MAAAszB,EAAA,KAAA,GAAA,IAEAA,EAAA,IACAvzB,KAAAC,MAAAszB,EAAA,KAAA,IAEAA,EAAA,IACAvzB,KAAAC,MAAAszB,EAAA,KAAA,IAAA,IAGAvzB,KAAAC,MAAAszB,EAAA,KAAA,IAGA,QAAAmT,GAAAxjC,GACA,MAAAlD,MAAA6mB,MAAA,IAAA3jB,EAAAC,KAAA,IAAA,IAGA,OACAxE,OACAgoC,GAAA/kC,GAAA,EAAA3D,KAAA,MAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,GAAAugB,KAAA,KAAA5e,YAAA,GACAujB,GAAAjlC,GAAA,EAAA3D,KAAA,MAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,GAAAugB,KAAA,KAAA5e,YAAA,GACAwjB,GAAAllC,GAAA,EAAA3D,KAAA,MAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,GAAAugB,KAAA,KAAA5e,YAAA,GACAyjB,GAAAnlC,GAAA,EAAA3D,KAAA,MAAAyrB,QAAA8c,EAAAjd,KAAA,EAAA5H,GAAA,GAAAugB,KAAA,KAAA5e,YAAA,GACA0jB,GAAAplC,GAAA,EAAA3D,KAAA,OAAAyrB,QAAA8c,EAAA7c,YAAA,EAAAid,KAAA,EAAAjlB,GAAA,GAAA2B,YAAA,EAAAzB,QAAA,IACAolB,GAAArlC,GAAA,EAAA3D,KAAA,UAAAyrB,QAAA8c,EAAAp0B,MAAA,EAAAuP,GAAA,IACAulB,GAAAtlC,GAAA,EAAA3D,KAAA,OAAAyrB,QAAA8c,EAAA7c,YAAA,EAAAid,KAAA,EAAAjlB,GAAA,GAAA2B,YAAA,EAAAzB,QAAA,IACAslB,GAAAvlC,GAAA,EAAA3D,KAAA,UAAAyrB,QAAA8c,EAAAp0B,MAAA,EAAAuP,GAAA,IACAylB,GAAAxlC,GAAA,EAAA3D,KAAA,OAAAyrB,QAAA+c,EAAAld,KAAA,EAAA5H,GAAA,GAAA2B,YAAA,GACA+jB,GAAAzlC,GAAA,EAAA3D,KAAA,OAAAyrB,QAAA+c,EAAAld,KAAA,EAAA5H,GAAA,GAAA2B,YAAA,GACAgkB,IAAA1lC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA9kB,GAAA,GAAA4lB,UAAA,GACAC,IAAA5lC,GAAA,GAAA3D,KAAA,cAAAyrB,QAAA+c,EAAA9kB,GAAA,GAAA4lB,UAAA,GACAE,IAAA7lC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,GAAA2B,YAAA,GACAokB,IAAA9lC,GAAA,GAAA3D,KAAA,cAAAyrB,QAAA+c,EAAA9kB,GAAA,GAAA4lB,UAAA,GACAI,IAAA/lC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA9kB,GAAA,GAAA4lB,UAAA,GACAK,IAAAhmC,GAAA,GAAA3D,KAAA,cAAAyrB,QAAA+c,EAAA9kB,GAAA,GAAA4lB,UAAA,GACAM,IAAAjmC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAE,KAAA,EAAAtjB,YAAA,GACAwkB,IAAAlmC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAE,KAAA,EAAAtjB,YAAA,GACAykB,IAAAnmC,GAAA,GAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAE,KAAA,EAAAtjB,YAAA,GACA0kB,IAAApmC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAE,KAAA,EAAAtjB,YAAA,GACA2kB,IAAArmC,GAAA,GAAA3D,KAAA,WAAAyrB,QAAAgd,EAAAnd,KAAA,EAAAjG,YAAA,GACA4kB,IAAAtmC,GAAA,GAAA3D,KAAA,UAAAyrB,QAAAgd,EAAAnd,KAAA,EAAAjG,YAAA,GACA6kB,IAAAvmC,GAAA,GAAA3D,KAAA,YAAAyrB,QAAAgd,EAAAnd,KAAA,EAAAjG,YAAA,GACA8kB,IAAAxmC,GAAA,GAAA3D,KAAA,WAAAyrB,QAAAgd,EAAAnd,KAAA,EAAAjG,YAAA,GACA+kB,IAAAzmC,GAAA,GAAA3D,KAAA,KAAAyrB,QAAA+c,EAAAld,KAAA,EAAA5H,GAAA,GAAAugB,KAAA,KAAA5e,YAAA,GACAglB,IAAA1mC,GAAA,GAAA3D,KAAA,KAAAyrB,QAAA+c,EAAAld,KAAA,EAAA5H,GAAA,GAAAugB,KAAA,MACAqG,IAAA3mC,GAAA,GAAA3D,KAAA,KAAAyrB,QAAA8c,EAAAI,KAAA,EAAAtjB,YAAA,GAIAklB,IAAA5mC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,IACA8mB,IAAA7mC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,IAEA+mB,IAAA9mC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAE,KAAA,GACA+B,IAAA/mC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAE,KAAA,GACAgC,IAAAhnC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAE,KAAA,GACAiC,IAAAjnC,GAAA,GAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAnd,KAAA,GACAuf,IAAAlnC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAA/c,YAAA,GAAAid,KAAA,GACAmC,IAAAnnC,GAAA,GAAA3D,KAAA,WAAAyrB,QAAAgd,EAAAt0B,MAAA,GACA42B,IAAApnC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAA/c,YAAA,GAAAid,KAAA,GACAqC,IAAArnC,GAAA,GAAA3D,KAAA,WAAAyrB,QAAAgd,EAAAt0B,MAAA,GACA82B,IAAAtnC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAnd,KAAA,GACA4f,IAAAvnC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAnd,KAAA,GACA6f,IAAAxnC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GACA8f,IAAAznC,GAAA,GAAA3D,KAAA,eAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GACA+f,IAAA1nC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAE,KAAA,GACA2C,IAAA3nC,GAAA,GAAA3D,KAAA,eAAAyrB,QAAAgd,EAAAnd,KAAA,GACAigB,IAAA5nC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GACAkgB,IAAA7nC,GAAA,GAAA3D,KAAA,eAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GACAmgB,IAAA9nC,GAAA,GAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GACAogB,IAAA/nC,GAAA,GAAA3D,KAAA,MAAAyrB,QAAAgd,EAAAnd,KAAA,GACAqgB,IAAAhoC,GAAA,GAAA3D,KAAA,MAAAyrB,QAAAgd,EAAAnd,KAAA,GACAsgB,IAAAjoC,GAAA,GAAA3D,KAAA,cAAAyrB,QAAAgd,EAAAnd,KAAA,GACAugB,IAAAloC,GAAA,GAAA3D,KAAA,aAAAyrB,QAAAgd,EAAAa,UAAA,EAAAhe,KAAA,GAIAwgB,KAAAnoC,GAAA,IAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAa,UAAA,EAAAX,KAAA,GACAoD,KAAApoC,GAAA,IAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAa,UAAA,EAAAX,KAAA,GAEAqD,KAAAroC,GAAA,IAAA3D,KAAA,WAAAyrB,QAAA8c,EAAAI,KAAA,EAAAjlB,GAAA,KACAuoB,KAAAtoC,GAAA,IAAA3D,KAAA,YAAAyrB,QAAAgd,EAAAa,UAAA,EAAAX,KAAA,GACAuD,KAAAvoC,GAAA,IAAA3D,KAAA,UAAAyrB,QAAA+c,EAAAc,UAAA,EAAAX,KAAA,GACAwD,KAAAxoC,GAAA,IAAA3D,KAAA,UAAAyrB,QAAA+c,EAAAc,UAAA,EAAAhe,KAAA,GACA8gB,KAAAzoC,GAAA,IAAA3D,KAAA,MAAAyrB,QAAA8c,EAAAe,UAAA,EAAAn1B,MAAA,EAAAmX,KAAA,GAGA+gB,MAAA1oC,GAAA,KAAA3D,KAAA,MAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,UAAAsrC,UAAA,EAAAn1B,MAAA,GACAm4B,MAAA3oC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,UAAAsrC,UAAA,EAAAn1B,MAAA,GACAo4B,MAAA5oC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,UAAAsrC,UAAA,EAAAn1B,MAAA,GAEAq4B,MAAA7oC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAa,UAAA,GACAmD,MAAA9oC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAAgd,EAAAa,UAAA,GAEAoD,MAAA/oC,GAAA,KAAA3D,KAAA,cAAAyrB,QAAAgd,EAAAa,UAAA,GACAqD,MAAAhpC,GAAA,KAAA3D,KAAA,KAAAyrB,QAAAgd,EAAAa,UAAA,GACAsD,MAAAjpC,GAAA,KAAA3D,KAAA,WAAAyrB,QAAAgd,EAAAa,UAAA,GAEAuD,MAAAlpC,GAAA,KAAA3D,KAAA,MAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,YAAAsrC,UAAA,EAAAn1B,MAAA,GACA24B,MAAAnpC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,YAAAsrC,UAAA,EAAAn1B,MAAA,GACA44B,MAAAppC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA5F,QAAA,YAAAsrC,UAAA,EAAAn1B,MAAA,GAEA64B,MAAArpC,GAAA,KAAA3D,KAAA,YAAAyrB,QAAA+c,EAAAc,UAAA,GACA2D,MAAAtpC,GAAA,KAAA3D,KAAA,YAAAyrB,QAAA+c,EAAAc,UAAA,GAEA4D,KAAAvpC,GAAA,IAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAE,KAAA,GACAwE,MAAAxpC,GAAA,KAAA3D,KAAA,UAAAyrB,QAAAgd,EAAAE,KAAA,GACAyE,MAAAzpC,GAAA,KAAA3D,KAAA,UAAAyrB,QAAAgd,EAAAE,KAAA,GAEA0E,MAAA1pC,GAAA,KAAA3D,KAAA,OAAAyrB,QAAA+c,EAAA5kC,gBAAA,EAAA0lC,UAAA,EAAAn1B,MAAA,GAEAm5B,MAAA3pC,GAAA,KAAA3D,KAAA,SAAAyrB,QAAA+c,EAAAG,KAAA,GACA4E,MAAA5pC,GAAA,KAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAE,KAAA,GACA6E,MAAA7pC,GAAA,KAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAE,KAAA,GACA8E,MAAA9pC,GAAA,KAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAE,KAAA,GACA+E,MAAA/pC,GAAA,KAAA3D,KAAA,SAAAyrB,QAAAgd,EAAAnd,KAAA,GACAqiB,MAAAhqC,GAAA,KAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAnd,KAAA;EACAsiB,MAAAjqC,GAAA,KAAA3D,KAAA,QAAAyrB,QAAAgd,EAAAnd,KAAA,GAGAuiB,OAAAlqC,GAAA,MAAA3D,KAAA,YAAAyrB,QAAAgd,EAAAa,UAAA,GACAwE,OAAAnqC,GAAA,MAAA3D,KAAA,YAAAyrB,QAAAgd,EAAAa,UAAA,IAKAvsB,WACA2rB,GAAA/kC,GAAA,EAAA3D,KAAA,UACA4oC,GAAAjlC,GAAA,EAAA3D,KAAA,SACA6oC,GAAAllC,GAAA,EAAA3D,KAAA,QACA8oC,GAAAnlC,GAAA,EAAA3D,KAAA,QACA+oC,GAAAplC,GAAA,EAAA3D,KAAA,UACAgpC,GAAArlC,GAAA,EAAA3D,KAAA,cAGAyb,WACAsyB,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SACAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OAAAC,MAAA,OACAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QAAAC,KAAA,QACAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SACAC,MAAA,eACAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YACA3G,GAAA,aAAAC,GAAA,aAAAC,GAAA,aAAA0G,GAAA,aAAAzG,GAAA,aAAAC,GAAA,aAAAyG,GAAA,aAAAC,GAAA,aAAAzG,GAAA,aACA0G,MAAA,eACAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cAAAC,MAAA,cACAC,MAAA,UACAC,MAAA,QACAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QACAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBACAC,MAAA,kBAAAC,MAAA,kBACAC,MAAA,QACAC,MAAA,QAGAxtB,aACAkjB,GAAA,EACAE,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAGAiK,WACAvK,EAAA,UACAE,EAAA,YACAI,EAAA,SACAG,EAAA,QACA+J,GAAA,SACAC,GAAA,YACAC,IAAA,WACAC,IAAA,QAGAltC,UACAuiC,GAAA/kC,GAAA,EAAA3D,KAAA,WACA4oC,GAAAjlC,GAAA,EAAA3D,KAAA,OAAA4kC,QAAA,IACAiE,GAAAllC,GAAA,EAAA3D,KAAA,MAAA4kC,QAAA,IACAkE,GAAAnlC,GAAA,EAAA3D,KAAA,QAAA4kC,QAAA,IACAmE,GAAAplC,GAAA,EAAA3D,KAAA,OAAA4kC,QAAA,KAGAp8B,aACAkgC,GAAA/kC,GAAA,EAAA3D,KAAA,iBACA4oC,GAAAjlC,GAAA,EAAA3D,KAAA,YACA6oC,GAAAllC,GAAA,EAAA3D,KAAA,WACA8oC,GAAAnlC,GAAA,EAAA3D,KAAA,kBAIAwnC,oBACAqB,GAAAllC,GAAA,EAAA3D,KAAA,yBAAA2nC,MAAA,MACA8B,IAAA9lC,GAAA,GAAA3D,KAAA,KAAA2nC,MAAA,IACAyC,IAAAzmC,GAAA,GAAA3D,KAAA,gBACAsqC,IAAA3mC,GAAA,GAAA3D,KAAA,qBAAA2nC,MAAA,MACA4C,IAAA5mC,GAAA,GAAA3D,KAAA,SAAA2nC,MAAA,IACA6C,IAAA7mC,GAAA,GAAA3D,KAAA,QAAA2nC,MAAA,IACA2L,IAAA3vC,GAAA,GAAA3D,KAAA,UAAA2nC,MAAA,IACA4L,IAAA5vC,GAAA,GAAA3D,KAAA,SAAA2nC,MAAA,IACA6L,IAAA7vC,GAAA,GAAA3D,KAAA,WAAA2nC,MAAA,IACA8L,IAAA9vC,GAAA,GAAA3D,KAAA,UAAA2nC,MAAA,IACAuL,IAAAvvC,GAAA,GAAA3D,KAAA,YAAA2nC,MAAA,IACA+L,IAAA/vC,GAAA,GAAA3D,KAAA,WAAA2nC,MAAA,IACAsD,IAAAtnC,GAAA,GAAA3D,KAAA,MAAA2nC,MAAA,MACAuD,IAAAvnC,GAAA,GAAA3D,KAAA,MAAA2nC,MAAA,MACA6D,IAAA7nC,GAAA,GAAA3D,KAAA,SACA2rC,IAAAhoC,GAAA,GAAA3D,KAAA,iBAAA2nC,MAAA,IACAgM,IAAAhwC,GAAA,GAAA3D,KAAA,OAAA2nC,MAAA,MACAiM,IAAAjwC,GAAA,GAAA3D,KAAA,OAAA2nC,MAAA,MACAkM,IAAAlwC,GAAA,GAAA3D,KAAA,OAAA2nC,MAAA,MACAwL,IAAAxvC,GAAA,GAAA3D,KAAA,OAAA2nC,MAAA,MAGAmM,KAAAnwC,GAAA,IAAA3D,KAAA,oBAAA2nC,MAAA,KACAoM,KAAApwC,GAAA,IAAA3D,KAAA,mBAAA2nC,MAAA,MACAqM,KAAArwC,GAAA,IAAA3D,KAAA,YAAA2nC,MAAA,OACAsM,KAAAtwC,GAAA,IAAA3D,KAAA,YAAA2nC,MAAA,OACAuM,KACAvwC,GAAA,IACA3D,KAAA,WACAynC,QAAA,SAAAnS,GACA,GAAAA,EAAA5nB,QAAA,KAAA,EAAA,CACA,GAAAg6B,GAAApS,EAAAppB,MAAA,IACA,SACAvI,GAAA,GAAAikC,OAAA,IAAA1iC,IAAAwM,OAAAg2B,EAAA,IAAA,MACA/jC,GAAA,KAAAikC,OAAA,IAAA1iC,IAAAwM,OAAAg2B,EAAA,MAIA,QAAA/jC,GAAA,GAAAikC,OAAA,IAAA1iC,IAAAwM,OAAA4jB,GAAA,QAIA6e,KAAAxwC,GAAA,IAAA3D,KAAA,SAAA2nC,MAAA,OAGA3kB,cAEArf,GAAA,EAAAK,SAAA,SAAAhE,KAAA,iBAAAU,QAAAiD,GAAA,GAAAuB,cACAvB,GAAA,EAAAK,SAAA,SAAAhE,KAAA,aAAAU,QAAAiD,GAAA,KAAAuB,IAAA,QAGAmN,SAAA,SAAAhO,GAEA,GAAA+vC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAre,EAAA,YACAA,KAAA5xB,GACA+vC,GAAA,GAGAne,EAAA,cACAA,IAAA5xB,KACAgwC,GAAA,GAMA,KAFA,GAAAE,GAAA,EACA1wB,OACA,CACA0wB,GAEA,IAAAC,GAAA,QAAAD,CACA,MAAAC,IAAAnwC,IACA,KAGA,IAAAowC,GAAApwC,EAAAmwC,EACA,IAAAC,MACA,KAGA,IAAA,KAAAA,OAGA,CAEA,GAEAxe,GAFAye,GAAA/wC,GAAA8wC,EAiBA,IAbAL,GACAne,EAAA,QAAAse,EAAA,OACAG,EAAAxvC,IAAAb,EAAA4xB,IAEAoe,GACApe,EAAA,QAAAse,EAAA,QACAG,EAAAxvC,IAAAb,EAAA4xB,KAGAA,EAAA,aAAAse,EACAG,EAAAxvC,IAAAwM,OAAArN,EAAA4xB,KAGAye,EAAAxvC,IAAA,GAAAwvC,EAAAxvC,IAAA,EAAA,CACA,GAAAovC,EAEA,GADAre,EAAA,aAAAse,EACAte,IAAA5xB,GAAA,CACA,GAAA,GAAAA,EAAA4xB,GACA,KAEAye,GAAAlpB,WAAAnnB,EAAA4xB,OAGAqe,IAAA,CAIAzwB,GAAA9jB,KAAA20C,KAKA,MAAA7wB,IAGA8wB,UAAA,SAAA1vC,EAAAtB,GACAsB,EAAAtB,GAAA+N,OAAA/N,IAGAH,WAAA,SAAAoxC,EAAAC,GAIA,QAAAC,GAAA/tC,GAEA,GAAAuP,GAAA5E,OAAA3K,EAAA7B,IACA+xB,GAAAv2B,MAAAqG,EAAApD,KAAA,MAAAszB,GAAAv2B,MAAAqG,EAAApD,MACA2S,EAAAvU,KAAA6mB,MAAAtS,IAGAvP,EAAApD,KAAA0N,GACAA,EAAAtK,EAAApD,KAAA2S,EAGAjF,EAAAtK,EAAApD,IAAA2S,EAdA,GAAAjF,MAEA4lB,EAAA95B,IAgBApC,SAAAyB,QAAAo4C,EAAA,SAAA7tC,EAAA4B,GACA5B,GACA+tC,EAAA/tC,KAIA8tC,GACA95C,QAAAyB,QAAAq4C,EAAA,SAAA9tC,EAAA4B,GACA5B,GACA+tC,EAAA/tC,IAKA,IAAAlB,KAEA,KAAA,GAAA8C,KAAA0I,GAAA,CACA,GAAApM,IAAAC,IAAAmM,EAAA1I,GAAAhF,GAAA+N,OAAA/I,GACA9C,GAAA9F,KAAAkF,GAGA,MAAAY,KAtXA9K,QAAAC,OAAA,SAAAgyB,QAAA,eAAAxxB","file":"app.min.js","sourcesContent":["(function () {\n'use strict';\n\nangular.module('dnsim').config(['$routeProvider', config]);\n\nfunction config($routeProvider) {\n\n  $routeProvider.\n  \n    when('/about', {\n      templateUrl: 'ui/about/about.html',\n      controller: 'AboutCtrl as about'\n    }).\n    \n    when('/setup', {\n      templateUrl: 'ui/nav/setup.html',\n      controller: 'SetupCtrl'\n    }).\n    when('/test', {\n      templateUrl: 'ui/nav/test.html',\n      controller: 'TestCtrl'\n    }).\n    \n    when('/items', {\n      templateUrl: 'ui/secrets/items.html',\n      controller: 'ItemsCtrl as items'\n    }).\n    \n    when('/', {\n      redirectTo: '/builds'\n    }).\n    when('/builds', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/build/:buildName*', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/view-group/:region?', {\n      templateUrl: 'ui/builds/view-group.html',\n      controller: 'ViewGroupCtrl'\n    }).\n    when('/edit-build/:buildName*', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/new-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/delete-build/:name*', {\n      templateUrl: 'ui/builds/delete-build.html',\n      controller: 'DeleteBuildCtrl as deleteBuild',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/search/:cat?', {\n      templateUrl: 'ui/search/item-search.html',\n      controller: 'ItemSearchCtrl as ctrl'\n    }).\n    \n    when('/item', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    when('/item/:region?/:i*', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/export', {\n      templateUrl: 'ui/nav/export.html',\n      controller: 'ExportCtrl',\n    }).\n    \n    when('/talismans', {\n      templateUrl: 'ui/builds/build-talismans.html',\n      controller: 'BuildTalismansCtrl as ctrl',\n    }).\n    \n    when('/publish', {\n      templateUrl: 'ui/online/publish.html',\n      controller: 'PublishCtrl as ctrl',\n    }).\n    \n    when('/profile/:uid?', {\n      templateUrl: 'ui/online/profile.html',\n      controller: 'ProfileCtrl as ctrl',\n    }).\n    \n    when('/published', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/published/:uid/:buildName*', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/build-search/:jobId?', {\n      templateUrl: 'ui/online/build-search.html',\n      controller: 'BuildSearchCtrl as ctrl',\n    }).\n    \n    otherwise({\n      redirectTo: '/builds'\n    });\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim')\n.controller('AboutCtrl', \n  ['$window',\n  function($window) {\n    'use strict';\n    document.body.className = 'default-back';\n    $window.document.title = 'DN Gear Sim';\n  }]\n);\n})();","angular.module('dnsim').controller('buildActionsCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.deleteGroup = function() {\n    $location.path('/delete-build/' + vm.buildName);\n  }\n  \n  this.editGroup = function() {\n    $location.path('/edit-build/' + vm.buildName)\n  }\n  \n  this.copyGroup = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      vm.build.enemyLevel,\n      vm.build.playerLevel,\n      vm.build.heroLevel,\n      vm.build.job,\n      vm.build.damageType,\n      vm.build.element,\n      vm.build.secondaryElement,\n      vm.build.enemyStatCaps, \n      vm.build.playerStatCaps, \n      vm.build.conversions, \n      vm.build.baseStats, \n      vm.build.heroStats);\n    \n    $location.path('/build/' + newGroupName);\n  }\n  \n  this.reloaded = false;\n  this.reloadGroup = function() {\n    dntReset();\n    vm.reloaded = false;\n    \n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n    \n    vm.onChange();\n  }\n\n  function tryInit() {\n    if(vm.reloaded) {\n      return;\n    }\n    \n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n    \n    if(allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\n      vm.build.items = newItems;\n      \n      vm.reloaded = true;\n      $timeout(vm.onChange);\n    }\n  }\n  \n  function progress() {\n  }\n  \n  this.createShortUrl = function() {\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\n  }\n    \n  this.setShortUrl = function() {\n    if(vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  }\n  \n  this.setShortUrl();\n}])\n.directive('dngearsimBuildActions', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    templateUrl: 'ui/builds/build-actions.html'\n  };\n});","angular.module('dnsim').controller('buildItemCtrl',\n\n['$timeout','statHelper','saveHelper',\nfunction($timeout,statHelper,saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n}])\n.directive('dngearsimBuildItem', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-item.html'\n  };\n});","angular.module('dnsim').controller('BuildListCtrl', \n  [ '$window','$location','$routeParams','$timeout','saveHelper',\n  function($window,$location,$routeParams,$timeout,saveHelper) {\n    'use strict';\n    \n    var vm = this;\n    document.body.className = 'saved-back';\n    this.setupBuilds = function() {\n      vm.savedItems = saveHelper.getSavedItems();\n      vm.buildNames = Object.keys(vm.savedItems).sort();\n      vm.builds = [];\n      for(var i=0;i<vm.buildNames.length;++i) {\n        vm.builds.push({\n          name: vm.buildNames[i],\n          build: vm.savedItems[vm.buildNames[i]],\n        });\n      }\n    }\n    this.setupBuilds();\n    \n    if('buildName' in $routeParams) {\n      if($routeParams.buildName != this.currentGroup) {\n        this.currentGroup = $routeParams.buildName;\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n      }\n    }\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\n      $location.path('/build/' + this.currentGroup);\n    }\n    else {\n      this.currentGroup = null;\n    }\n    \n    if(this.currentGroup) {\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\n    }\n    else {\n      $window.document.title = 'DN Gear Sim | BUILDS';\n    }\n\n    this.anyItems = function() {\n      return Object.keys(this.savedItems).length > 0;\n    }\n\n    this.createGroup = function() {\n      $location.path('/new-build');\n    }\n    \n    this.handleChange = function() {\n      vm.setupBuilds();\n      $timeout();\n      // console.log('change');\n    }\n  \n    this.toggleGroup = function(buildName) {\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\n      $location.url('/build/' + buildName);\n    }\n    \n    this.publish = function() {\n      $location.url('/publish');\n    }\n    \n    this.search = function() {\n      $location.url('/build-search');\n    }\n  }]\n);\n","angular.module('dnsim').controller('buildStatsCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n}])\n.directive('dngearsimBuildStats', function() {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n    },\n    controller: 'buildStatsCtrl',\n    controllerAs: 'statsCtrl',\n    templateUrl: 'ui/builds/build-stats.html'\n  };\n});","angular.module('dnsim').controller('buildSummaryCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.getBuildSummary = function(group) {\n    var summary = '';\n    \n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\n      if(itemsByType.length > 0) {\n        if(summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n    \n    return summary;\n  }\n}])\n.directive('dngearsimBuildSummary', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-summary.html'\n  };\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  \n  $window.document.title = 'DN Gear Sim | TALISMANS';\n  $window.scrollTo(0, 0);\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    // console.log('cannot find build');\n    return;\n  }\n  \n  this.getGroupCalcStats = function() {\n    if(this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.pickup = function(index) {\n    vm.selectedIndex = index;\n    \n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n  this.headers = [\n    '+100%',\n    '+75%',\n    '+25%',\n    '+0%',\n    ];\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n  \n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n  \n  this.selectedIndex = -1;\n  \n  this.rows = [];\n  \n  this.updateRows = function() {\n    vm.rows = [];\n        \n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n      if(item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if(!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n        \n        var rowIndex = 0;\n        for(;;) {\n          if(!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n          \n          if(vm.rows[rowIndex][pcIndex].index < 0) {\n            if(!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n            \n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          }\n          else {\n            rowIndex++;\n          }\n        }\n      }\n      \n    });\n    \n    if(vm.rows.length < 3) {\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\n    }\n  }\n  \n  this.makeFakeCells = function(num) {\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\n  }\n  \n  this.makeCell = function(item, index) {\n    return { item: item, index: index };\n  }\n  \n  this.click = function(col) {\n    if(vm.selectedIndex == -1) {\n      if(col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    }\n    else {\n      vm.move(col);\n    }\n  }\n  \n  this.move = function(col) {\n    \n    var items = vm.savedItems[vm.groupName].items;\n    if(col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n      \n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    }\n    else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  }\n  \n  this.setTalisman = function(item, newEnhancementNum) {\n    var extraStats = [];\n    angular.forEach(item.stats, function(stat, index) {\n      if(newEnhancementNum) {\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\n      }\n    });\n    \n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n    \n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  }\n  \n    \n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if(this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n    \n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n    \n    var extraStats = [];\n    var fullStats1 = [];\n    if(item.stats) {\n      angular.forEach(item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n    \n    extraStats = [];\n    angular.forEach(item2.stats, function(stat, index) {\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.save = function() {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/build/' + vm.groupName);\n  }\n  \n  this.updateRows();\n  \n}]); ","angular.module('dnsim').controller('buildCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  \n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  this.category = itemCategory.byName(selectedCategory);\n  if(!this.category) {\n    selectedCategory = 'titles';\n    this.category = itemCategory.byName('titles');\n  }\n  \n  this.getCategoryItems = function() {\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\n    if(vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    }\n    else {\n      return [];\n    }\n  }\n  \n  this.getCategories = function() {\n    return itemCategory.categories;\n  }\n    \n  this.setSelectedCategory = function(value) {\n    this.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  }\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.allowMoreItems = function() {\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  this.getItemCount = function() {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n    \n    if(vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        }\n        else if(item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n      \n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    }\n    else if(vm.category.name == 'increasing gems') {\n      \n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if(!gemType) {\n            gemType = 0;\n          }\n          \n          if(!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        }\n        else if(item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n      \n      itemCountText = ''\n      angular.forEach(numIncreasingGems, function(number, gemType) {\n        if(itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n      \n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    }\n    else {\n      var numItems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n      \n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if(cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n    \n    return itemCountText + ' ' + vm.category.name;\n  }\n  \n  this.handleChange = function() {\n    vm.stats = statHelper.getBuildStats(vm.build);\n    vm.onChange();\n  }\n  \n  this.removeItem = function(item) {\n    item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function(gItem, index) {\n      if(gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n\n    vm.build.items = newItemList;\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.handleChange();\n  }\n  \n}])\n.directive('dngearsimBuild', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange',\n      server: '=server'\n    },\n    controller: 'buildCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build.html'\n  };\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\n\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  this.newGroup = true;\n  if('name' in $routeParams) {\n      this.name = $routeParams.name;\n  }\n  \n  this.delete = function() {\n    saveHelper.updatedSavedItems(this.name, []);\n    $location.path('/builds/');\n  }\n    \n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  this.savedItems = saveHelper.getSavedItems();\n  this.group = {};\n  this.newGroup = true;\n  if('buildName' in $routeParams) {\n      this.groupName = $routeParams.buildName;\n      if(this.groupName in this.savedItems) {\n        this.group = this.savedItems[this.groupName];\n        this.newGroup = false;\n      }\n  }\n  else {\n    this.groupName = '';\n  }\n  this.oldGroupName = this.groupName;\n  this.heroStats = [];\n  this.elements = hCodeValues.elements;\n  this.damageTypes = hCodeValues.damageTypes;\n  \n  if(this.group.damageType) {\n    this.damageType = this.group.damageType;\n  }\n  else {\n    this.damageType = hCodeValues.damageTypes[0];\n  }\n    \n  if(this.group.element) {\n    this.element = this.group.element;\n  }\n  else {\n    this.element = hCodeValues.elements[0];\n  }\n    \n  if(this.group.secondaryElement) {\n    this.secondaryElement = this.group.secondaryElement;\n  }\n  else {\n    this.secondaryElement = hCodeValues.elements[0];\n  }\n\n  if(this.group.enemyLevel) {\n    this.enemyLevel = this.group.enemyLevel;\n  }\n  else {\n    this.enemyLevel = 90;\n  }\n  \n  if(this.group.playerLevel) {\n    this.playerLevel = this.group.playerLevel;\n  }\n  else {\n    this.playerLevel = 90;\n  }\n  \n  if(this.group.heroLevel && this.group.heroLevel > 0) {\n    this.heroLevel = this.group.heroLevel;\n  }\n  else {\n    this.heroLevel = 1;\n  }\n  \n  this.init = function(vm) {\n    var newJobs = jobs.getFinalJobs();\n    if(newJobs.length > 0) {\n      $timeout( function() {\n        \n        if('job' in vm.group) {\n          angular.forEach(newJobs, function(value, key) {\n            if(value.id == vm.group.job.id) {\n              vm.job = value;\n            }\n          });\n        }\n        \n        vm.setHeroStats();\n      });\n    }\n  }\n  \n  this.setJob = function() {\n    $window.scrollTo(0, 0);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  character.init(function() { vm.init(vm) });\n  \n  this.getStatCap = function(colName, useLevel) {\n    return character.getStatCaps(useLevel)[colName];\n  }\n  this.getJobConversion = function(colName) {\n    return character.getConversions(this.job.id)[colName];\n  }\n  this.getJobBaseStat = function(colName) {\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\n  }\n  \n  this.invalidGroupName = function() {\n    if(!this.groupName) {\n      return true;\n    }\n    \n    if(this.groupName in this.savedItems) {\n      if(this.newGroup || this.groupName != this.oldGroupName) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  this.ok = function() {\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\n    var conversions = character.getConversions(this.job.id);\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\n    var heroStats = character.getHeroStats(this.heroLevel);\n    \n    if(this.newGroup) {\n      this.oldGroupName = this.groupName;\n      saveHelper.importGroup(this.groupName, []);\n    }\n    \n    saveHelper.renameSavedGroup(\n      this.oldGroupName, \n      this.groupName,\n      this.enemyLevel,\n      this.playerLevel,\n      this.heroLevel,\n      this.job,\n      this.damageType,\n      this.element,\n      this.secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\n    \n    $location.path('/build/' + this.groupName);\n  }\n  \n  this.setHeroStats = function() {\n    this.heroStats = character.getHeroStats(this.heroLevel);\n    // console.log('got ' + this.heroStats.length + ' hero stats');\n  }\n  \n  $timeout(function() {\n    var input = document.getElementById('groupNameInput');\n    if(input) {\n      input.focus();\n      input.setSelectionRange(0, 9999);\n    }\n  });\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\n\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n  \n  this.setOptions = function() {\n    if(vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if(vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  }\n  \n  this.selectOption = function(value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n      \n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function(columns, fileName) {\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    }\n    else {\n      vm.setOptions();\n      // console.log('setup next step');\n    }\n  }\n  \n  this.tryToAddItem = function(dntFiles, item) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        if(vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.build.items.push(newItem);\n          vm.onChange();\n        }\n      }\n    }\n  }\n  \n  this.reset = function() {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function() {\n      vm.setOptions();\n    });\n  }\n  \n  this.hasStarted = function() {\n    return vm.startedForCat == vm.category.name;\n  }\n  \n  this.start = function() {\n    vm.startedForCat = vm.category.name;\n    \n    jobs.init(function() {}, vm.reset);\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  }\n  \n  this.hasOptions = function() {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  }\n  \n  this.cancel = function() {\n    vm.startedForCat = '';\n    vm.reset();\n  }\n  \n  this.back = function() {\n    if(vm.stepNumber == 0) {\n      vm.cancel();\n    }\n    else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n        \n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\n      \n      vm.setOptions();\n    }\n  }\n  \n}])\n.directive('dngearsimQuickAdd', function() {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      onChange: '&onChange',\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    templateUrl: 'ui/builds/quick-add.html'\n  };\n});","angular.module('dnsim').controller('ViewGroupCtrl', \n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\n    'use strict';\n  \n    document.body.className = 'saved-back';\n    $window.document.title = 'DN Gear Sim';\n    \n    region.setLocationByName($routeParams.region);\n    \n    $scope.buildName = '';\n    $scope.build = {};\n    \n\n    if('g' in $routeParams && 'i' in $routeParams) {\n      $scope.buildName = $routeParams.g;\n      \n      $scope.enemyLevel = $routeParams.e;\n      $scope.playerLevel = $routeParams.p;\n      $scope.heroLevel = $routeParams.h;\n      $scope.job = { id: $routeParams.j };\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n      $scope.element = hCodeValues.elements[$routeParams.t];\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n        \n      var items = [];\n      \n      var itemString = $routeParams.i;\n      \n      angular.forEach(itemString.split(','), function(itemStr, index) {\n        var item = exportLinkHelper.decodeItem(itemStr);\n        \n        if(item.id > 0) {\n          items.push(item);\n        }\n      });\n\n      $scope.build = {};\n      $scope.savedItems = {};\n      $scope.savedItems[$scope.buildName] = $scope.build;\n      $scope.build.items = items;\n      $scope.isLoading = true;\n      \n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        dntData.init(fileName, columns, progress, tryInit);\n      });\n      \n      translations.init(progress, tryInit);\n      jobs.init(progress, tryInit);\n      character.init(tryInit);\n      \n      $timeout();\n    }\n    \n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n    \n    function tryInit() {\n      \n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n        return;\n      }\n      \n      $timeout(function() {\n        var groupName = $scope.buildName;\n        var group = $scope.build;\n        \n        $scope.job = jobs.getById($scope.job.id);\n        \n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n        if($scope.job) {\n          $scope.conversions = character.getConversions($scope.job.id);\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n        }\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\n        \n        var newItems = groupHelper.reloadGroup(groupName, group);\n        dntReset();\n      \n        $scope.savedItems = {};\n        $scope.build = {\n          items: newItems,\n          lastUpdate: group.lastUpdate,\n\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats,\n        };\n        $scope.savedItems[groupName] = $scope.build;\n        $scope.stats = statHelper.getBuildStats($scope.build);\n        \n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n      });\n    }\n    \n    function progress() {\n    }\n    \n    $scope.copyGroup = function() {\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n      // console.log('copying in as ' + newBuildName);\n      \n      saveHelper.renameSavedGroup(\n        newBuildName, \n        newBuildName,\n        $scope.enemyLevel,\n        $scope.playerLevel,\n        $scope.heroLevel,\n        $scope.job,\n        $scope.damageType,\n        $scope.element,\n        $scope.secondaryElement,\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\n      \n      $location.url('/build/' + newBuildName);\n    }\n  }]\n);\n","(function () {\n'use strict';\nangular.module('dnsim').filter('escape', [function() {\n  'use strict';\n\n  function escapeFilter(input) {\n      if(input) {\n          return window.encodeURIComponent(input);\n      }\n      return '';\n  }\n\n  return escapeFilter;\n}]);\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').filter('percentage', [function() {\n  'use strict';\n\n  function percentageFilter(input) {\n    if(typeof input == 'number') {\n      return (Math.round(input * 100 * 100) / 100) + '%';\n    }\n    else {\n      return input;\n    }\n  }\n  percentageFilter.$stateful = false;\n\n  return percentageFilter;\n}]);\n\n})();","angular.module('dnsim').controller('ExportCtrl', \n  ['$scope','$window','saveHelper',\n   function($scope, $window, saveHelper) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | EXPORT';\n  \n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n  \n  $scope.save = function() {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  }\n}]);\n","angular.module('dnsim').controller('NavCtrl', \n  ['$scope','$location','translations','region','itemCategory','saveHelper',\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\n    'use strict';\n\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\n    \n    var noMenu = [];\n    var noLocationMenu = [aboutAction];\n    var normalMenu = [\n      {path: 'builds', name:'builds', icon: 'wrench'},\n      {path: 'search', name:'gear', icon: 'search'},\n      {path: 'items', name:'items', icon: 'search'},\n      aboutAction,\n      ];\n    \n    var buildAction = {path: 'build', name:'build', icon: 'wrench'};\n    \n    var withBuildMenu = [\n      {path: 'builds', name:'builds', icon: 'wrench'},\n      buildAction,\n      {path: 'search', name:'gear', icon: 'search'},\n      {path: 'items', name:'items', icon: 'search'},\n      aboutAction,\n      ];\n      \n    //var basePath = angular.element(document.querySelector('base')).attr('href');\n      \n    region.init();\n  \n    $scope.isSearch = function() {\n      return $location.path().indexOf('/search') == 0;\n    }\n\n    $scope.isLoading = function() {\n      return translations.startedLoading && \n            !translations.isLoaded() &&\n            region.tlocation != null &&\n            region.tlocation.url != '' &&\n            !$scope.noRegion();\n    }\n    \n    $scope.noRegion = function() {\n      return region.dntLocation == null;\n    }\n    \n    $scope.getActionUrl = function(action) {\n      if(action.name == 'search') {\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\n        if(cat) {\n          return action.path + '?cat=' + cat;\n        }\n        else {\n          return action.path;\n        }\n      }\n      else {\n          return action.path;\n      }\n    }\n      \n    $scope.getActions = function() {\n      // console.log('getting actions');\n      var menu = null;\n      \n      var currentBuild = saveHelper.getCurrentBuild();\n      if(currentBuild) {\n        var savedItems = saveHelper.getSavedItems();\n        if(!(currentBuild in savedItems)) {\n          currentBuild = null;\n        }\n      }\n\n      if(region.dntLocation != null && region.dntLocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if(region.tlocation != null && region.tlocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if(currentBuild && currentBuild != 'null') {\n        menu = withBuildMenu;\n        buildAction.path = 'build/' + currentBuild;\n        buildAction.name = currentBuild;\n      }\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\n        menu = normalMenu;\n      }\n      else {\n        menu = normalMenu;\n      }\n      \n      angular.forEach(menu, function(value, key) {\n        delete value.extraCss;\n        if($location.path().length == 1) {\n          if(value.path.length == 1) {\n            value.extraCss = 'active';\n          }\n        }\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\n          if(value.path != 'builds' || $location.path() == '/builds') {\n            value.extraCss = 'active';\n          }\n        }\n      });\n      \n      return menu;\n    };\n  }\n])\n.directive('dngearsimNav', function() {\n  return {\n    templateUrl: 'ui/nav/nav.html'\n  };\n});","angular.module('dnsim').controller('SetupCtrl', \n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | SETUP';\n  \n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n  \n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if(sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n  \n  $scope.location = sessionLocation;\n  if($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  }\n  else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n  \n  $scope.setLocation = function(url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  $scope.resetSessionData = function() {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function() {   \n      location.hash = '';\n      location.reload(true);\n    });\n  }\n  \n  $scope.loadUiString = function() {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n  \n  function progress(msg) {\n    $timeout(\n      function() {\n        if($scope.testResults != null) {\n          $scope.testResults.push(msg);\n        }\n      });\n  }\n  \n  function progressTranslations(msg) {\n    $timeout(\n      function() {\n        if($scope.translationResults != null) {\n          $scope.translationResults.push(msg);\n        }\n      });\n  }\n  \n  $scope.saveLocation = function() {\n    dntReset();\n    if($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n      \n      region.init();\n      if(region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = [\n        'Location saved',\n        'Using location ' + $scope.location];\n    }\n  }\n  \n  $scope.testLocation = function() {\n    if($scope.location != noLocation) {\n      $scope.testResults = [\n        'Using location ' + $scope.location,\n        'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  }\n}]);\n","angular.module('dnsim').controller('groupAssignmentCtrl',\n\n['hCodeValues','statHelper','saveHelper','itemCategory','$scope',\nfunction(hCodeValues,statHelper,saveHelper,itemCategory,$scope) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    return;\n  }\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n    \n  this.clearGroup = function() {\n    vm.addAffectAmount = null;\n    vm.replaceAffectAmount = {};\n\n    vm.groupItems = null;\n    vm.groupCalcStats = null\n  }\n\n  $scope.$watch('editCtrl.item', function() {\n    vm.clearGroup();\n  });\n  \n  this.getAddAffectAmount = function(stat) {\n    this.initAddAffects();\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\n    return this.addAffectAmount[stat];\n  }\n  \n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    return this.replaceAffectAmount[itemIndex][statId];\n  }\n  \n  this.getGroupCalcStats = function() {\n    \n    if(this.groupCalcStats == null) {\n      \n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  this.initAddAffects = function() {\n    \n    if(vm.addAffectAmount) {\n      return;\n    }\n    \n    // console.log('initialising add affects ');\n    \n    var origStats = vm.getGroupCalcStats();\n    var group = vm.savedItems[vm.groupName];\n    var newItems = [];\n    if(group.items) {\n      newItems = group.items.concat([vm.item]);\n    }\n    var newStats = vm.getCalculatedStats(group, newItems);\n    \n    this.addAffectAmount = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex]) {\n      return;\n    }\n    \n    var group = vm.savedItems[vm.groupName];\n    var newItems = [vm.item];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    this.replaceAffectAmount[itemIndex] = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getGroupItems = function() {\n\n    var itemSplit;\n    function numMatches(str) {\n      if(str) {\n        var numMatches = 0;\n        for(var i=0;i<itemSplit.length;++i) {\n          if(str.indexOf(itemSplit[i]) > 0) {\n            numMatches++;\n          }\n        }\n        return numMatches;\n      }\n      else {\n        return -1;\n      }\n    }\n    \n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n      vm.groupItems = [];\n      \n      var items = [];\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\n          if(item.exchangeType == vm.item.exchangeType) {\n            items.push(item);\n          }\n        }\n        else if(item.typeName == vm.item.typeName) {\n          items.push(item);\n        }\n      });\n      \n      if(vm.item.name) {\n        itemSplit = vm.item.name.split(' ');\n      }\n      items.sort(function(a,b) {\n        return numMatches(b.name)-numMatches(a.name);\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name == vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name != vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n    }\n    return vm.groupItems;\n  }\n  \n  this.hasMaxExchangable = function() {\n    var cat = itemCategory.byName(this.item.typeName);\n    var items = this.getGroupItems();\n    \n    if(cat && cat.maxCat) {\n      if(items.length >= cat.maxCat) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxExchange) {\n      if(items.length >= cat.maxExchange) {\n        for(var i=0;i<items.length;++i) {\n          if(!items[i].exchangeType) {\n            return false;\n          }\n        }\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.addToGroup = function() {\n    saveHelper.saveItem(vm.groupName, vm.item);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  this.replace = function(item) {\n    item.replaceItem = true;\n    var newItemList = [];\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\n      if(gItem.replaceItem) {\n        // console.log('found replace item');\n        newItemList.push(vm.item);\n      }\n      else {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n}])\n.directive('dngearsimGroupAssignment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'groupAssignmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/group-assignment.html'\n  };\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\n\n['hCodeValues','$scope',\nfunction(hCodeValues,$scope) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'custom') {\n    return;\n  }\n  \n  var vm = this;\n\n  this.statMap = {};\n  \n  // console.log(vm.item.stats);\n  _.forEach(vm.item.stats, function(stat) {\n    // console.log('got stat', stat.id);\n    vm.statMap[stat.id] = stat.max;\n  });\n  \n  for(var statId in hCodeValues.stats) {\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \n\n      if(newValue != oldValue) {\n        // console.log(statId);\n        // console.log('watch got stat value', newValue);\n\n        var anyChange = false;\n        var newStats = [];\n        for(var statId in vm.statMap) {\n\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\n            _.each(vm.item.stats, function(stat) { \n              if(stat.id == statId) {\n                anyChange = true;\n              }\n            });\n          }\n          else {\n            newStats.push({\n              id: Number(statId),\n              max: Number(vm.statMap[statId])\n            });\n\n            var found = false;\n            _.each(vm.item.stats, function(stat) {\n              if(stat.id == statId) {\n                found = true;\n                // console.log('comparing', stat.max, vm.statMap[statId]);\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\n                  anyChange = true;\n                }\n              } \n            });\n\n            if(!found) {\n              anyChange = true;\n            }\n          }\n        }\n\n        if(anyChange) {\n          // console.log('GOT CHANGES!', newStats);\n          vm.item.stats = newStats;\n          vm.onChange();\n        }\n      }\n    });\n  }\n  \n}])\n.directive('dngearsimItemEditCustom', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-custom.html'\n  };\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\n\n['dntData','hCodeValues','items','$timeout','translations',\nfunction(dntData,hCodeValues,items,$timeout,translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if(vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n  \n  this.setEnchantment = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\n          }\n          else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  }\n  \n  this.isMaxEnchantLevel = function() {\n\n    if(vm.enchantments != null &&\n      vm.enchantments.length > 0 &&\n      typeof vm.item.enchantmentNum == 'number') {\n\n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  \n  this.setEnchantmentNum = function(enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    vm.setEnchantment();\n    vm.onChange();\n  }\n  \n  this.nextEnchantment = function() {\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\n      if(i == 0) {\n        vm.enhancementOptions.push({number: 0});\n      }\n      else {\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n      }\n    }\n  }\n  \n  this.prevEnchantment = function() {\n    vm.enhancementOptions = [];\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n    }\n    \n    vm.enhancementOptions.push({number: 0});\n  }\n  \n  this.getOption = function(enchantment) {\n    return {\n      number: enchantment.EnchantLevel,\n      stats: hCodeValues.getStats(enchantment)\n    };\n  }\n  \n  this.getEnchantments = function() {\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\n        var eid = vm.item.enchantmentId;\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\n        vm.setEnchantment();\n      }\n    }\n    \n    return vm.enchantments;\n  }\n  \n  var fileName = 'all-items.lzjson';\n  \n  this.showMaterials = function() {\n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        \n        if(!vm.enchantmentAfter) {\n          return;\n        }\n        \n        vm.materials = [];\n        for(var i=1;i<=5;++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if(itemId > 0 && itemCount > 0) {\n            \n            var items = dntData.find(fileName, 'id', itemId);\n            if(items.length == 0) {\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\n            }\n            else {\n              var item = items[0];\n              var name = translations.translate(item.NameID, item.NameIDParam);\n              \n              if(item) {\n                var material = {\n                  num: itemCount,\n                  icon: item.IconImageIndex,\n                  rank: item.Rank,\n                  levelLimit: item.LevelLimit,\n                  name: name\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  if(dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditEnchantment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-enchantment.html'\n  };\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\n\n['dntData','items','hCodeValues',\nfunction(dntData,items,hCodeValues) {\n  'use strict';\n  \n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n  \n  if(this.item == null) return;\n  \n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  this.getPotentials = function() {\n    if(!vm.potentials) {\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n        \n        if(potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        }\n        else if('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n        \n          if(potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n    \n    return vm.potentials;\n  }\n  \n  this.nextPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i+1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n  \n  this.prevPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i-1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n    \n  this.changePotential = function(pid) {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  }\n  \n  this.isFirstPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  }\n  \n  this.isLastPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\n  }\n  \n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n    \n    if(vm.potentials != null) {\n      angular.forEach(vm.potentials, function(p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\n          if(!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n        \n        if(stats.length > 0) {\n          pStats[p.id] = stats;\n        }\n        else if(!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n    \n    return pStats;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditPotential', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-potential.html'\n  };\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\n\n['$timeout','dntData','statHelper',\nfunction($timeout,dntData,statHelper) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'skills') {\n    return;\n  }\n  \n  if(!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n  \n  var vm = this;\n  \n  this.initSkills = function() {\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n    })});\n  }\n  \n  this.nextEnchantment = function() {\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  }\n  \n  this.isMaxSkillLevel = function() {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  }\n  \n  this.prevEnchantment = function() {\n    if(this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    }\n    else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  }\n  \n  this.initSkills();\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditSkill', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-skill.html'\n  };\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\n\n['dntData','hCodeValues','items',\nfunction(dntData,hCodeValues,items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  this.sparks = null;\n  var vm = this;\n\n  this.nextSpark = function() {\n    var index = getPotentialIndex();\n    index++;\n    if(index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.isMoreSparks = function() {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\n  }\n  \n  this.isFirstSpark = function() {\n    return getPotentialIndex() == 0;\n  }\n  \n  this.prevSpark = function() {\n    var index = getPotentialIndex();\n    index--;\n    if(index < 0) {\n      index = vm.sparks.length-1;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.removeSpark = function() {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  }\n  \n  this.getSparks = function() {\n    if(vm.item == null || vm.itemType == null) return null;\n    if(vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if(sid) {\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n    \n    return vm.sparks;\n  }\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if(vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function(spark, index) {\n        if(spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n      \n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditSpark', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-spark.html'\n  };\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\n\n[function() {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'tman') {\n    return;\n  }\n  \n  this.setTalisman = function(amount) {\n    if(amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    }\n    else {\n      this.item.enchantmentNum = amount;\n      \n      var extraStats = [];\n      angular.forEach(this.item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\n      });\n      \n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  }\n\n}])\n.directive('dngearsimItemEditTalisman', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-talisman.html'\n  };\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\n\n['$timeout','dntData','itemFactory',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n  \n  var vm = this;\n  \n  var pouchFileNames = [\n    'itemdroptable.lzjson',\n    'itemdroptable_abyss.lzjson',\n    'itemdroptable_apprentice.lzjson',\n    'itemdroptable_cook.lzjson',\n    'itemdroptable_darklair.lzjson',\n    'itemdroptable_dimension.lzjson',\n    'itemdroptable_disjoint.lzjson',\n    'itemdroptable_dnexpedition.lzjson',\n    'itemdroptable_event.lzjson',\n    'itemdroptable_farm.lzjson',\n    'itemdroptable_fishing.lzjson',\n    'itemdroptable_guildwar.lzjson',\n    'itemdroptable_item.lzjson',\n    'itemdroptable_monsteritem.lzjson',\n    'itemdroptable_propdrop.lzjson',\n    'itemdroptable_pvp.lzjson',\n    'itemdroptable_randomcompound.lzjson',\n    'itemdroptable_stageclear.lzjson',\n    'itemdroptable_themepark.lzjson',\n    'itemdroptable_union.lzjson']\n  \n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  \n  var files;\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  }\n  else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxContents();\n      });\n    });\n  }\n  \n  this.initBoxContents = function() {\n    console.log('init contents', this.item.fileName);\n\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if(datas.length > 0) {\n      var d = datas[0];\n      vm.items = [];\n      \n      \n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122) {\n        vm.getCharmItems(d.TypeParam1);\n      }\n      else if (vm.item.typeId == 8) {\n        vm.getPouchItems(d.TypeParam1);\n      }\n      \n    }\n  }\n  \n  this.getPouchItems = function(boxType) {\n    for(var f=0;f<pouchFileNames.length;++f) {\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\n    }\n  }\n  \n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\n    \n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          }\n          else {\n            // console.log('adding item ' + pouchItem);\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\n              // console.log('found item ' + basicItem.name);\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: basicItem\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n  \n  this.getCharmItems = function(boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for(var i=0;i<charmFiles.length;++i) {\n\n      var charmData = dntData.getData(charmFiles[i]);\n      console.log('box: ' + boxType, charmData);\n      \n      for(var c=0;c<charmData.length;++c) {\n        var cd = charmData[c];\n        if(cd.CharmNum == boxType && cd.Look) {\n          \n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n          if(itemds.length > 0) {\n            vm.items.push({\n              count: cd.Count,\n              gold: cd.Gold,\n              item: itemFactory.createBasicItem(itemds[0])\n            });\n          }\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewBox', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-box.html'\n  };\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = [\n    'itemcompoundtable.lzjson',\n    'itemcompoundtable_custom.lzjson',\n    'itemcompoundtable_glyph.lzjson',\n    'itemcompoundtable_jewel.lzjson',\n    'itemcompoundtable_renewal.lzjson',\n    'itemcompoundtable_set.lzjson'];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = cFiles.concat([allItemFileName]);\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initCrafts();\n      });\n    });\n  }\n  \n  this.initCrafts = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.crafts = [];\n    for(var i=0;i<cFiles.length;++i) {\n      vm.initCraft(cFiles[i]);\n    }\n    \n    var newCrafts = [];\n    for(var i=0;i<vm.crafts.length;++i) {\n      var found = false;\n      for(var j=0;j<newCrafts.length;++j) {\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\n            \n            found = true;\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n                  found = false;\n              }\n            }\n        }\n      }\n      \n      if(!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n    \n    vm.crafts = newCrafts;\n  }\n\n  this.initCraft = function(fileName) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\n    \n    for(var i=0;i<fCrafts.length;++i) {\n      var c = fCrafts[i];\n      \n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost/100/100,\n        items: [],\n      };\n      \n      var j=0;\n      for(;;) {\n        j++;\n        var itemColName = 'Slot' + j +'Id';\n        var qtyColName = 'Slot' + j +'Num';\n        if(!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if(items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName],\n          });\n        }\n      }\n      \n      vm.crafts.push(craft);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewCraft', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-craft.html'\n  };\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\n\n['$timeout','dntData','itemFactory','items',\n  function($timeout, dntData, itemFactory, items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  \n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [extractFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initExtract();\n      });\n    });\n  }\n  \n  this.initExtract = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if(d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n    \n    var itemType = items[vm.item.itemSource];\n    \n    if(itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      for(var i=0;i<enchantments.length;++i) {\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n    \n    vm.items = [];\n    if(disjoint) {\n      vm.getItems(disjoint);\n    }\n  }\n  \n  this.getGold = function() {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount)/100/100;\n  }\n  \n  this.getItems = function(disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getItems(pouchItem);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0]),\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewExtraction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-extraction.html'\n  };\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = [plateFile,allItemFileName];\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    getPlates();\n  }\n  \n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for(var r=0;r<rows.length;++r) {\n      var row = rows[r];\n      var col=0;\n      for(;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if(!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if(itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewPlate', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-plate.html'\n  };\n});","angular.module('dnsim').controller('itemViewSetCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var files = [\n  'partstable.optimised.lzjson',\n  'partstable_cash.optimised.lzjson',\n  'partstable_common2014.optimised.lzjson',\n  'partstable_common2015.optimised.lzjson',\n  'partstable_common2016.lzjson',\n  'partstable_commoncash.lzjson',\n  'partstable_equipment.optimised.lzjson',\n  'partstable_event.lzjson',\n  'partstable_guild.lzjson',\n  'partstable_pvp.optimised.lzjson',\n  'partstable_reboot.optimised.lzjson',\n  'partstable_skilllevelup.lzjson',\n  'weapontable.optimised.lzjson',\n  'weapontable_cash.optimised.lzjson',\n  'weapontable_common2014.optimised.lzjson',\n  'weapontable_common2015.optimised.lzjson',\n  'weapontable_common2016.lzjson',\n  'weapontable_commoncash.lzjson',\n  'weapontable_equipment.optimised.lzjson',\n  'weapontable_event.lzjson',\n  'weapontable_guild.lzjson',\n  'weapontable_pvp.optimised.lzjson',\n  'weapontable_reboot.optimised.lzjson',\n  //'weapontable_skilllevelup.lzjson'\n  ];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = files.concat([allItemFileName]);\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    for(var i=0;i<files.length;++i) {\n      getSetItems(files[i]);\n    }\n  }\n  \n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for(var r=0;r<rows.length;++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if(itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewSet', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-set.html'\n  };\n});","angular.module('dnsim').controller('itemViewShopCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.shopCosts = [];\n  \n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initShops();\n      });\n    });\n  }\n  \n  this.initShops = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n    \n    var newShopCosts = [];\n    for(var i=0;i<vm.shopCosts.length;++i) {\n      var found = false;\n      for(var j=0;j<newShopCosts.length;++j) {\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n            found = true;\n            break;\n        }\n      }\n      \n      if(!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n    \n    vm.shopCosts = newShopCosts;\n  }\n  \n  /*\n  function getShopCosts() {\n    var shops = dntData.getData(shopFileName);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n      \n      var c = 0;\n      for(;;) {\n        ++c;\n        \n        var colName = 'itemIndex' + c;\n        if(!(colName in s)) {\n          break;\n        }\n        \n        var itemId = s[colName];\n        if(!itemId) {\n          break;\n        }\n        \n        if(itemId == vm.item.id) {\n          s = {\n            shopName: s.ShopID,\n            tabName: translations.translate(s.TabNameID),\n            gold: s['Quantity' + c],\n          };\n          \n      \n          if(s.shopName in hCodeValues.shopNames) {\n            s.shopName = hCodeValues.shopNames[s.shopName];\n          }\n      \n          if(!s.shopName) {\n            s.shopName = s.ShopId;\n          }\n          vm.shopCosts.push(s);\n        }\n      }\n    }\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n        \n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n      \n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0,\n      };\n      \n      if(shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n      \n      if(s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      }\n      else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n      }\n      \n      if(s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      }\n      else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n      }\n      \n      shopCost.gold = shopCost.gold/100/100;\n      \n      vm.shopCosts.push(shopCost);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewShop', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-shop.html'\n  };\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.matchingTransfers = [];\n  \n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\n  \n  var files = [transferFileName,allItemFileName,transferItemsFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.matchingTransfers = [];\n    \n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\n    if(transferItem && transferItem.length > 0) {\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n      \n      for(var i=0;i<transfers.length;++i) {\n        var t = transfers[i];\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n          \n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n          \n          vm.matchingTransfers.push({\n            level: t.ResultLevel,\n            enchantmentNum: t.ResultEnchantLevel,\n            gold: t.NeedCoin/100/100,\n            rank: hCodeValues.rankNames[t.ResultRank],\n            numItem1: t.NeedItemCount1,\n            item1: itemFactory.createBasicItem(item1s[0]),\n            numItem2: t.NeedItemCount2,\n            item2: itemFactory.createBasicItem(item2s[0]),\n          });\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTransfer', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-transfer.html'\n  };\n});","angular.module('dnsim').controller('ItemCtrl',\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout',\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout) {\n  'use strict';\n  \n  region.setLocationByName($routeParams.region);\n  \n  $window.scrollTo(0, 0);\n  \n  $scope.jobName = null;\n  // console.log('search string: ', $routeParams.i);\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\n  if('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n  \n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n  \n  $scope.getDescription = function() {\n    if($scope.item.description) {\n      return $scope.item.description;\n    }\n    else if($scope.itemType &&\n      $scope.itemType.name == 'title' &&\n      translations.isLoaded() &&\n      dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    else if($scope.item.fileName &&\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\n        \n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      } \n    }\n    return '';\n  }\n  \n  $scope.getExchangeType = function() {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if(translations.isLoaded() &&\n      dntData.isLoaded(exchangeDnt) &&\n      $scope.item.exchangeType > 0) {\n        \n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  }\n  \n  $scope.setDetail = function(detail) {\n    $scope.detail = detail;\n  }\n  \n  $scope.getServerStorage = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if(itemData.AbleWStorage == 1) {\n        return 'can put in server storage';\n      }\n      else if(itemData.AbleWStorage == 0) {\n        return 'not transferable';\n      }\n    }\n    return '';\n  }\n  \n  $scope.handleChange = function() {\n    // console.log('changes');\n    if($scope.item.itemSource != 'custom') {\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\n    }\n    else {\n      setFullStats();\n      $scope.item = angular.copy($scope.item);\n    }\n  }\n  \n  function getJobName() {\n    var retVal = '';\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function(job, index) {\n      if(job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n        return;\n      }\n    });\n  }\n  \n  function init() {\n    $scope.preInitItem = $scope.item;\n    $scope.item = null;\n  \n    var anyToLoad = false;\n    \n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\n        anyToLoad = true;\n      }\n    });\n    \n    if(!translations.isLoaded()) {\n      translations.init(reportProgress,function() { tryInit() });\n      anyToLoad = true;\n    }\n    \n    if(!jobs.isLoaded()) {\n      jobs.init(reportProgress, function() { tryInit(); });\n      anyToLoad = true;\n    }\n    \n    if(!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n  \n  function tryInit() {\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\n      if($scope.item == null) {\n        return;\n      }\n      \n      setFullStats();\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\n      if($scope.item.itemSource != 'custom') {\n      \n        if($scope.item.typeName == 'skills') {\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          }\n          else {\n            $scope.item.pve = 'pvp';\n          }\n        }\n    \n        if($scope.item.needJobClass > 0) {\n          getJobName();\n        }\n        \n        if(!$scope.item.fileName) {\n          if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\n            $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.optimised', '');\n          }\n        }\n      }\n      \n      var itemData = itemFactory.getItemData($scope.item);\n      if(itemData.DisjointDrop1 > 0) {\n        $scope.canExtract = true;\n      }\n      \n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n        $scope.canTransfer = true;\n      }\n      \n      if($scope.item.setId) {\n        $scope.isInSet = true;\n      }\n      \n      if($scope.item.typeId == 5) {\n        $scope.isPlate = true;\n      }\n      \n      if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122) {\n        $scope.hasContents = true;\n        $scope.detail = 'contents';\n      }\n      else if($scope.item.typeName != null) {\n        $scope.canUse = true;\n        $scope.detail = 'use';\n      }\n      else if($scope.canExtract) {\n        $scope.detail = 'extract';\n      }\n      else if($scope.canTransfer) {\n        $scope.detail = 'transfer';\n      }\n      else if($scope.isPlate) {\n        $scope.detail = 'plate';\n      }\n      else {\n        $scope.detail = 'shops';\n      }\n    }\n  }\n\n  \n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    $scope.item.fullStats = $scope.item.stats;\n    \n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n    \n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n  \n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n}]);","(function () {\n'use strict';\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\n\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.maxDisplay = 15;\n  vm.totalNumResults = 0;\n  \n  jobs.init(null, function() {\n    if($routeParams.jobId) {\n      vm.job = jobs.getById($routeParams.jobId);\n      getClassBuilds();\n    } \n  })\n  \n  this.setJob = function() {\n    $timeout(function() {\n      $location.search('jobId', vm.job.id);\n    });\n  }\n  \n  this.showMoreResults = function(extra) {\n    vm.maxDisplay = vm.totalNumResults + extra;\n    vm.totalNumResults = 0;\n  }\n  \n  vm.allResults = null;\n  vm.getFilteredBuilds = function() {\n    \n    // init\n    if(vm.allResults == null) {\n      vm.allResults = [];\n      for(var uid in vm.jobBuilds) {\n        for(var buildName in vm.jobBuilds[uid]) {\n          vm.allResults.push({\n            uid: uid,\n            name: buildName,\n            data: vm.jobBuilds[uid][buildName]\n          });\n        }\n      }\n    }\n    \n    var results = [];\n    for(var i=0;i<vm.allResults.length;++i) {\n      \n      var result = vm.allResults[i];\n      if(vm.filter && vm.filter.length > 0) {\n        var f = vm.filter.toUpperCase();\n        if(result.name.toUpperCase().indexOf(f) == -1) {\n          if(!result.data.guild ||\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\n\n            continue;\n          }\n        }\n      }\n      \n      results.push(result);\n\n      if(results.length >= vm.maxDisplay) {\n        break;\n      }\n    }\n    \n    vm.totalNumResults = results.length;\n    return results;\n  }\n  \n  function getClassBuilds() {\n    if(vm.job) {\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\n        if(builds) {\n          // console.log('got builds', builds);\n          vm.jobBuilds = builds;\n        }\n        else {\n          // console.log('no builds');\n          vm.jobBuilds = {};\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\n\nfunction profile($location, $routeParams, onlineService, saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  \n  getSavedBuilds();\n  getProfile();\n  \n  function getSavedBuilds() {\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\n      if(builds) {\n        vm.storedBuilds = builds;\n      }\n      else {\n        vm.storedBuilds = {};\n      }\n    });\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      build.enemyLevel,\n      build.playerLevel,\n      build.heroLevel,\n      build.job,\n      build.damageType,\n      build.element,\n      build.secondaryElement,\n      build.enemyStatCaps, \n      build.playerStatCaps, \n      build.conversions, \n      build.baseStats, \n      build.heroStats);\n      \n    vm.builds = saveHelper.getSavedItems();\n    \n    $location.path('/build/' + newGroupName);\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\n\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.show = $routeParams.show;\n  \n  onlineService.login().then(function(user) {\n    getSavedBuilds();\n    getProfile();\n  \n    vm.builds = saveHelper.getSavedItems();\n  });\n  \n  function getSavedBuilds() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\n        if(builds) {\n          vm.storedBuilds = builds;\n        }\n        else {\n          vm.storedBuilds = {};\n        }\n      });\n    }\n  }\n  \n  function getProfile() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getProfile(user.uid).then(function(profile) {\n        if(profile) {\n          vm.profile = profile;\n        }\n        else {\n          vm.profile = {};\n        }\n      });\n    }\n  }\n  \n  this.saveProfile = function() {\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\n  }\n  \n  this.getUser = function() {\n    return onlineService.getUser();\n  }\n  \n  this.save = function(buildName, build) {\n    build.lastUpdate = (new Date()).getTime();\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\n    vm.publishBuild = null;\n  }\n  \n  this.startPublish = function(buildName) {\n    if(buildName in vm.storedBuilds) {\n      if(!vm.builds[buildName].region) {\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\n      }\n      \n      if(!vm.builds[buildName].about) {\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\n      }\n      \n      if(!vm.builds[buildName].guild) {\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\n      }\n    }\n    \n    if(!vm.builds[buildName].region) {\n      vm.builds[buildName].region = region.dntLocation.region;\n    }\n    \n    vm.publishBuild = buildName;\n  }\n  \n  function handleError(err) {\n    console.log(err);\n  }\n  \n  this.deleteAccount = function() {\n    onlineService.deleteAccount(vm.storedBuilds);\n  }\n  \n  this.getBuildLimit = function() {\n    if(vm.profile && vm.profile.maxBuilds) {\n      return vm.profile.maxBuilds;\n    }\n    else {\n      return 15;\n    }\n  }\n  \n  this.getNumStoredBuilds = function() {\n    return _.size(vm.storedBuilds);\n  }\n  \n  this.getNumBuilds = function() {\n    return _.size(vm.builds);\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      build.enemyLevel,\n      build.playerLevel,\n      build.heroLevel,\n      build.job,\n      build.damageType,\n      build.element,\n      build.secondaryElement,\n      build.enemyStatCaps, \n      build.playerStatCaps, \n      build.conversions, \n      build.baseStats, \n      build.heroStats);\n      \n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  this.signOut = function() {\n    onlineService.signOut();\n  }\n  \n  vm.deleteLocal = function(buildName) {\n    vm.localToDelete = buildName;\n  }\n  \n  vm.getAllBuildNames = function() {\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\n    return _.uniq(allKeys.sort(), true);\n  }\n  \n  vm.reallyDeleteLocal = function(buildName) {\n    saveHelper.updatedSavedItems(buildName, []);\n    vm.localToDelete = null;\n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  vm.deleteServer = function(buildName) {\n    vm.serverToDelete = buildName;\n  }\n  \n  vm.reallyDeleteServer = function(buildName) {\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\n    vm.serverToDelete = null;\n  }\n  \n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\n\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  vm.buildName = $routeParams.buildName;\n  \n  getBuild();\n  getProfile();\n  \n  vm.copyLocally = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      vm.build.enemyLevel,\n      vm.build.playerLevel,\n      vm.build.heroLevel,\n      vm.build.job,\n      vm.build.damageType,\n      vm.build.element,\n      vm.build.secondaryElement,\n      vm.build.enemyStatCaps, \n      vm.build.playerStatCaps, \n      vm.build.conversions, \n      vm.build.baseStats, \n      vm.build.heroStats);\n      \n    $location.path('/build/' + newGroupName);\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  function getBuild() {\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\n      if(build) {\n        vm.build = build;\n        vm.stats = statHelper.getBuildStats(build);\n      }\n      else {\n        vm.build = {};\n      }\n    });\n  }\n}\n\n})();","angular.module('dnsim').controller('RegionCtrl', \n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\n    'use strict';\n\n    region.init();\n    translations.init(\n      function(msg) { \n        // console.log(msg);\n      }, \n      function() {\n        $timeout();\n      });\n      \n    $scope.region = region;\n    \n    $scope.getDntLocation = function() {\n      return region.dntLocation;\n    }\n    $scope.getTlocation = function() {\n      return region.tlocation;\n    }\n     \n    $scope.getHostedFiles = function() {\n      // console.log('getting hosted files');\n      return region.hostedFiles;\n    }\n    \n    $scope.getWorldName = function() {\n      if(translations.isLoaded()) {\n        return translations.translate(10169);\n      }\n      else {\n        return '';\n      }\n    }\n    \n    $scope.setTLocation = function(location) {\n      region.setTLocation(location);\n      $scope.edit = false;\n    }\n    \n    $scope.setLocation = function(location) {\n      if($routeParams.region) {\n        $routeParams.region = location.region;\n        $route.updateParams($routeParams);\n        $route.reload();\n      }\n      else {\n        region.setLocation(location);\n      }\n      $scope.edit = !$scope.edit;\n    }\n  }\n])\n.directive('dngearsimRegion', function() {\n  return {\n    templateUrl: 'ui/region/region.html'\n  };\n});","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\n  return {\n    scope: {},\n    bindToController: {\n    },\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\n    controllerAs: 'customItems',\n    templateUrl: 'ui/search/custom-items.html'\n  };\n});\n\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\n  'use strict';\n\n  var vm = this;\n  \n  this.customItems = hCodeValues.customItems;\n  \n  this.maxDisplay = 10;\n  this.currentResults = 0;\n  \n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n  \n  this.getResults = function() {\n    return this.customItems;\n  }\n  \n  this.getNewStatName = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      return 'unnamed custom item';\n    }\n    else {\n      return this.nameSearch;\n    }\n  }\n  \n  this.createCustomItem = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      this.nameSearch = this.getNewStatName();\n    }\n    $location.path('/item/_custom:.' + this.nameSearch);\n  }\n}\n\n})();","angular.module('dnsim').controller('ItemSearchCtrl',\n['$scope','$window','$routeParams','$timeout','$location',\n'translations',\n'itemCategory',\n'jobs',\n'hCodeValues',\n'itemFactory',\n'region',\n'saveHelper',\nfunction(\n  $scope,$window,$routeParams,$timeout,$location,\n  translations,\n  itemCategory,\n  jobs,\n  hCodeValues,\n  itemFactory,\n  region,\n  saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\n  if(!vm.itemCategory) {\n     var catName = localStorage.getItem('selectedItemCategory');\n     if(!catName) {\n       catName = 'titles';\n     }\n     \n     vm.itemCategory = itemCategory.byName(catName);\n     if(vm.itemCategory) {\n       // console.log('moving');\n       $location.search('cat', vm.itemCategory.path);\n     }\n     return;\n  }\n  \n  $window.document.title = 'DN Gear Sim | ' + vm.itemCategory.name.toUpperCase();\n  \n  vm.job = {id: -1, name: ''};\n  vm.jobs = [vm.job];\n  vm.allJobs = [];\n  vm.minLevel = 1;\n  vm.maxLevel = 99;\n  vm.maxDisplay = 10;\n  vm.totalNumResults = 0;\n  vm.grades = hCodeValues.rankNames;\n  vm.stat = {id:-1, name:''};\n  vm.stats = [vm.stat];\n  vm.results = null;\n  \n  angular.forEach(hCodeValues.stats, function(stat, statId) {\n    if(stat.searchable) {\n      vm.stats.push(stat);\n    }\n  });\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if(minLevel > 0 && minLevel < 100) {\n    vm.minLevel = minLevel;\n  }\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if(maxLevel > 0 && maxLevel < 100) {\n    vm.maxLevel = maxLevel;\n  }\n  \n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  var savedSearchStatId = localStorage.getItem('searchStat');\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\n    vm.stat = hCodeValues.stats[savedSearchStatId];\n  }\n\n  vm.navigate = function() {\n    var catName = localStorage.getItem('selectedItemCategory');\n    if(catName) {\n      vm.itemCategory = itemCategory.byName(catName);\n      if(vm.itemCategory) {\n        // console.log('navigating to ', vm.itemCategory.path);\n        $location.search('cat', vm.itemCategory.path);\n      }\n    }\n  }\n\n  vm.save = function() {\n    if(!vm.itemCategory.hideLevel) {\n      localStorage.setItem('minLevel', vm.minLevel);\n      localStorage.setItem('maxLevel', vm.maxLevel);\n    }\n    \n    if(!vm.itemCategory.hideJob) {\n      if(vm.job != null) {\n        localStorage.setItem('jobNumber', vm.job.id);\n      }\n    }\n  \n    if(vm.stat) {\n      localStorage.setItem('searchStat', vm.stat.id);\n    }\n\n    localStorage.setItem('nameSearch', vm.nameSearch);\n  };\n  \n  function init() {\n    // console.log('translations loaded');\n    if(jobs.isLoaded()) {\n      jobInit();\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n\n    itemCategory.init(vm.itemCategory.name, loadResults);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    // console.log('called the job init func');\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      // console.log('trying to init jobs');\n      // console.log('job dropdown should be set');\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, vm.jobs[0]);\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            return;\n          }\n        });\n      }\n    }\n  }\n  \n  vm.rankChecked = hCodeValues.checkedRank;\n    \n  vm.changeSearch = function() {\n    vm.save();\n    loadResults();\n  }\n  \n  function loadResults() {\n    $timeout(function() {\n      vm.maxDisplay = 24;\n      vm.results = getResults();\n    });\n  }\n  \n  function getResults() {\n    // console.log('getting items');\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\n    if(allItems == null) {\n      // console.log('no items');\n      return null;\n    }\n    \n    allItems = allItems.sort(function(item1, item2) {\n        return (item2.levelLimit - item1.levelLimit);\n      });\n          \n    var pcStatId = -1;\n    if('pc' in vm.stat) {\n      pcStatId = vm.stat.pc;\n    }\n          \n    var altStatId = -1;\n    if('altStat' in vm.stat) {\n      altStatId = vm.stat.altStat;\n    }\n  \n    var statVals = [];\n    var newResults = [];\n    var numEquip = allItems.length;\n    var curDisplay = 0;\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\n      var e = allItems[i];\n      if(e) {\n        \n        if(!vm.itemCategory.hideLevel) {\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideRank) {\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideJob) {\n          if(vm.job && vm.job.id > -1) {\n            if(!vm.job.isClassJob(e.needJobClass)) {\n              continue;\n            }\n          }\n        }\n        \n        itemFactory.initItem(e);\n        if(e.typeName != vm.itemCategory.name) {\n          continue;\n        }\n        // console.log('name filter', vm.nameSearch); \n        \n        if(vm.nameSearch != '') {\n          // console.log('filtering on name');\n          var nameSearches = vm.nameSearch.split(' ');\n          if(!nameSearches.length) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        if(vm.stat.id >= 0) {\n          var statFound = false;\n          \n          var statVal = {};\n          for(var s=0;s<e.stats.length;++s) {\n            var stat = e.stats[s];\n            if(stat.id == vm.stat.id) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n              break;\n            }\n            else if(stat.id == pcStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n            else if(stat.id == altStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n          }\n          \n          if(!statFound) {\n            continue;\n          }\n          else {\n            statVals.push(statVal);\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n    }\n    \n    if(vm.stat.id >= 0) {\n      \n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\n      \n      statVals = statVals.sort(function(value1, value2) {\n        return value2.s - value1.s;\n      });\n      \n      var statResults = [];\n      for(var i=0;i<currentResults;++i) {\n        statResults.push(newResults[statVals[i].i]);\n      }\n      newResults = statResults;\n    }\n    \n    vm.totalNumResults = newResults.length;\n    \n    return newResults;\n  }\n\n  vm.showMoreResults = function() {\n    $timeout(function() {\n      vm.maxDisplay += 18;\n      vm.results = getResults();\n    });\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n  \n}]);\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\n  return {\n    scope: {},\n    bindToController: {\n      job: '=job',\n      jobs: '=jobs',\n    },\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\n    controllerAs: 'skillSearch',\n    templateUrl: 'ui/search/skill-search.html'\n  };\n});\n\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\n\n  var vm = this;\n  \n  vm.allJobs = [];\n  vm.dntName = '';\n  vm.skills = [];\n  vm.loadedJobId = -1;\n\n  vm.itemCategory = itemCategory.byName('skills');\n\n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n\n  vm.navigate = function() {\n    $timeout(function() {\n      if(vm.itemCategory) {\n        $location.path(vm.itemCategory.path);\n      }\n    });\n  }\n  \n  vm.isLoading = function() {\n    \n    if(!translations.isLoaded()) {\n      // console.log('transations not loaded');\n      if(!translations.startedLoading) {\n        translations.init(reportProgress, function() { } );\n      }\n\n      return true;\n    }\n    \n    var baseName = jobs.getBaseJobName(vm.job);\n    var dntName = getDntName(baseName);\n    if(dntName) {\n      if(!dntData.isLoaded(dntName)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  \n  function getDntName(baseClassName) {\n    // console.log('got base class :' + baseClassName);\n    if(baseClassName != null) {\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n    }\n    else {\n      return null;\n    }\n  }\n\n  function getSkills() {\n    // console.log('getting skills for ' + vm.job.name);\n    if(vm.loadedJobId == vm.job.id) {\n      return vm.skills;\n    }\n    else {\n      \n      var baseJobNames = [];\n      if(vm.job.id >= 0) {\n        var baseName = jobs.getBaseJobName(vm.job);\n        baseJobNames.push(baseName);\n      }\n\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n        if(dntName) {\n          if(!dntData.isLoaded(dntName)) {\n            // console.log('loading skills for ' + baseName);\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\n          }\n          else {\n            setupSkills(baseJobNames, vm.job);\n          }\n        }\n      });\n    }\n  }\n  \n  function setupSkills(baseJobNames, job) {\n    \n    vm.skills = [];\n    var allReady = true;\n    angular.forEach(baseJobNames, function(baseName, index) {\n      var dntName = getDntName(baseName);\n      if(!dntData.isLoaded(dntName)) {\n        allReady = false;\n      }\n    });\n    \n    if(allReady) {\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n      \n        var skills = dntData.getData(dntName);\n        var numSkills = skills.length;\n        for(var s=0;s<numSkills;++s) {\n          if(skills[s].NameID == 0) {\n            continue;\n          }\n          \n          if(skills[s].EffectClass1 > 0 || \n             skills[s].EffectClass2 > 0 || \n             skills[s].EffectClass3 > 0 || \n             skills[s].EffectClass4 > 0 ||\n             skills[s].EffectClass5 > 0 ||  \n             skills[s].EffectClass6 > 0) {\n               \n            var newItem = {d: skills[s]};\n            \n            newItem.id = skills[s].id;\n            newItem.typeName = 'skills';\n            newItem.itemSource = 'skills';\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n            newItem.needJobClass = skills[s].NeedJob;\n            newItem.rank = hCodeValues.rankNames[0];\n            newItem.baseJobName = baseName.toLowerCase();\n            newItem.icon = skills[s].IconImageIndex;\n            \n            vm.skills.push(newItem);\n          }\n        }\n      });\n  \n      vm.loadedJobId = job.id;\n    }\n  }\n  \n  vm.itemLinkClosed = function() {\n    saveHelper.saveCustomItems(vm.customItems);\n    vm.customItems = saveHelper.getCustomItems();\n  }\n  \n  vm.getResults = function() {\n    \n    var skills = getSkills();\n    if(skills == null) {\n      return [];\n    }\n    \n    if(vm.job && vm.job.id >= 0) {\n      localStorage.setItem('jobNumber', vm.job.id);\n    }\n    localStorage.setItem('nameSearch', vm.nameSearch);\n\n    var newResults = [];\n    var numSkills = skills.length;\n    var curDisplay = 0;\n    for(var i=0;i<numSkills;++i) {\n      var e = skills[i];\n      \n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(!nameSearches.length) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n        continue;\n      }\n      \n      newResults.push(e);\n    }\n    return newResults;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      var newJobs = jobs.getFinalJobs();\n\n      if(vm.jobs && vm.jobs.length) {\n        newJobs.splice(0, 0, vm.jobs[0]);\n      }\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      // console.log('using job', lastJobNumber);\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            // console.log('using job', value);\n            return;\n          }\n        });\n      }\n      \n      vm.getResults();\n    }\n  }\n  \n  function init() {\n    // console.log('skill init');\n    if(jobs.isLoaded()) {\n      $timeout(jobInit);\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n  }\n}\n\n})();","angular.module('dnsim')\n.controller('ItemsCtrl', \n  ['$window','$timeout','hCodeValues','region','translations','dntData',\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\n    \n    'use strict';\n    \n    var vm = this;\n    \n    vm.boxes = null;\n    vm.maxDisplay = 32;\n    vm.currentResults = 0;\n    vm.results = null;\n\n    vm.nameSearch = localStorage.getItem('itemNameSearch');\n    if(vm.nameSearch == null) {\n      vm.nameSearch = '';\n    }\n    \n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\n    \n    var fileName = 'all-items.lzjson';\n    \n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxes();\n      });\n    });\n    \n    vm.initBoxes = function() {\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\n        vm.boxes = [];\n        \n        var datas = dntData.getData(fileName);\n        // console.log(datas.length + ' boxes');\n        for(var i=0;i<datas.length;++i) {\n          var data = datas[i];\n          if(data.NameID > 0) {\n            var box = {\n              id: data.id,\n              name: translations.translate(data.NameID, data.NameIDParam),\n              rank: hCodeValues.rankNames[data.Rank],\n              icon: data.IconImageIndex,\n              levelLimit: data.LevelLimit,\n              fileName: data.fileName,\n            }\n            vm.boxes.push(box);\n          }\n        }\n        \n        vm.boxes = _.sortBy(vm.boxes, 'name');\n        \n        $timeout(function() {\n          vm.showMoreResults();\n        });\n      }\n    }\n    \n    vm.getResults = function() {\n      if(vm.boxes == null) {\n        vm.initBoxes();\n      }\n      \n      if(vm.boxes == null) {\n        return [];\n      }\n  \n      var newResults = [];\n      var numBoxes = vm.boxes.length;\n      var curDisplay = 0;\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\n        var e = vm.boxes[i];\n\n        if(vm.nameSearch != '') {\n          var nameSearches = vm.nameSearch.split(' ');\n          if(nameSearches.length == 0) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n      \n      vm.totalNumResults = newResults.length;\n      return newResults;\n    }\n    \n    vm.changeSearch = function() {\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\n      \n      vm.maxDisplay = 64;\n      vm.results = vm.getResults();\n    }\n  \n    vm.showMoreResults = function() {\n      $timeout(function() {\n        // console.log('show more', vm.maxDisplay);\n        vm.maxDisplay += 18;\n        vm.results = vm.getResults();\n      });\n    }\n  }]\n);\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\n\nfunction chooseClass() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      job: '=job',\n      onSetJob: '&onSetJob'\n    },\n    templateUrl: 'ui/widgets/choose-class.html',\n    controllerAs: 'ctrl',\n    controller: [\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \n      chooseClassController],\n  };\n}\n\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  this.getFinalJobs = function() {\n    var allJobs = jobs.getFinalJobs();\n    var finalJobs = [];\n    for(var j=0;j<allJobs.length;++j) {\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n        finalJobs.push(allJobs[j]);\n      }\n    }\n    return finalJobs;\n  }\n  \n  this.getBaseJobs = function() {\n    return jobs.getBaseJobs();\n  }\n  \n  this.getJobName = function(englishName) {\n    var allJobs = jobs.getAllJobs();\n    for(var j=0;j<allJobs.length;++j) {\n      if(allJobs[j].d.EnglishName == englishName) {\n        return allJobs[j].name;\n      }\n    }\n  }\n  \n  this.setJob = function(job) {\n    this.job = job;\n    if(job) {\n      this.onSetJob();\n    }\n  }\n  \n  \n  jobs.init(reportProgress, $timeout);\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\n\nfunction dnsimCategoryLinks(itemCategory,$location) {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      collapse: '=collapse',\n      cat: '=cat',\n      onChange: '&onChange'\n    },\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\n    controller: ['itemCategory', dnsimCategoryLinksController],\n    controllerAs: 'ctrl',\n  };\n};\n\nfunction dnsimCategoryLinksController(itemCategory) {\n\n  var vm = this;\n\n  vm.categories = itemCategory.categories;\n  vm.collapsed = true;\n\n  vm.setCategory = function(action) {\n    // console.log('setting cat', action);\n    vm.cat = action;\n    localStorage.setItem('selectedItemCategory', action.name);\n    \n    if(vm.collapse) {\n      vm.collapsed = !vm.collapsed;\n    }\n\n    if(vm.onChange) {\n      vm.onChange();\n    }\n  }\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\n\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.iconImage = $scope.getIcon();\n        }\n      });\n      \n      $scope.getIcon = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\n          \n          var prefix;\n          if($scope.item.typeName == 'skills') {\n            prefix = 'skillicon';\n          }\n          else {\n            prefix = 'itemicon';\n          }\n          \n          if(fileIndex > 9) {\n            return prefix + fileIndex + '.png';\n          }\n          else {\n            return prefix + '0' + fileIndex + '.png';\n          }\n        }\n        return null;\n      }\n      \n      $scope.iconImage = $scope.getIcon();\n      \n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (($scope.item.icon % 10) * 40) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\n\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n      noClick: '=noClick',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\n    link: function($scope, element, attrs) {\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n        }\n      });\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\n\nfunction dnsimJobIcon() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\n    controller: dnsimJobIconController,\n    controllerAs: 'ctrl'\n  }\n}\n\nfunction dnsimJobIconController() {\n\n  this.getIconXPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return ((this.item.d.JobIcon % 9) * 44) + 5;\n    }\n    return 0;\n  }\n  \n  this.getIconYPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return (Math.floor(this.item.d.JobIcon / 9) * 44) + 5;\n    }\n    return 0;\n  }\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\n\nfunction dnsimLoading(dntData, translations, $timeout) {\n  'use strict';\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n      alsoShowFor: '=alsoShowFor',\n    },\n    templateUrl: 'ui/widgets/dnsim-loading.html',\n    link: function($scope, element, attrs) {\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n      \n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n\n      $scope.numLoading = 0;\n      $scope.setLoadCount = function() {\n        var n = dntData.anyLoading();\n        if(!translations.isLoaded())\n        {\n          n++;\n        }\n        \n        $timeout(function() {\n          if($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n        });\n      }\n      \n      $scope.setLoadCount();\n      $scope.loadError = false;\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\nfunction dnsimSelectAllOnClick() {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var hasSelectedAll = false;\n      element.on('click', function($event) {\n        if (!hasSelectedAll) {\n          try {\n            //IOs, Safari, thows exception on Chrome etc\n            this.selectionStart = 0;\n            this.selectionEnd = this.value.length + 1;\n            hasSelectedAll = true;\n          } catch (err) {\n            //Non IOs option if not supported, e.g. Chrome\n            this.select();\n            hasSelectedAll = true;\n          }\n        }\n      });\n      //On blur reset hasSelectedAll to allow full select\n      element.on('blur', function($event) {\n        hasSelectedAll = false;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\n\nfunction dnsimStats(hCodeValues) {\n  return {\n    restrict: 'A',\n    scope: {\n      stats: '=stats',\n      build: '=build',\n      altStats: '=altStats',\n      separator: '=separator',\n      filter: '=filter',\n    },\n    link: function($scope, element, attrs) {\n      \n      var sep;\n      if(!$scope.separator) {\n        sep = '';\n      }\n      else {\n        sep = '&nbsp;' + $scope.separator + ' ';\n      }\n      \n      var addedElements = [];\n      var originalDisplay = element.css('display');\n      \n      function showStats() {\n        element.css('display', 'none' );\n        var stats = $scope.stats;\n        if(!stats) {\n          stats = $scope.altStats;\n        }\n        \n        angular.forEach(addedElements, function(value, key) {\n          value.remove();\n        });\n        \n        var first = true;\n        var lastElement = element;\n        \n        function append(text) {\n          var newElement = element.clone();\n          newElement.css('display', originalDisplay);\n          newElement.html(text);\n          \n          lastElement.after(newElement);\n          lastElement = newElement;\n          addedElements.push(newElement);\n        }\n        \n        angular.forEach(stats, function(stat, key) {\n          var output = '';\n          \n          if(stat.id in hCodeValues.stats) {\n            \n            var def = hCodeValues.stats[stat.id];\n            if(!$scope.filter && 'hide' in def && def.hide) {\n              return;\n            }\n            \n            if($scope.filter && !def[$scope.filter]) {\n              return;\n            }\n            \n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '&nbsp;';\n            }\n            \n            if($scope.build) {\n              if(def.element == 'primary') {\n                var eleId = 0;\n                if($scope.build.element) {\n                  eleId = $scope.build.element.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n              else if(def.element == 'secondary') {\n                var eleId = 0;\n                if($scope.build.secondaryElement) {\n                  eleId = $scope.build.secondaryElement.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n            }\n            \n            output += def.name+':&nbsp;'+def.display(stat);\n            if(def.combineWith > 0) {\n              angular.forEach(stats, function(stat2, key2) {\n                if(stat2.id == def.combineWith) {\n                  if(stat2.max != stat.max) {\n                    output += '-' + def.display(stat2);\n                  }\n                  return;\n                }\n              });\n            }\n          }\n          else {\n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '-Increases&nbsp;';\n            }\n            \n            output += stat.id+':&nbsp;'+stat.max;\n          }\n          \n          append(output);\n        });\n      }\n        \n      $scope.$watch('stats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('altStats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + value;\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10);\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + (value/100.0);\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10)*100;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\n\n  var jobConversions = 'rebootplayerweighttable.lzjson';\n  var statCaps = 'playercommonleveltable.lzjson';\n  var jobBaseStats = 'playerleveltable.lzjson';\n\n  var heroLevels = 'heroleveltable.lzjson';\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  return {\n    init: function(complete) {\n      jobs.init(reportProgress, complete);\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\n      dntData.init(heroLevels, null, reportProgress, complete);\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\n    },\n    \n    getHeroStats: function(heroLevel) {\n      var heroStats = [];\n      if(heroLevel > 0) {\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\n        if(index.length == 1) {\n          var h = dntData.getRow(heroLevels, index[0]);\n          if(h) {\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n            if(pIndex.length == 1) {\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n              if(p) {\n                heroStats = hCodeValues.getStats(p);\n              }\n            }\n          }\n        }\n      }\n      return heroStats;\n    },\n    \n    getStatCaps: function(level) {\n      if(level > 0) {\n        var index = dntData.findFast(statCaps, 'id', level);\n        if(index.length == 1) {\n          return dntData.getRow(statCaps, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getConversions: function(jobId) {\n      if(jobId > 0) {\n        var index = dntData.findFast(jobConversions, 'id', jobId);\n        if(index.length == 1) {\n          return dntData.getRow(jobConversions, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getBaseStats: function(level, jobId) {\n      if(level > 0 && jobId > 0) {\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\n        if(index.length == 1) {\n          return dntData.getRow(jobBaseStats, index[0]);\n        }\n      }\n      \n      return {};\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\nfunction itemColumnsToLoad() {\n  return {\n    mainDnt: {\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\n      State2: true, StateValue2: true, State2_Max: true,\n      State3: true, StateValue3: true, State3_Max: true,\n      State4: true, StateValue4: true, State4_Max: true,\n      State5: true, StateValue5: true, State5_Max: true,\n      State6: true, StateValue6: true, State6_Max: true,\n      State7: true, StateValue7: true, State7_Max: true,\n      State8: true, StateValue8: true, State8_Max: true,\n      State9: true, StateValue9: true, State9_Max: true,\n      State10: true,StateValue10: true,State10_Max: true,\n      EnchantID: true,\n      SkillID: true,\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\n    },\n    partsDnt: {\n      SetItemID: true\n    },\n    enchantDnt: {\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\n      DisjointDrop: true,\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\n    },\n    potentialDnt : {\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\n      State1: true,State1Value: true,\n      State2: true,State2Value: true,\n      State3: true,State3Value: true,\n      State4: true,State4Value: true,\n      State5: true,State5Value: true,\n      State6: true,State6Value: true,\n      State7: true,State7Value: true,\n      State8: true,State8Value: true,\n      State9: true,State9Value: true,\n      State10: true,State10Value: true,\n      State11: true,State11Value: true,\n      State12: true,State12Value: true,\n      State13: true,State13Value: true,\n      State14: true,State14Value: true,\n      State15: true,State15Value: true,\n      State16: true,State16Value: true\n    },\n    gemDnt: {\n      Type: true\n    },\n    setDnt : null,\n    sparkDnt: null,\n    jobsDnt: {\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\n    },\n    jobBaseStatColsToLoad: {\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\n    },\n    statCapColsToLoad: {\n      Cbase: true,\n      Cdefense: true,\n      Ccritical: true,\n      Cfinaldamage: true,\n      CcriticalDamage: true,\n    },\n    jobConversionColsToLoad: {\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\n\nfunction dntData($rootScope,$timeout) {\n  \n  function createLoader(dntLocation, file, colsToLoad) {\n\n    var loader = {\n      reader: new DntReader(),\n      \n      loaded: false,\n      startedLoading: false,\n      \n      file: file,\n      \n      dntLocation: dntLocation,\n      progressCallback: null,\n      completeCallbacks : [],\n      \n      init: function(progress, complete) {\n        \n        if(this.loaded) {\n          complete();\n        }\n        else {\n          this.progressCallback = progress;\n          this.completeCallbacks.push(complete);\n          \n          if(!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n            \n            this.reader.colsToLoad = colsToLoad;\n            \n            if(this.dntLocation && \n              this.dntLocation.url &&\n              this.dntLocation.url.length) {\n\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n              $timeout(function() {\n                t.reader.loadDntFromServerFile(\n                  t.dntLocation.url + '/' + file,\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \n                  function(result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n                    \n                    angular.forEach(t.completeCallbacks, function(value, key) {\n                      value();\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  },\n                  function(msg) {\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    t.startedLoading = false;\n                    t.loaded = false;\n                  }  );\n              });\n            }\n            else {\n              // console.log(\"dnt location not set!\");\n            }\n          }\n        }\n      },\n      \n      reset: function() {\n        this.reader = new DntReader();\n        this.loaded = false;\n        this.startedLoading = false;\n      }\n    }\n  \n    return loader;\n  };\n  \n  return {\n    loaders : {},\n    findIndexes : {},\n    dntLocation : null,\n    \n    setLocation: function(location) {\n      this.dntLocation = location;\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        if(value.dntLocation != location) {\n          value.dntLocation = location;\n          t.reset(key);\n        }\n      });\n    },\n    \n    init : function (fileName, colsToLoad, progress, complete) {\n      if(!progress) {\n        progress = function() {};\n      }\n      if(!(fileName in this.loaders)) {\n        if(fileName.length > 0) {\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n        }\n      }\n      this.loaders[fileName].init(progress, complete);\n    },\n    getData : function (fileName) {\n      if(this.isLoaded(fileName)) {\n        var reader = this.loaders[fileName].reader;\n        var retVal = new Array(reader.numRows);\n        for(var i=0;i<reader.numRows;++i) {\n          retVal[i] = reader.getRow(i);\n        }\n        \n        return retVal;\n      }\n      else {\n        return [];\n      }\n    },\n    find : function(fileName, column, value) {\n      var results = this.findFast(fileName, column, value);\n      var retVal = [];\n      var numResults = results.length;\n      for(var i=0;i<numResults;++i) {\n        retVal.push(this.getRow(fileName, results[i]));\n      }\n      \n      return retVal;\n    },\n    findFast : function(fileName, column, value) {\n      \n      if(this.isLoaded(fileName)) {\n        if(!(fileName in this.findIndexes)){\n          this.findIndexes[fileName] = {};\n        }\n        \n        var reader = this.loaders[fileName].reader;\n        var colIndex = reader.columnIndexes[column];\n        \n        var findIndex = this.findIndexes[fileName];\n        \n        if(!(column in findIndex)) {\n          var index = {}\n          findIndex[column] = index;\n          \n          var results = [];\n          \n          var data = reader.data;\n          var len = data.length;\n          for(var r=0;r<len;++r) {\n            var d = data[r];\n            var val = d[colIndex];\n\n            if(!(val in index)) {\n              index[val] = [r];\n            }\n            else {\n              index[val].push(r);\n            }\n          }\n        }\n        \n        if(value in findIndex[column]) {\n          return findIndex[column][value];\n        }\n        else {\n          return [];\n        }\n      }\n      \n      return [];\n    },\n    isLoaded : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].loaded;\n    },\n    hasStartedLoading : function(fileName) {\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\n    },\n    reset : function(fileName) {\n      if(fileName in this.loaders) {\n        this.loaders[fileName].reset();\n        delete this.loaders[fileName];\n        delete this.findIndexes[fileName];\n      }\n    },\n    resetAll : function() {\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        t.reset(key);\n      });\n    },\n    anyLoading : function() {\n      var t = this;\n      var found = 0;\n      angular.forEach(this.loaders, function(value, key) {\n        if(!value.loaded && value.startedLoading) {\n          found++;\n        }\n      });\n      \n      return found;\n    },\n    getNumRows : function(fileName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.numRows;\n      }\n      else {\n        return 0;\n      }\n    },\n    getRow : function(fileName, index) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getRow(index);\n      }\n      else {\n        return {};\n      }\n    },\n    lookupValue: function(fileName, data, columnName) {\n      if(this.isLoaded(fileName)) {\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\n      }\n      else {\n        return null;\n      }\n    },\n    convertData: function(fileName, data) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.convertData(data);\n      }\n      else {\n        return null;\n      }\n    },\n    getValue : function(fileName, index, columnName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getValue(index, columnName);\n      }\n      else {\n        return null;\n      }\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\nfunction dntInit(items,jobs,dntData,itemFactory) {\n  return function(progress) {\n    \n    progress('starting init');\n    \n    var allFactories = [jobs];\n    \n    var dntFiles = {};\n    angular.forEach(items, function(item, key) {\n      if(key != 'all') {\n        angular.forEach(item, function(value, prop) {\n          if(prop.indexOf('Dnt') == prop.length-3) {\n            var newFactory = { \n              init: function(progress, complete) {\n                dntData.init(value, null, progress, complete);\n              },\n              isLoaded: function() {\n                return dntData.isLoaded(value);\n              },\n              fileName: value,\n            };\n            \n            allFactories.push(newFactory);\n          }\n        });\n      }\n    });\n    \n    function initFactory(index) {\n    \n      if(index < allFactories.length) {\n        allFactories[index].init(progress, function() { \n          if(allFactories[index].isLoaded()) {\n            if('fileName' in allFactories[index]) {\n              progress('dnt loaded: ' + allFactories[index].fileName);\n            }\n            initFactory(index+1);\n          }\n        });\n      }\n      else {\n        progress('Full initialise complete');\n      }\n    }\n    \n    initFactory(0);\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\nfunction dntReset(items, jobs, dntData) {\n  return function() {\n    \n    angular.forEach(items, function(source, name) {\n      source.reset();\n    });\n    \n    jobs.reset();\n    dntData.resetAll();\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('exportLinkHelper', \n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\n\n  return {\n    \n    encodeItem: function(item, small) {\n      if(item) {\n        var itemString;\n\n        if(item.typeName == 'custom')  {\n          itemString = '_custom';\n          angular.forEach(item.stats, function(stat, index) {\n            if(index > 0) {\n              itemString += '|';\n            }\n            else {\n              itemString += ':C';\n            }\n            itemString += stat.id.toString(36) + '=' + stat.max;\n          });\n        }\n        else if(item.id) {\n          itemString = 'I' + item.id.toString(36) + ':_';\n          if('itemSource' in item) {\n            itemString += item.itemSource;\n          }\n          else if('itemTypeName' in item) {\n            // this is to support groups saved with the old property name\n            itemString += item.itemTypeName;\n          }\n          else if(item.fileName) {\n            itemString += ':F' + item.fileName;\n          }\n        \n          if(item.enchantmentNum || item.enchantmentNum == 0) {\n            itemString += ':E' + item.enchantmentNum.toString(36);\n          }\n          if(item.pid > 0) {\n            itemString += ':P' + item.pid.toString(36);\n          }\n          // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n          // }\n          if(item.sparkId > 0) {\n            itemString += ':H' + item.sparkId.toString(36);\n          }\n          if(item.typeName == 'skills') {\n            itemString += ':J' + item.baseJobName;\n          }\n          if(item.pve) {\n            itemString += ':V' + item.pve;\n          }\n        }\n        \n        if(item.name && !small) {\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n        }\n\n        return itemString;\n      }\n      \n      return '';\n    },\n    \n    decodeItem: function(itemStr) {\n      var item = {};\n      \n      if(itemStr) {\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\n          if(itemBit.charAt(0) == 'I') {\n            item.id = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'E') {\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'P') {\n            item.pid = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'S') {\n            item.setId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'H') {\n            item.sparkId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'J') {\n            item.baseJobName = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == 'V') {\n            item.pve = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '_') {\n            item.itemSource = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '.') {\n            item.name = itemBit.substr(1).replace('-', ' ');\n          }\n          else if(itemBit.charAt(0) == 'C') {\n            item.stats = [];\n            var statString = itemBit.substr(1);\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\n              var splitStat = statBit.split('=');\n              item.stats.push({\n                id: parseInt(splitStat[0], 36),\n                max: Number(splitStat[1])\n              });\n            });\n          }\n          else if(itemBit.charAt(0) == 'F') {\n            \n            item.fileName = itemBit.substr(1);\n            angular.forEach(items, function(itemSource, key) {\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                item.itemSource = key;\n              }\n            });\n          }\n        });\n      }\n      \n      return item;\n    },\n    \n    createGroupLink: function(groupName, group) {\n      var itemStrings = [];\n      var self = this;\n      \n      if(group == null) {\n        return '';\n      }\n      \n      angular.forEach(group.items, function(item, key) {\n        var itemString = self.encodeItem(item, true);  \n        if(itemString && itemString.length) {\n          itemStrings.push(itemString);\n        }\n      });\n  \n      var retVal = 'view-group?region=' + region.dntLocation.region;\n      \n      \n      if(group.enemyLevel) {\n        retVal += '&e=' + group.enemyLevel;\n      }\n      if(group.playerLevel) {\n        retVal += '&p=' + group.playerLevel;\n      }\n      if(group.heroLevel) {\n        retVal += '&h=' + group.heroLevel;\n      }\n      if(group.job && group.job.id) {\n        retVal += '&j=' + group.job.id;\n      }\n      if(group.damageType && group.damageType.id) {\n        retVal += '&d=' + group.damageType.id;\n      }\n      if(group.element && group.element.id) {\n        retVal += '&t=' + group.element.id;\n      }\n      if(group.secondaryElement && group.secondaryElement.id) {\n        retVal += '&s=' + group.secondaryElement.id;\n      }\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n      return retVal;\n    },\n\n    createShortUrl: function(groupName, group) {\n      \n      var path = this.createGroupLink(groupName, group);\n      var basePath = angular.element(document.querySelector('base')).attr('href');\n      var longUrl = window.location.href.split(basePath)[0] + basePath + path;\n      var data = { longUrl: longUrl };\n      console.log('getting short url for ', longUrl);\n      \n    \t$http.post(\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\n    \t    function(data,status,headers,config){\n        \t\tgroup.shortUrl = data.id;\n    \t      sessionStorage.setItem(path, data.id);\n        \t}).\n        \terror(function(data,status,headers,config){\n        \t\t// console.log(data);\n        \t\t// console.log(status);\n        \t\t// console.log(headers);\n        \t\t// console.log(config);\n        \t});\n    },\n    \n    reloadItem: function(item) {\n\n      if(item == null) {\n        // console.log('cannot reload null item');\n        return;\n      }\n      \n      // support for old property name\n      if('itemTypeName' in item && !item.itemSource) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      // console.log('checking ' + item.itemSource)\n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n        // console.log('changed to ' + item.itemSource)\n      }\n      \n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\n        item.typeName = 'custom';\n        return item;\n      }\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n        \n        if(!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n        \n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if(item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n        \n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n            return;\n          }\n        });\n        \n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve,\n        };\n        \n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n      }\n      else if(item.itemSource in items) {\n        \n        var itemType = items[item.itemSource];\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\n        if(!ds.length) {\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n        }\n        else {\n          var d = ds[0];\n        \n          var totalRatio = 0;\n          var p = null;\n          \n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n          if(!ps.length) {\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\n          }\n          \n          if(!ps.length) {\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n            if(!ps.length) {\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\n            }\n          }\n          \n          if(ps.length > 0) {\n            p = ps[0];\n            \n            if(p.PotentialID != d.TypeParam1) {\n              // this happened one time\n              // not sure how but it corrupted the stats\n              p = null;\n            console.log('bad potential');\n            }\n            else {\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\n              angular.forEach(potentials, function(value, key) {\n                totalRatio += value.PotentialRatio;\n              });\n            }\n          }\n          \n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\n          itemFactory.initItem(newItem);\n          itemCategory.setItemCategory(newItem, d);\n\n          var usePartDnt = null;\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\n            usePartDnt = 'partsDnt';\n          }\n          else {\n            usePartDnt = 'weaponDnt';\n          }\n      \n          if(usePartDnt) {\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n              newItem.setStats = [];\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n              if(parts.length > 0) {\n                newItem.setId = parts[0].SetItemID;\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n                if(sets.length > 0) {\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\n                }\n              }\n            }\n          }\n\n          newItem.fullStats = newItem.stats;\n          if(item.enchantmentNum >= 0) {\n            newItem.enchantmentNum = item.enchantmentNum;\n            \n            if(newItem.typeName == 'skills') {\n              \n            }\n            else if(newItem.typeName == 'talisman') {\n              var extraStats = [];\n              angular.forEach(newItem.stats, function(stat, index) {\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\n              });\n              \n              newItem.enchantmentStats = extraStats;\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n            }\n            else {\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n              angular.forEach(enchantments, function(enchantment, index) {\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n                  return;\n                }\n              });\n            }\n          }\n          \n          if(item.sparkId > 0) {\n            newItem.sparkId = item.sparkId;\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n            if(sparks.length > 0) {\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n            }\n          }\n          else if(d.dragonjeweltype) {\n            newItem.offensiveGemSlots = 0;\n            newItem.increasingGemSlots = 0;\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\n            if(itemData && itemData.length > 0) {\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n              \n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n            }\n          }\n          \n          return newItem;\n        }\n      }\n      \n      if(item.fileName) {\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\n        if(datas.length > 0) {\n          var d = datas[0];\n          var newItem = {\n            id: item.id,\n            data: d,\n            levelLimit : d.LevelLimit,\n            needJobClass : d.NeedJobClass,\n            typeId : d.Type,\n            exchangeType: d.ExchangeType,\n            rank : hCodeValues.rankNames[d.Rank],\n            fileName: item.fileName,\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\n          };\n          \n          itemFactory.initItem(newItem);\n          return newItem;\n        }\n        else {\n          return {name: 'unknown item'};\n        }\n      }\n      else {\n        return {name: 'unknown item source: ' + item.itemSource};\n      }\n    },\n    \n    getDntFiles: function(item) {\n\n      var dntFiles = {};\n\n      if(item == null) {\n      }\n      else {\n        if(!item.itemSource && item.itemTypeName in items) {\n          item.itemSource = item.itemTypeName;\n        }\n        \n        if(item.itemSource == 'rbTech') {\n          item.itemSource = 'tech';\n        }\n        \n        if(item.itemSource in items) {\n          var itemType = items[item.itemSource];\n          \n          dntFiles['exchange.lzjson'] = null;\n          dntFiles['dragonjewelslottable.lzjson'] = null;\n  \n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n          if('potentialDnt' in itemType) {\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\n          }\n          if('potentialDntEx' in itemType) {\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\n          }\n          \n          if('enchantDnt' in itemType) {\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\n          }\n          \n          if('weaponDnt' in itemType) {\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\n          }\n          \n          if('partsDnt' in itemType) {\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\n          }\n          \n          if('setDnt' in itemType) {\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\n          }\n          \n          if('gemDnt' in itemType) {\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\n          }\n          \n          if('sparkDnt' in itemType) {\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\n          }\n        }\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n            dntFiles[skillDnt] = null;\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n        }\n        else if(item.typeName == 'custom') {\n        }\n        \n        if(item.fileName) {\n          dntFiles[item.fileName + '.lzjson'] = null;\n        }\n      }\n      \n      return dntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\nfunction groupHelper(exportLinkHelper) {\n  'use strict';\n  \n  return {\n    reloadGroup: function(groupName, group) {\n      var newItems = [];\n      angular.forEach(group.items, function(item, key) {\n        var newItem = exportLinkHelper.reloadItem(item);\n        if(newItem) {\n          newItems.push(newItem);\n        }\n      });\n      \n      return newItems;\n    },\n    \n    getDntFiles: function(group) {\n\n      var allDntFiles = {};\n      angular.forEach(group.items, function(item, key1) {\n        \n        var dntFiles = exportLinkHelper.getDntFiles(item);\n\n        angular.forEach(dntFiles, function(value, key) {\n          allDntFiles[key] = value;\n        });\n      });\n      \n      return allDntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemCategory',\n['itemFactory','items','dntData',itemCategory]);\nfunction itemCategory(itemFactory,items,dntData) {\n\n  return {\n    categories: [\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22]},\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', hideLevel: true, hideJob: true},\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29]},\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true,},\n      {path: 'skills', name:'skills', searchType: 'skills'},\n      {path: 'custom', name:'custom', searchType: 'custom'},\n      ],\n      \n    byName: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.name == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n      \n    byPath: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.path == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n    \n    getItems: function(name) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var retVal = [];\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType && retVal) {\n            if(!source.items && !source.loading) {\n              itemFactory.loadItems(source);\n            }\n            \n            if(source.items) {\n              retVal = retVal.concat(source.items);\n            }\n            else {\n              retVal = null; // if any are null just return null\n            }\n          }\n        });\n        \n        var catItems = [];\n        if(retVal) {\n          var vm = this;\n          angular.forEach(retVal, function(item, index) {\n            if(item.typeName == cat.name ||\n              vm.isItemForCat(cat, item, item.data)) {\n\n              item.typeName = name;\n              catItems.push(item);\n            }\n          });\n        }\n        \n        return catItems;\n      }\n      else {\n        return null;\n      }\n    },\n    \n    isItemForCat: function(cat, item, rawData) {\n      \n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\n        return false;\n      }\n      \n      if(item.itemType == cat.name) {\n        return true;\n      }\n      \n      if(cat.limitExchange) {\n        \n        for(var i=0;i<cat.limitExchange.length;++i) {\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\n            \n            if(item.itemSource == 'plate') {\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\n                return cat.name == 'expedition plates';\n              }\n              else {\n                return cat.name == 'enhancement plates';\n              }\n            }\n            else if(item.itemSource == 'gem') {\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n              if(gemTypes.length > 0) {\n                \n                if(gemTypes[0].Type == 1) {\n                  return cat.name == 'offensive gems';\n                }\n                else if(gemTypes[0].Type == 2) {\n                  return cat.name == 'increasing gems';\n                }\n                else {\n                  return false;\n                }\n              }\n            }\n            \n            return true;\n          }\n        }\n      }\n      else if(item.itemSource in items) {\n        return items[item.itemSource].type == cat.sourceType;\n      }\n\n      return false;\n    },\n    \n    init: function(name, complete) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType) {\n            source.init(function() {}, complete);\n          }\n        });\n      }\n    },\n    \n    setItemCategory: function (item, rawData) {\n      var vm = this;\n      \n      angular.forEach(this.categories, function(cat, index) {\n        if(vm.isItemForCat(cat, item, rawData)) {\n          item.typeName = cat.name;\n        }\n      });\n    },\n    \n    getItemsByCategory: function(items) {\n      var itemMap = {};\n      if(items) {\n        var types = {};\n        angular.forEach(items, function(item, index) {\n          if(item) {\n            if(!(item.typeName in types)) {\n              types[item.typeName] = [];\n            }\n            types[item.typeName].push(item);\n          }\n        });\n        \n        angular.forEach(this.categories, function(category, index) {\n\n          if(category.name in types) {\n            \n            var sorted = types[category.name].sort(function(item1, item2) {\n              if(category.name == 'talisman') {\n                \n                var enh1 = item1.enchantmentNum;\n                if(!enh1) enh1 = 0;\n                var enh2 = item2.enchantmentNum;\n                if(!enh2) enh1 = 0;\n                \n                if(enh1 != enh2) {\n                  return enh2 - enh1;\n                }\n              }\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                return item2.levelLimit - item1.levelLimit;\n              }\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\n                return item1.exchangeType - item2.exchangeType;\n              }\n              \n              return item1.name.localeCompare(item2.name);\n            });\n            itemMap[category.name] = sorted;\n          }\n          else {\n            itemMap[category.name] = [];\n          }\n        });\n        \n        angular.forEach(items, function(item, index) {\n          if(item && !(item.typeName in itemMap)) {\n            // console.log('we dont know ' + item.typeName + ' anymore')\n            itemMap.typeError = true;\n          }\n        });\n      }\n      return itemMap;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemFactory',\n['translations','dntData','hCodeValues','items',itemFactory]);\n\nfunction itemFactory(translations,dntData,hCodeValues,items) {\n  \n  return {\n    loadItems: loadItems,\n    initItem: initItem,\n    createItem: createItem,\n    getItemData: getItemData,\n    createBasicItem: createBasicItem,\n  };\n  \n  function createItem(itemSourceName, d, p, totalRatio) {\n    \n    // data and potential are used to initialise name and stats\n    // this is only done when needed\n    // they are then removed from the object\n    return {\n      data : d,\n      potential : p,\n      id: d.id,\n      totalRatio: totalRatio,\n      itemSource : itemSourceName,\n      levelLimit : d.LevelLimit,\n      needJobClass : d.NeedJobClass,\n      typeId : d.Type,\n      exchangeType: d.ExchangeType,\n      rank : hCodeValues.rankNames[d.Rank],\n      pid: null,\n      name : null,\n      stats : null,\n      potentialRatio : null,\n      typeName : null,\n      sparkId: null,\n    };\n  };\n  \n  function loadItems(itemType) {\n    \n    if(!dntData.isLoaded(itemType.mainDnt)) {\n      return null;\n    }\n    \n    if(!translations.isLoaded()) {\n      return null;\n    }\n    \n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n      return null;\n    }\n    \n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n      return null;\n    }\n    \n    var start = new Date().getTime();\n    \n    itemType.items = [];\n    var numRows = dntData.getNumRows(itemType.mainDnt);\n    for(var r=0;r<numRows;++r) {\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\n      \n      // skip certain types like pouches, res scrolls, etc\n      if(dType != 8 &&\n        dType != 9 &&\n        dType != 11 &&\n        dType != 12 &&\n        dType != 13 &&\n        dType != 18 &&\n        dType != 19 &&\n        dType != 20 &&\n        dType != 21 &&\n        dType != 24 &&\n        dType != 29 &&\n        dType != 46 &&\n        dType != 51 &&\n        dType != 74 &&\n        dType != 75 &&\n        dType != 76 &&\n        dType != 78 &&\n        dType != 79 &&\n        dType != 84 &&\n        dType != 100 &&\n        dType != 112 &&\n        dType != 114 &&\n        dType != 115 &&\n        dType != 116 &&\n        dType != 122 &&\n        dType != 142 &&\n        dType != 174 &&\n        dType != 130 &&\n        dType != 182 &&\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\n        (!itemType.minRank || dRank >= itemType.minRank)) {\n\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n          \n        // skip items with no data\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\n          var d = dntData.getRow(itemType.mainDnt, r);\n          \n          if(itemType.type == 'techs') {\n            var exists = false;\n            for(var i=0;i<itemType.items.length;++i) {\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\n                itemType.items[i].levelLimit == d.LevelLimit &&\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\n                  exists = true;\n                  break;\n                }\n            }\n            \n            if(exists) {\n              continue;\n            }\n          }\n          \n          var potentials = [];\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n            \n            if(!potentials.length && 'potentialDntEx' in itemType) {\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n            }\n          }\n          \n          var numPotentials = potentials.length;\n          if(!numPotentials) {\n            itemType.items.push(createItem(itemType.name, d, null, 0));\n          }\n          else {\n            var totalRatio = 0;\n            for(var p=0;p<numPotentials;++p) {\n              totalRatio += potentials[p].PotentialRatio;\n            }\n            \n            for(var p=0;p<numPotentials;++p) {\n              \n              var found = false;\n              for(var q=0;q<p;++q) {\n                if(potentialsMatch(potentials[p], potentials[q])) {\n                  found = true;\n                  break;\n                }\n              }\n              \n              if(!found) {\n                for(var q=p+1;q<numPotentials;++q) {\n                  if(potentialsMatch(potentials[p], potentials[q])) {\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\n                  }\n                }\n                \n                itemType.items.push(createItem(itemType.name, d, potentials[p], totalRatio));\n              }\n            }\n          }\n        }\n      }\n    }\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\n  }\n  \n  function potentialsMatch(p1, p2) {\n    \n    var i = 1;\n    var j = 1;\n    for(;;) {\n      var state1Col = 'State' + i;\n      var state2Col = 'State' + j;\n      \n      if(p1[state1Col] == 107) {\n        i++;\n        state1Col = 'State' + i;\n      }\n      if(p2[state2Col] == 107) {\n        j++;\n        state2Col = 'State' + j;\n      }\n      \n      if(!(state1Col in p1 || state2Col in p2)) {\n        return true;\n      }\n      \n      if(!(state1Col in p1)) {\n        return false;\n      }\n      if(!(state2Col in p2)) {\n        return false;\n      }\n      \n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\n        return true;\n      }\n      \n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\n        return true;\n      }\n      \n      if(p1[state1Col] != p2[state2Col]) {\n        return false;\n      }\n      \n      var val1Col = 'State' + i + 'Value';\n      var val2Col = 'State' + j + 'Value';\n      if(p1[val1Col] != p2[val2Col]) {\n        return false;\n      }\n      \n      ++i;\n    }\n  }\n  \n  function initItem(item) {\n    \n    if(item.data) {\n      var d = item.data;\n      var p = item.potential;\n  \n      if(item.name == null) {\n        item.name = translations.translate(d.NameID, d.NameIDParam);\n      }\n      \n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\n        item.sparkTypeId = d.TypeParam2;\n      }\n      \n      if(item.stats == null) {\n        var stats = hCodeValues.getStats(d);\n        if(p) {\n          var potentialStats = hCodeValues.getStats(p);\n          stats = hCodeValues.mergeStats(stats, potentialStats);\n        }\n        \n        item.stats = stats;\n      }\n      \n      if(d.SkillID && !item.skillId) {\n        item.skillId = d.SkillID;\n      }\n      \n      if(item.iconIndex == null) {\n        item.icon = d.IconImageIndex;\n        if(!item.icon && item.itemSource == 'title') {\n          item.icon = 12417;\n        }\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      \n      if(p) {\n        item.pid = p.id;\n      \n        if(item.potentialRatio === null) {\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\n        }\n      }\n      \n      delete item.data;\n      delete item.potential;\n    }\n  }\n  \n  function getPotentialRatio(p, totalRatio) {\n    \n    if(p && p.PotentialRatio > 0 && totalRatio != 0) {\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\n      if(ratio != 100) {\n        return ratio + '%';\n      }\n    }\n\n    return null;\n  }\n  \n  function getItemData(item) {\n    \n    var fileName = null;\n    var itemType = items[item.itemSource];\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\n      fileName = item.fileName + '.optimised.lzjson';\n    }\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n      fileName = item.fileName + '.lzjson';\n    }\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\n      fileName = itemType.mainDnt\n    }\n\n    if(fileName) {\n      var itemData = dntData.find(fileName, 'id', item.id);\n      if(itemData && itemData.length > 0) {\n        return itemData[0];\n      }\n    }\n    \n    return [];\n  }\n  \n  function createBasicItem(d) {\n    if(!d) {\n      return [];\n    }\n    return {\n      id: d.id,\n      name: translations.translate(d.NameID, d.NameIDParam),\n      rank: hCodeValues.rankNames[d.Rank],\n      icon: d.IconImageIndex,\n      levelLimit : d.LevelLimit,\n      fileName: d.fileName,\n    };\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('items',\n['translations','dntData','itemColumnsToLoad',items]);\nfunction items(translations,dntData,itemColumnsToLoad) {\n  \n  var itemSources = {\n    \n      title : {\n        mainDnt: 'appellationtable.optimised.lzjson', \n        type: 'titles', \n        minLevel: 0, \n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n      \n      tech: { \n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        type: 'techs', \n        minLevel: 24,\n        minRank: 0},\n      \n      tman: { \n        mainDnt: 'itemtable_talisman.optimised.lzjson', \n        type: 'talisman', \n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\n        minLevel: 24,\n        minRank: 0 },\n      \n      gem: { \n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \n        gemDnt: 'dragonjeweltable.optimised.lzjson',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3},\n      \n      plate: { \n        mainDnt : 'itemtable_glyph.optimised.lzjson', \n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n\n      items: {\n        mainDnt: 'itemtable.optimised.lzjson', \n        partsDnt: 'partstable.optimised.lzjson', \n        weaponDnt: 'weapontable.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \n        partsDnt: 'partstable_equipment.optimised.lzjson', \n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      rbeq: { \n        mainDnt: 'itemtable_reboot.optimised.lzjson', \n        partsDnt: 'partstable_reboot.optimised.lzjson', \n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: { \n        mainDnt: 'itemtable_pvp.optimised.lzjson',\n        partsDnt: 'partstable_pvp.optimised.lzjson', \n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n\n      c2016: { \n        mainDnt: 'itemtable_common2016.optimised.lzjson', \n        partsDnt: 'partstable_common2016.optimised.lzjson', \n        weaponDnt: 'weapontable_common2016.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2015: { \n        mainDnt: 'itemtable_common2015.optimised.lzjson', \n        partsDnt: 'partstable_common2015.optimised.lzjson', \n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: { \n        mainDnt: 'itemtable_common2014.optimised.lzjson', \n        partsDnt: 'partstable_common2014.optimised.lzjson', \n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: { \n        mainDnt: 'itemtable_cash.optimised.lzjson', \n        partsDnt: 'partstable_cash.optimised.lzjson', \n        weaponDnt: 'weapontable_cash.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.lzjson',\n        partsDnt: 'partstable_event.optimised.lzjson',\n        weaponDnt: 'weapontable_event.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n      imprint: {\n        mainDnt: 'itemtable_imprinting.lzjson',\n        type: 'imprint',\n        minLevel: 0,\n        minRank: 0 },\n    };\n    \n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function(itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function() {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n  \n  \n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n  \n      if(itemSource.items) {\n        complete();\n      }\n      else {\n        \n        translations.init(progress, function() { doComplete(itemSource, complete) });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\n        if('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n  \n        doComplete(itemSource, complete);\n      }\n    }\n    \n    function doComplete(itemSource, complete) {\n      if(translations.isLoaded() && \n      dntData.isLoaded(itemSource.mainDnt) && \n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\n      ) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\nfunction jobs(dntData, translations, itemColumnsToLoad) {\n  \n  var fileName ='jobtable.lzjson';\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\n  \n  return {\n    fileName : fileName,\n    allJobs : null,\n    \n    isLoaded : function() {\n      return dntData.isLoaded(fileName);\n    },\n    \n    hasStartedLoading: function() {\n      return dntData.hasStartedLoading(fileName);\n    },\n    \n    init : function(progress, complete) {\n      dntData.init(fileName, colsToLoad, progress, function() {\n        complete();\n        });\n    },\n\n    reset : function() {\n      this.allJobs = null;\n      dntData.reset(fileName);\n    },\n    \n    getFinalJobs : function () {\n      var jobs = [];\n      var alljobs = this.getAllJobs();\n      if(alljobs) {\n        var numRows = alljobs.length;\n        for(var r=0;r<numRows;++r) {\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n            jobs.push(alljobs[r]);\n          }\n        }\n      }\n      \n      return jobs;\n    },\n    \n    getBaseJobs : function () {\n      var retVal=[];\n      var baseJobs = {};\n\n      var self = this;\n      angular.forEach(this.getFinalJobs(), function(job, key) {\n        baseJobs[self.getBaseJobName(job)] = job;\n      });\n\n      angular.forEach(baseJobs, function(job, jobName) {\n        retVal.push(jobName);\n      });\n\n      return retVal;\n    },\n    \n    getAllJobs : function () {\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n        var jobs = [];\n        var data = dntData.getData(fileName);\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          jobs[jobs.length] = this.createJob(data[r]);\n        }\n        \n        this.allJobs = jobs;\n      }\n      return this.allJobs;\n    },\n    \n    getById: function(id) {\n      var data = this.getAllJobs();\n      if(data) {\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          if(data[r].id == id) {\n            return data[r];\n          }\n        }\n      }\n    },\n    \n    createJob : function(d) {\n      var t = this;\n      return {\n          d : d,\n          id : d.id,\n          name : translations.translate(d.JobName),\n          isClassJob : function(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n    },\n    \n    isClassJob : function (d, c) {\n      if(c == 0) return true;\n      if(d.id == c) {\n        return true;\n      }\n      \n      var parentJob = d.ParentJob;\n      \n      if(!parentJob) return false;\n      if(parentJob == c) return true;\n\n      var parentJobData = this.getById(parentJob);\n      if(parentJobData) {\n        return this.isClassJob(parentJobData.d, c);\n      }\n      \n      return false;\n    },\n    \n    getBaseJobName : function(job) {\n      if(this.isLoaded()) {\n        var alljobs = this.getAllJobs();\n        if(alljobs) {\n          var numRows = alljobs.length;\n          for(var r=0;r<numRows;++r) {\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\n              return alljobs[r].d.EnglishName;\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\n\nfunction onlineService($window, $q, hCodeValues) {\n  console.log('setup online service');\n  \n  var service = {\n    login: login,\n    getUser: function() {\n      return firebase.auth().currentUser;\n    },\n    signOut: signOut,\n    deleteAccount: deleteAccount,\n    \n    getUserBuilds: getUserBuilds,\n    deleteBuild: deleteBuild,\n    saveBuild: saveBuild,\n    getBuild: getBuild,\n    getClassBuilds: getClassBuilds,\n    \n    getProfile: getProfile,\n    saveProfile: saveProfile,\n    \n    stripBuildName: stripBuildName\n  };\n  \n  init();\n  \n  return service;\n  \n  function init() {\n    console.log('init');\n    firebase.initializeApp({\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\n      authDomain: \"dngearsim.firebaseapp.com\",\n      databaseURL: \"https://dngearsim.firebaseio.com\",\n      storageBucket: \"dngearsim.appspot.com\",\n    });\n  }\n  \n  function login() {\n    return $q(function(resolve, reject) {\n      var auth = firebase.auth();\n        \n      auth.onAuthStateChanged(function(user) {\n        if(user == null) {\n          console.log('redirecting');\n          $window.location.href = 'login.html';\n        }\n        else {\n          console.log('logged in');\n          resolve(user);\n        }\n      });\n    });\n  }\n  \n  function getProfile(uid) {\n    console.log('get profile');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(storedProfile.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getBuild(uid, buildName) {\n    console.log('get build');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(decompressBuild(storedProfile.val()));\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function saveProfile(profile) {\n    return $q(function(resolve, reject) {\n      var user = service.getUser();\n      if(user) {\n        profile = angular.copy(profile);\n        deleteNullProperties(profile, true);\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\n      }\n    });\n  }\n  \n  function getUserBuilds(uid) {\n    console.log('get builds');\n    return $q(function(resolve, reject) {\n      console.log('getting builds');\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\n        if(storedBuilds) {\n          var retVal = {};\n          var val = storedBuilds.val();\n          for(var buildName in val) {\n            retVal[buildName] = decompressBuild(val[buildName]);\n          }\n          resolve(retVal);\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getClassBuilds(job) {\n    console.log('get class builds');\n    return $q(function(resolve, reject) {\n      console.log('getting builds', job.id);\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\n        console.log('ok');\n        if(jobBuilds) {\n          resolve(jobBuilds.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function compressBuild(build) {\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        delete item.fullStats;\n      });\n    }\n    \n    var stringifiedData = JSON.stringify(build);\n    return LZString.compressToUTF16(stringifiedData);\n  }\n  \n  function decompressBuild(compressedBuild) {\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\n    var build = JSON.parse(stringifiedData);\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        item.fullStats = item.stats;\n        \n        if(item.enchantmentStats && item.enchantmentStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\n        }\n        \n        if(item.sparkStats && item.sparkStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\n        }\n      });\n    }\n    \n    return build;\n  }\n  \n  function saveBuild(buildName, build) {\n    var user = service.getUser();\n    var actions = [];\n    if(user) {\n      build = angular.copy(build);\n      deleteNullProperties(build, true);\n      // console.log('saving', build);\n      actions.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\n      );\n      \n      if(build.job && build.job.id) {\n        console.log('saving build');\n          \n        var data = {};\n        if(build.playerLevel) {\n          data.lev = build.playerLevel;\n        }\n        if(build.region) {\n          data.region = build.region;\n        }\n        if(build.guild) {\n          data.guild = build.guild;\n        }\n        if(build.about) {\n          data.about = build.about;\n        }\n        \n        deleteNullProperties(data, true);\n          \n        actions.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\n        );\n      }\n    }\n    return $q.all(actions);\n  }\n  \n  function deleteNullProperties(test, recurse) {\n    for (var i in test) {\n        if (test[i] === undefined) {\n            delete test[i];\n        } else if (recurse && typeof test[i] === 'object') {\n            deleteNullProperties(test[i], recurse);\n        }\n    }\n  }\n  \n  function signOut() {\n    var auth = firebase.auth();\n    return $q(function(resolve, reject) {\n      auth.signOut().then(function() {\n        resolve();\n      }, function(error) {\n        reject();\n      });\n    });\n  }\n  \n  function deleteAccount(builds) {\n    var auth = firebase.auth();\n    var user = service.getUser();\n    \n    return $q(function(resolve, reject) {\n      \n      var pList = [\n        firebase.database().ref('builds/' + user.uid).remove(),\n        firebase.database().ref('profile/' + user.uid).remove(),\n        firebase.database().ref('private/' + user.uid).remove()];\n        \n      var jobIds = [];\n      for(var buildName in builds) {\n        if(builds[buildName].job) {\n          jobIds.push(builds[buildName].job.id);\n        }\n      }\n      \n      jobIds = _.uniq(jobIds);\n      _.each(jobIds, function(id) {\n        pList.push(\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\n        )\n      });\n        \n      $q.all(pList).then(function() {\n        console.log('deleted data');\n        user.delete().then(function() {\n          console.log('deleted user');\n          auth.signOut().then(function() {\n            console.log('signed out');\n            resolve();\n          }, function(error) {\n            reject();\n          });\n        });\n      });\n    });\n  }\n  \n  function deleteBuild(buildName, build) {\n    \n    var pList = [];\n    var user = service.getUser();\n    if(user) {\n      pList.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      \n      if(build.job) {\n        pList.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      }\n    }\n    \n    return $q.all(pList);\n  }\n  \n  function stripBuildName(buildName) {\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\n\n  return {\n    stepDefs: {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            if(build.items) {\n              for(var i=0;i<build.items.length;++i) {\n                if(build.items[i].exchangeType == exId) {\n                  numExchange++;\n                }\n              }\n            }\n            \n            if(numExchange >= category.maxExchange) {\n              continue;\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            var exName = '';\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({id: exId, name: exName.toLowerCase()});\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(exId == 10 || exId == 25) {\n              if(numExchange >= 2) {\n                continue;\n              }\n            }\n            else {\n              if(numExchange >= 1) {\n                continue;\n              }\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n              \n              exchanges.push({id: exId, name: exName.toLowerCase()});\n            }\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      sixtyLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      allLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          { id: 50, name: 'level 50' }, \n          { id: 40, name: 'level 40' }, \n          { id: 32, name: 'level 32' }, \n          { id: 24, name: 'level 24' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      cashRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      techRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 2, name: 'rare' },\n          { id: 999, name: 'quality high grade' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            // todo: change this to use the name id\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n              \n            if(id == 999) {\n              return index === 0;\n            }\n            else {\n              return item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 999, name: 'quality high grade epic' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n            if(id == 999) {\n              return item.rank.id == 3 && index >= 0;\n            }\n            else {\n              return item.rank.id == id && index < 0;\n            }\n          }\n          return false;\n        }\n      },\n      otherRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      equipRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 100, name: '+100% slot' },\n          { id: 75, name: '+75% slot' },\n          { id: 25, name: '+25% slot' },\n          { id: 0, name: '+0% slot' },\n          ];\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          var allTitles = findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for(var i=0;i<allTitles.length;++i) {\n            switch(allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              // case 339: // Cow Wrangler\n              case 230: // Miraculous\n              case 279: // Provoking\n              // case 1280: // Dragon Tamer\n              case 1313: // Jakard's Demise\n              case 2032: // Sharing Goddess's Grief\n              case 2033: // Grief-stricken\n                usefulTitles.push(allTitles[i]);\n            }\n          }\n          \n          return usefulTitles;\n        },\n        hasOptions: function(category, build, datas) {\n          return true;\n        },\n        isItemStep: true,\n      },\n      enhanceStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 15, name: 'enhance to +15' },\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ]\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return findData(category, build, datas);\n        },\n        isItemStep: true,\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas, 1);\n          \n          // eventually show all the skills\n          // but for now\n          if(items.length > 0) {\n            return [{id: items[0].skillId, name: items[0].skillId}];\n          }\n          else {\n            return [];\n          }\n        },\n        matchesItem: function(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          \n          for(var i=0;i<build.items.length;++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n          \n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var numStats = {};\n          \n          for(var i=0;i<items.length;++i) {\n            var len = 0;\n            for(var j=0;j<items[i].stats.length;++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if(stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n          \n          var retVal = [];\n          for(var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val,\n            });\n          }\n          \n          retVal = retVal.sort(function(a, b) {\n              return a.id - b.id;\n            });\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          var len = 0;\n          for(var j=0;j<item.stats.length;++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if(stat && !stat.hide) {\n              len++;\n            }\n          }\n            \n          return len == id;\n        },\n        isItemStep: true,\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true,\n      },\n    },\n    // end of step defs\n    \n    categorySteps: {\n      titles: ['titleStep'],\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\n      custom: ['customStep'],\n    },\n    getOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        return this.stepDefs[stepName].getOptions(category, build, datas);\n      }\n      else {\n        return [];\n      }\n    },\n    hasOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        if(this.stepDefs[stepName].hasOptions) {\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\n        }\n        else {\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\n        }\n      }\n      else {\n        return false;\n      }\n    },\n    isValidStepNumber: function(category, stepNumber) {\n      return this.categorySteps[category.name].length > stepNumber;\n    },\n    createData: function(value, category, stepNumber) {\n      var stepName = this.getStepName(category, stepNumber);\n      var def = this.stepDefs[stepName];\n      \n      return {\n        step: stepName,\n        value: value,\n        def: def,\n        matchesItem: function(item) {\n          return def.matchesItem(value.id, item);\n        }\n      };\n    },\n    getItem: getItem,\n    getStepName: function(category, stepNumber) {\n      return this.categorySteps[category.name][stepNumber];\n    }\n  }\n  \n  function getItem(datas) {\n    var item = null;\n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.isItemStep) {\n        item = datas[d].value;\n      }\n    }\n    \n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.alterItem) {\n        datas[d].def.alterItem(datas[d].value.id, item);\n      }\n    }\n    \n    return item;\n  }\n  \n  function findData(category, build, datas, maxItems) {\n    if(!maxItems) {\n      maxItems = 9999;\n    }\n    \n    var allItems = itemCategory.getItems(category.name);\n    var retVal = [];\n    // console.log('looking at ' + allItems.length + ' items');\n    var numItems = allItems.length;\n    \n    for(var i=0;i<numItems;++i) {\n      \n      var item = allItems[i];\n      \n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n        continue;\n      }\n      itemFactory.initItem(item);\n      \n      var addItem = true;\n      for(var d=0;d<datas.length;++d) {\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\n          addItem = false;\n          break;\n        }\n      }\n      \n      if(addItem) {\n        retVal.push(item);\n      }\n      \n      if(retVal.length >= maxItems) {\n        break;\n      }\n    }\n    \n    retVal = retVal.sort(function(item1, item2) {\n      return item1.name.localeCompare(item2.name);\n    });\n    \n    // console.log('found ' + retVal.length + ' items');\n    return retVal;\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\nfunction region(translations,dntReset,dntData,$route) {\n  \n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\n  var hostedFiles =[\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\n      {region: 'ina', name: 'indonesian files from gemscool', url : 'https://inafiles-da491.firebaseapp.com'},\n    ];\n  \n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n  var dntLocation = hostedFiles[0];\n  if(dntLocationRegion) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region == dntLocationRegion) {\n        dntLocation = hostedFile;\n      }\n    });\n  }\n\n  var lastTFile = localStorage.getItem('UIStrings_file');\n  var tlocation = null;\n  if(lastTFile) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n        tlocation = hostedFile;\n        return;\n      }\n    });\n  }\n  \n  if(tlocation == null) {\n    tlocation = dntLocation;\n  }\n\n  return {\n    hostedFiles : hostedFiles,\n    alternativeFiles : alternativeFiles,\n    dntLocation : dntLocation,\n    tlocation : tlocation,\n    \n    setCustomUrl: function(url) {\n      // console.log('setting custom location');\n      this.alternativeFiles.url = url;\n\n      var newFiles = [];\n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region != alternativeFiles.region) {\n          newFiles.push(hostedFile);\n        }\n      });\n  \n      newFiles.push(alternativeFiles);\n      hostedFiles = newFiles;\n      this.hostedFiles = newFiles;\n    },\n    \n    setLocationByName: function(locationName) {\n      var newLocation = null;\n      \n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region == locationName) {\n          newLocation = hostedFile;\n        }\n      });\n        \n      this.setLocation(newLocation);\n    },\n    \n    setLocation: function(location) {\n      if(location && location != this.dntLocation) {\n        this.dntLocation = location;\n        dntReset();\n        localStorage.setItem('lastDNTRegion', location.region);\n        dntReset();\n        $route.reload();\n      }\n\n      if(this.tlocation == null) {\n        this.setTLocation(location);\n      }\n      \n      this.init();\n      \n      // $route.reload();\n    },\n    \n    setTLocation: function(location) {\n      \n      if(location != this.tlocation) {\n        \n        this.tlocation = location;\n        sessionStorage.removeItem('UIStrings');\n        localStorage.removeItem('UIStrings_file');\n        dntReset();\n        translations.reset();\n        translations.location = this.tlocation.url;\n        translations.init(function() {}, function() { $route.reload(); });\n        // $route.reload();\n      }\n    },\n    \n    init: function() {\n      if(this.tlocation) {\n        translations.location = this.tlocation.url;\n      }\n      dntData.setLocation(this.dntLocation);\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\nfunction saveHelper(itemCategory) {\n  return {\n    saveItem: function(groupName, item) {\n      var groups = this.getSavedItems();\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\n        \n        groups[groupName].items.push(item);\n        groups[groupName].lastUpdate = (new Date()).getTime();\n        this.updatedSavedItems(groupName, groups[groupName].items);\n      }\n      else {\n        this.updatedSavedItems(groupName, [item]);\n      }\n      \n      localStorage.setItem('lastSavedGroup', groupName);\n    },\n    \n    saveBuildSelection : function(buildName, builds) {\n      this.setCurrentBuild(buildName);\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\n      }\n    },\n    \n    importGroup: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      groupName = this.getUniqueGroupName(groupName, items);\n      this.updatedSavedItems(groupName, updatedItems);\n      return groupName;\n    },\n    \n    getUniqueGroupName: function(groupName, existingGroups) {\n      var groupNameIndex = 0;\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\n        var startIndex = groupName.lastIndexOf('(');\n        if(startIndex > 0) {\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\n          if(foundIndex > 0) {\n            groupNameIndex = foundIndex + 1;\n            groupName = groupName.substr(0, startIndex - 1);\n          }\n        }\n      }\n      \n      var originalName = groupName;\n      for(;;) {\n        var groupName = originalName;\n        if(groupNameIndex > 0) {\n          groupName = originalName + ' (' + groupNameIndex + ')';\n        }\n        \n        if(groupName in existingGroups) {\n          groupNameIndex++;\n        }\n        else {\n          break;\n        }\n      }\n      \n      return groupName;\n    },\n    \n    updatedSavedItems: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      if(groupName in items) {\n        if(!updatedItems.length) {\n          delete items[groupName];\n          this.setCurrentBuild(null);\n          // console.log('no items to update');\n        }\n        else {\n          items[groupName].items = updatedItems;\n          items[groupName].lastUpdate = (new Date()).getTime();\n          localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('set group');\n        }\n      }\n      else {\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\n        localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('created group');\n      }\n      \n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    renameSavedGroup: function(\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n        \n      var savedItems = this.getSavedItems();\n      \n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\n        // console.log('not changing name');\n        newGroupName = oldGroupName;\n      }\n      else if(oldGroupName in savedItems) {\n        var group = savedItems[oldGroupName];\n        savedItems[newGroupName] = group;\n        delete savedItems[oldGroupName];\n      }\n      \n      savedItems[newGroupName].enemyLevel = enemyLevel;\n      savedItems[newGroupName].playerLevel = playerLevel;\n      savedItems[newGroupName].heroLevel = heroLevel;\n      savedItems[newGroupName].job = job;\n      savedItems[newGroupName].damageType = damageType;\n      savedItems[newGroupName].element = element;\n      savedItems[newGroupName].secondaryElement = secondaryElement;\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\n      savedItems[newGroupName].conversions = conversions;\n      savedItems[newGroupName].baseStats = baseStats;\n      savedItems[newGroupName].heroStats = heroStats;\n      \n      var stringifiedData = JSON.stringify(savedItems);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getSavedItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    getCustomItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return [];\n    },\n    \n    saveCustomItems: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getHiddenTypes: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    saveHiddenTypes: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    currentBuild: null,\n    getCurrentBuild: function() {\n      if(!this.currentBuild) {\n        this.currentBuild = localStorage.getItem('currentGroup');\n        if(this.currentBuild) {\n          var savedItems = this.getSavedItems();\n          if(!(this.currentBuild in savedItems)) {\n            localStorage.removeItem('currentGroup');\n            this.currentBuild = null;\n          }\n        }\n      }\n      \n      return this.currentBuild;\n    },\n    \n    setCurrentBuild: function(buildName) {\n      this.currentBuild = buildName;\n      localStorage.setItem('currentGroup', buildName);\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\nfunction statHelper(hCodeValues) {\n\n  return {\n    \n    getSetStats: function(groupItems) {\n      var stats = [];\n      var sets = {};\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value !== null && value.setStats != null) {\n          if(value.setId in sets) {\n            sets[value.setId].numItems++;\n          }\n          else {\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\n          }\n        }\n      });\n      \n      angular.forEach(sets, function(value, key) {\n        angular.forEach(value.stats, function(stat, index) {\n          if(stat.needSetNum <= value.numItems) {\n            stats.push(stat);\n          }\n        });\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCombinedStats: function(groupItems) {\n      var stats = [];\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value) {\n          \n          if(value.fullStats) {\n            stats = stats.concat(value.fullStats);\n          }\n          else if(value.stats) {\n            stats = stats.concat(value.stats);\n          }\n        }\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCalculatedStats: function(group, combinedStats) {\n      \n      var retVal = [];\n      var statLookup = {};\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\n        return [];\n      }\n      \n      angular.forEach(combinedStats, function(stat, index) {\n        statLookup[stat.id] = stat;\n      });\n      \n      function getPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.pc]) {\n          return Number(statLookup[statDef.pc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function getSkillPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.skPc]) {\n          return Number(statLookup[statDef.skPc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function applyPc(stat) {\n        stat.max = Math.floor(\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\n          );\n      }\n      \n      function dupeStat(id) {\n        var stat = statLookup[id];\n        if(stat) {\n          return {id: id, max: Number(stat.max), pc: stat.pc};\n        }\n        else {\n          return {id: id, max: 0, pc: 0};\n        }\n      }\n      \n      function addStat(stat) {\n        if(stat.max > 0) {\n          retVal.push(stat);\n        }\n      }\n      \n      // base stats\n      var str = dupeStat(0);\n      applyPc(str);\n      addStat(str);\n      \n      var agi = dupeStat(1);\n      applyPc(agi);\n      addStat(agi);\n      \n      var int = dupeStat(2);\n      applyPc(int);\n      addStat(int);\n\n      var vit = dupeStat(3);\n      applyPc(vit);\n      addStat(vit);\n\n      // add vit to hp\n      var hp = dupeStat(25);\n      hp.max += (vit.max * Number(group.conversions.HP));\n      applyPc(hp);\n      addStat(hp);\n      \n      // defs\n      var def = dupeStat(8);\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\n      applyPc(def);\n      addStat(def);\n      \n      var defpc = dupeStat(1008);\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(defpc);\n      \n      var mdef = dupeStat(9);\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\n      applyPc(mdef);\n      addStat(mdef);\n      \n      var mdefpc = dupeStat(1009);\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(mdefpc);\n      \n      // attack power - like fd but for bufs\n      // this shows as blue damage\n      // i think there are magic and phis variants of this but doesnt matter\n      var aPwr = dupeStat(3000);\n\n      // physical damage\n      if(!group.damageType || group.damageType.id != 2) {\n        var extraPdmg = dupeStat(32);\n        var extraPdmgMod= dupeStat(101);\n        var paPwr = dupeStat(3001);\n        \n        // special stats for zeal\n        var intToPdmg = dupeStat(10164);\n        \n        var minPdmg = dupeStat(4);\n        minPdmg.max += extraPdmg.max;\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(minPdmg);\n  \n        var maxPdmg = dupeStat(5);\n        maxPdmg.max += extraPdmg.max;\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(maxPdmg);\n      }\n      \n      // magic damage\n      if(!group.damageType || group.damageType.id != 1) {\n        var extraMdmg = dupeStat(33);\n        var extraMdmgMod = dupeStat(102);\n        var maPwr = dupeStat(3002);\n        \n        // special stats for zeal\n        var strToMdmg = dupeStat(10165);\n        \n        var minMdmg = dupeStat(6);\n        minMdmg.max += extraMdmg.max;\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\n\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(minMdmg);\n        \n        var maxMdmg = dupeStat(7);\n        maxMdmg.max += extraMdmg.max;\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\n        \n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(maxMdmg);\n      }\n      \n      \n      // crit chance %\n      var crit = dupeStat(12);\n      crit.max += (agi.max*Number(group.conversions.Critical));\n      applyPc(crit);\n      \n      var skCrit = dupeStat(4012);\n      crit.max += skCrit.max;\n      addStat(crit);\n      var itemCrit = dupeStat(1012);\n      \n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\n      retVal.push({id: 1012, max: critChance});\n\n      // crit damage %\n      var cDmg = dupeStat(103);\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\n      applyPc(cDmg);\n      addStat(cDmg);\n\n      var critDamagePc = cDmg.max / group.playerStatCaps.CcriticalDamage;\n      addStat({id: 1103, max: critDamagePc + 2});\n\n      // fd\n      var fd = dupeStat(29);\n      addStat(fd);\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n      \n      var fdPc = dupeStat(1029);\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\n      addStat(fdPc);\n      \n      // elements\n      var firePc = dupeStat(16);\n      addStat(firePc);\n      \n      var icePc = dupeStat(17);\n      addStat(icePc);\n      \n      var lightPc = dupeStat(18);\n      addStat(lightPc);\n      \n      var darkPc = dupeStat(19);\n      addStat(darkPc);\n      \n      // average damage\n      function addAvgDamageStat(id, min, max) {\n        \n        var nonEleDamage = (min+max)/2;\n        // add crit (assume 25% crit resist - ie. x0.75)\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\n        // apply fd\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\n        \n        // apply element(s)\n        // assume no elemental resist (since probably have resist reduction anyways)\n        var avgDmg = nonEleDamage;\n        if(group.element && group.element.id > 0) {\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\n          if(elementStat) {\n            avgDmg = avgDmg * (1+Number(elementStat.max));\n          }\n        }\n        addStat({id: id, max: avgDmg});\n        var secElementId = 0;\n        var priElementId = 0;\n        if(group.element) {\n          priElementId = group.element.id;\n        }\n        else {\n          priElementId = 0;\n        }\n        if(group.secondaryElement) {\n          secElementId = group.secondaryElement.id;\n        }\n        else {\n          secElementId = 0;\n        }\n        \n        if(secElementId != priElementId) {\n          if(secElementId > 0) {\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\n            if(secondaryElementStat) {\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\n              addStat({id: id + 1000, max: secAvgDmg});\n            }\n          }\n          else {\n            addStat({id: id + 1000, max: nonEleDamage});\n          }\n        }\n      }\n      \n      // average damages\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n      }\n\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n      }\n      \n      if(!group.damageType || group.damageType.id == 3) {\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\n      }\n      \n      // Equivalent HP\n      var pdefEqHp = dupeStat(2008);\n      pdefEqHp.max = hp.max / (1-defpc.max);\n      \n      var mdefEqHp = dupeStat(2009);\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\n      \n      var eqHp = dupeStat(3008);\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n      addStat(eqHp);\n      \n      return retVal;\n    },\n    \n    getNakedStats: function(group) {\n      \n      if(\n        group.baseStats && \n        group.baseStats.Strength > 0) {\n\n        return [\n          {id:0, max:group.baseStats.Strength},\n          {id:1, max:group.baseStats.Agility},\n          {id:2, max:group.baseStats.Intelligence},\n          {id:3, max:group.baseStats.Stamina}\n          ];\n      }\n      else {\n        return [];\n      }\n    },\n    \n    getSkillStats : function (item, data, skillData) {\n\n      var skillLevelVals = null;\n      angular.forEach(skillData, function(value, index) {\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n          skillLevelVals = value;\n          return;\n        }\n      });\n      \n      if(!skillLevelVals) {\n        return null;\n      }\n      \n      var index = 1;\n      var effects = [];\n      var stillCols = true;\n      \n      while(stillCols) {\n        var colName = 'EffectClass' + index;\n        var valColName = 'EffectClassValue' + index;\n        if(data && colName in data && valColName in skillLevelVals) {\n          if(data[colName] > 0) {\n            \n            var val = skillLevelVals[valColName];\n            \n            // for now add 10k\n            var effectId = data[colName];\n            var map = hCodeValues.skillEffectMapping[effectId];\n            if(map && map.getVals) {\n              var vals = map.getVals(val);\n              for(var i=0;i<vals.length;++i) {\n                effects.push(vals[i]);\n              }\n            }\n            else {\n              var statId;\n              if(map && map.mapTo) {\n                statId = map.mapTo;\n              }\n              else {\n                statId = 10000 + effectId;\n              }\n              \n              if(val > 0) {\n                effects.push({ id: statId, effect: effectId, max: val });\n              }\n              else {\n                if(val.toString().indexOf(';') > 0) {\n                  var vals = val.split(';');\n                  if(vals.length > 0 && vals[0] > 0) {\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\n                  }\n                }\n              }\n            }\n          }\n        }\n        else {\n          stillCols = false;\n        }\n        \n        index++;\n      }\n      \n      return effects;\n    },\n\n    getBuildStats: function(build) {\n      var stats = {};\n      stats.nakedStats = this.getNakedStats(build);\n      stats.combinedStats = this.getCombinedStats(build.items);\n      stats.setStats = this.getSetStats(build.items);\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n      if(build.heroStats && build.heroStats.length) {\n        stats.heroStats = build.heroStats;\n        stats.allStats = stats.allStats.concat(build.heroStats);\n      }\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\n      \n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n      return stats;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\nfunction translations($routeParams, $rootScope) {\n\n  var dnTranslations = new DnTranslations();\n  var tFile = 'uistring.optimised.lzjson';\n\n  var completeCallback = [];\n  var progressCallback = [];\n\n  return {\n    \n    reset : function() {\n      dnTranslations = new DnTranslations();\n      dnTranslations.sizeLimit = 100;\n      this.loaded = false;\n      this.startedLoading = false;\n      completeCallback = [];\n      progressCallback = [];\n    },\n    \n    loaded : false,\n    startedLoading : false,\n    \n    location : null,\n  \n    init : function(progress, complete) {\n\n      if(this.isLoaded()) {\n        complete();\n      }\n      else {\n        progressCallback = [];\n        progressCallback.push(progress);\n        completeCallback.push(complete);\n  \n        if(!this.startedLoading) {\n          this.startedLoading = true;\n          var t = this;\n          \n          var fileName = null;\n          if(this.location && this.location != '') {\n            fileName = this.location + '/' + tFile;\n            \n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n              sessionStorage.removeItem('UIStrings');\n              localStorage.removeItem('UIStrings_file');\n            }\n          }\n          \n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n          dnTranslations.loadDefaultFile(\n            fileName, \n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n            }, \n            function() {\n              t.loaded = true;\n              angular.forEach(completeCallback, function(value, key) { value(); });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            },\n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            }\n          );\n        }\n      }\n    },\n    \n    isLoaded : function() {\n      if(!this.loaded) {\n        var fileName = this.location + '/' + tFile;\n        \n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n        }\n\n        this.loaded = dnTranslations.loadFromSession();\n        if(this.loaded) {\n          this.startedLoading = true;\n        }\n      }\n      return this.loaded;\n    },\n    \n    translate : function(id,idParam) {\n      if(this.loaded) {\n        \n        var name;\n        if(!id) {\n          return '';\n        }\n        else {\n          name = dnTranslations.translate(id);\n          \n          if(typeof name != 'string') {\n            return 'm' + name;\n          }\n        }\n        \n        if(idParam) {\n          var params = idParam.split(',');\n          for(var p=0;p<params.length;++p) {\n            var pid = params[p];\n            if(pid.indexOf('{') == 0) {\n              pid = params[p].replace(/\\{|\\}/g,'');\n              pid = dnTranslations.translate(pid);\n            }\n            \n            name = name.replace('{' + p + '}', pid);\n          }\n        }\n\n        return name;\n      }\n      else {\n        return 'm' + id;\n      }\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\nfunction hCodeValues() {\n\n  function toOneDec(stat) {\n    return Math.round(stat.max*10)/10;\n  }\n  function toNoDec(stat) {\n    return Math.floor(stat.max);\n  }\n  function inThousands(stat) {\n    var val = Number(stat.max);\n    if(val < 100) {\n      return val;\n    }\n    else if(val < 100000) {\n      return Math.round(val/100)/10 + 'k';\n    }\n    else if(val < 1000000) {\n      return Math.round(val/1000) + 'k';\n    }\n    else if(val < 10000000) {\n      return Math.round(val/10000)/100 + 'm';\n    }\n    else {\n      return Math.round(val/1000000) + 'm';\n    }\n  }\n  function toPercent(stat) {\n    return (Math.floor(stat.max*100000)/1000) + '%';\n  }\n  \n  return {\n    stats : {\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true },\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true },\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true },\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true },\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32 },\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33 },\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\n      \n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\n      \n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\n\n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\n\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104 },\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\n      \n      // stats below here are ones I made up\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      \n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\n      \n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\n      \n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      \n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n      \n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\n      \n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n      \n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\n      \n      // special cases for skills\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\n      \n      // items over 10000 are unknown skill effects\n    },\n  \n    rankNames : {\n      0 : { id: 0, name : 'normal' },\n      1 : { id: 1, name : 'magic' },\n      2 : { id: 2, name : 'rare' },\n      3 : { id: 3, name : 'epic' },\n      4 : { id: 4, name : 'unique' },\n      5 : { id: 5, name : 'legendary' },\n    },\n    \n    shopNames : {\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\n      59001: 'garden bunny',\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \n      89001: 'guild master',\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \n      66001: 'erosion',\n      35006: 'plate',\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n      40001: 'daredevil faire', 40002: 'daredevil faire', \n      91001: 'wrath',\n      45001: 'farm',\n    },\n    \n    checkedRank : {\n      0 : true,\n      1 : true,\n      2 : true,\n      3 : true,\n      4 : true,\n      5 : true,\n    },\n    \n    typeNames : {\n      0 : 'weapons',\n      1 : 'equipment',\n      5 : 'plates',\n      8 : 'pouch',\n      38 : 'plates',\n      90 : 'welspring',\n      132 : 'talisman',\n      139 : 'gems',\n    },\n    \n    elements : {\n      0 : { id: 0, name: 'non-ele' },\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\n      3 : { id: 3, name: 'light', dmgStat: 18 },\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\n    },\n    \n    damageTypes : {\n      0 : { id: 0, name: 'both separate' },\n      1 : { id: 1, name: 'physical' },\n      2 : { id: 2, name: 'magical' },\n      3 : { id: 3, name: 'both combined' },\n    },\n    \n    // note: skills shown on-screen have 1k added to their id\n    skillEffectMapping : {\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n      13 : { id: 13, name: 'mp', mapTo: 26 },\n      25 : { id: 25, name: 'action speed' },\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\n      34 : { id: 34, name: 'light %', mapTo: 18 },\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\n      38 : { id: 38, name: 'light def', mapTo: 22 },\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\n      65 : { id: 65, name: 'range' },\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\n      // 134 : { id: 134, name: 'p dmg reduction%' },\n      // 135 : { id: 135, name: 'm dmg reduction%' },\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\n      222: {\n        id: 222, \n        name: 'hellfire', \n        getVals: function(val) {\n          if(val.indexOf(';') > 0) {\n            var vals = val.split(';');\n            return [\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\n              {id: 4012, effect: 222, max: Number(vals[1])},\n              ];\n          }\n          else {\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\n          }\n        }\n      },\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\n    },\n    \n    customItems: \n    [\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\n    ],\n  \n    getStats : function(data) {\n\n      var useMax=false;\n      var useStateXVal=false;\n      var mightHaveSets=true;\n      var prop = 'State1_Max';\n      if(prop in data) {\n        useMax = true;\n      }\n      else {\n        prop = 'State1Value';\n        if(prop in data) {\n          useStateXVal = true;\n        }\n      }\n      \n      var currentState = 0;\n      var statVals = [];\n      for(;;) {\n        currentState++;\n        \n        var stateProp = 'State' + currentState;\n        if(!(stateProp in data)) {\n          break;\n        }\n\n        var stateId = data[stateProp];\n        if(stateId == -1) {\n          break;\n        }\n        \n        if(stateId == 107) {\n          // is this mp?\n        }\n        else {\n          \n          var currentData = { id: stateId };\n          \n          var prop;\n        \n          if(useMax) {\n            prop = 'State' + currentState + '_Max';\n            currentData.max = data[prop];\n          }\n          else if(useStateXVal) {\n            prop = 'State' + currentState + 'Value';\n            currentData.max = data[prop];\n          }\n          else {\n            prop = 'StateValue' + currentState;\n            currentData.max = Number(data[prop]);\n          }\n          \n          if(currentData.max > 0 || currentData.max < 0) {\n            if(mightHaveSets) {\n              prop = 'NeedSetNum' + currentState;\n              if(prop in data) {\n                if(data[prop] == 0) {\n                  break;\n                }\n                currentData.needSetNum = data[prop];\n              }\n              else {\n                mightHaveSets = false;\n              }\n            }\n          \n            statVals.push(currentData);\n          }\n        }\n      }\n      \n      return statVals;\n    },\n    \n    setupStat : function(stat, id) {\n      stat.id = Number(id);\n    },\n    \n    mergeStats : function(stats1, stats2) {\n      var statMap = {};\n      \n      var self = this;\n      function add(value) {\n        \n        var amount = Number(value.max);\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\n          amount = Math.floor(amount);\n        }\n        \n        if(value.id in statMap) {\n          statMap[value.id] += amount;\n        }\n        else {\n          statMap[value.id] = amount;\n        }\n      }\n      \n      angular.forEach(stats1, function(value, key) {\n        if(value) {\n          add(value);\n        }\n      });\n      \n      if(stats2) {\n        angular.forEach(stats2, function(value, key) {\n          if(value) {\n            add(value);\n          }\n        });\n      }\n      \n      var newStats = [];\n      \n      for(var key in statMap) {\n        var stat = { max : statMap[key], id: Number(key) };\n        newStats.push(stat);\n      }\n        \n      return newStats;\n    }\n  }\n}\n\n})();"],"sourceRoot":"/source/"}