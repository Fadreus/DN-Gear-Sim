{"version":3,"sources":["routes.js","filters/escape.filter.js","filters/percentage.filter.js","about/about.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","document","body","className","groupAssignment","hCodeValues","statHelper","saveHelper","itemCategory","$scope","exportLinkHelper","dntData","calcStatPercent","newVal","origVal","saveGroup","saveBuildSelection","vm","groupName","savedItems","this","getSavedItems","groupNames","Object","keys","savedGroup","summaryStatIds","id","stats","summaryDisplay","push","clearGroup","addAffectAmount","replaceAffectAmount","groupCalcStats","dntFiles","anyLoading","tryToSetItem","columns","fileName","isLoaded","allLoaded","item","reloadItem","getDntFiles","forEach","indexOf","init","getAddAffectAmount","stat","initAddAffects","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","getGroupCalcStats","group","items","getBuild","origStats","newItems","concat","getCalculatedStatsFromItems","getStat","newStats","max","index","len","length","i","getStatName","retVal","element","eleId","elements","name","secondaryElement","getGroupItems","numMatches","str","matches","itemSplit","typeName","groupItems","existing","sparkTypeId","itemSource","_","each","exchangeType","sort","b","a","hasMaxExchangable","cat","find","maxCat","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","onChange","replaceItem","newItemList","gItem","updatedSavedItems","$inject","directive","scope","bindToController","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","controllerAs","$timeout","translations","itemColumnsToLoad","itemFactory","getEnchantLevel","enchantments","itemType","num","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","enchantmentStats","setEnchantment","enchantmentNum","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","number","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","p","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","sparkStats","isMoreSparks","isFirstSpark","prevSpark","sid","setTalisman","amount","extraStats","useStats","mergeStats","updateItem","attainments","files","texts","file","splitVal","singleText","split","ItemGainText","text","translate","region","typeId","console","log","pouchFileNames","usedFiles","lookupId","datas","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","d","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","url","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","rows","r","row","col","colName","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","item1","TabNameID","item2","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","$window","jobs","$routeParams","$location","anyToLoad","allJobs","job","needJobClass","jobName","setFullStats","anyDntToLoad","tryInit","getJobName","title","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","fullStats","getBuilds","builds","mainDnt","replace","setLocationByName","scrollTo","decodeItem","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","exchange","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","buildName","getCurrentBuild","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","handleChange","search","encodeItem","copy","preInitItem","copyGroup","newGroupName","importGroup","build","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","shortUrl","sessionStorage","getItem","longUrl","groupHelper","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","target","event","reader","FileReader","readAsText","onload","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","subCatList","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","exchangeId","subCat","gemExchanges","e","isInSubCat","gemExchange","foundSubCatItem","canMove","allSubCatItems","subCatItem","move","moveItem","destination","allowMoreItems","getGemSlot","cancelEdit","handleItemEdit","removeItem","server","gemSlot","gemSlots","getGemSlotName","editMode","setupBuilds","buildNames","currentGroup","createGroup","toggleGroup","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","character","updateRows","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","pcIndexes","pcIndex","rowIndex","makeFakeCells","data","makeCell","selectedIndex","click","swapEnchantmentNumber","newEnhancementNum","fullStats1","fullStats2","useItem2Stats","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","numItems","numItemText","newCustom","newGroup","deleteBuild","editBuildCtrl","heroStats","oldGroupName","damageTypes","initDamageType","damageType","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","EnglishName","critResist","enemyLevel","playerLevel","eleResist","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","tryToAddItem","cancel","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","goToBuild","allInit","getById","g","h","itemString","itemStr","isLoading","anyItems","newBuildName","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","251","164","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats2","add","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var changeFileName = 'itemchangetable.lzjson';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1029, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}