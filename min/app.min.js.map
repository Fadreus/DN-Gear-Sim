{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","encodeURIComponent","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","doClose","isClosed","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","jobsDnt","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","sparkId","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","dragonjeweltype","DragonJewelSlot2","DragonJewelSlot4","itemTypeName","fileType","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","titleStep","usefulTitles","allTitles","isItemStep","enhanceEqStep","hideName","namedItemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","numStats","allItem","largestVal","selectedVal","quickHigh","highStatStep","val2","allStats","hasStatStep","val1","customStep","searchable","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","newFdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","paPwr","maxMdmg","extraPdmgMod","intToPdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","fdPc","Cfinaldamage","maxFd","pow","dmgStat","lightPc","firePc","darkPc","icePc","mdefEqHp","eqHp","pdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","skillEffectMapping","getVals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1029","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","effect","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + encodeURIComponent(buildName));\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER' || jobName == 'RANDGRID') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA' || jobName == 'AVALANCHE') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.json', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + encodeURIComponent(newBuildName));\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.json';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.json';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.json',\r\n    'itemgaintable_dragonjewel.json',\r\n    'itemgaintable_enchant.json',\r\n    'itemgaintable_etc.json',\r\n    'itemgaintable_reboot.json',\r\n    'itemgaintable_talisman.json'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.json',\r\n    'itemdroptable_abyss.json',\r\n    'itemdroptable_apprentice.json',\r\n    'itemdroptable_cook.json',\r\n    'itemdroptable_darklair.json',\r\n    'itemdroptable_dimension.json',\r\n    'itemdroptable_disjoint.json',\r\n    'itemdroptable_dnexpedition.json',\r\n    'itemdroptable_event.json',\r\n    'itemdroptable_farm.json',\r\n    'itemdroptable_fishing.json',\r\n    'itemdroptable_guildwar.json',\r\n    'itemdroptable_item.json',\r\n    'itemdroptable_monsteritem.json',\r\n    'itemdroptable_propdrop.json',\r\n    'itemdroptable_pvp.json',\r\n    'itemdroptable_randomcompound.json',\r\n    'itemdroptable_stageclear.json',\r\n    'itemdroptable_themepark.json',\r\n    'itemdroptable_union.json']\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var charmItemtable = 'charmitemtable.json';\r\n  var commonCharmItemtable = 'charmitemtable_common.json';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.json', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.json',\r\n    'itemcompoundtable_custom.json',\r\n    'itemcompoundtable_glyph.json',\r\n    'itemcompoundtable_glyph95.json',\r\n    'itemcompoundtable_jewel.json',\r\n    'itemcompoundtable_renewal.json',\r\n    'itemcompoundtable_set.json'];\r\n  \r\n  var dropFile = 'itemdroptable.json';\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.json', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.json',\r\n  'partstable_commoncash.json',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.json',\r\n  'partstable_guild.json',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.json',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.json',\r\n  'weapontable_commoncash.json',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.json',\r\n  'weapontable_guild.json',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.json'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.json';\r\n  var cSysShopFileName = 'combinedshoptable_system.json';\r\n  var cCashShopFileName = 'combinedshoptable_cash.json';\r\n  // var shopFileName = 'shoptable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  var transferItemsFileName = 'enchanttransferitemtable.json';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var changeFileName = 'itemchangetable.json';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.json')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.json', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.json';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.json', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.json') &&\r\n      dntData.isLoaded('sealcounttable.json');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.json', null, $timeout);\r\n    dntData.init('sealcounttable.json', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.json', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n\r\n    var noticeId = 'notice1';\r\n    var vm = this;\r\n\r\n    vm.doClose = function() {\r\n      localStorage.setItem(noticeId, true)\r\n      vm.isClosed = true;\r\n    }\r\n    \r\n    vm.isClosed = true; // localStorage.getItem(noticeId) != null;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n    controller: 'HeaderCtrl',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + encodeURIComponent(currentBuild);\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.json';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.json';\r\n  var statCaps = 'playercommonleveltable.json';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.json';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.json';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper(items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.json';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.json', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.json', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.json', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.json'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.json'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.json', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.json', \r\n        potentialDnt: 'potentialtable_glyph95.json',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.json',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.json', \r\n        partsDnt: 'partstable_commoncash.json', \r\n        weaponDnt: 'weapontable_commoncash.json', \r\n        setDnt: 'setitemtable_cash.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.json',\r\n        petLevelDnt: 'petleveltable.json', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: [],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemFactory, hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              case 2252: // Teardrop\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\n  function statHelper(hCodeValues) {\r\n  \r\n    return {\r\n      \r\n      getSetStats: function(groupItems) {\r\n        var stats = [];\r\n        var sets = {};\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value !== null && value.setStats != null) {\r\n            if(value.setId in sets) {\r\n              sets[value.setId].numItems++;\r\n            }\r\n            else {\r\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n            }\r\n          }\r\n        });\r\n        \r\n        angular.forEach(sets, function(value, key) {\r\n          angular.forEach(value.stats, function(stat, index) {\r\n            if(stat.needSetNum <= value.numItems) {\r\n              stats.push(stat);\r\n            }\r\n          });\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getNumItemsForSet: function(items, setId) {\r\n        var numItems = 0;\r\n        angular.forEach(items, function(value, key) {\r\n          if(value && value.setId && value.setId == setId) {\r\n            numItems++;\r\n          }\r\n        });\r\n        \r\n        return numItems;\r\n      },\r\n      \r\n      getCombinedStats: function(groupItems) {\r\n        var stats = [];\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value) {\r\n            \r\n            if(value.fullStats) {\r\n              stats = stats.concat(value.fullStats);\r\n            }\r\n            else if(value.stats) {\r\n              stats = stats.concat(value.stats);\r\n            }\r\n          }\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getCalculatedStatsFromItems: function(group, items) {\r\n        var nakedStats = this.getNakedStats(group);\r\n        var combinedStats = this.getCombinedStats(items);\r\n        var setStats = this.getSetStats(items);\r\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n        if(group.heroStats != null && group.heroStats.length > 0) {\r\n          allStats = allStats.concat(group.heroStats);\r\n        }\r\n        allStats = hCodeValues.mergeStats(allStats);\r\n        \r\n        return this.getCalculatedStats(group, allStats);\r\n      },\r\n      \r\n      getCalculatedStats: function(group, combinedStats) {\r\n        \r\n        var retVal = [];\r\n        var statLookup = {};\r\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n          return [];\r\n        }\r\n        \r\n        angular.forEach(combinedStats, function(stat, index) {\r\n          statLookup[stat.id] = stat;\r\n        });\r\n        \r\n        function getPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.pc]) {\r\n            return Number(statLookup[statDef.pc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function getSkillPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.skPc]) {\r\n            return Number(statLookup[statDef.skPc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function applyPc(stat) {\r\n          stat.max = Math.floor(\r\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n            );\r\n        }\r\n        \r\n        function dupeStat(id) {\r\n          var stat = statLookup[id];\r\n          if(stat) {\r\n            return {id: id, max: Number(stat.max), pc: stat.pc};\r\n          }\r\n          else {\r\n            return {id: id, max: 0, pc: 0};\r\n          }\r\n        }\r\n        \r\n        function addStat(stat) {\r\n          if(stat.max > 0) {\r\n            retVal.push(stat);\r\n          }\r\n        }\r\n  \r\n        var critResist;\r\n        if(!('critResist' in group)) {\r\n          critResist = 0.20;\r\n        }\r\n        else {\r\n          critResist = group.critResist / 100.0;\r\n        }\r\n  \r\n        var eleResist;\r\n        if(!('eleResist' in group)) {\r\n          eleResist = 0;\r\n        }\r\n        else {\r\n          eleResist = group.eleResist / 100.0;\r\n        }\r\n        \r\n        // base stats\r\n        var str = dupeStat(0);\r\n        applyPc(str);\r\n        \r\n        var agi = dupeStat(1);\r\n        applyPc(agi);\r\n        \r\n        var int = dupeStat(2);\r\n        applyPc(int);\r\n  \r\n        var vit = dupeStat(3);\r\n        applyPc(vit);\r\n  \r\n        // add vit to hp\r\n        var hp = dupeStat(25);\r\n        hp.max += (vit.max * Number(group.conversions.HP));\r\n        applyPc(hp);\r\n        \r\n        // defs\r\n        var def = dupeStat(8);\r\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n        applyPc(def);\r\n        \r\n        var defpc = dupeStat(1008);\r\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(defpc);\r\n        \r\n        var mdef = dupeStat(9);\r\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n        applyPc(mdef);\r\n        \r\n        var mdefpc = dupeStat(1009);\r\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(mdefpc);\r\n        \r\n        // attack power - like fd but for bufs\r\n        // this shows as blue damage\r\n        // i think there are magic and phis variants of this but doesnt matter\r\n        var aPwr = dupeStat(3000);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        var maxPdmg = dupeStat(5);\r\n  \r\n        // physical damage\r\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\r\n          var extraPdmg = dupeStat(32);\r\n          var extraPdmgMod= dupeStat(101);\r\n          var paPwr = dupeStat(3001);\r\n          \r\n          // special stats for zeal\r\n          var intToPdmg = dupeStat(10164);\r\n          \r\n          minPdmg.max += extraPdmg.max;\r\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(minPdmg);\r\n    \r\n          maxPdmg.max += extraPdmg.max;\r\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(maxPdmg);\r\n        }\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        var maxMdmg = dupeStat(7);\r\n        \r\n        // magic damage\r\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\r\n          var extraMdmg = dupeStat(33);\r\n          var extraMdmgMod = dupeStat(102);\r\n          var maPwr = dupeStat(3002);\r\n          \r\n          // special stats for zeal\r\n          var strToMdmg = dupeStat(10165);\r\n          var intToMdmg = dupeStat(10372);\r\n          \r\n          minMdmg.max += extraMdmg.max;\r\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n  \r\n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(minMdmg);\r\n          \r\n          maxMdmg.max += extraMdmg.max;\r\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n          \r\n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(maxMdmg);\r\n        }\r\n        \r\n        \r\n        // crit chance %\r\n        var crit = dupeStat(12);\r\n        crit.max += (agi.max*Number(group.conversions.Critical));\r\n        applyPc(crit);\r\n        \r\n        var skCrit = dupeStat(4012);\r\n        crit.max += skCrit.max;\r\n        addStat(crit);\r\n        var itemCrit = dupeStat(1012);\r\n        \r\n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n        retVal.push({id: 1012, max: critChance});\r\n  \r\n        // crit damage %\r\n        var cDmg = dupeStat(103);\r\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n        applyPc(cDmg);\r\n        addStat(cDmg);\r\n  \r\n        var itemCtriDmg = dupeStat(1103);\r\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n        addStat({id: 1103, max: critDamagePc + 2});\r\n  \r\n        // fd\r\n        var fd = dupeStat(29);\r\n        addStat(fd);\r\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n        \r\n        var fdPc = dupeStat(1029);\r\n        var newFdPc = dupeStat(1030);\r\n        newFdPc.max += fdPc.max + Math.min(1, (fd.max / maxFd));\r\n        addStat(newFdPc);\r\n        \r\n        fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n        addStat(fdPc);\r\n        \r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        // elements\r\n        var firePc = dupeStat(16);\r\n        if(firePc.id == priElementId || firePc.id == secElementId) {\r\n          addStat(firePc);\r\n        }\r\n        \r\n        var icePc = dupeStat(17);\r\n        if(icePc.id == priElementId || icePc.id == secElementId) {\r\n          addStat(icePc);\r\n        }\r\n        \r\n        var lightPc = dupeStat(18);\r\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\r\n          addStat(lightPc);\r\n        }\r\n        \r\n        var darkPc = dupeStat(19);\r\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\r\n          addStat(darkPc);\r\n        }\r\n        \r\n        // average damage\r\n        function addAvgDamageStat(id, min, max) {\r\n          \r\n          var nonEleDamage = (min+max)/2;\r\n          // add crit\r\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n          // apply fd\r\n          nonEleDamage = nonEleDamage * (1 + newFdPc.max);\r\n          \r\n          // apply element(s)\r\n          var avgDmg = nonEleDamage;\r\n          if(priElementId > 0) {\r\n            var elementStat = statLookup[priElementId];\r\n            if(elementStat) {\r\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n            }\r\n          }\r\n          addStat({id: id, max: avgDmg});\r\n          \r\n          if(secElementId != priElementId) {\r\n            if(secElementId > 0) {\r\n              var secondaryElementStat = statLookup[secElementId];\r\n              if(secondaryElementStat) {\r\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n                addStat({id: id + 1000, max: secAvgDmg});\r\n              }\r\n            }\r\n            else {\r\n              addStat({id: id + 1000, max: nonEleDamage});\r\n            }\r\n          }\r\n        }\r\n        \r\n        // average damages\r\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\r\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n        }\r\n  \r\n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\r\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n        }\r\n        \r\n        if(!group.damageType || group.damageType.id == 3) {\r\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 4) {\r\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 5) {\r\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\r\n        }\r\n        \r\n        // Equivalent HP\r\n        var pdefEqHp = dupeStat(2008);\r\n        pdefEqHp.max = hp.max / (1-defpc.max);\r\n        \r\n        var mdefEqHp = dupeStat(2009);\r\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n        \r\n        var eqHp = dupeStat(3008);\r\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n        addStat(eqHp);\r\n\r\n        addStat(str);\r\n        addStat(agi);\r\n        addStat(int);\r\n        addStat(vit);\r\n        addStat(hp);\r\n        addStat(def);\r\n        addStat(mdef);\r\n        \r\n        return retVal;\r\n      },\r\n      \r\n      getNakedStats: function(group) {\r\n        \r\n        if(\r\n          group.baseStats && \r\n          group.baseStats.Strength > 0) {\r\n  \r\n          return [\r\n            {id:0, max:group.baseStats.Strength},\r\n            {id:1, max:group.baseStats.Agility},\r\n            {id:2, max:group.baseStats.Intelligence},\r\n            {id:3, max:group.baseStats.Stamina}\r\n            ];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      getSkillStats : function (item, data, skillData) {\r\n  \r\n        var skillLevelVals = null;\r\n        angular.forEach(skillData, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        if(!skillLevelVals) {\r\n          return null;\r\n        }\r\n        \r\n        var index = 1;\r\n        var effects = [];\r\n        var stillCols = true;\r\n        \r\n        while(stillCols) {\r\n          var colName = 'EffectClass' + index;\r\n          var valColName = 'EffectClassValue' + index;\r\n          if(data && colName in data && valColName in skillLevelVals) {\r\n            if(data[colName] > 0) {\r\n              \r\n              var val = skillLevelVals[valColName];\r\n              \r\n              // for now add 10k\r\n              var effectId = data[colName];\r\n              var map = hCodeValues.skillEffectMapping[effectId];\r\n              if(map && map.getVals) {\r\n                var vals = map.getVals(val);\r\n                for(var i=0;i<vals.length;++i) {\r\n                  effects.push(vals[i]);\r\n                }\r\n              }\r\n              else {\r\n                var statId;\r\n                if(map && map.mapTo) {\r\n                  statId = map.mapTo;\r\n                }\r\n                else {\r\n                  statId = 10000 + effectId;\r\n                }\r\n                \r\n                if(val > 0) {\r\n                  effects.push({ id: statId, effect: effectId, max: val });\r\n                }\r\n                else {\r\n                  if(val.toString().indexOf(';') > 0) {\r\n                    var vals = val.split(';');\r\n                    if(vals.length > 0 && vals[0] > 0) {\r\n                      effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stillCols = false;\r\n          }\r\n          \r\n          index++;\r\n        }\r\n        \r\n        return effects;\r\n      },\r\n  \r\n      getBuildStats: function(build) {\r\n        var stats = {};\r\n        stats.nakedStats = this.getNakedStats(build);\r\n        stats.combinedStats = this.getCombinedStats(build.items);\r\n        stats.setStats = this.getSetStats(build.items);\r\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n        if(build.heroStats && build.heroStats.length) {\r\n          stats.heroStats = build.heroStats;\r\n          stats.allStats = stats.allStats.concat(build.heroStats);\r\n        }\r\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n        \r\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n        return stats;\r\n      }\r\n    };\r\n  }\r\n  \r\n  })();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\n  function hCodeValues() {\r\n  \r\n    function toOneDec(stat) {\r\n      return Math.round(stat.max*10)/10;\r\n    }\r\n    function toNoDec(stat) {\r\n      return Math.floor(stat.max);\r\n    }\r\n    function inThousands(stat) {\r\n      var val = Number(stat.max);\r\n      if(val < 100) {\r\n        return val;\r\n      }\r\n      else if(val < 100000) {\r\n        return Math.round(val/100)/10 + 'k';\r\n      }\r\n      else if(val < 1000000) {\r\n        return Math.round(val/1000) + 'k';\r\n      }\r\n      else if(val < 100000000) {\r\n        return Math.round(val/10000)/100 + 'm';\r\n      }\r\n      else {\r\n        return Math.round(val/1000000) + 'm';\r\n      }\r\n    }\r\n    function toPercent(stat) {\r\n      return (Math.round(stat.max*10000)/100) + '%';\r\n    }\r\n    \r\n    return {\r\n      stats : {\r\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1030, searchable: true },\r\n        \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n        \r\n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n  \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n  \r\n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n        \r\n        // stats below here are ones I made up\r\n        1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1005: {id: 1005, name: 'pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n        \r\n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n        1029: {id: 1029, name: 'old fd', display: toPercent, noCustom: true, dps: true },\r\n        1030: {id: 1030, name: 'future fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n        \r\n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        \r\n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n        \r\n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n        \r\n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n        \r\n        // special cases for skills\r\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        // items over 10000 are unknown skill effects\r\n      },\r\n    \r\n      rankNames : {\r\n        0 : { id: 0, name : 'normal' },\r\n        1 : { id: 1, name : 'magic' },\r\n        2 : { id: 2, name : 'rare' },\r\n        3 : { id: 3, name : 'epic' },\r\n        4 : { id: 4, name : 'unique' },\r\n        5 : { id: 5, name : 'legend' },\r\n        6 : { id: 6, name : 'divine' },\r\n        7 : { id: 7, name : 'ancient' },\r\n      },\r\n      \r\n      shopNames : {\r\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n        59001: 'garden bunny',\r\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n        89001: 'guild master',\r\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n        66001: 'erosion',\r\n        35006: 'plate',\r\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n        91001: 'wrath',\r\n        45001: 'farm',\r\n        100004: 'event',\r\n        89000: 'nightmare'\r\n      },\r\n      \r\n      checkedRank : {\r\n        0 : true,\r\n        1 : true,\r\n        2 : true,\r\n        3 : true,\r\n        4 : true,\r\n        5 : true,\r\n        6 : true,\r\n        7 : true,\r\n      },\r\n      \r\n      typeNames : {\r\n        0 : 'weapons',\r\n        1 : 'equipment',\r\n        5 : 'plates',\r\n        8 : 'pouch',\r\n        38 : 'plates',\r\n        90 : 'welspring',\r\n        132 : 'talisman',\r\n        139 : 'gems',\r\n      },\r\n      \r\n      elements : {\r\n        0 : { id: 0, name: 'non-ele' },\r\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n        3 : { id: 3, name: 'light', dmgStat: 18 },\r\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n      },\r\n      \r\n      damageTypes : {\r\n        0 : { id: 0, name: 'both separate' },\r\n        1 : { id: 1, name: 'physical' },\r\n        2 : { id: 2, name: 'magical' },\r\n        3 : { id: 3, name: 'both combined' },\r\n        4 : { id: 4, name: 'physical healing' },\r\n        5 : { id: 5, name: 'magical healing' },\r\n      },\r\n      \r\n      // note: skills shown on-screen have 1k added to their id\r\n      skillEffectMapping : {\r\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n        13 : { id: 13, name: 'mp', mapTo: 26 },\r\n        25 : { id: 25, name: 'action speed' },\r\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n        34 : { id: 34, name: 'light %', mapTo: 18 },\r\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n        38 : { id: 38, name: 'light def', mapTo: 22 },\r\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n        65 : { id: 65, name: 'range' },\r\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n        // 134 : { id: 134, name: 'p dmg reduction%' },\r\n        // 135 : { id: 135, name: 'm dmg reduction%' },\r\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n        222: {\r\n          id: 222, \r\n          name: 'hellfire', \r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              return [\r\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n                {id: 4012, effect: 222, max: Number(vals[1])},\r\n                ];\r\n            }\r\n            else {\r\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n            }\r\n          }\r\n        },\r\n        372: {\r\n          id: 372,\r\n          name: 'statConversion',\r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n              }\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n        \r\n        \r\n        389: { id: 389, name: 'fd buf', mapTo: 1030 },\r\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n      },\r\n      \r\n      gemExchanges: [\r\n        {id: 2, exchange: 1, name: 'Weapon'},\r\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n        {id: 4, exchange: 3, name: 'Headgear'},\r\n        {id: 5, exchange: 4, name: 'Body Armor'},\r\n        {id: 6, exchange: 5, name: 'Leg Armor'},\r\n        {id: 7, exchange: 6, name: 'Gloves'},\r\n        {id: 8, exchange: 7, name: 'Shoes'},\r\n        {id: 101, exchange: 8, name: 'Necklace'},\r\n        {id: 102, exchange: 9, name: 'Earrings'},\r\n        {id: 103, exchange: 10, name: 'Ring'},\r\n      ],\r\n      \r\n      customItems: \r\n      [\r\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n      ],\r\n    \r\n      getStats : function(data) {\r\n  \r\n        var useMax=false;\r\n        var useStateXVal=false;\r\n        var mightHaveSets=true;\r\n        var prop = 'State1_Max';\r\n        if(prop in data) {\r\n          useMax = true;\r\n        }\r\n        else {\r\n          prop = 'State1Value';\r\n          if(prop in data) {\r\n            useStateXVal = true;\r\n          }\r\n        }\r\n        \r\n        var currentState = 0;\r\n        var statVals = [];\r\n        for(;;) {\r\n          currentState++;\r\n          \r\n          var stateProp = 'State' + currentState;\r\n          if(!(stateProp in data)) {\r\n            break;\r\n          }\r\n  \r\n          var stateId = data[stateProp];\r\n          if(stateId == -1) {\r\n            break;\r\n          }\r\n          \r\n          if(stateId == 107) {\r\n            // is this mp?\r\n          }\r\n          else {\r\n            \r\n            var currentData = { id: stateId };\r\n            \r\n            var prop;\r\n          \r\n            if(useMax) {\r\n              prop = 'State' + currentState + '_Max';\r\n              currentData.max = data[prop];\r\n            }\r\n            else if(useStateXVal) {\r\n              prop = 'State' + currentState + 'Value';\r\n              currentData.max = data[prop];\r\n            }\r\n            else {\r\n              prop = 'StateValue' + currentState;\r\n              currentData.max = Number(data[prop]);\r\n            }\r\n            \r\n            if(currentData.max > 0 || currentData.max < 0) {\r\n              if(mightHaveSets) {\r\n                prop = 'NeedSetNum' + currentState;\r\n                if(prop in data) {\r\n                  if(data[prop] == 0) {\r\n                    break;\r\n                  }\r\n                  currentData.needSetNum = data[prop];\r\n                }\r\n                else {\r\n                  mightHaveSets = false;\r\n                }\r\n              }\r\n            \r\n              statVals.push(currentData);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return statVals;\r\n      },\r\n      \r\n      setupStat : function(stat, id) {\r\n        stat.id = Number(id);\r\n      },\r\n      \r\n      mergeStats : function(stats1, stats2) {\r\n        var statMap = {};\r\n        \r\n        var self = this;\r\n        function add(value) {\r\n          \r\n          var amount = Number(value.max);\r\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n            amount = Math.floor(amount);\r\n          }\r\n          \r\n          if(value.id in statMap) {\r\n            statMap[value.id] += amount;\r\n          }\r\n          else {\r\n            statMap[value.id] = amount;\r\n          }\r\n        }\r\n        \r\n        angular.forEach(stats1, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n        \r\n        if(stats2) {\r\n          angular.forEach(stats2, function(value, key) {\r\n            if(value) {\r\n              add(value);\r\n            }\r\n          });\r\n        }\r\n        \r\n        var newStats = [];\r\n        \r\n        for(var key in statMap) {\r\n          var stat = { max : statMap[key], id: Number(key) };\r\n          newStats.push(stat);\r\n        }\r\n          \r\n        return newStats;\r\n      }\r\n    }\r\n  }\r\n  \r\n  })();"]}