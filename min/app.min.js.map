{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","gemExchange","find","gemExchanges","e","each","isInSubCat","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","$watch","initAddAffects","getAddAffectAmount","getGroupItems","itemSplit","str","matches","indexOf","existing","itemSource","split","a","b","numMatches","groupItems","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","compact","statMap","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","89000","typeNames","38","90","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","222","372","389","404","useMax","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats2","stats1","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n'use strict';\n\nangular.module('dnsim').config(['$routeProvider', config]);\n\nfunction config($routeProvider) {\n\n  $routeProvider.\n  \n    when('/about', {\n      templateUrl: 'ui/about/about.html',\n      controller: 'AboutCtrl as about'\n    }).\n    \n    when('/setup', {\n      templateUrl: 'ui/nav/setup.html',\n      controller: 'SetupCtrl'\n    }).\n    when('/test', {\n      templateUrl: 'ui/nav/test.html',\n      controller: 'TestCtrl'\n    }).\n    \n    when('/items', {\n      templateUrl: 'ui/search/everything-search.html',\n      controller: 'ItemsCtrl as items',\n      reloadOnSearch: false,\n    }).\n    \n    when('/', {\n      templateUrl: 'ui/welcome.html',\n    }).\n    when('/builds', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/build', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/view-group', {\n      templateUrl: 'ui/builds/view-group.html',\n      controller: 'ViewGroupCtrl'\n    }).\n    when('/edit-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/new-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/delete-build', {\n      templateUrl: 'ui/builds/delete-build.html',\n      controller: 'DeleteBuildCtrl as deleteBuild',\n      // reloadOnSearch: false,\n    }).\n    when('/reload-build', {\n      templateUrl: 'ui/builds/reload-build.html',\n      controller: 'ReloadBuildCtrl as ctrl',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/search', {\n      templateUrl: 'ui/search/search.html',\n      controller: 'ItemSearchCtrl as ctrl',\n      reloadOnSearch: false,\n    }).\n    \n    when('/item', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    when('/item', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/export', {\n      templateUrl: 'ui/nav/export.html',\n      controller: 'ExportCtrl',\n    }).\n    \n    when('/talismans', {\n      templateUrl: 'ui/builds/build-talismans.html',\n      controller: 'BuildTalismansCtrl as ctrl',\n    }).\n    \n    when('/publish', {\n      templateUrl: 'ui/online/publish.html',\n      controller: 'PublishCtrl as ctrl',\n    }).\n    \n    when('/profile', {\n      templateUrl: 'ui/online/profile.html',\n      controller: 'ProfileCtrl as ctrl',\n    }).\n    \n    when('/published', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/import', {\n      templateUrl: 'ui/builds/build-import.html',\n      controller: 'BuildImportCtrl as ctrl',\n    }).\n    \n    when('/published', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/build-search', {\n      templateUrl: 'ui/online/build-search.html',\n      controller: 'BuildSearchCtrl as ctrl',\n    }).\n    \n    otherwise({\n      redirectTo: '/'\n    });\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim')\n.controller('AboutCtrl', \n  ['$window',\n  function($window) {\n    'use strict';\n    document.body.className = 'default-back';\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\n  }]\n);\n})();","(function () {\n'use strict';\nangular.module('dnsim').filter('escape', [function() {\n  'use strict';\n\n  function escapeFilter(input) {\n      if(input) {\n          return window.encodeURIComponent(input);\n      }\n      return '';\n  }\n\n  return escapeFilter;\n}]);\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').filter('percentage', [function() {\n  'use strict';\n\n  function percentageFilter(input) {\n    if(typeof input == 'number') {\n      return (Math.round(input * 100 * 100) / 100) + '%';\n    }\n    else {\n      return input;\n    }\n  }\n  percentageFilter.$stateful = false;\n\n  return percentageFilter;\n}]);\n\n})();","angular.module('dnsim').controller('buildActionsCtrl',\n\n['$location','saveHelper','exportLinkHelper',\nfunction($location,saveHelper,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.deleteGroup = function() {\n    $location.path('/delete-build');\n    $location.search('name', vm.buildName);\n  }\n  \n  this.editGroup = function() {\n    $location.path('/edit-build');\n    $location.search('buildName', vm.buildName);\n  }\n  \n  this.copyGroup = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n    \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n  \n  this.reloaded = false;\n  this.reloadGroup = function() {\n    $location.path('/reload-build');\n    $location.search('name', vm.buildName);\n  }\n  \n  function progress() {\n  }\n    \n  this.setShortUrl = function() {\n    if(vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  }\n  \n  this.setShortUrl();\n}])\n.directive('dngearsimBuildActions', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    templateUrl: 'ui/builds/build-actions.html'\n  };\n});","angular.module('dnsim').controller('buildExportActionCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.export = exportBuild;\n  \n  function exportBuild() {\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\n  }\n}])\n.directive('dngearsimBuildExportAction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildExportActionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-export-action.html'\n  };\n});","angular.module('dnsim').controller('BuildImportCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.onFileChange = onFileChange;\n  vm.copyLocally = copyLocally;\n  \n  function onFileChange(event) {\n    var files = event.target.files;\n    console.log('importing files', files);\n    if(files && files.length) {\n      \n      var fileName = files[0].name;\n      var reader = new FileReader();\n      reader.readAsText(files[0]);\n      reader.onload = function() {\n        vm.build = JSON.parse(reader.result);\n        if(fileName && fileName.length > 5) {\n          vm.buildName = fileName.substr(0, fileName.length-5);\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\n        }\n        else {\n          vm.buildName = 'imported build';\n        }\n        $timeout();\n      }\n    }\n  }\n  \n  function copyLocally() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n      \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n}]);","'use strict';\n  \nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      category: '=category',\n      server: '=server',\n      onChange: '&onChange'\n    },\n    controller: buildItemListController,\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-item-list.html'\n  };\n});\n\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\n\n  var vm = this;\n\n  vm.getCategoryItems = function() {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if(vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    }\n    else {\n      return [];\n    }\n  }\n\n  var subCats = {};\n  var subCatCatName = '';\n  vm.getSubCategories = function() {\n    if(subCatCatName != vm.category.name) {\n      subCats = {};\n      subCatCatName = vm.category.name;\n      var subCatList = [];\n\n      var items = vm.build.items.sort(function(item1, item2) {\n        return item1.exchangeType - item2.exchangeType;\n      });\n      if(vm.category.name == 'increasing gems') {\n        subCatList = _.filter(items, function(item) {\n          return item.increasingGemSlots > 0;\n        });\n      }\n      else if(vm.category.name == 'offensive gems') {\n        subCatList = _.filter(items, function(item) {\n          return item.offensiveGemSlots > 0;\n        });\n      }\n      else if(vm.category.name == 'imprint') {  \n        var costumeCat = itemCategory.byName('costume');\n        subCatList = _.filter(items, function(item) {\n          return itemCategory.isItemForCat(costumeCat, item);\n        });\n      }\n      _.each(subCatList, function(item) {\n        if(!(item.exchangeType in subCats)) {\n          subCats[item.exchangeType] = {\n            names: [],\n            slots: 0,\n            exchangeType: item.exchangeType\n          };\n        }\n\n        subCats[item.exchangeType].names.push(item.name);\n        if(vm.category.name == 'increasing gems') {\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\n        }\n        else if(vm.category.name == 'offensive gems') {\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\n        }\n        else {\n            subCats[item.exchangeType].slots = 1;\n        }\n      });\n      subCats[0] = null;\n    }\n    \n    return subCats;\n  }\n\n  vm.getNumTaken = function(subCat) {\n    var retVal = 0;\n    var exchangeId;\n    if(vm.category.name == 'imprint') {\n      exchangeId = subCat.exchangeType;\n    }\n    else {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      exchangeId = gemExchange.id;\n    }\n\n    if(exchangeId) {\n      var items = vm.getCategoryItems();\n      _.each(items, function(item) {\n        if(item.gemSlot == exchangeId) {\n          ++retVal;\n        }\n      });\n    }\n    return retVal;\n  }\n\n  vm.isInSubCat = function(item, subCat) {\n    if(!subCat && !item.gemSlot) {\n      return true;\n    }\n    else {\n      var exchangeId;\n      if(vm.category.name == 'imprint') {\n        exchangeId = item.gemSlot;\n      }\n      else {\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n          return e.id == item.gemSlot;\n        });\n        if(gemExchange) {\n          exchangeId = gemExchange.exchange;\n        }\n      }\n\n      if(!subCat && exchangeId) {\n        // check for invalid slot\n        var allSubCatItems = vm.getSubCategories();\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\n        });\n\n        if(!foundSubCatItem) {\n          return true;\n        }\n      }\n      else if(subCat && exchangeId) {\n        return exchangeId == subCat.exchangeType;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  vm.canMove = function() {\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\n  }\n\n  vm.getGemSlot = function(subCat) {\n    if(vm.category.name == 'imprint') {\n      return subCat.exchangeType;\n    }\n    else if(subCat) {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      if(!gemExchange) {\n          console.log('cannot find exchange for', subCat);\n      }\n      return gemExchange.id;\n    }\n  }\n\n  vm.move = function(moveItem, destination) {\n    moveItem.gemSlot = vm.getGemSlot(destination);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.allowMoreItems = function() {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  vm.handleChange = function() {\n    subCatCatName = '';\n    vm.onChange();\n  }\n  \n  vm.handleItemEdit = function() {\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.cancelEdit = function() {\n    vm.onChange();\n  }\n  \n  vm.canEdit = function(item) {\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\n  }\n  \n  vm.removeItem = function(item) {\n    subCatCatName = '';\n    item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function(gItem, index) {\n      if(gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n\n    vm.build.items = newItemList;\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.handleChange();\n  }\n}","angular.module('dnsim').controller('buildItemCtrl',\n\n['$timeout','statHelper','saveHelper','hCodeValues',\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.updateItem = setFullStats;\n  vm.gemSlots = hCodeValues.gemExchanges;\n  vm.getGemSlotName = getGemSlotName;\n  \n  function getGemSlotName(item) {\n    if(item.gemSlot) {\n      for(var i=0;i<vm.gemSlots.length;++i) {\n        if(vm.gemSlots[i].id == item.gemSlot) {\n          return vm.gemSlots[i].name;\n        }\n      }\n    }\n  }\n  \n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    vm.item.fullStats = vm.item.stats;\n    \n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\n    }\n    \n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\n    }\n  }\n  \n}])\n.directive('dngearsimBuildItem', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      editMode: '=editMode',\n      onChange: '&onChange',\n      cancelEdit: '&cancelEdit'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-item.html'\n  };\n});","angular.module('dnsim').controller('BuildListCtrl', \n  [ '$window','$location','$routeParams','$timeout','saveHelper',\n  function($window,$location,$routeParams,$timeout,saveHelper) {\n    'use strict';\n    \n    var vm = this;\n    document.body.className = 'saved-back';\n    this.setupBuilds = function() {\n      vm.savedItems = saveHelper.getSavedItems();\n      vm.buildNames = Object.keys(vm.savedItems).sort();\n      vm.builds = [];\n      for(var i=0;i<vm.buildNames.length;++i) {\n        vm.builds.push({\n          name: vm.buildNames[i],\n          build: vm.savedItems[vm.buildNames[i]],\n        });\n      }\n    }\n    this.setupBuilds();\n    \n    if('buildName' in $routeParams) {\n      if($routeParams.buildName in vm.savedItems) {\n        if($routeParams.buildName != this.currentGroup) {\n          this.currentGroup = $routeParams.buildName;\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n        }\n      }\n      else {\n        this.currentGroup = null;\n      }\n    }\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\n      $location.path('/build');\n      $location.search('buildName', this.currentGroup);\n    }\n    else {\n      this.currentGroup = null;\n    }\n    \n    if(this.currentGroup) {\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\n    }\n    else {\n      $window.document.title = 'dngearsim | BUILDS';\n    }\n\n    this.anyItems = function() {\n      return Object.keys(this.savedItems).length > 0;\n    }\n\n    this.createGroup = function() {\n      $location.path('/new-build');\n    }\n    \n    this.handleChange = function() {\n      vm.setupBuilds();\n      $timeout();\n      // console.log('change');\n    }\n  \n    this.toggleGroup = function(buildName) {\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\n      $location.url('/build?buildName=' + buildName);\n    }\n    \n    this.publish = function() {\n      $location.url('/publish');\n    }\n    \n    this.search = function() {\n      $location.url('/build-search');\n    }\n  }]\n);\n","'use strict';\n\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n      buildName: '=buildName',\n    },\n    controller: buildStatsController,\n    controllerAs: 'statsCtrl',\n    templateUrl: 'ui/builds/build-stats.html'\n  };\n});\n\nfunction buildStatsController(statHelper,dvStatcardHelper) {\n  var vm = this;\n\n  vm.exportStatCard = function() {\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\n    window.open(url);\n  }\n}","angular.module('dnsim').controller('buildSummaryCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.getBuildSummary = function(group) {\n    var summary = '';\n    \n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\n      if(itemsByType.length > 0) {\n        if(summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n    \n    return summary;\n  }\n}])\n.directive('dngearsimBuildSummary', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-summary.html'\n  };\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  \n  $window.document.title = 'dngearsim | TALISMANS';\n  $window.scrollTo(0, 0);\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    // console.log('cannot find build');\n    return;\n  }\n  \n  this.getGroupCalcStats = function() {\n    if(this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.pickup = function(index) {\n    vm.selectedIndex = index;\n    \n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n  this.headers = [\n    '+100%',\n    '+75%',\n    '+25%',\n    '+0%',\n    ];\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n  \n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n  \n  this.selectedIndex = -1;\n  \n  this.rows = [];\n  \n  this.updateRows = function() {\n    vm.rows = [];\n        \n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n      if(item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if(!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n        \n        var rowIndex = 0;\n        for(;;) {\n          if(!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n          \n          if(vm.rows[rowIndex][pcIndex].index < 0) {\n            if(!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n            \n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          }\n          else {\n            rowIndex++;\n          }\n        }\n      }\n      \n    });\n    \n    if(vm.rows.length < 3) {\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\n    }\n  };\n  \n  this.makeFakeCells = function(num) {\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\n  };\n  \n  this.makeCell = function(item, index) {\n    return { item: item, index: index };\n  };\n  \n  this.click = function(col) {\n    if(vm.selectedIndex == -1) {\n      if(col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    }\n    else {\n      vm.move(col);\n    }\n  };\n  \n  this.move = function(col) {\n    \n    var items = vm.savedItems[vm.groupName].items;\n    if(col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n      \n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    }\n    else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  };\n  \n  this.setTalisman = function(item, newEnhancementNum) {\n    var extraStats = [];\n    angular.forEach(item.stats, function(stat, index) {\n      if(newEnhancementNum) {\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\n      }\n    });\n    \n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n    \n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  };\n  \n    \n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if(this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  };\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n    \n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n    \n    var extraStats = [];\n    var fullStats1 = [];\n    if(item.stats) {\n      angular.forEach(item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n    \n    extraStats = [];\n    angular.forEach(item2.stats, function(stat, index) {\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  };\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  };\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.save = function() {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/build');\n    $location.search('buildName', vm.groupName);\n  };\n  \n  this.updateRows();\n  \n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange',\n      server: '=server'\n    },\n    controller: bulidController,\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build.html'\n  };\n});\n\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\n  'use strict';  \n  var vm = this;\n  \n  vm.stats = statHelper.getBuildStats(vm.build);\n  \n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  vm.category = itemCategory.byName(selectedCategory);\n  if(!vm.category || vm.category.hideInBuild) {\n    selectedCategory = 'titles';\n    vm.category = itemCategory.byName('titles');\n  }\n  \n  vm.getCategoryItems = function() {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if(vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    }\n    else {\n      return [];\n    }\n  }\n\n  vm.changeCategory = function() {\n    vm.xsView = null;\n    vm.moveItem = null;\n    vm.categoryChanging = true;\n    $timeout(function() {\n      vm.categoryChanging = false;\n    }, 0);\n  }\n  \n  vm.getCategories = function() {\n    return itemCategory.categories;\n  }\n    \n  vm.setSelectedCategory = function(value) {\n    vm.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  }\n  \n  vm.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  vm.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  vm.allowMoreItems = function() {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  vm.getItemCount = function() {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n    \n    if(vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        }\n        else if(item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n      \n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    }\n    else if(vm.category.name == 'increasing gems') {\n      \n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if(!gemType) {\n            gemType = 0;\n          }\n          \n          if(!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        }\n        else if(item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n      \n      itemCountText = ''\n      angular.forEach(numIncreasingGems, function(number, gemType) {\n        if(itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n      \n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    }\n    else {\n      var numItems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n      \n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if(cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n    \n    return itemCountText;\n  }\n  \n  vm.newCustom = function() {\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\n    vm.build.items = vm.build.items.concat(newCustom);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.handleChange = function() {\n    vm.stats = statHelper.getBuildStats(vm.build);\n    vm.onChange();\n  }\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\n\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  this.newGroup = true;\n  if('name' in $routeParams) {\n      this.name = $routeParams.name;\n  }\n  \n  this.delete = function() {\n    saveHelper.deleteBuild(this.name);\n    $location.path('/builds/');\n  }\n    \n}]); ","(function () {\n'use strict';\n\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\n\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\n  'use strict';\n  \n  var vm = this;\n  vm.savedItems = saveHelper.getSavedItems();\n  vm.group = {};\n  vm.newGroup = true;\n  if('buildName' in $routeParams) {\n      vm.groupName = $routeParams.buildName;\n      if(vm.groupName in vm.savedItems) {\n        vm.group = vm.savedItems[vm.groupName];\n        vm.newGroup = false;\n      }\n  }\n  else {\n    vm.groupName = '';\n  }\n  vm.oldGroupName = vm.groupName;\n  vm.heroStats = [];\n  vm.elements = hCodeValues.elements;\n  vm.damageTypes = hCodeValues.damageTypes;\n  \n  vm.initDamageType = function() {\n    if(vm.job) {\n      if(vm.group.damageType) {\n        vm.damageType = vm.group.damageType;\n      }\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\n        if(vm.job.d.DamageType) {\n          vm.damageType = hCodeValues.damageTypes[2];\n        }\n        else {\n          vm.damageType = hCodeValues.damageTypes[1];\n        }\n      }\n      else {\n        vm.damageType = hCodeValues.damageTypes[0];\n      }\n    }\n  }\n\n  vm.initDefaultElement = function() {\n    var defaultElement = hCodeValues.elements[0];\n    var defaultSecondaryElement = hCodeValues.elements[0];\n\n    if(vm.job && vm.job.d) {\n      var jobName = vm.job.d.EnglishName;\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\n        defaultElement = hCodeValues.elements[3];\n        defaultSecondaryElement = hCodeValues.elements[3];\n      }\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\n        defaultElement = hCodeValues.elements[4];\n        defaultSecondaryElement = hCodeValues.elements[4];\n      }\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\n        defaultElement = hCodeValues.elements[1];\n        defaultSecondaryElement = hCodeValues.elements[1];\n      }\n      else if(jobName == 'ELESTRA') {\n        defaultElement = hCodeValues.elements[2];\n        defaultSecondaryElement = hCodeValues.elements[2];\n      }\n      else if(jobName == 'ADEPT') {\n        defaultElement = hCodeValues.elements[1];\n        defaultSecondaryElement = hCodeValues.elements[2];\n      }\n      else if(jobName == 'LIGHTFURY') {\n        defaultElement = hCodeValues.elements[3];\n        defaultSecondaryElement = hCodeValues.elements[4];\n      }\n    }\n\n    if(vm.newGroup) {\n      vm.element = defaultElement;\n      vm.secondaryElement = defaultSecondaryElement;\n    }\n    \n    if(!vm.element) {\n      vm.element = defaultElement;\n    }\n\n    if(!vm.secondaryElement) {\n      vm.secondaryElement = defaultElement;\n    }\n  }\n    \n  if(vm.group.element) {\n    vm.element = vm.group.element;\n  }\n  else {\n    vm.element = hCodeValues.elements[0];\n  }\n    \n  if(vm.group.secondaryElement) {\n    vm.secondaryElement = vm.group.secondaryElement;\n  }\n  else {\n    vm.secondaryElement = hCodeValues.elements[0];\n  }\n\n  if(!('critResist' in vm.group)) {\n    vm.critResist = 20;\n  }\n  else {\n    vm.critResist = vm.group.critResist;\n  }\n\n  if(!('eleResist' in vm.group)) {\n    vm.eleResist = 0;\n  }\n  else {\n    vm.eleResist = vm.group.eleResist;\n  }\n\n  if(vm.group.enemyLevel) {\n    vm.enemyLevel = vm.group.enemyLevel;\n  }\n  else {\n    vm.enemyLevel = 93;\n  }\n  \n  if(vm.group.playerLevel) {\n    vm.playerLevel = vm.group.playerLevel;\n  }\n  else {\n    vm.playerLevel = 93;\n  }\n  \n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\n    vm.heroLevel = vm.group.heroLevel;\n  }\n  else {\n    vm.heroLevel = 1;\n  }\n  \n  vm.init = function() {\n    var newJobs = jobs.getFinalJobs();\n    if(newJobs.length > 0) {\n      $timeout( function() {\n        \n        if('job' in vm.group) {\n          angular.forEach(newJobs, function(value, key) {\n            if(value.id == vm.group.job.id) {\n              vm.job = value;\n            }\n          });\n        }\n\n        vm.initDamageType();\n        vm.initDefaultElement();\n        vm.setHeroStats();\n      });\n    }\n  }\n  \n  vm.setJob = function() {\n    $window.scrollTo(0, 0);\n    $timeout(function() {\n      vm.initDamageType();\n      vm.initDefaultElement();\n    });\n  }\n  \n  region.init();\n  character.init(function() {\n    vm.init();\n  });\n  \n  vm.getStatCap = function(colName, useLevel) {\n    return character.getStatCaps(useLevel)[colName];\n  }\n  vm.getJobConversion = function(colName) {\n    return character.getConversions(vm.job.id)[colName];\n  }\n  vm.getJobBaseStat = function(colName) {\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\n  }\n  \n  vm.invalidGroupName = function() {\n    if(!vm.groupName) {\n      return true;\n    }\n    \n    if(vm.groupName in vm.savedItems) {\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  vm.ok = function() {\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\n    var conversions = character.getConversions(vm.job.id);\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\n    var heroStats = character.getHeroStats(vm.heroLevel);\n    \n    if(vm.newGroup) {\n      vm.oldGroupName = vm.groupName;\n      saveHelper.importGroup(vm.groupName, []);\n    }\n    \n    saveHelper.saveBuild(\n      vm.oldGroupName, \n      vm.groupName,\n      {\n      enemyLevel: vm.enemyLevel,\n      playerLevel: vm.playerLevel,\n      heroLevel: vm.heroLevel,\n      job: vm.job,\n      damageType: vm.damageType,\n      element: vm.element,\n      secondaryElement: vm.secondaryElement,\n      critResist: vm.critResist,\n      eleResist: vm.eleResist,\n      enemyStatCaps: enemyStatCaps, \n      playerStatCaps: playerStatCaps, \n      conversions: conversions,\n      baseStats: baseStats,\n      heroStats: heroStats\n      });\n    \n    $location.path('/build');\n    $location.search('buildName', vm.groupName);\n  }\n  \n  vm.setHeroStats = function() {\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\n  }\n  \n  $timeout(function() {\n    var input = document.getElementById('groupNameInput');\n    if(input) {\n      input.focus();\n      input.setSelectionRange(0, 9999);\n    }\n  });\n}\n\n})();","angular.module('dnsim').controller('quickAddCtrl',\n\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n  \n  this.setOptions = function() {\n    if(vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if(vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  }\n  \n  this.selectOption = function(value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n      \n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function(columns, fileName) {\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    }\n    else {\n      vm.setOptions();\n      // console.log('setup next step');\n    }\n  }\n  \n  this.tryToAddItem = function(dntFiles, item) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        if(vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          newItem.gemSlot = vm.gemSlot;\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.build.items.push(newItem);\n          vm.onChange();\n        }\n      }\n    }\n  }\n  \n  this.reset = function() {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function() {\n      vm.setOptions();\n    });\n  }\n  \n  this.hasStarted = function() {\n    return vm.startedForCat == vm.category.name;\n  }\n  \n  this.start = function() {\n    vm.startedForCat = vm.category.name;\n    \n    jobs.init(function() {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  }\n  \n  this.hasOptions = function() {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  }\n  \n  this.cancel = function() {\n    vm.startedForCat = '';\n    vm.reset();\n  }\n  \n  this.back = function() {\n    if(vm.stepNumber == 0) {\n      vm.cancel();\n    }\n    else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n        \n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\n      \n      vm.setOptions();\n    }\n  }\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\n  \n}])\n.directive('dngearsimQuickAdd', function() {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      gemSlot: '=gemSlot',\n      onChange: '&onChange',\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    templateUrl: 'ui/builds/quick-add.html'\n  };\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\n\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\n  'use strict';\n  \n  var vm = this;\n  if('name' in $routeParams) {\n      vm.name = $routeParams.name;\n  }\n  \n  var savedItems = saveHelper.getSavedItems();\n  if(vm.name in savedItems) {\n    vm.build = savedItems[vm.name];\n  }\n  \n  vm.reloaded = false;\n  vm.reload = function() {\n    dntReset();\n    vm.reloaded = false;\n    \n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n  }\n  \n  vm.goToBuild = function() {\n    $location.path('/build');\n    $location.search('buildName', vm.name);\n  }\n  \n  function progress() {\n  }\n\n  function tryInit() {\n    if(vm.reloaded) {\n      return;\n    }\n    \n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n    \n    if(allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\n      saveHelper.updatedSavedItems(vm.name, newItems);\n      vm.build.items = newItems;\n      \n      vm.reloaded = true;\n    }\n  }\n    \n}","angular.module('dnsim').controller('ViewGroupCtrl', \n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\n    'use strict';\n  \n    document.body.className = 'saved-back';\n    \n    region.setLocationByName($routeParams.region);\n    \n    $scope.buildName = '';\n    $scope.build = {};\n    \n\n    if('g' in $routeParams && 'i' in $routeParams) {\n      $scope.buildName = $routeParams.g;\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\n      \n      $scope.enemyLevel = $routeParams.e;\n      $scope.playerLevel = $routeParams.p;\n      $scope.heroLevel = $routeParams.h;\n      $scope.job = { id: $routeParams.j };\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n      $scope.element = hCodeValues.elements[$routeParams.t];\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n        \n      var items = [];\n      \n      var itemString = $routeParams.i;\n      \n      angular.forEach(itemString.split(','), function(itemStr, index) {\n        var item = exportLinkHelper.decodeItem(itemStr);\n        \n        if(item.id > 0) {\n          items.push(item);\n        }\n      });\n\n      $scope.build = {};\n      $scope.savedItems = {};\n      $scope.savedItems[$scope.buildName] = $scope.build;\n      $scope.build.items = items;\n      $scope.isLoading = true;\n      \n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        dntData.init(fileName, columns, progress, tryInit);\n      });\n      \n      translations.init(progress, tryInit);\n      jobs.init(progress, tryInit);\n      character.init(tryInit);\n      \n      $timeout();\n    }\n    \n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n    \n    function tryInit() {\n      \n      var allInit = true;\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allInit = false;\n        }\n      });\n      \n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n        return;\n      }\n      \n      $timeout(function() {\n        var groupName = $scope.buildName;\n        var group = $scope.build;\n        \n        $scope.job = jobs.getById($scope.job.id);\n        \n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n        if($scope.job) {\n          $scope.conversions = character.getConversions($scope.job.id);\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n        }\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\n        \n        var newItems = groupHelper.reloadGroup(groupName, group);\n      \n        $scope.savedItems = {};\n        $scope.build = {\n          items: newItems,\n          lastUpdate: group.lastUpdate,\n\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats,\n        };\n        $scope.savedItems[groupName] = $scope.build;\n        $scope.stats = statHelper.getBuildStats($scope.build);\n        \n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n      });\n    }\n    \n    function progress() {\n    }\n    \n    $scope.copyGroup = function() {\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n      // console.log('copying in as ' + newBuildName);\n      \n      saveHelper.saveBuild(\n        newBuildName, \n        newBuildName,\n        {\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          critResist: $scope.critResist,\n          eleResist: $scope.eleResist,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats\n        });\n      \n      $location.url('/build?buildName=' + newBuildName);\n    }\n  }]\n);\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      compact: '=compact',\n      onChange: '&onChange'\n    },\n    controller: groupAssignment,\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/group-assignment.html'\n  };\n});\n\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\n  \n  var vm = this;\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupName) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n\n  if(!(this.groupName in this.savedItems)) {\n    this.groupName = null;\n  }\n\n  if(!this.groupName && this.savedItems) {\n    for(var savedGroup in this.savedItems) {\n      this.groupName = savedGroup;\n      break;\n    }\n  }\n\n  if(!this.groupName) {\n    return;\n  }\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n    \n  this.clearGroup = function() {\n    vm.addAffectAmount = null;\n    vm.replaceAffectAmount = {};\n\n    vm.groupItems = null;\n    vm.groupCalcStats = null;\n  }\n\n  vm.tryToSetItem = function(dntFiles) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        vm.item = exportLinkHelper.reloadItem(vm.item);\n      }\n    }\n  }\n\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\n  angular.forEach(dntFiles, function(columns, fileName) {\n    dntData.init(fileName, columns, function() {}, function() {\n      vm.tryToSetItem(dntFiles);\n    });\n  });\n  vm.tryToSetItem(dntFiles);\n\n  $scope.$watch('editCtrl.item', function() {\n    vm.clearGroup();\n  });\n  \n  this.getAddAffectAmount = function(stat) {\n    this.initAddAffects();\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\n    return this.addAffectAmount[stat];\n  };\n  \n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    return this.replaceAffectAmount[itemIndex][statId];\n  };\n  \n  this.getGroupCalcStats = function() {\n    \n    if(this.groupCalcStats == null) {\n      \n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  };\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  };\n  \n  this.initAddAffects = function() {\n    \n    if(vm.addAffectAmount) {\n      return;\n    }\n    \n    // console.log('initialising add affects ');\n    \n    var origStats = vm.getGroupCalcStats();\n    var group = vm.savedItems[vm.groupName];\n    var newItems = [];\n    if(group.items) {\n      newItems = group.items.concat([vm.item]);\n    }\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    \n    this.addAffectAmount = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex]) {\n      return;\n    }\n    \n    var group = vm.savedItems[vm.groupName];\n    var newItems = [vm.item];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    this.replaceAffectAmount[itemIndex] = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  };\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  };\n  \n  this.getGroupItems = function() {\n\n    var itemSplit;\n    function numMatches(str) {\n      if(str) {\n        var matches = 0;\n        for(var i=0;i<itemSplit.length;++i) {\n          if(str.indexOf(itemSplit[i]) > 0) {\n            matches++;\n          }\n        }\n        return matches;\n      }\n      else {\n        return -1;\n      }\n    }\n    \n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n      vm.groupItems = [];\n\n      var existing;\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\n        });\n      }\n\n      var items = [];\n      if(existing) {\n        items.push(existing);\n      }\n      else {\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\n            if(item.exchangeType == vm.item.exchangeType) {\n              items.push(item);\n            }\n          }\n          else if(item.typeName == vm.item.typeName) {\n            items.push(item);\n          }\n        });\n        \n        if(vm.item.name) {\n          itemSplit = vm.item.name.split(' ');\n        }\n        items.sort(function(a,b) {\n          return numMatches(b.name)-numMatches(a.name);\n        });\n      }\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name == vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name != vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n    }\n    return vm.groupItems;\n  };\n  \n  this.hasMaxExchangable = function() {\n    var cat = itemCategory.byName(this.item.typeName);\n    var items = this.getGroupItems();\n\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n      if(_.find(items, function(item) {\n        return item.sparkTypeId == vm.item.sparkTypeId;\n      })) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxCat) {\n      if(items.length >= cat.maxCat) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxExchange) {\n      if(items.length >= cat.maxExchange) {\n        for(var i=0;i<items.length;++i) {\n          if(!items[i].exchangeType) {\n            return false;\n          }\n        }\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n        return true;\n      }\n    }\n    return false;\n  };\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    saveGroup();\n    vm.clearGroup();\n  };\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    saveGroup();\n    vm.clearGroup();\n  };\n  \n  this.addToGroup = function() {\n    saveHelper.saveItem(vm.groupName, vm.item);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n    vm.onChange();\n  };\n  \n  this.replace = function(item) {\n    item.replaceItem = true;\n    var newItemList = [];\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\n      if(gItem.replaceItem) {\n        // console.log('found replace item');\n        newItemList.push(vm.item);\n      }\n      else {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n    vm.onChange();\n  };\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n};\n\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\n\n['hCodeValues','$scope',\nfunction(hCodeValues,$scope) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\n    return;\n  }\n  \n  var vm = this;\n\n  this.statMap = {};\n  \n  // console.log(vm.item.stats);\n  _.forEach(vm.item.stats, function(stat) {\n    // console.log('got stat', stat.id);\n    vm.statMap[stat.id] = stat.max;\n  });\n  \n  for(var statId in hCodeValues.stats) {\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \n\n      if(newValue != oldValue) {\n        // console.log(statId);\n        // console.log('watch got stat value', newValue);\n\n        var anyChange = false;\n        var newStats = [];\n        for(var statId in vm.statMap) {\n\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\n            _.each(vm.item.stats, function(stat) { \n              if(stat.id == statId) {\n                anyChange = true;\n              }\n            });\n          }\n          else {\n            newStats.push({\n              id: Number(statId),\n              max: Number(vm.statMap[statId])\n            });\n\n            var found = false;\n            _.each(vm.item.stats, function(stat) {\n              if(stat.id == statId) {\n                found = true;\n                // console.log('comparing', stat.max, vm.statMap[statId]);\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\n                  anyChange = true;\n                }\n              } \n            });\n\n            if(!found) {\n              anyChange = true;\n            }\n          }\n        }\n\n        if(anyChange) {\n          // console.log('GOT CHANGES!', newStats);\n          vm.item.stats = newStats;\n          vm.onChange();\n        }\n      }\n    });\n  }\n  \n}])\n.directive('dngearsimItemEditCustom', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-custom.html'\n  };\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\n\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(!vm.item || !vm.item.enchantmentId) {\n    return;\n  }\n  \n  if('itemSource' in this.item) {\n    vm.itemType = items[vm.item.itemSource];\n  }\n  \n  if(!vm.itemType) {\n    return;\n  }\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\n    return;\n  }\n  \n  if(vm.itemType.enchantDnt) {\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n  if(vm.itemType.enchantDnt2) {\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n  \n  if(vm.itemType.petLevelDnt) {\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\n  }\n  \n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if(vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n  \n  this.setEnchantment = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 0;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\n          }\n          else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  }\n  \n  function getEnchantLevel(num) {\n    if('petLevelDnt' in vm.itemType) {\n      return vm.enchantments[num].PetLevel;\n    }\n    else {\n      return vm.enchantments[num].EnchantLevel;\n    }\n  }\n  \n  this.setPetLevel = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n      }\n    }\n  }\n  \n  this.isMaxEnchantLevel = function() {\n\n    if(vm.enchantments != null &&\n      vm.enchantments.length > 0 &&\n      typeof vm.item.enchantmentNum == 'number') {\n\n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  \n  this.setEnchantmentNum = function(enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    if('petLevelDnt' in vm.itemType) {\n      vm.setPetLevel();\n    }\n    else {\n      vm.setEnchantment();\n    }\n    vm.onChange();\n  }\n  \n  this.nextEnchantment = function() {\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\n      if(i == 0) {\n        vm.enhancementOptions.push({number: 0});\n      }\n      else {\n        vm.enhancementOptions.push(vm.getOption(i-1));\n      }\n    }\n  }\n  \n  this.prevEnchantment = function() {\n    vm.enhancementOptions = [];\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\n      vm.enhancementOptions.push(vm.getOption(i-1));\n    }\n    \n    vm.enhancementOptions.push({number: 0});\n  }\n  \n  this.getOption = function(enchantmentNum) {\n    return {\n      number: getEnchantLevel(enchantmentNum),\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\n    };\n  }\n  \n  this.getEnchantments = function() {\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\n        }\n        vm.setEnchantment();\n      }\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\n        vm.setPetLevel();\n      }\n    }\n    \n    return vm.enchantments;\n  }\n  \n  var fileName = 'all-items.lzjson';\n  \n  this.showMaterials = function() {\n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        \n        if(!vm.enchantmentAfter) {\n          return;\n        }\n        \n        vm.materials = [];\n        for(var i=1;i<=5;++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if(itemId > 0 && itemCount > 0) {\n            \n            var items = dntData.find(fileName, 'id', itemId);\n            if(items.length == 0) {\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\n            }\n            else {\n              var item = items[0];              \n              if(item) {\n                var material = {\n                  item: itemFactory.createBasicItem(item),\n                  num: itemCount,\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  if(dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n})\n.directive('dngearsimItemEditEnchantment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-enchantment.html'\n  };\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\n\n['dntData','items','hCodeValues','itemColumnsToLoad',\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n  \n  if(this.item == null) return;\n  \n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n  \n  if(vm.itemType.potentialDnt) {\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\n  }\n  \n  this.getPotentials = function() {\n    if(!vm.potentials) {\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n        \n        if(potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        }\n        else if('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n        \n          if(potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n    \n    return vm.potentials;\n  }\n  \n  this.nextPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i+1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n  \n  this.prevPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i-1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n    \n  this.changePotential = function(pid) {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  }\n  \n  this.isFirstPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  }\n  \n  this.isLastPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\n  }\n  \n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n    \n    if(vm.potentials != null) {\n      angular.forEach(vm.potentials, function(p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\n          if(!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n        \n        if(stats.length > 0) {\n          pStats[p.id] = stats;\n        }\n        else if(!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n    \n    return pStats;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditPotential', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-potential.html'\n  };\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\n\n['$timeout','dntData','statHelper',\nfunction($timeout,dntData,statHelper) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'skills') {\n    return;\n  }\n  \n  if(!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n  \n  var vm = this;\n  \n  function getDntFile() {\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n  }\n  \n  this.initSkills = function() {\n    var dntFile = getDntFile();\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n    })});\n  }\n  \n  this.nextEnchantment = function() {\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  }\n  \n  this.isMaxSkillLevel = function() {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  }\n  \n  this.prevEnchantment = function() {\n    if(this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    }\n    else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  dntData.init(getDntFile(), null, null, vm.initSkills);\n\n}])\n.directive('dngearsimItemEditSkill', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-skill.html'\n  };\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\n\n['dntData','hCodeValues','items','itemColumnsToLoad',\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!vm.itemType || !vm.itemType.sparkDnt) {\n    return\n  }\n  \n  if(vm.itemType.sparkDnt) {\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\n  }\n  \n  this.sparks = null;\n\n  this.nextSpark = function() {\n    var index = getPotentialIndex();\n    index++;\n    if(index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.isMoreSparks = function() {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\n  }\n  \n  this.isFirstSpark = function() {\n    return getPotentialIndex() == 0;\n  }\n  \n  this.prevSpark = function() {\n    var index = getPotentialIndex();\n    index--;\n    if(index < 0) {\n      index = vm.sparks.length-1;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.removeSpark = function() {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  }\n  \n  this.getSparks = function() {\n    if(vm.item == null || vm.itemType == null) return null;\n    if(vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if(sid) {\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n    \n    return vm.sparks;\n  }\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if(vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function(spark, index) {\n        if(spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n      \n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditSpark', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-spark.html'\n  };\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\n\n[function() {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'tman') {\n    return;\n  }\n  \n  this.setTalisman = function(amount) {\n    if(amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    }\n    else {\n      this.item.enchantmentNum = amount;\n      \n      var extraStats = [];\n      angular.forEach(this.item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\n      });\n      \n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  }\n\n}])\n.directive('dngearsimItemEditTalisman', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-talisman.html'\n  };\n});","angular.module('dnsim').controller('itemEditCtrl',\n\n['hCodeValues',\nfunction(hCodeValues) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(!vm.item) {\n    return;\n  }\n  \n  vm.onUpdateItem = function() {\n    vm.updateItem();\n  }\n  \n}])\n.directive('dngearsimItemEdit', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n      updateItem: '&updateItem'\n    },\n    controller: 'itemEditCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-edit.html'\n  };\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.attainments = [];\n\n  var files = [\n    'itemgaintable.lzjson',\n    'itemgaintable_dragonjewel.lzjson',\n    'itemgaintable_enchant.lzjson',\n    'itemgaintable_etc.lzjson',\n    'itemgaintable_reboot.lzjson',\n    'itemgaintable_talisman.lzjson'];\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.init();\n      });\n    });\n  }\n  \n  this.init = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n    \n    vm.attainments = [];\n    files.forEach(function(file) {\n      var attainments = dntData.find(file, 'id', vm.item.id);\n      if(attainments.length) {\n        attainments.forEach(function(attainment) {\n          var text = attainment.ItemGainText;\n          if(text) {\n            var texts = text.split('{');\n            texts.forEach(function(singleText) {\n              var splitVal = singleText.split('}');\n              if(splitVal.length) {\n                if(splitVal[0].indexOf('#') == -1) {\n                  vm.attainments.push(translations.translate(splitVal[0]));\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n}])\n.directive('dngearsimItemViewAttainment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewAttainmentCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-attainment.html'\n  };\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\n\n['$timeout','dntData','itemFactory','region',\n  function($timeout, dntData, itemFactory, region) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n  \n  var vm = this;\n  \n  var pouchFileNames = [\n    'itemdroptable.lzjson',\n    'itemdroptable_abyss.lzjson',\n    'itemdroptable_apprentice.lzjson',\n    'itemdroptable_cook.lzjson',\n    'itemdroptable_darklair.lzjson',\n    'itemdroptable_dimension.lzjson',\n    'itemdroptable_disjoint.lzjson',\n    'itemdroptable_dnexpedition.lzjson',\n    'itemdroptable_event.lzjson',\n    'itemdroptable_farm.lzjson',\n    'itemdroptable_fishing.lzjson',\n    'itemdroptable_guildwar.lzjson',\n    'itemdroptable_item.lzjson',\n    'itemdroptable_monsteritem.lzjson',\n    'itemdroptable_propdrop.lzjson',\n    'itemdroptable_pvp.lzjson',\n    'itemdroptable_randomcompound.lzjson',\n    'itemdroptable_stageclear.lzjson',\n    'itemdroptable_themepark.lzjson',\n    'itemdroptable_union.lzjson']\n  \n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  this.usedFiles = {};\n  this.lookupId = null;\n  \n  var files;\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  }\n  else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxContents();\n      });\n    });\n  }\n  \n  this.initBoxContents = function() {\n    // console.log('init contents', this.item.fileName);\n\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if(datas.length > 0) {\n      var d = datas[0];\n      this.lookupId = d.TypeParam1;\n      vm.items = [];\n      \n      \n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\n        vm.getCharmItems(d.TypeParam1);\n      }\n      else if (vm.item.typeId == 8) {\n        vm.getPouchItems(d.TypeParam1);\n      }\n      \n    }\n  }\n  \n  this.getPouchItems = function(boxType) {\n    for(var f=0;f<pouchFileNames.length;++f) {\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\n    }\n  }\n  \n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\n    \n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          }\n          else {\n            // console.log('adding item ' + pouchItem);\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\n              // console.log('found item ' + basicItem.name);\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: basicItem\n              });\n              this.usedFiles[pouchFileName] = true;\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n  \n  this.getCharmItems = function(boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for(var i=0;i<charmFiles.length;++i) {\n\n      var charmData = dntData.getData(charmFiles[i]);\n      // console.log('box: ' + boxType, charmData);\n      \n      for(var c=0;c<charmData.length;++c) {\n        var cd = charmData[c];\n        if(cd.CharmNum == boxType && cd.Look) {\n          \n          if(cd.CharmType) {\n            this.getCharmItems(cd.ItemID)\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n            if(itemds.length > 0) {\n              vm.items.push({\n                count: cd.Count,\n                gold: cd.Gold,\n                item: itemFactory.createBasicItem(itemds[0])\n              });\n              this.usedFiles[charmFiles[i]] = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  this.getFileLink = function(fileName) {\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\n  }\n\n}])\n.directive('dngearsimItemViewBox', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-box.html'\n  };\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = [\n    'itemcompoundtable.lzjson',\n    'itemcompoundtable_custom.lzjson',\n    'itemcompoundtable_glyph.lzjson',\n    'itemcompoundtable_glyph95.lzjson',\n    'itemcompoundtable_jewel.lzjson',\n    'itemcompoundtable_renewal.lzjson',\n    'itemcompoundtable_set.lzjson'];\n  \n  var dropFile = 'itemdroptable.lzjson';\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = cFiles.concat([allItemFileName, dropFile]);\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initCrafts();\n      });\n    });\n  }\n  \n  this.initCrafts = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n    \n    vm.crafts = [];\n    for(var i=0;i<cFiles.length;++i) {\n      vm.initCraft(cFiles[i], vm.item.id);\n    }\n\n    for(var di=1;di<=20;++di) {\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\n      if(drops.length) {\n        drops.forEach(function(drop) {\n          for(var i=0;i<cFiles.length;++i) {\n            vm.initCraft(cFiles[i], drop.id);\n          }\n        });\n      }\n    }\n    \n    var newCrafts = [];\n    for(var i=0;i<vm.crafts.length;++i) {\n      var found = false;\n      for(var j=0;j<newCrafts.length;++j) {\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\n            \n            found = true;\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n                  found = false;\n              }\n            }\n        }\n      }\n      \n      if(!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n    \n    vm.crafts = newCrafts;\n  }\n\n  this.initCraft = function(fileName, id) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\n    \n    for(var i=0;i<fCrafts.length;++i) {\n      var c = fCrafts[i];\n      \n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost/100/100,\n        items: [],\n      };\n      \n      var j=0;\n      for(;;) {\n        j++;\n        var itemColName = 'Slot' + j +'Id';\n        var qtyColName = 'Slot' + j +'Num';\n        if(!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if(items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName],\n          });\n        }\n      }\n      \n      vm.crafts.push(craft);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewCraft', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-craft.html'\n  };\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\n\n['$timeout','dntData','itemFactory','items',\n  function($timeout, dntData, itemFactory, items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  \n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [extractFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initExtract();\n      });\n    });\n  }\n  \n  this.initExtract = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if(d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n    \n    var itemType = items[vm.item.itemSource];\n    if(itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      if(!enchantments.length && itemType.enchantDnt2) {\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\n      }\n\n      for(var i=0;i<enchantments.length;++i) {\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n    \n    vm.items = [];\n    if(disjoint) {\n      vm.getItems(disjoint);\n    }\n  }\n  \n  this.getGold = function() {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount)/100/100;\n  }\n  \n  this.getItems = function(disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 1;\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getItems(pouchItem);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0]),\n              });\n            }\n          }\n        }\n        itemIndex++;\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewExtraction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-extraction.html'\n  };\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = [plateFile,allItemFileName];\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    getPlates();\n  }\n  \n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for(var r=0;r<rows.length;++r) {\n      var row = rows[r];\n      var col=0;\n      for(;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if(!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if(itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewPlate', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-plate.html'\n  };\n});","angular.module('dnsim').controller('itemViewSetCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var files = [\n  'partstable.optimised.json',\n  'partstable_cash.optimised.json',\n  'partstable_common2014.optimised.json',\n  'partstable_common2015.optimised.json',\n  'partstable_common2016.lzjson',\n  'partstable_commoncash.lzjson',\n  'partstable_equipment.optimised.json',\n  'partstable_event.lzjson',\n  'partstable_guild.lzjson',\n  'partstable_pvp.optimised.json',\n  'partstable_reboot.optimised.json',\n  'partstable_skilllevelup.lzjson',\n  'weapontable.optimised.json',\n  'weapontable_cash.optimised.json',\n  'weapontable_common2014.optimised.json',\n  'weapontable_common2015.optimised.json',\n  'weapontable_common2016.lzjson',\n  'weapontable_commoncash.lzjson',\n  'weapontable_equipment.optimised.json',\n  'weapontable_event.lzjson',\n  'weapontable_guild.lzjson',\n  'weapontable_pvp.optimised.json',\n  'weapontable_reboot.optimised.json',\n  //'weapontable_skilllevelup.lzjson'\n  ];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = files.concat([allItemFileName]);\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    for(var i=0;i<files.length;++i) {\n      getSetItems(files[i]);\n    }\n  }\n  \n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for(var r=0;r<rows.length;++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if(itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewSet', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-set.html'\n  };\n});","angular.module('dnsim').controller('itemViewShopCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.shopCosts = [];\n  \n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initShops();\n      });\n    });\n  }\n  \n  this.initShops = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n    \n    var newShopCosts = [];\n    for(var i=0;i<vm.shopCosts.length;++i) {\n      var found = false;\n      for(var j=0;j<newShopCosts.length;++j) {\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n            found = true;\n            break;\n        }\n      }\n      \n      if(!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n    \n    vm.shopCosts = newShopCosts;\n  }\n  \n  /*\n  function getShopCosts() {\n    var shops = dntData.getData(shopFileName);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n      \n      var c = 0;\n      for(;;) {\n        ++c;\n        \n        var colName = 'itemIndex' + c;\n        if(!(colName in s)) {\n          break;\n        }\n        \n        var itemId = s[colName];\n        if(!itemId) {\n          break;\n        }\n        \n        if(itemId == vm.item.id) {\n          s = {\n            shopName: s.ShopID,\n            tabName: translations.translate(s.TabNameID),\n            gold: s['Quantity' + c],\n          };\n          \n      \n          if(s.shopName in hCodeValues.shopNames) {\n            s.shopName = hCodeValues.shopNames[s.shopName];\n          }\n      \n          if(!s.shopName) {\n            s.shopName = s.ShopId;\n          }\n          vm.shopCosts.push(s);\n        }\n      }\n    }\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n        \n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n      \n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        dungeonPoints: 0,\n        nestPoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0,\n      };\n      \n      if(shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n      \n      if(s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\n      }\n      else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n        shopCost.pointsId1 = s.PurchaseType1;\n      }\n      \n      if(s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\n      }\n      else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n        shopCost.pointsId2 = s.PurchaseType2;\n      }\n      \n      shopCost.gold = shopCost.gold/100/100;\n      \n      vm.shopCosts.push(shopCost);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewShop', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-shop.html'\n  };\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.matchingTransfers = [];\n  \n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\n  \n  var files = [transferFileName,allItemFileName,transferItemsFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.matchingTransfers = [];\n    \n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\n    if(transferItem && transferItem.length > 0) {\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n      \n      for(var i=0;i<transfers.length;++i) {\n        var t = transfers[i];\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n          \n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n          \n          vm.matchingTransfers.push({\n            level: t.ResultLevel,\n            enchantmentNum: t.ResultEnchantLevel,\n            gold: t.NeedCoin/100/100,\n            rank: hCodeValues.rankNames[t.ResultRank],\n            numItem1: t.NeedItemCount1,\n            item1: itemFactory.createBasicItem(item1s[0]),\n            numItem2: t.NeedItemCount2,\n            item2: itemFactory.createBasicItem(item2s[0]),\n          });\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTransfer', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-transfer.html'\n  };\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.rewardItems = [];\n  \n  var allItemFileName = 'all-items.lzjson';\n  var changeFileName = 'itemchangetable.lzjson';\n  \n  var files = [allItemFileName,changeFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.rewardItems = [];\n\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\n    if(changes && changes.length > 0) {\n      for(var i=0;i<changes.length;++i) {\n        var c = changes[i];\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\n\n          vm.rewardItems.push({\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\n          });\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTuning', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTuningCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-tuning.html'\n  };\n});","angular.module('dnsim').controller('ItemCtrl',\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\n  'use strict';\n  \n  region.setLocationByName($routeParams.region);\n  \n  $window.scrollTo(0, 0);\n  \n  $scope.jobName = null;\n  // console.log('search string: ', $routeParams.i);\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\n  if('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n  \n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n  \n  $scope.getDescription = function() {\n    if($scope.item.description) {\n      return $scope.item.description;\n    }\n    else if($scope.itemType &&\n      $scope.itemType.name == 'title' &&\n      translations.isLoaded() &&\n      dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    else if($scope.item.fileName &&\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\n        \n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      } \n    }\n    return '';\n  }\n  \n  $scope.getExchangeType = function() {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if(translations.isLoaded() &&\n      dntData.isLoaded(exchangeDnt) &&\n      $scope.item.exchangeType > 0) {\n        \n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  }\n  \n  $scope.setDetail = function(detail) {\n    $scope.detail = detail;\n  }\n  \n  $scope.getNumInSet = function() {\n    \n    var buildName = $scope.getBuildName();\n    if(buildName && $scope.item && $scope.item.setId) {\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\n    }\n    \n    return 0;\n  }\n  \n  $scope.getBuildName = function() {\n    var buildName = saveHelper.getCurrentBuild();\n    if($scope.builds) {\n      if(!buildName || !(buildName in $scope.builds)) {\n        var allBuildNames = Object.keys($scope.builds);\n        if(allBuildNames.length) {\n          buildName = allBuildNames[0];\n        }\n      }\n    }\n    \n    return buildName;\n  }\n\n  $scope.getSellingPrice = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\n\n      var gold = Math.floor(itemData.SellAmount / 10000);\n      if(gold) {\n        retVal += gold + 'gold ';\n      }\n\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\n      if(silver) {\n        retVal += silver + 'silver ';\n      }\n\n      var copper = itemData.SellAmount % 100;\n      if(copper) {\n        retVal += copper + 'copper ';\n      }\n    }\n    return retVal;\n  }\n  \n  $scope.getServerStorage = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n    \n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if(itemData && 'AbleWStorage' in itemData) {\n        if(itemData.AbleWStorage == 1) {\n          retVal = 'can server storage';\n        }\n        else if(itemData.AbleWStorage == 0) {\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\n            retVal = 'not transferable';\n          }\n        }\n      }\n\n      if(itemData && 'Reversion' in itemData) {\n        if(retVal.length) {\n          retVal += ', ';\n        }\n        \n        if(itemData.Reversion == 0) {\n          retVal += 'can trade';\n        }\n        else if(itemData.Reversion == 1) {\n          retVal += 'not tradable ';\n        }\n      }\n    }\n    return retVal;\n  }\n  \n  $scope.getMoreInfo = function() {\n    var sealTimes = 0;\n    var numStamps = 0;\n    \n    if($scope.moreInfoLoaded()) {\n      var itemData = itemFactory.getItemData($scope.item);\n      \n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\n          sealTimes = itemData.SealCount;\n            \n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\n            \n            var colName = 'Count0';\n            if($scope.item.enchantmentNum) {\n              colName = 'Count' + $scope.item.enchantmentNum;\n            }\n            \n            if(colName in sealData[0]) {\n              numStamps = sealData[0][colName];\n            }\n          }\n        }\n      }\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\n        if(itemData.Reversion == 2) {\n          if(itemData.CashTradeCount) {\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\n          }\n          else {\n            return 'can server storage, can use warranty';\n          }\n        }\n        else if(itemData.AbleWStorage) {\n          return 'can server storage';\n        }\n        else {\n          return 'not tradable';\n        }\n      }\n    }\n    \n    if(sealTimes && numStamps) {\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\n    }\n    else {\n      return '';\n    }\n  }\n  \n  $scope.moreInfoLoaded = function() {\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\n      dntData.isLoaded('sealcounttable.lzjson');\n  }\n  \n  $scope.loadMoreInfo = function() {\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\n    dntData.init('sealcounttable.lzjson', null, $timeout);\n  }\n  \n  $scope.handleChange = function() {\n    // console.log('changes');\n    if($scope.item.itemSource != 'custom') {\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\n    }\n    else {\n      setFullStats();\n      $scope.item = angular.copy($scope.item);\n    }\n    getBuilds();\n  }\n  \n  function getJobName() {\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function(job, index) {\n      if(job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n      }\n    });\n  }\n  \n  function init() {\n    getBuilds();\n    $scope.preInitItem = $scope.item;\n    $scope.item = null;\n  \n    var anyToLoad = false;\n    \n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, tryInit);\n        anyToLoad = true;\n      }\n    });\n    \n    if(!translations.isLoaded()) {\n      translations.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n    \n    if(!jobs.isLoaded()) {\n      jobs.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n    \n    if(!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n\n  function isLoaded() {\n    var anyDntToLoad = false;\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        anyDntToLoad = true;\n      }\n    });\n\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\n  }\n  \n  function tryInit() {\n    if(isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\n      if($scope.item == null) {\n        return;\n      }\n      \n      setFullStats();\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\n      if($scope.item.itemSource != 'custom') {\n      \n        if($scope.item.typeName == 'skills') {\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          }\n          else {\n            $scope.item.pve = 'pvp';\n          }\n        }\n        else {\n          if($scope.item.needJobClass > 0) {\n            getJobName();\n          }\n        }\n        \n        setFileName();\n      }\n\n      setupTabs();\n    }\n  }\n\n  function setupTabs() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if(itemData.DisjointDrop1 > 0) {\n      $scope.canExtract = true;\n    }\n    \n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n      $scope.canTransfer = true;\n    } \n\n    if(itemData.Type == 0 || itemData.Type == 1) {\n      $scope.canTune = true;\n    }\n    \n    if($scope.item.setId) {\n      $scope.isInSet = true;\n    }\n    \n    if($scope.item.typeId == 5) {\n      $scope.isPlate = true;\n    }\n    \n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\n      $scope.hasContents = true;\n      $scope.detail = 'contents';\n    }\n    else if($scope.item.typeName != null) {\n      $scope.canUse = true;\n      $scope.detail = 'use';\n    }\n    else if($scope.canExtract) {\n      $scope.detail = 'extract';\n    }\n    else if($scope.canTransfer) {\n      $scope.detail = 'transfer';\n    }\n    else if($scope.canTune) {\n      $scope.detail = 'tuning';\n    }\n    else if($scope.isPlate) {\n      $scope.detail = 'plate';\n    }\n    else {\n      $scope.detail = 'attainment';\n    }\n  }\n  \n  function setFileName() {\n    if(!$scope.item.fileName) {\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\n      }\n    }\n  }\n  \n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    $scope.item.fullStats = $scope.item.stats;\n    \n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n    \n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n  \n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n  \n  function getBuilds() {\n    var builds = saveHelper.getSavedItems();\n    $scope.builds = builds;\n  }\n}]);","angular.module('dnsim').controller('ExportCtrl', \n  ['$scope','$window','saveHelper',\n   function($scope, $window, saveHelper) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | EXPORT';\n  \n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n  \n  $scope.save = function() {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  }\n}]);\n","angular.module('dnsim').controller('HeaderCtrl', \n[\n  function() {\n    'use strict';\n    var vm = this;\n  }\n]).directive('dngearsimHeader', function() {\n  return {\n    templateUrl: 'ui/nav/header.html',\n  };\n});","angular.module('dnsim').controller('NavCtrl', \n  ['$scope','$location','translations','region','itemCategory','saveHelper',\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\n    'use strict';\n    \n    try {\n      var noLocationMenu = [];\n      var normalMenu = [\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\n        {path: 'search', name:'search', icon: 'search'},\n        ];\n      \n      var buildAction = {path: 'build', name:'build'};\n      \n      var withBuildMenu = [\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\n        {path: 'search', name:'search', icon: 'search'},\n        buildAction,\n        ];\n        \n      region.init();\n    \n      $scope.isSearch = function() {\n        return $location.path().indexOf('/search') == 0;\n      }\n  \n      $scope.isLoading = function() {\n        return translations.startedLoading && \n              !translations.isLoaded() &&\n              region.tlocation != null &&\n              region.tlocation.url != '' &&\n              !$scope.noRegion();\n      }\n      \n      $scope.noRegion = function() {\n        return region.dntLocation == null;\n      }\n      \n      $scope.isHttpOnly = function() {\n        return location.protocol != 'https:' && location.hostname != 'localhost';\n      }\n        \n      $scope.getActions = function() {\n        try {\n          var menu = null;\n          \n          var currentBuild = saveHelper.getCurrentBuild();\n          if(currentBuild) {\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\n              // console.log('loading saved items');\n              $scope.savedItems = saveHelper.getSavedItems();\n            }\n            \n            if(!(currentBuild in $scope.savedItems)) {\n              currentBuild = null;\n            }\n          }\n    \n          if(region.dntLocation != null && region.dntLocation.url == '') {\n            menu = noLocationMenu; \n          }\n          else if(region.tlocation != null && region.tlocation.url == '') {\n            menu = noLocationMenu; \n          }\n          else if(currentBuild && currentBuild != 'null') {\n            menu = withBuildMenu;\n            buildAction.path = 'build?buildName=' + currentBuild;\n            buildAction.name = currentBuild;\n            if(currentBuild in $scope.savedItems) {\n              buildAction.build = $scope.savedItems[currentBuild];\n            }\n          }\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\n            menu = normalMenu;\n          }\n          else {\n            menu = normalMenu;\n          }\n          \n          var path = $location.path;\n          angular.forEach(menu, function(value, key) {\n            delete value.extraCss;\n            if(path && path.length == 1) {\n              if(value.path.length == 1) {\n                value.extraCss = 'active';\n              }\n            }\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\n              if(value.path != 'builds' || path == '/builds') {\n                value.extraCss = 'active';\n              }\n            }\n          });\n          \n          return menu;\n        }\n        catch(ex) {\n          $scope.simError = ex.message;\n          console.error(ex);\n        }\n      };\n    }\n    catch(ex) {\n      $scope.simError = ex.message;\n      console.error(ex);\n    }\n  }\n])\n.directive('dngearsimNav', function() {\n  return {\n    templateUrl: 'ui/nav/nav.html'\n  };\n});","angular.module('dnsim').controller('SetupCtrl', \n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | SETUP';\n  \n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n  \n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if(sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n  \n  $scope.location = sessionLocation;\n  if($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  }\n  else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n  \n  $scope.setLocation = function(url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  $scope.resetSessionData = function() {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function() {   \n      location.hash = '';\n      location.reload(true);\n    });\n  }\n  \n  $scope.loadUiString = function() {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.region = region.tlocation.region;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n  \n  function progress(msg) {\n    $timeout(\n      function() {\n        if($scope.testResults != null) {\n          $scope.testResults.push(msg);\n        }\n      });\n  }\n  \n  function progressTranslations(msg) {\n    $timeout(\n      function() {\n        if($scope.translationResults != null) {\n          $scope.translationResults.push(msg);\n        }\n      });\n  }\n  \n  $scope.saveLocation = function() {\n    dntReset();\n    if($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n      \n      region.init();\n      if(region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = [\n        'Location saved',\n        'Using location ' + $scope.location];\n    }\n  }\n  \n  $scope.testLocation = function() {\n    if($scope.location != noLocation) {\n      $scope.testResults = [\n        'Using location ' + $scope.location,\n        'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  }\n}]);\n","(function () {\n'use strict';\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\n\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.maxDisplay = 15;\n  vm.totalNumResults = 0;\n  \n  jobs.init(null, function() {\n    if($routeParams.jobId) {\n      vm.job = jobs.getById($routeParams.jobId);\n      getClassBuilds();\n    } \n  })\n  \n  this.setJob = function() {\n    $timeout(function() {\n      $location.search('jobId', vm.job.id);\n    });\n  }\n  \n  this.showMoreResults = function(extra) {\n    vm.maxDisplay = vm.totalNumResults + extra;\n    vm.totalNumResults = 0;\n  }\n  \n  vm.allResults = null;\n  vm.getFilteredBuilds = function() {\n    \n    // init\n    if(vm.allResults == null) {\n      vm.allResults = [];\n      for(var uid in vm.jobBuilds) {\n        for(var buildName in vm.jobBuilds[uid]) {\n          vm.allResults.push({\n            uid: uid,\n            name: buildName,\n            data: vm.jobBuilds[uid][buildName]\n          });\n        }\n      }\n    }\n    \n    var results = [];\n    for(var i=0;i<vm.allResults.length;++i) {\n      \n      var result = vm.allResults[i];\n      if(vm.filter && vm.filter.length > 0) {\n        var f = vm.filter.toUpperCase();\n        if(result.name.toUpperCase().indexOf(f) == -1) {\n          if(!result.data.guild ||\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\n\n            continue;\n          }\n        }\n      }\n      \n      results.push(result);\n\n      if(results.length >= vm.maxDisplay) {\n        break;\n      }\n    }\n    \n    vm.totalNumResults = results.length;\n    return results;\n  }\n  \n  function getClassBuilds() {\n    if(vm.job) {\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\n        if(builds) {\n          // console.log('got builds', builds);\n          vm.jobBuilds = builds;\n        }\n        else {\n          // console.log('no builds');\n          vm.jobBuilds = {};\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\n\nfunction profile($location, $routeParams, onlineService, saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  \n  getSavedBuilds();\n  getProfile();\n  \n  function getSavedBuilds() {\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\n      if(builds) {\n        vm.storedBuilds = builds;\n      }\n      else {\n        vm.storedBuilds = {};\n      }\n    });\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      build);\n      \n    vm.builds = saveHelper.getSavedItems();\n    \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\n\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.show = $routeParams.show;\n  \n  onlineService.login().then(function(user) {\n    getSavedBuilds();\n    getProfile();\n  \n    vm.builds = saveHelper.getSavedItems();\n  });\n  \n  function getSavedBuilds() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\n        if(builds) {\n          vm.storedBuilds = builds;\n        }\n        else {\n          vm.storedBuilds = {};\n        }\n      });\n    }\n  }\n  \n  function getProfile() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getProfile(user.uid).then(function(profile) {\n        if(profile) {\n          vm.profile = profile;\n        }\n        else {\n          vm.profile = {};\n        }\n      });\n    }\n  }\n  \n  this.saveProfile = function() {\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\n  }\n  \n  this.getUser = function() {\n    return onlineService.getUser();\n  }\n  \n  this.save = function(buildName, build) {\n    build.lastUpdate = (new Date()).getTime();\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\n    vm.publishBuild = null;\n  }\n  \n  this.startPublish = function(buildName) {\n    if(buildName in vm.storedBuilds) {\n      if(!vm.builds[buildName].region) {\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\n      }\n      \n      if(!vm.builds[buildName].about) {\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\n      }\n      \n      if(!vm.builds[buildName].guild) {\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\n      }\n    }\n    \n    if(!vm.builds[buildName].region) {\n      vm.builds[buildName].region = region.dntLocation.region;\n    }\n    \n    vm.publishBuild = buildName;\n  }\n  \n  function handleError(err) {\n    console.log(err);\n  }\n  \n  this.deleteAccount = function() {\n    onlineService.deleteAccount(vm.storedBuilds);\n  }\n  \n  this.getBuildLimit = function() {\n    if(vm.profile && vm.profile.maxBuilds) {\n      return vm.profile.maxBuilds;\n    }\n    else {\n      return 15;\n    }\n  }\n  \n  this.getNumStoredBuilds = function() {\n    return _.size(vm.storedBuilds);\n  }\n  \n  this.getNumBuilds = function() {\n    return _.size(vm.builds);\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      build);\n      \n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  this.signOut = function() {\n    onlineService.signOut();\n  }\n  \n  vm.deleteLocal = function(buildName) {\n    vm.localToDelete = buildName;\n  }\n  \n  vm.getAllBuildNames = function() {\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\n    return _.uniq(allKeys.sort(), true);\n  }\n  \n  vm.reallyDeleteLocal = function(buildName) {\n    saveHelper.updatedSavedItems(buildName, []);\n    vm.localToDelete = null;\n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  vm.deleteServer = function(buildName) {\n    vm.serverToDelete = buildName;\n  }\n  \n  vm.reallyDeleteServer = function(buildName) {\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\n    vm.serverToDelete = null;\n  }\n  \n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\n\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  vm.buildName = $routeParams.buildName;\n  \n  getBuild();\n  getProfile();\n  \n  vm.copyLocally = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n      \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  function getBuild() {\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\n      if(build) {\n        vm.build = build;\n        vm.stats = statHelper.getBuildStats(build);\n      }\n      else {\n        vm.build = {};\n      }\n    });\n  }\n}\n\n})();","angular.module('dnsim').controller('RegionCtrl', \n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\n    'use strict';\n    \n    var vm = this;\n\n    vm.override = region.getOverride();\n    region.init();\n    translations.init(\n      function(msg) { \n        // console.log(msg);\n      }, \n      function() {\n        $timeout();\n      });\n      \n    vm.region = region;\n    vm.tHoverLocation = region.tlocation;\n    vm.hoverLocation = region.dntLocation;\n    vm.edit = (region.dntLocation == null);\n    vm.dntVersion = '';\n    setDntVersion();\n    \n    function setDntVersion() {\n      // console.log('setting version for ', vm.region.dntLocation);\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\n          if(res && res.data) {\n            var newLineDetails = res.data.split('\\r\\n');\n            if(newLineDetails.length) {\n              var spaceDetails = newLineDetails[0].split(' ');\n              if(spaceDetails.length > 1) {\n                vm.dntVersion = 'v' + spaceDetails[1];\n              }\n            }\n          }\n        });\n      }\n    }\n    \n    vm.getDntLocation = function() {\n      return region.dntLocation;\n    };\n    vm.getTlocation = function() {\n      return region.tlocation;\n    };\n     \n    vm.getHostedFiles = function() {\n      // console.log('getting hosted files');\n      return region.hostedFiles;\n    };\n    \n    vm.getWorldName = function() {\n      if(translations.isLoaded()) {\n        return translations.translate(10169);\n      }\n      else {\n        return '';\n      }\n    };\n    \n    vm.setTLocation = function(location) {\n      region.setTLocation(location);\n      vm.edit = false;\n    };\n    \n    vm.setLocation = function(location) {\n      if(!vm.override) {\n        vm.setTLocation(null);\n      }\n      \n      if($routeParams.region) {\n        $routeParams.region = location.region;\n        $route.updateParams($routeParams);\n        $route.reload();\n      }\n      else {\n        region.setLocation(location);\n      }\n      vm.edit = false;\n      setDntVersion();\n    };\n    \n    vm.setOverride = function(value) {\n      region.setOverride(value);\n      vm.override = value;\n      vm.edit = value;\n    };\n  }\n])\n.directive('dngearsimRegion', function() {\n  return {\n    templateUrl: 'ui/region/region.html',\n    controllerAs: 'ctrl',\n  };\n});","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\n  return {\n    scope: {},\n    bindToController: {\n    },\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\n    controllerAs: 'customItems',\n    templateUrl: 'ui/search/custom-items.html'\n  };\n});\n\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\n  'use strict';\n\n  var vm = this;\n  \n  this.customItems = hCodeValues.customItems;\n  \n  this.maxDisplay = 10;\n  this.currentResults = 0;\n  \n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n  \n  this.getResults = function() {\n    return this.customItems;\n  }\n  \n  this.getNewStatName = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      return 'unnamed custom item';\n    }\n    else {\n      return this.nameSearch;\n    }\n  }\n  \n  this.createCustomItem = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      this.nameSearch = this.getNewStatName();\n    }\n    $location.path('/item/_custom:.' + this.nameSearch);\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\n  return {\n    scope: {},\n    bindToController: {\n      nameSearch: '=nameSearch'\n    },\n    controller: everythingSearchCtrl,\n    controllerAs: 'items',\n    templateUrl: 'ui/search/everything-search.html'\n  };\n});\n\n\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\n    \n  var vm = this;\n  \n  vm.everything = null;\n  vm.maxDisplay = 32;\n  vm.currentResults = 0;\n  vm.results = null;\n  vm.minLevel = 1;\n  vm.maxLevel = 99;\n  vm.version = 'all';\n  vm.versions = [vm.version];\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if($routeParams.minLevel) {\n    minLevel = Number($routeParams.minLevel);\n  }\n  if(minLevel > 0 && minLevel < 100) {\n    vm.minLevel = minLevel;\n  }\n  vm.origMinLevel = minLevel;\n  \n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if($routeParams.maxLevel) {\n    maxLevel = Number($routeParams.maxLevel);\n  }\n  if(maxLevel > 0 && maxLevel < 100) {\n    vm.maxLevel = maxLevel;\n  }\n  vm.origMaxLevel = maxLevel;\n\n  if(!vm.nameSearch) {\n    vm.nameSearch = localStorage.getItem('nameSearch');\n    if($routeParams.name) {\n      vm.nameSearch = $routeParams.name;\n    }\n    if(vm.nameSearch == null) {\n      vm.nameSearch = '';\n    }\n  }\n  \n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\n  \n  vm.initeverything = function() {\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\n      vm.everything = [];\n      \n      var versionMap = {};\n      var datas = dntData.getData(fileName);\n      // console.log(datas.length + ' everything');\n      for(var i=0;i<datas.length;++i) {\n        var data = datas[i];\n        if(data.NameID > 0) {\n          var item = {\n            id: data.id,\n            name: translations.translate(data.NameID, data.NameIDParam),\n            rank: hCodeValues.rankNames[data.Rank],\n            icon: data.IconImageIndex,\n            levelLimit: data.LevelLimit,\n            fileName: data.fileName,\n            version: data.version\n          }\n          vm.everything.push(item);\n\n          if(data.version) {\n            versionMap[data.version] = true;\n          }\n        }\n      }\n\n      for(var version in versionMap) {\n        vm.versions.push(version);\n      }\n      \n      vm.everything = _.sortBy(vm.everything, 'name');\n      \n      $timeout(function() {\n        vm.showMoreResults();\n      });\n    }\n  }\n  \n  vm.getResults = function() {\n    if(vm.everything == null) {\n      vm.initeverything();\n    }\n    \n    if(vm.everything == null) {\n      return [];\n    }\n\n    var newResults = [];\n    var numeverything = vm.everything.length;\n    var curDisplay = 0;\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\n      var e = vm.everything[i];\n\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\n        continue;\n      }\n\n      if(vm.version != 'all' && vm.version != e.version) {\n        continue;\n      }\n\n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(nameSearches.length == 0) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      newResults.push(e);\n      curDisplay++;\n    }\n    \n    vm.totalNumResults = newResults.length;\n    return newResults;\n  }\n  \n  vm.changeSearch = function() {\n    if(vm.minLevel != vm.origMinLevel) {\n      localStorage.setItem('minLevel', vm.minLevel);\n      $location.search('minLevel', vm.minLevel);\n      vm.origMinLevel = vm.minLevel;\n    }\n    \n    if(vm.maxLevel != vm.origMaxLevel) {\n      localStorage.setItem('maxLevel', vm.maxLevel);\n      $location.search('maxLevel', vm.maxLevel);\n      vm.origMaxLevel = vm.maxLevel;\n    }\n\n    localStorage.setItem('nameSearch', vm.nameSearch);\n    $location.search('name', vm.nameSearch);\n    \n    vm.maxDisplay = 64;\n    vm.results = vm.getResults();\n  }\n\n  vm.showMoreResults = function() {\n    $timeout(function() {\n      // console.log('show more', vm.maxDisplay);\n      vm.maxDisplay += 18;\n      vm.results = vm.getResults();\n    });\n  }\n\n  var fileName = 'all-items.lzjson';  \n  dntData.init(fileName, null, function() {}, function() {\n    vm.initeverything();\n  }, false);\n\n  translations.init(null, vm.initeverything);\n}\n\n})();\n","(function () {\n'use strict';\n\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\n'translations',\n'itemCategory',\n'jobs',\n'hCodeValues',\n'itemFactory',\n'region',\n'saveHelper', itemSearchCtrl];\n\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\n\nfunction itemSearchCtrl(\n  $scope,$window,$routeParams,$timeout,$location,$route,\n  translations,\n  itemCategory,\n  jobs,\n  hCodeValues,\n  itemFactory,\n  region,\n  saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\n  if(!vm.itemCategory) {\n     var catName = localStorage.getItem('selectedItemCategory');\n     if(!catName) {\n       catName = 'titles';\n     }\n     \n     vm.itemCategory = itemCategory.byName(catName);\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\n       catName = 'titles';\n       vm.itemCategory = itemCategory.byName('titles');\n     }\n     if(vm.itemCategory) {\n       // console.log('moving');\n       $location.search('cat', vm.itemCategory.path);\n       $route.reload();\n     }\n     return;\n  }\n  \n  \n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\n  \n  vm.job = {id: -1, name: ''};\n  vm.jobs = [vm.job];\n  vm.allJobs = [];\n  vm.minLevel = 1;\n  vm.maxLevel = 99;\n  vm.maxDisplay = 10;\n  vm.totalNumResults = 0;\n  vm.grades = hCodeValues.rankNames;\n  vm.stat = {id:-1, name:''};\n  vm.stats = [vm.stat];\n  vm.results = null;\n  \n  angular.forEach(hCodeValues.stats, function(stat, statId) {\n    if(stat.searchable) {\n      vm.stats.push(stat);\n    }\n  });\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if($routeParams.minLevel) {\n    minLevel = Number($routeParams.minLevel);\n  }\n  if(minLevel > 0 && minLevel < 100) {\n    vm.minLevel = minLevel;\n  }\n  vm.origMinLevel = minLevel;\n  \n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if($routeParams.maxLevel) {\n    maxLevel = Number($routeParams.maxLevel);\n  }\n  if(maxLevel > 0 && maxLevel < 100) {\n    vm.maxLevel = maxLevel;\n  }\n  vm.origMaxLevel = maxLevel;\n  \n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if($routeParams.name) {\n    vm.nameSearch = $routeParams.name;\n  }\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\n  if($routeParams.stat) {\n    vm.origSavedSearchStatId = $routeParams.stat;\n  }\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\n  }\n\n  vm.navigate = function() {\n    var catName = localStorage.getItem('selectedItemCategory');\n    if(catName) {\n      vm.itemCategory = itemCategory.byName(catName);\n      if(vm.itemCategory) {\n        // console.log('navigating to ', vm.itemCategory.path);\n        $location.search('cat', vm.itemCategory.path);\n        vm.save();\n        $route.reload();\n      }\n    }\n  }\n\n  vm.save = function() {\n    if(!vm.itemCategory.hideLevel) {\n      if(vm.minLevel != vm.origMinLevel) {\n        localStorage.setItem('minLevel', vm.minLevel);\n        $location.search('minLevel', vm.minLevel);\n        vm.origMinLevel = vm.minLevel;\n      }\n      \n      if(vm.maxLevel != vm.origMaxLevel) {\n        localStorage.setItem('maxLevel', vm.maxLevel);\n        $location.search('maxLevel', vm.maxLevel);\n        vm.origMaxLevel = vm.maxLevel;\n      }\n    }\n    else {\n      $location.search('minLevel', null);\n      $location.search('maxLevel', null);\n    }\n    \n    if(!vm.itemCategory.hideJob) {\n      if(vm.job != null) {\n        if(vm.origJobNumber != vm.job.id) {\n          localStorage.setItem('jobNumber', vm.job.id);\n          if(vm.job.id > -1) {\n            $location.search('job', vm.job.id);\n          }\n          else {\n            $location.search('job', null);\n          }\n          vm.origJobNumber = vm.job.id;\n        }\n      }\n    }\n    else {\n      $location.search('job', null);\n    }\n  \n    if(vm.stat) {\n      if(vm.origSavedSearchStatId != vm.stat.id) {\n        localStorage.setItem('searchStat', vm.stat.id);\n        if(vm.stat.id > -1) {\n          $location.search('stat', vm.stat.id);\n        }\n        else {\n          $location.search('stat', null);\n        }\n        \n        vm.origSavedSearchStatId = vm.stat.id;\n      }\n    }\n\n    localStorage.setItem('nameSearch', vm.nameSearch);\n    $location.search('name', vm.nameSearch);\n  };\n  \n  function init() {\n    jobs.init(reportProgress, jobInit);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    // console.log('called the job init func');\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      // console.log('trying to init jobs');\n      // console.log('job dropdown should be set');\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, vm.jobs[0]);\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if($routeParams.job && $routeParams.job) {\n        lastJobNumber = Number($routeParams.job);\n      }\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            return;\n          }\n        });\n      }\n\n      itemCategory.init(vm.itemCategory.name, loadResults);\n    }\n  }\n  \n  vm.rankChecked = hCodeValues.checkedRank;\n    \n  vm.changeSearch = function() {\n    vm.save();\n    loadResults();\n  }\n  \n  function loadResults() {\n    vm.maxDisplay = 24;\n    vm.results = getResults();\n  }\n  \n  function getResults() {\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\n    if(allItems == null) {\n      return null;\n    }\n    \n    allItems = allItems.sort(function(item1, item2) {\n        return (item2.levelLimit - item1.levelLimit);\n      });\n          \n    var pcStatId = -1;\n    if('pc' in vm.stat) {\n      pcStatId = vm.stat.pc;\n    }\n          \n    var altStatId = -1;\n    if('altStat' in vm.stat) {\n      altStatId = vm.stat.altStat;\n    }\n  \n    var statVals = [];\n    var newResults = [];\n    var numEquip = allItems.length;\n    var curDisplay = 0;\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\n      var e = allItems[i];\n      if(e) {\n        \n        if(!vm.itemCategory.hideLevel) {\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideRank) {\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideJob) {\n          if(vm.job && vm.job.id > -1) {\n            if(!vm.job.isClassJob(e.needJobClass)) {\n              continue;\n            }\n          }\n        }\n        \n        itemFactory.initItem(e);\n        if(e.typeName != vm.itemCategory.name) {\n          continue;\n        }\n        // console.log('name filter', vm.nameSearch); \n        \n        if(vm.nameSearch != '') {\n          // console.log('filtering on name');\n          var nameSearches = vm.nameSearch.split(' ');\n          if(!nameSearches.length) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        if(vm.stat.id >= 0) {\n          var statFound = false;\n          \n          var statVal = {};\n          for(var s=0;s<e.stats.length;++s) {\n            var stat = e.stats[s];\n            if(stat.id == vm.stat.id) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n              break;\n            }\n            else if(stat.id == pcStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n            else if(stat.id == altStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n          }\n          \n          if(!statFound) {\n            continue;\n          }\n          else {\n            statVals.push(statVal);\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n    }\n    \n    if(vm.stat.id >= 0) {\n      \n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\n      \n      statVals = statVals.sort(function(value1, value2) {\n        return value2.s - value1.s;\n      });\n      \n      var statResults = [];\n      for(var i=0;i<currentResults;++i) {\n        statResults.push(newResults[statVals[i].i]);\n      }\n      newResults = statResults;\n    }\n    \n    vm.totalNumResults = newResults.length;\n    \n    return newResults;\n  }\n\n  vm.showMoreResults = function() {\n    $timeout(function() {\n      vm.maxDisplay += 18;\n      vm.results = getResults();\n    });\n  }\n  \n  region.init();\n  translations.init(reportProgress, init);\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\n  return {\n    scope: {},\n    bindToController: {\n      job: '=job',\n      jobs: '=jobs',\n    },\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\n    controllerAs: 'skillSearch',\n    templateUrl: 'ui/search/skill-search.html'\n  };\n});\n\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\n\n  var vm = this;\n  \n  vm.allJobs = [];\n  vm.dntName = '';\n  vm.skills = [];\n  vm.loadedJobId = -1;\n\n  vm.itemCategory = itemCategory.byName('skills');\n\n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n\n  vm.navigate = function() {\n    $timeout(function() {\n      if(vm.itemCategory) {\n        $location.path(vm.itemCategory.path);\n      }\n    });\n  }\n  \n  vm.isLoading = function() {\n    \n    if(!translations.isLoaded()) {\n      // console.log('transations not loaded');\n      if(!translations.startedLoading) {\n        translations.init(reportProgress, function() { } );\n      }\n\n      return true;\n    }\n    \n    var baseName = jobs.getBaseJobName(vm.job);\n    var dntName = getDntName(baseName);\n    if(dntName) {\n      if(!dntData.isLoaded(dntName)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  \n  function getDntName(baseClassName) {\n    // console.log('got base class :' + baseClassName);\n    if(baseClassName != null) {\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n    }\n    else {\n      return null;\n    }\n  }\n\n  function getSkills() {\n    // console.log('getting skills for ' + vm.job.name);\n    if(vm.loadedJobId == vm.job.id) {\n      return vm.skills;\n    }\n    else {\n      \n      var baseJobNames = [];\n      if(vm.job.id >= 0) {\n        var baseName = jobs.getBaseJobName(vm.job);\n        baseJobNames.push(baseName);\n      }\n\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n        if(dntName) {\n          if(!dntData.isLoaded(dntName)) {\n            // console.log('loading skills for ' + baseName);\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\n          }\n          else {\n            setupSkills(baseJobNames, vm.job);\n          }\n        }\n      });\n    }\n  }\n  \n  function setupSkills(baseJobNames, job) {\n    \n    vm.skills = [];\n    var allReady = true;\n    angular.forEach(baseJobNames, function(baseName, index) {\n      var dntName = getDntName(baseName);\n      if(!dntData.isLoaded(dntName)) {\n        allReady = false;\n      }\n    });\n    \n    if(allReady) {\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n      \n        var skills = dntData.getData(dntName);\n        var numSkills = skills.length;\n        for(var s=0;s<numSkills;++s) {\n          if(skills[s].NameID == 0) {\n            continue;\n          }\n          \n          if(skills[s].EffectClass1 > 0 || \n             skills[s].EffectClass2 > 0 || \n             skills[s].EffectClass3 > 0 || \n             skills[s].EffectClass4 > 0 ||\n             skills[s].EffectClass5 > 0 ||  \n             skills[s].EffectClass6 > 0) {\n               \n            var newItem = {d: skills[s]};\n            \n            newItem.id = skills[s].id;\n            newItem.typeName = 'skills';\n            newItem.itemSource = 'skills';\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n            newItem.needJobClass = skills[s].NeedJob;\n            newItem.rank = hCodeValues.rankNames[0];\n            newItem.baseJobName = baseName.toLowerCase();\n            newItem.icon = skills[s].IconImageIndex;\n            \n            vm.skills.push(newItem);\n          }\n        }\n      });\n  \n      vm.loadedJobId = job.id;\n    }\n  }\n  \n  vm.getResults = function() {\n    \n    var skills = getSkills();\n    if(skills == null) {\n      return [];\n    }\n    \n    if(vm.job && vm.job.id >= 0) {\n      localStorage.setItem('jobNumber', vm.job.id);\n    }\n    localStorage.setItem('nameSearch', vm.nameSearch);\n\n    var newResults = [];\n    var numSkills = skills.length;\n    var curDisplay = 0;\n    for(var i=0;i<numSkills;++i) {\n      var e = skills[i];\n      \n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(!nameSearches.length) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n        continue;\n      }\n      \n      newResults.push(e);\n    }\n    return newResults;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      var newJobs = jobs.getFinalJobs();\n\n      if(vm.jobs && vm.jobs.length) {\n        newJobs.splice(0, 0, vm.jobs[0]);\n      }\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      // console.log('using job', lastJobNumber);\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            // console.log('using job', value);\n            return;\n          }\n        });\n      }\n      \n      vm.getResults();\n    }\n  }\n  \n  function init() {\n    // console.log('skill init');\n    if(jobs.isLoaded()) {\n      $timeout(jobInit);\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\n\nfunction chooseClass() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      job: '=job',\n      onSetJob: '&onSetJob'\n    },\n    templateUrl: 'ui/widgets/choose-class.html',\n    controllerAs: 'ctrl',\n    controller: [\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \n      chooseClassController],\n  };\n}\n\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  this.getFinalJobs = function() {\n    var allJobs = jobs.getFinalJobs();\n    var finalJobs = [];\n    for(var j=0;j<allJobs.length;++j) {\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n        finalJobs.push(allJobs[j]);\n      }\n    }\n    return finalJobs;\n  }\n  \n  this.getBaseJobs = function() {\n    return jobs.getBaseJobs();\n  }\n  \n  this.getJobName = function(englishName) {\n    var allJobs = jobs.getAllJobs();\n    for(var j=0;j<allJobs.length;++j) {\n      if(allJobs[j].d.EnglishName == englishName) {\n        return allJobs[j].name;\n      }\n    }\n  }\n  \n  this.setJob = function(job) {\n    this.job = job;\n    if(job) {\n      this.onSetJob();\n    }\n  }\n  \n  \n  jobs.init(reportProgress, $timeout);\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\n\nfunction dnsimCategoryLinks() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      collapse: '=collapse',\n      cat: '=cat',\n      buildScreen: '=buildScreen',\n      onChange: '&onChange'\n    },\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\n    controller: dnsimCategoryLinksController,\n    controllerAs: 'ctrl',\n  };\n};\n\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\n\n  var vm = this;\n\n  vm.categories = itemCategory.categories;\n  vm.collapsed = true;\n\n  vm.shouldShow = function(action) {\n    if(vm.buildScreen) {\n      return !action.hideInBuild;\n    }\n    else {\n      return !action.hideInSearch;\n    }\n  }\n\n  vm.isLoading = function() {\n    return !translations.loaded;\n  }\n\n  vm.setCategory = function(action) {\n    \n    if(vm.collapse) {\n      // console.log('collapsing cat', action);\n      vm.collapsed = !vm.collapsed;\n      $window.scrollTo(0, 0);\n    }\n    \n    // console.log('setting cat', action);\n    if(vm.cat != action) {\n      vm.cat = action;\n      localStorage.setItem('selectedItemCategory', action.name);\n\n      if(vm.onChange) {\n        vm.onChange();\n      }\n    }\n  }\n\n  vm.getName = function(action) {\n    if(action.tId) {\n      return translations.translate(action.tId).toLowerCase();\n    }\n    else {\n      return $translate.instant(action.name);\n    }\n  }\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\n\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.iconImage = $scope.getIcon();\n        }\n      });\n      \n      $scope.getIcon = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\n          \n          var prefix;\n          if($scope.item.typeName == 'skills') {\n            prefix = 'skillicon';\n          }\n          else {\n            prefix = 'itemicon';\n          }\n          \n          if(fileIndex > 9) {\n            return prefix + fileIndex + '.png';\n          }\n          else {\n            return prefix + '0' + fileIndex + '.png';\n          }\n        }\n        return null;\n      }\n      \n      $scope.iconImage = $scope.getIcon();\n      \n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (($scope.item.icon % 10) * 40) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\n\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n      noClick: '=noClick',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\n    link: function($scope, element, attrs) {\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n        }\n      });\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\n\nfunction dnsimJobIcon() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      item: '=item',\n      small: '=small'\n    },\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\n    controller: dnsimJobIconController,\n    controllerAs: 'ctrl'\n  }\n}\n\nfunction dnsimJobIconController() {\n  \n  if(this.small) {\n    this.sizeValue = '205px 205px';\n    this.iconSize = 22;\n    this.iconOffset = 0;\n  }\n  else {\n    this.sizeValue = '410px 410px';\n    this.iconSize = 44;\n    this.iconOffset = 5;\n  }\n\n  this.getIconXPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\n    }\n    return 0;\n  }\n  \n  this.getIconYPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\n    }\n    return 0;\n  }\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\n\nfunction dnsimLoading(dntData, translations, $timeout, region) {\n  'use strict';\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n      alsoShowFor: '=alsoShowFor',\n    },\n    templateUrl: 'ui/widgets/dnsim-loading.html',\n    link: function($scope, element, attrs) {\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n      \n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n\n      $scope.numLoading = 0;\n      $scope.setLoadCount = function() {\n        $scope.noRegion = !region.dntLocation;\n        \n        var n = dntData.anyLoading();\n        if(!translations.isLoaded())\n        {\n          n++;\n        }\n        \n        // $timeout(function() {\n          if($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n        // });\n        $timeout();\n      };\n      \n      $scope.loadError = false;\n      $scope.setLoadCount();\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\nfunction dnsimSelectAllOnClick() {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var hasSelectedAll = false;\n      element.on('click', function($event) {\n        if (!hasSelectedAll) {\n          try {\n            //IOs, Safari, thows exception on Chrome etc\n            this.selectionStart = 0;\n            this.selectionEnd = this.value.length + 1;\n            hasSelectedAll = true;\n          } catch (err) {\n            //Non IOs option if not supported, e.g. Chrome\n            this.select();\n            hasSelectedAll = true;\n          }\n        }\n      });\n      //On blur reset hasSelectedAll to allow full select\n      element.on('blur', function($event) {\n        hasSelectedAll = false;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\n\nfunction dnsimStats(hCodeValues, $translate) {\n  return {\n    restrict: 'A',\n    scope: {\n      stats: '=stats',\n      build: '=build',\n      altStats: '=altStats',\n      separator: '=separator',\n      filter: '=filter',\n      numInSet: '=numInSet'\n    },\n    link: function($scope, element, attrs) {\n      \n      var sep;\n      if(!$scope.separator) {\n        sep = '';\n      }\n      else {\n        sep = '&nbsp;' + $scope.separator + ' ';\n      }\n      \n      var addedElements = [];\n      var originalDisplay = element.css('display');\n      \n      function showStats() {\n        element.css('display', 'none' );\n        var stats = $scope.stats;\n        if(!stats) {\n          stats = $scope.altStats;\n        }\n        \n        angular.forEach(addedElements, function(value, key) {\n          value.remove();\n        });\n        \n        var first = true;\n        var lastElement = element;\n        \n        function append(text) {\n          var newElement = element.clone();\n          newElement.css('display', originalDisplay);\n          newElement.html(text);\n          \n          lastElement.after(newElement);\n          lastElement = newElement;\n          addedElements.push(newElement);\n        }\n\n        // get stats that are used to summarise\n        var summaryForStats = {};\n        angular.forEach(stats, function(stat, key) {\n          var def = hCodeValues.stats[stat.id];\n          if(def && def.summaryFor) {\n            summaryForStats[def.summaryFor] = stat;\n          }\n        });\n        \n        angular.forEach(stats, function(stat, key) {\n          var output = '';\n\n          // console.log('processing stat', stat);\n          \n          if(stat.id in hCodeValues.stats) {\n            \n            var def = hCodeValues.stats[stat.id];\n            if(!$scope.filter && 'hide' in def && def.hide) {\n              return;\n            }\n            \n            if($scope.filter && !def[$scope.filter]) {\n              return;\n            }\n\n            if(def.summaryFor) {\n              return;\n            }\n            // console.log('no summaryFor');\n            \n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              if(stat.needSetNum <= $scope.numInSet) {\n                output += '*';\n              }\n              output += stat.needSetNum + '&nbsp;';\n            }\n\n            output += '<strong>';\n            \n            if($scope.build) {\n              if(def.element == 'primary') {\n                var eleId = 0;\n                if($scope.build.element) {\n                  eleId = $scope.build.element.id;\n                }\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n              }\n              else if(def.element == 'secondary') {\n                var eleId = 0;\n                if($scope.build.secondaryElement) {\n                  eleId = $scope.build.secondaryElement.id;\n                }\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n              }\n            }\n            \n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\n            if(def.combineWith > 0) {\n              angular.forEach(stats, function(stat2, key2) {\n                if(stat2.id == def.combineWith) {\n                  if(stat2.max != stat.max) {\n                    output += '-' + def.display(stat2);\n                  }\n                }\n              });\n            }\n\n            if(stat.id in summaryForStats) {\n              var sStat = summaryForStats[stat.id];\n              var sDef = hCodeValues.stats[sStat.id];\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\n              output += '</em>';\n            }\n\n          }\n          else {\n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '-Increases&nbsp;';\n            }\n            \n            output += stat.id+':&nbsp;'+stat.max;\n          }\n          \n          append(output);\n        });\n      }\n        \n      $scope.$watch('stats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('altStats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('numInSet', function(newValue, oldValue) {\n        if (newValue >= 0) {\n          showStats();\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + value;\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10);\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + (value/100.0);\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10)*100;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\n\nfunction fileChangeFunction($parse) {\n\n    return {\n      restrict: 'A',\n      link: function ($scope, element, attrs) {\n\n        // Get the function provided in the file-change attribute.\n        // Note the attribute has become an angular expression,\n        // which is what we are parsing. The provided handler is \n        // wrapped up in an outer function (attrHandler) - we'll \n        // call the provided event handler inside the handler()\n        // function below.\n        var attrHandler = $parse(attrs['fileChange']);\n\n        // This is a wrapper handler which will be attached to the\n        // HTML change event.\n        var handler = function (e) {\n\n          $scope.$apply(function () {\n\n            // Execute the provided handler in the directive's scope.\n            // The files variable will be available for consumption\n            // by the event handler.\n            attrHandler($scope, { $event: e, files: e.target.files });\n          });\n        };\n\n        // Attach the handler to the HTML change event \n        element[0].addEventListener('change', handler, false);\n      }\n    };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('character', character);\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\n\n  var jobConversions = 'rebootplayerweighttable.lzjson';\n  var statCaps = 'playercommonleveltable.lzjson';\n  var jobBaseStats = 'playerleveltable.optimised.json';\n\n  var heroLevels = 'heroleveltable.lzjson';\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  return {\n    init: function(complete) {\n      jobs.init(reportProgress, complete);\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\n      dntData.init(heroLevels, null, reportProgress, complete, false);\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\n    },\n    \n    getHeroStats: function(heroLevel) {\n      var heroStats = [];\n      if(heroLevel > 0) {\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\n        if(index.length == 1) {\n          var h = dntData.getRow(heroLevels, index[0]);\n          if(h) {\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n            if(pIndex.length == 1) {\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n              if(p) {\n                heroStats = hCodeValues.getStats(p);\n              }\n            }\n          }\n        }\n      }\n      return heroStats;\n    },\n    \n    getStatCaps: function(level) {\n      if(level > 0) {\n        var index = dntData.findFast(statCaps, 'id', level);\n        if(index.length == 1) {\n          return dntData.getRow(statCaps, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getConversions: function(jobId) {\n      if(jobId > 0) {\n        var index = dntData.findFast(jobConversions, 'id', jobId);\n        if(index.length == 1) {\n          return dntData.getRow(jobConversions, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getBaseStats: function(level, jobId) {\n      if(level > 0 && jobId > 0) {\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\n        if(index.length == 1) {\n          return dntData.getRow(jobBaseStats, index[0]);\n        }\n      }\n      \n      return {};\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\nfunction itemColumnsToLoad() {\n  return {\n    mainDnt: {\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n      State1: true, StateValue1: true, State1_Max: true,\n      State2: true, StateValue2: true, State2_Max: true,\n      State3: true, StateValue3: true, State3_Max: true,\n      State4: true, StateValue4: true, State4_Max: true,\n      State5: true, StateValue5: true, State5_Max: true,\n      State6: true, StateValue6: true, State6_Max: true,\n      State7: true, StateValue7: true, State7_Max: true,\n      State8: true, StateValue8: true, State8_Max: true,\n      State9: true, StateValue9: true, State9_Max: true,\n      State10: true,StateValue10: true,State10_Max: true,\n      EnchantID: true,\n      SkillID: true,\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\n      TierName: true\n    },\n    partsDnt: {\n      SetItemID: true\n    },\n    enchantDnt: {\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\n      DisjointDrop: true,\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\n    },\n    potentialDnt : {\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\n      State1: true,State1Value: true,\n      State2: true,State2Value: true,\n      State3: true,State3Value: true,\n      State4: true,State4Value: true,\n      State5: true,State5Value: true,\n      State6: true,State6Value: true,\n      State7: true,State7Value: true,\n      State8: true,State8Value: true,\n      State9: true,State9Value: true,\n      State10: true,State10Value: true,\n      State11: true,State11Value: true,\n      State12: true,State12Value: true,\n      State13: true,State13Value: true,\n      State14: true,State14Value: true,\n      State15: true,State15Value: true,\n      State16: true,State16Value: true\n    },\n    gemDnt: {\n      Type: true\n    },\n    setDnt : null,\n    sparkDnt: null,\n    jobsDnt: {\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\n    },\n    jobBaseStatColsToLoad: {\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\n    },\n    statCapColsToLoad: {\n      Cbase: true,\n      Cdefense: true,\n      Ccritical: true,\n      Cfinaldamage: true,\n      CcriticalDamage: true,\n    },\n    jobConversionColsToLoad: {\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\n\nfunction dntData($rootScope,$timeout) {\n  \n  function createLoader(dntLocation, file, colsToLoad) {\n\n    var loader = {\n      reader: new DntReader(),\n      \n      loaded: false,\n      startedLoading: false,\n      \n      file: file,\n      \n      dntLocation: dntLocation,\n      // progressCallback: null,\n      completeCallbacks : [],\n      \n      init: function(progress, complete, ignoreErrors) {\n        \n        if(this.loaded) {\n          if(complete) {\n            complete();\n          }\n        }\n        else {\n          // this.progressCallback = progress;\n          if(complete) {\n            this.completeCallbacks.push(complete);\n          }\n          \n          if(!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n            \n            this.reader.colsToLoad = colsToLoad;\n            \n            if(this.dntLocation && \n              this.dntLocation.url &&\n              this.dntLocation.url.length) {\n\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n              $timeout(function() {\n                t.reader.loadDntFromServerFile(\n                  t.dntLocation.url + '/' + file,\n                  function(msg) {\n                    // if(t.progressCallback) {\n                      // t.progressCallback(msg);\n                    // }\n                  }, \n                  function(result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n                    \n                    angular.forEach(t.completeCallbacks, function(value, key) {\n                      if(value) {\n                        value();\n                      }\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  },\n                  function(msg) {\n                    t.failed = true;\n                    if(ignoreErrors) {\n                      t.loaded = true;\n                      console.log('ignoring the error - this file may not exist yet for the region');\n                      angular.forEach(t.completeCallbacks, function(value, key) {\n                        if(value) {\n                          value();\n                        }\n                      });\n                      t.completeCallbacks = [];\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                    }\n                    else {\n                      t.startedLoading = false;\n                      t.loaded = false;\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    }\n                  }  );\n              });\n            }\n            else {\n              // console.log(\"dnt location not set!\");\n            }\n          }\n        }\n      },\n      \n      reset: function() {\n        this.reader = new DntReader();\n        this.loaded = false;\n        this.startedLoading = false;\n      }\n    }\n  \n    return loader;\n  };\n  \n  return {\n    loaders : {},\n    findIndexes : {},\n    dntLocation : null,\n    \n    setLocation: function(location) {\n      this.dntLocation = location;\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        if(value.dntLocation != location) {\n          value.dntLocation = location;\n          t.reset(key);\n        }\n      });\n    },\n    \n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\n      if(ignoreErrors !== false) {\n        ignoreErrors = true;\n      }\n\n      if(!progress) {\n        progress = function() {};\n      }\n      if(!(fileName in this.loaders)) {\n        if(fileName.length > 0) {\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n        }\n      }\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\n    },\n    getData : function (fileName) {\n      if(this.isLoaded(fileName)) {\n        var reader = this.loaders[fileName].reader;\n        var retVal = new Array(reader.numRows);\n        for(var i=0;i<reader.numRows;++i) {\n          retVal[i] = reader.getRow(i);\n        }\n        \n        return retVal;\n      }\n      else {\n        return [];\n      }\n    },\n    find : function(fileName, column, value) {\n      var results = this.findFast(fileName, column, value);\n      var retVal = [];\n      var numResults = results.length;\n      for(var i=0;i<numResults;++i) {\n        retVal.push(this.getRow(fileName, results[i]));\n      }\n      \n      return retVal;\n    },\n    findFast : function(fileName, column, value) {\n      \n      if(this.isLoaded(fileName)) {\n        if(!(fileName in this.findIndexes)) {\n          this.findIndexes[fileName] = {};\n        }\n        \n        var reader = this.loaders[fileName].reader;\n        var colIndex = reader.columnIndexes[column];\n        \n        var findIndex = this.findIndexes[fileName];\n        \n        if(!(column in findIndex)) {\n          var index = {}\n          findIndex[column] = index;\n          \n          var data = reader.data;\n          var len = data.length;\n          for(var r=0;r<len;++r) {\n            var val = data[r][colIndex];\n\n            if(!(val in index)) {\n              index[val] = [r];\n            }\n            else {\n              index[val].push(r);\n            }\n          }\n        }\n        \n        if(value in findIndex[column]) {\n          if(Array.isArray(findIndex[column][value])) {\n            return findIndex[column][value];\n          }\n          else {\n            return [findIndex[column][value]];\n          }\n        }\n        else {\n          return [];\n        }\n      }\n      \n      return [];\n    },\n    isLoaded : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].loaded;\n    },\n    hasFailed : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].failed;\n    },\n    hasStartedLoading : function(fileName) {\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\n    },\n    reset : function(fileName) {\n      if(fileName in this.loaders) {\n        this.loaders[fileName].reset();\n        delete this.loaders[fileName];\n        delete this.findIndexes[fileName];\n      }\n    },\n    resetAll : function() {\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        t.reset(key);\n      });\n    },\n    anyLoading : function() {\n      var found = 0;\n      angular.forEach(this.loaders, function(value, key) {\n        if(!value.loaded && value.startedLoading) {\n          found++;\n        }\n      });\n      \n      return found;\n    },\n    getNumRows : function(fileName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.numRows;\n      }\n      else {\n        return 0;\n      }\n    },\n    getRow : function(fileName, index) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getRow(index);\n      }\n      else {\n        return {};\n      }\n    },\n    lookupValue: function(fileName, data, columnName) {\n      if(this.isLoaded(fileName)) {\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\n      }\n      else {\n        return null;\n      }\n    },\n    convertData: function(fileName, data) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.convertData(data);\n      }\n      else {\n        return null;\n      }\n    },\n    getValue : function(fileName, index, columnName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getValue(index, columnName);\n      }\n      else {\n        return null;\n      }\n    },\n    saveMemory: function() {\n      for(var fileName in this.loaders) {\n        this.loaders[fileName].saveReaderMemory();\n      }\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\nfunction dntInit(items,jobs,dntData,itemFactory) {\n  return function(progress) {\n    \n    progress('starting init');\n    \n    var allFactories = [jobs];\n    \n    var dntFiles = {};\n    angular.forEach(items, function(item, key) {\n      if(key != 'all') {\n        angular.forEach(item, function(value, prop) {\n          if(prop.indexOf('Dnt') == prop.length-3) {\n            var newFactory = { \n              init: function(progress, complete) {\n                dntData.init(value, null, progress, complete);\n              },\n              isLoaded: function() {\n                return dntData.isLoaded(value);\n              },\n              fileName: value,\n            };\n            \n            allFactories.push(newFactory);\n          }\n        });\n      }\n    });\n    \n    function initFactory(index) {\n    \n      if(index < allFactories.length) {\n        allFactories[index].init(progress, function() { \n          if(allFactories[index].isLoaded()) {\n            if('fileName' in allFactories[index]) {\n              progress('dnt loaded: ' + allFactories[index].fileName);\n            }\n            initFactory(index+1);\n          }\n        });\n      }\n      else {\n        progress('Full initialise complete');\n      }\n    }\n    \n    initFactory(0);\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\nfunction dntReset(items, jobs, dntData) {\n  return function() {\n    \n    angular.forEach(items, function(source, name) {\n      source.reset();\n    });\n    \n    jobs.reset();\n    dntData.resetAll();\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\nfunction dvStatcardHelper() {\n  'use strict';\n\n  // Conversions between dngs stat IDs and dvstatcard keys\n  var statMap = {\n      0: 'statStr',\n      1: 'statAgi',\n      2: 'statInt',\n      3: 'statVit',\n      4: 'statPDmgMin',\n      5: 'statPDmgMax',\n      6: 'statMDmgMin',\n      7: 'statMDmgMax',\n      8: 'statPDef',\n      9: 'statMDef',\n      12: 'statCrit',\n      16: 'statFire',\n      17: 'statIce',\n      18: 'statLight',\n      19: 'statDark',\n      25: 'statHp',\n      26: 'statMana',\n      29: 'statFD',\n      103: 'statCritDmg',\n  };\n\n  //    Converts dngs stat IDs to dvstatcard stat keys\n  function convertStat(stat) {\n    var ret = statMap[stat.id];\n    return ret || 'unknown';\n  };\n\n  function convertPercentToNum(val) {\n      return val * 100;\n  };\n\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\n  var adjustments = {\n      16: convertPercentToNum,\n      17: convertPercentToNum,\n      18: convertPercentToNum,\n      19: convertPercentToNum,\n  }\n\n  //    Convert between numerical standards between dngs and dvstatcard\n  function adjustStat(stat) {\n      var func = adjustments[stat.id];\n      if (func) {\n          return func(stat.max);\n      }\n      return stat.max;\n  };\n\n  return {\n      convertStats: function(build, buildName, calcStats) {\n        var ret = {\n            characterName: buildName,\n            remark: 'Imported from DNGearsim',\n            classId: build.job.id,\n            statHeroLevel: build.heroLevel,\n        }\n        for (var k in calcStats) {\n            var v = calcStats[k];\n            ret[convertStat(v)] = adjustStat(v);\n        }\n        return ret;\n      },\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\n\n  return {\n    \n    encodeItem: function(item, small) {\n      if(item) {\n        var itemString;\n\n        if(item.typeName == 'custom')  {\n          itemString = '_custom';\n          angular.forEach(item.stats, function(stat, index) {\n            if(index > 0) {\n              itemString += '|';\n            }\n            else {\n              itemString += ':C';\n            }\n            itemString += stat.id.toString(36) + '=' + stat.max;\n          });\n        }\n        else if(item.id) {\n          itemString = 'I' + item.id.toString(36) + ':_';\n          if('itemSource' in item) {\n            itemString += item.itemSource;\n          }\n          else if('itemTypeName' in item) {\n            // this is to support groups saved with the old property name\n            itemString += item.itemTypeName;\n          }\n          else if(item.fileName) {\n            itemString += ':F' + item.fileName;\n          }\n        \n          if(item.enchantmentNum || item.enchantmentNum == 0) {\n            itemString += ':E' + item.enchantmentNum.toString(36);\n          }\n          if(item.pid > 0) {\n            itemString += ':P' + item.pid.toString(36);\n          }\n          // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n          // }\n          if(item.sparkId > 0) {\n            itemString += ':H' + item.sparkId.toString(36);\n          }\n          if(item.typeName == 'skills') {\n            itemString += ':J' + item.baseJobName;\n          }\n          if(item.pve) {\n            itemString += ':V' + item.pve;\n          }\n        }\n        \n        if(item.name && !small) {\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n        }\n\n        return itemString;\n      }\n      \n      return '';\n    },\n    \n    decodeItem: function(itemStr) {\n      var item = {};\n      \n      if(itemStr) {\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\n          if(itemBit.charAt(0) == 'I') {\n            item.id = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'E') {\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'P') {\n            item.pid = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'S') {\n            item.setId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'H') {\n            item.sparkId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'J') {\n            item.baseJobName = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == 'V') {\n            item.pve = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '_') {\n            item.itemSource = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '.') {\n            item.name = itemBit.substr(1).replace('-', ' ');\n          }\n          else if(itemBit.charAt(0) == 'C') {\n            item.stats = [];\n            var statString = itemBit.substr(1);\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\n              var splitStat = statBit.split('=');\n              item.stats.push({\n                id: parseInt(splitStat[0], 36),\n                max: Number(splitStat[1])\n              });\n            });\n          }\n          else if(itemBit.charAt(0) == 'F') {\n            \n            item.fileName = itemBit.substr(1);\n            angular.forEach(items, function(itemSource, key) {\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                item.itemSource = key;\n              }\n            });\n          }\n        });\n      }\n      \n      return item;\n    },\n    \n    createGroupLink: function(groupName, group) {\n      var itemStrings = [];\n      var self = this;\n      \n      if(group == null) {\n        return '';\n      }\n      \n      angular.forEach(group.items, function(item, key) {\n        var itemString = self.encodeItem(item, true);  \n        if(itemString && itemString.length) {\n          itemStrings.push(itemString);\n        }\n      });\n  \n      var retVal = 'view-group?region=';\n      if(region.dntLocation && region.dntLocation.region) {\n        retVal += region.dntLocation.region;\n      }\n      \n      if(group.enemyLevel) {\n        retVal += '&e=' + group.enemyLevel;\n      }\n      if(group.playerLevel) {\n        retVal += '&p=' + group.playerLevel;\n      }\n      if(group.heroLevel) {\n        retVal += '&h=' + group.heroLevel;\n      }\n      if(group.job && group.job.id) {\n        retVal += '&j=' + group.job.id;\n      }\n      if(group.damageType && group.damageType.id) {\n        retVal += '&d=' + group.damageType.id;\n      }\n      if(group.element && group.element.id) {\n        retVal += '&t=' + group.element.id;\n      }\n      if(group.secondaryElement && group.secondaryElement.id) {\n        retVal += '&s=' + group.secondaryElement.id;\n      }\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n      return retVal;\n    },\n\n    reloadSkill: function(item) {\n\n        if(!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n        \n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if(item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n        \n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        if(!skillData) {\n          console.log('cannot get skill data from ', skillDnt);\n        }\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n          }\n        });\n        \n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve\n        };\n        \n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n    },\n\n    reloadSourceItem: function(item) {\n      var itemType = items[item.itemSource];\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n      if(!ds.length) {\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n        return;\n      }\n\n      var rowNum = ds[0];\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\n    \n      var p = null;\n      \n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n      if(!ps.length) {\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\n      }\n      \n      if(!ps.length) {\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n        if(!ps.length) {\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\n        }\n      }\n      \n      if(ps.length > 0) {\n        p = ps[0];\n        \n        if(p.PotentialID != typeParam1) {\n          // this happened one time\n          // not sure how but it corrupted the stats\n          p = null;\n          console.log('bad potential');\n        }\n      }\n      \n      var newItem = itemFactory.createItem(itemType, rowNum, p);\n      itemFactory.initItem(newItem);\n      itemCategory.setItemCategory(newItem);\n      newItem.gemSlot = item.gemSlot;\n\n      var usePartDnt = null;\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\n        usePartDnt = 'partsDnt';\n      }\n      else {\n        usePartDnt = 'weaponDnt';\n      }\n\n      if(usePartDnt) {\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n          newItem.setStats = [];\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n          if(parts.length > 0) {\n            newItem.setId = parts[0].SetItemID;\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n            if(sets.length > 0) {\n              newItem.setStats = hCodeValues.getStats(sets[0]);\n            }\n          }\n        }\n      }\n\n      newItem.fullStats = newItem.stats;\n      if(item.enchantmentNum >= 0) {\n        newItem.enchantmentNum = item.enchantmentNum;\n        \n        if(newItem.typeName == 'skills') {\n          // would this even happen?\n        }\n        else if(newItem.typeName == 'talisman') {\n          var extraStats = [];\n          angular.forEach(newItem.stats, function(stat, index) {\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\n          });\n          \n          newItem.enchantmentStats = extraStats;\n        }\n        else if(itemType.enchantDnt) {\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n          if(!enchantments.length && itemType.enchantDnt2) {\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\n          }\n\n          angular.forEach(enchantments, function(enchantment, index) {\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n            }\n          });\n        }\n        else if(itemType.petLevelDnt) {\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\n          angular.forEach(petLevels, function(enchantment, index) {\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n            }\n          });\n        }\n      }\n\n      if(newItem.enchantmentStats) {\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n      }\n      \n      if(item.sparkId > 0) {\n        newItem.sparkId = item.sparkId;\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n        if(sparks.length > 0) {\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n        }\n      }\n      else if(newItem.dragonjeweltype) {\n        newItem.offensiveGemSlots = 0;\n        newItem.increasingGemSlots = 0;\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\n        if(itemData && itemData.length > 0) {\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n          \n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n        }\n      }\n      \n      return newItem;\n    },\n    \n    reloadItem: function(item) {\n\n      if(item == null) {\n        // console.log('cannot reload null item');\n        return;\n      }\n      \n      // support for old property name\n      if('itemTypeName' in item && !item.itemSource) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      // console.log('checking ' + item.itemSource)\n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n        // console.log('changed to ' + item.itemSource)\n      }\n      \n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\n        item.typeName = 'custom';\n        return item;\n      }\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n        return this.reloadSkill(item);\n      }\n      else if(item.itemSource in items) {\n        var itemType = items[item.itemSource];\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n        if(ds.length) {\n          return this.reloadSourceItem(item);\n        }\n      }\n      \n      if(item.fileName) {\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\n        if(datas.length > 0) {\n          var row = datas[0];\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\n          var newItem = itemFactory.createBasicItem(d);\n          newItem.row = row;\n          newItem.needJobClass = d.NeedJobClass;\n          newItem.exchangeType = d.ExchangeType;\n          newItem.fileName = item.fileName;\n          newItem.gemSlot = item.gemSlot;\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\n          itemFactory.initItem(newItem);\n          return newItem;\n        }\n        else {\n          return {name: 'unknown item'};\n        }\n      }\n      else {\n        return {name: 'unknown item source: ' + item.itemSource};\n      }\n    },\n    \n    getDntFiles: function(item) {\n      if(item == null) {\n        return {};\n      }\n\n      var dntFiles = {};\n      if(!item.itemSource && item.itemTypeName in items) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n      }\n      \n      if(item.itemSource in items) {\n        var itemType = items[item.itemSource];\n        \n        dntFiles['exchange.lzjson'] = null;\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n        \n        for(var fileType in itemType) {\n          if(fileType.indexOf('Dnt') > 0) {\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\n            }\n          }\n        }\n      }\n      \n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n          dntFiles[skillDnt] = null;\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n      }\n      \n      if(item.fileName) {\n        dntFiles[item.fileName + '.lzjson'] = null;\n      }\n    \n      return dntFiles;\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\nfunction groupHelper(exportLinkHelper) {\n  'use strict';\n  \n  return {\n    reloadGroup: function(groupName, group) {\n      var newItems = [];\n      angular.forEach(group.items, function(item, key) {\n        var newItem = exportLinkHelper.reloadItem(item);\n        if(newItem) {\n          newItems.push(newItem);\n        }\n      });\n      \n      return newItems;\n    },\n    \n    getDntFiles: function(group) {\n\n      var allDntFiles = {};\n      angular.forEach(group.items, function(item, key1) {\n        \n        var dntFiles = exportLinkHelper.getDntFiles(item);\n\n        angular.forEach(dntFiles, function(value, key) {\n          allDntFiles[key] = value;\n        });\n      });\n      \n      return allDntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemCategory',\n['itemFactory','items','dntData',itemCategory]);\nfunction itemCategory(itemFactory,items,dntData) {\n\n  return {\n    categories: [\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1},\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2},\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\n      {path: 'skills', name:'skills', searchType: 'skills'},\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\n      ],\n      \n    byName: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.name == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n      \n    byPath: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.path == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n    \n    getItems: function(name) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var retVal = [];\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType && retVal) {\n            if(!source.items && !source.loading) {\n              itemFactory.loadItems(source);\n            }\n            \n            if(source.items) {\n              retVal = retVal.concat(source.items);\n            }\n            else {\n              retVal = null; // if any are null just return null\n            }\n          }\n        });\n        \n        var catItems = [];\n        if(retVal) {\n          var vm = this;\n          angular.forEach(retVal, function(item, index) {\n            if(item.typeName == name) {\n              catItems.push(item);\n            }\n            else if(vm.isItemForCat(cat, item, item.data)) {\n              item.typeName = name;\n              catItems.push(item);\n            }\n          });\n        }\n        \n        return catItems;\n      }\n      else {\n        return null;\n      }\n    },\n    \n    isItemForCat: function(cat, item) {\n\n      if(!(item.itemSource in items)) {\n        return false;\n      }\n      \n      if(items[item.itemSource].type != cat.sourceType) {\n        return false;\n      }\n      \n      if(item.itemType == cat.name) {\n        return true;\n      }\n      \n      var anyMatch;\n      if(cat.limitExchange) {\n        anyMatch = false;\n        for(var i=0;i<cat.limitExchange.length;++i) {\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\n            anyMatch = true;\n          }\n        }\n\n        if(!anyMatch) {\n          return false;\n        }\n      }\n\n      if(cat.limitRank) {\n        anyMatch = false;\n        for(var i=0;i<cat.limitRank.length;++i) {\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\n            anyMatch = true;\n          }\n        }\n\n        if(!anyMatch) {\n          return false;\n        }\n      }\n\n      if(cat.limitGemType) {\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n        if(gemTypes.length > 0) {\n          \n          if(gemTypes[0].Type != cat.limitGemType) {\n            return false;\n          }\n        }\n      }\n      \n      return true;\n    },\n    \n    init: function(name, complete) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var sources = _.filter(items, function(source) {\n          return (source.type == cat.sourceType);\n        });\n\n        var numComplete = 0;\n        _.each(sources, function(source) {\n          source.init(function() {}, function() {\n              numComplete++;\n              if(numComplete == sources.length) {\n                complete();\n              }\n          });\n        });\n      }\n    },\n    \n    setItemCategory: function (item, rawData) {\n      var vm = this;\n      \n      angular.forEach(this.categories, function(cat, index) {\n        if(vm.isItemForCat(cat, item, rawData)) {\n          item.typeName = cat.name;\n        }\n      });\n    },\n    \n    getItemsByCategory: function(items) {\n      var itemMap = {};\n      if(items) {\n        var types = {};\n        angular.forEach(items, function(item, index) {\n          if(item) {\n            if(!(item.typeName in types)) {\n              types[item.typeName] = [];\n            }\n            types[item.typeName].push(item);\n          }\n        });\n        \n        angular.forEach(this.categories, function(category, index) {\n\n          if(category.name in types) {\n            \n            var sorted = types[category.name].sort(function(item1, item2) {\n              if(category.name == 'talisman') {\n                \n                var enh1 = item1.enchantmentNum;\n                if(!enh1) enh1 = 0;\n                var enh2 = item2.enchantmentNum;\n                if(!enh2) enh2 = 0;\n                \n                if(enh1 != enh2) {\n                  return enh2 - enh1;\n                }\n              }\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                if(item1.gemSlot || item2.gemSlot) {\n                  if(!item1.gemSlot) {\n                    return 1;\n                  }\n                  else if(!item2.gemSlot) {\n                    return -1;\n                  }\n                  return item1.gemSlot - item2.gemSlot;\n                }\n                else if(item2.levelLimit != item1.levelLimit) {\n                  return item2.levelLimit - item1.levelLimit;\n                }\n              }\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\n                return item1.exchangeType - item2.exchangeType;\n              }\n              \n              return item1.name.localeCompare(item2.name);\n            });\n            itemMap[category.name] = sorted;\n          }\n          else {\n            itemMap[category.name] = [];\n          }\n        });\n        \n        /*\n        angular.forEach(items, function(item, index) {\n          if(item && !(item.typeName in itemMap)) {\n            // console.log('we dont know ' + item.typeName + ' anymore')\n            itemMap.typeError = true;\n          }\n        });\n        */\n      }\n      return itemMap;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('excludeService', excludeService);\n\nfunction excludeService() {\n return {\n     ids: [{\n            name: 'unbound plates',\n            min: 0,\n            max: 0\n        }\n     ],\n };\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemFactory',itemFactory);\n\nfunction itemFactory(translations,dntData,hCodeValues,items) {\n  \n  return {\n    loadItems: loadItems,\n    initItem: initItem,\n    createItem: createItem,\n    getItemData: getItemData,\n    createBasicItem: createBasicItem,\n  };\n  \n  function createItem(itemType, row, p) {\n    \n    // data and potential are used to initialise name and stats\n    // this is only done when needed\n    // they are then removed from the object\n    return {\n      row: row,\n      potential : p,\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\n      itemSource : itemType.name,\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\n      pid: null,\n      name : null,\n      stats : null,\n      potentialRatio : null,\n      typeName : null,\n      sparkId: null,\n    };\n  }\n\n  function isDataLoaded(itemType) {\n    \n    if(!dntData.isLoaded(itemType.mainDnt)) {\n      return false;\n    }\n    \n    if(!translations.isLoaded()) {\n      return false;\n    }\n    \n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n      return false;\n    }\n    \n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n      return false;\n    }\n\n    return true;\n\n  }\n  \n  function loadItems(itemType) {\n\n    if(!isDataLoaded(itemType)) {\n      return null;\n    }\n    \n    var start = new Date().getTime();\n    \n    itemType.items = [];\n    var numRows = dntData.getNumRows(itemType.mainDnt);\n    for(var r=0;r<numRows;++r) {\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n        \n      // skip items with no data\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \n        var potentials = [];\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n          \n          if(!potentials.length && 'potentialDntEx' in itemType) {\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n          }\n        }\n        \n        var numPotentials = potentials.length;\n        if(!numPotentials) {\n          potentials = [null];\n          numPotentials = 1;\n        }\n\n        for(var p=0;p<numPotentials;++p) {\n          var found = false;          \n          if(!found) {\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\n          }\n        }\n      }\n    }\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\n  }\n  \n  function initItem(item) {\n    \n    if(item.row >= 0) {\n      var d;\n      if(item.itemSource && item.itemSource in items) {\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\n      }\n      else if(item.fileName) {\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\n      }\n      delete item.row;\n\n      var p = item.potential;\n  \n      if(item.name == null) {\n        item.name = translations.translate(d.NameID, d.NameIDParam);\n        if(d.TierName) {\n          item.name += ' (' + translations.translate(d.TierName) + ')';\n        }\n      }\n      \n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\n        item.sparkTypeId = d.TypeParam2;\n      }\n      \n      if(item.stats == null) {\n        var stats = hCodeValues.getStats(d);\n        if(p) {\n          var potentialStats = hCodeValues.getStats(p);\n          stats = hCodeValues.mergeStats(stats, potentialStats);\n        }\n        \n        item.stats = stats;\n      }\n      \n      if(d.SkillID && !item.skillId) {\n        item.skillId = d.SkillID;\n      }\n      \n      if(item.iconIndex == null) {\n        item.icon = d.IconImageIndex;\n        if(!item.icon && item.itemSource == 'title') {\n          item.icon = 12417;\n        }\n      }\n      \n      if(d.dragonjeweltype >= 0) {\n        item.dragonjeweltype = d.dragonjeweltype;\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      else if(d.Type == 35) {\n        item.itemSource = 'xtras';\n        var itemType = items[item.itemSource];\n        if(itemType) {\n          // item.fileName = itemType.mainDnt;\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\n          if(petData && petData.length) {\n            item.enchantmentId = petData[0].PetLevelTypeID;\n          }\n        }\n      }\n      \n      if(p) {\n        item.pid = p.id;\n      }\n      \n      delete item.potential;\n    }\n  }\n  \n  function getItemData(item) {\n    var itemType = items[item.itemSource];\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\n      var result = getItemDataFromFile(itemType.mainDnt, item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    return [];\n  }\n  \n  function getItemDataFromFile(fileName, item) {\n    if(fileName) {\n      var itemData = dntData.find(fileName, 'id', item.id);\n      if(itemData && itemData.length > 0) {\n        return itemData[0];\n      }\n    }\n    \n    return null;\n  }\n  \n  function createBasicItem(d) {\n    if(!d) {\n      return [];\n    }\n    return {\n      id: d.id,\n      name: translations.translate(d.NameID, d.NameIDParam),\n      rank: hCodeValues.rankNames[d.Rank],\n      icon: d.IconImageIndex,\n      levelLimit : d.LevelLimit,\n      fileName: d.fileName,\n      typeId: d.Type\n    };\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('items',\n['translations','dntData','itemColumnsToLoad',items]);\nfunction items(translations,dntData,itemColumnsToLoad) {\n  \n  var itemSources = {\n    \n      title : {\n        mainDnt: 'appellationtable.optimised.json', \n        type: 'titles', \n        minLevel: 0, \n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n      \n      tech: { \n        mainDnt: 'itemtable_skilllevelup.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'techs', \n        minLevel: 60,\n        minRank: 0},\n      \n      tman: { \n        mainDnt: 'itemtable_talisman.optimised.json', \n        type: 'talisman', \n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\n        minLevel: 24,\n        minRank: 0 },\n      \n      gem: { \n        mainDnt: 'itemtable_dragonjewel.optimised.json', \n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \n        gemDnt: 'dragonjeweltable.optimised.json',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3},\n      \n      plate: { \n        mainDnt : 'itemtable_glyph.optimised.json', \n        potentialDnt: 'potentialtable_glyph.optimised.json',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n      plate95: { \n        mainDnt : 'itemtable_glyph95.lzjson', \n        potentialDnt: 'potentialtable_glyph95.lzjson',\n        type: 'plates',\n        minLevel: 1,\n        minRank: 1,\n        ignoreErrors: true },\n\n      items: {\n        mainDnt: 'itemtable.optimised.json', \n        partsDnt: 'partstable.optimised.json', \n        weaponDnt: 'weapontable.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.json', \n        partsDnt: 'partstable_equipment.optimised.json', \n        weaponDnt: 'weapontable_equipment.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 21,\n        minRank: 3 },\n      rbeq: { \n        mainDnt: 'itemtable_reboot.optimised.json', \n        partsDnt: 'partstable_reboot.optimised.json', \n        weaponDnt: 'weapontable_reboot.optimised.json', \n        enchantDnt: 'enchanttable_reboot.optimised.json',\n        enchantDnt2: 'enchanttable_95.lzjson',\n        potentialDnt: 'potentialtable_reboot.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: { \n        mainDnt: 'itemtable_pvp.optimised.json',\n        partsDnt: 'partstable_pvp.optimised.json', \n        weaponDnt: 'weapontable_pvp.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        setDnt: 'setitemtable.optimised.json',\n        type: 'equipment',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        minLevel: 24,\n        minRank: 3 },\n\n      cCommon: {\n        mainDnt: 'itemtable_commoncash.lzjson', \n        partsDnt: 'partstable_commoncash.lzjson', \n        weaponDnt: 'weapontable_commoncash.lzjson', \n        setDnt: 'setitemtable_cash.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      cClone: {\n        mainDnt: 'itemtable_cashclone.optimised.json',\n        partsDnt: 'partstable_cashclone.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      c2016: { \n        mainDnt: 'itemtable_common2016.optimised.json', \n        partsDnt: 'partstable_common2016.optimised.json', \n        weaponDnt: 'weapontable_common2016.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2017: { \n        mainDnt: 'itemtable_common2017.optimised.json', \n        partsDnt: 'partstable_common2017.optimised.json', \n        weaponDnt: 'weapontable_common2017.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 0 },\n      c2015: { \n        mainDnt: 'itemtable_common2015.optimised.json', \n        partsDnt: 'partstable_common2015.optimised.json', \n        weaponDnt: 'weapontable_common2015.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: { \n        mainDnt: 'itemtable_common2014.optimised.json', \n        partsDnt: 'partstable_common2014.optimised.json', \n        weaponDnt: 'weapontable_common2014.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: { \n        mainDnt: 'itemtable_cash.optimised.json', \n        partsDnt: 'partstable_cash.optimised.json', \n        weaponDnt: 'weapontable_cash.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.json',\n        partsDnt: 'partstable_event.optimised.json',\n        weaponDnt: 'weapontable_event.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.json',\n        partsDnt: 'vehiclepartstable.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        petDnt: 'vehicletable.lzjson',\n        petLevelDnt: 'petleveltable.lzjson', \n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n      imprint: {\n        mainDnt: 'itemtable_imprinting.optimised.json',\n        type: 'imprint',\n        minLevel: 0,\n        minRank: 0 },\n    };\n    \n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function(itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function() {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n  \n  \n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n  \n      if(itemSource.items) {\n        complete();\n      }\n      else {\n        \n        translations.init(progress, function() {\n          doComplete(itemSource, complete)\n        });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\n          doComplete(itemSource, complete)\n        }, itemSource.ignoreErrors);\n        if('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n        if('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n        if('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n  \n        doComplete(itemSource, complete);\n      }\n    }\n    \n    function doComplete(itemSource, complete) {\n      if(translations.isLoaded() && \n      dntData.isLoaded(itemSource.mainDnt) && \n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\n      ) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\nfunction jobs(dntData, translations, itemColumnsToLoad) {\n  \n  var fileName ='jobtable.lzjson';\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\n  \n  return {\n    fileName : fileName,\n    allJobs : null,\n    \n    isLoaded : function() {\n      return dntData.isLoaded(fileName);\n    },\n    \n    hasStartedLoading: function() {\n      return dntData.hasStartedLoading(fileName);\n    },\n    \n    init : function(progress, complete) {\n      dntData.init(fileName, colsToLoad, progress, function() {\n        complete();\n        }, false);\n    },\n\n    reset : function() {\n      this.allJobs = null;\n      dntData.reset(fileName);\n    },\n    \n    getFinalJobs : function () {\n      var jobs = [];\n      var alljobs = this.getAllJobs();\n      if(alljobs) {\n        var numRows = alljobs.length;\n        for(var r=0;r<numRows;++r) {\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n            jobs.push(alljobs[r]);\n          }\n        }\n      }\n      \n      return jobs;\n    },\n    \n    getBaseJobs : function () {\n      var retVal=[];\n      var baseJobs = {};\n\n      var self = this;\n      angular.forEach(this.getFinalJobs(), function(job, key) {\n        baseJobs[self.getBaseJobName(job)] = job;\n      });\n\n      angular.forEach(baseJobs, function(job, jobName) {\n        retVal.push(jobName);\n      });\n\n      return retVal;\n    },\n    \n    getAllJobs : function () {\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n        var jobs = [];\n        var data = dntData.getData(fileName);\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          jobs[jobs.length] = this.createJob(data[r]);\n        }\n        \n        this.allJobs = jobs;\n      }\n      return this.allJobs;\n    },\n    \n    getById: function(id) {\n      var data = this.getAllJobs();\n      if(data) {\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          if(data[r].id == id) {\n            return data[r];\n          }\n        }\n      }\n    },\n    \n    createJob : function(d) {\n      var t = this;\n      return {\n          d : d,\n          id : d.id,\n          name : translations.translate(d.JobName),\n          isClassJob : function(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n    },\n    \n    isClassJob : function (d, c) {\n      if(!c) return true;\n      if(d.id == c) {\n        return true;\n      }\n      \n      var parentJob = d.ParentJob;\n      \n      if(!parentJob) return false;\n      if(parentJob == c) return true;\n\n      var parentJobData = this.getById(parentJob);\n      if(parentJobData) {\n        return this.isClassJob(parentJobData.d, c);\n      }\n      \n      return false;\n    },\n    \n    getBaseJobName : function(job) {\n      if(this.isLoaded()) {\n        var alljobs = this.getAllJobs();\n        if(alljobs) {\n          var numRows = alljobs.length;\n          for(var r=0;r<numRows;++r) {\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\n              return alljobs[r].d.EnglishName;\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\n\nfunction onlineService($window, $q, hCodeValues) {\n  // console.log('setup online service');\n  \n  var service = {\n    login: login,\n    getUser: function() {\n      return firebase.auth().currentUser;\n    },\n    signOut: signOut,\n    deleteAccount: deleteAccount,\n    \n    getUserBuilds: getUserBuilds,\n    deleteBuild: deleteBuild,\n    saveBuild: saveBuild,\n    getBuild: getBuild,\n    getClassBuilds: getClassBuilds,\n    \n    getProfile: getProfile,\n    saveProfile: saveProfile,\n    \n    stripBuildName: stripBuildName\n  };\n  \n  init();\n  \n  return service;\n  \n  function init() {\n    // console.log('init');\n    firebase.initializeApp({\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\n      authDomain: 'dngearsim.firebaseapp.com',\n      databaseURL: 'https://dngearsim.firebaseio.com',\n      storageBucket: 'dngearsim.appspot.com',\n    });\n  }\n  \n  function login() {\n    return $q(function(resolve, reject) {\n      var auth = firebase.auth();\n        \n      auth.onAuthStateChanged(function(user) {\n        if(user == null) {\n          // console.log('redirecting');\n          $window.location.href = 'login.html';\n        }\n        else {\n          // console.log('logged in');\n          resolve(user);\n        }\n      });\n    });\n  }\n  \n  function getProfile(uid) {\n    // console.log('get profile');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(storedProfile.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getBuild(uid, buildName) {\n    // console.log('get build');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(decompressBuild(storedProfile.val()));\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function saveProfile(profile) {\n    return $q(function(resolve, reject) {\n      var user = service.getUser();\n      if(user) {\n        profile = angular.copy(profile);\n        deleteNullProperties(profile, true);\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\n      }\n    });\n  }\n  \n  function getUserBuilds(uid) {\n    // console.log('get builds');\n    return $q(function(resolve, reject) {\n      // console.log('getting builds');\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\n        if(storedBuilds) {\n          var retVal = {};\n          var val = storedBuilds.val();\n          for(var buildName in val) {\n            retVal[buildName] = decompressBuild(val[buildName]);\n          }\n          resolve(retVal);\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getClassBuilds(job) {\n    // console.log('get class builds');\n    return $q(function(resolve, reject) {\n      // console.log('getting builds', job.id);\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\n        // console.log('ok');\n        if(jobBuilds) {\n          resolve(jobBuilds.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function compressBuild(build) {\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        delete item.fullStats;\n      });\n    }\n    \n    var stringifiedData = JSON.stringify(build);\n    return LZString.compressToUTF16(stringifiedData);\n  }\n  \n  function decompressBuild(compressedBuild) {\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\n    var build = JSON.parse(stringifiedData);\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        item.fullStats = item.stats;\n        \n        if(item.enchantmentStats && item.enchantmentStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\n        }\n        \n        if(item.sparkStats && item.sparkStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\n        }\n      });\n    }\n    \n    return build;\n  }\n  \n  function saveBuild(buildName, build) {\n    var user = service.getUser();\n    var actions = [];\n    if(user) {\n      build = angular.copy(build);\n      deleteNullProperties(build, true);\n      // console.log('saving', build);\n      actions.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\n      );\n      \n      if(build.job && build.job.id) {\n        // console.log('saving build');\n          \n        var data = {};\n        if(build.playerLevel) {\n          data.lev = build.playerLevel;\n        }\n        if(build.region) {\n          data.region = build.region;\n        }\n        if(build.guild) {\n          data.guild = build.guild;\n        }\n        if(build.about) {\n          data.about = build.about;\n        }\n        \n        deleteNullProperties(data, true);\n          \n        actions.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\n        );\n      }\n    }\n    return $q.all(actions);\n  }\n  \n  function deleteNullProperties(test, recurse) {\n    for (var i in test) {\n        if (test[i] === undefined) {\n            delete test[i];\n        } else if (recurse && typeof test[i] === 'object') {\n            deleteNullProperties(test[i], recurse);\n        }\n    }\n  }\n  \n  function signOut() {\n    var auth = firebase.auth();\n    return $q(function(resolve, reject) {\n      auth.signOut().then(function() {\n        resolve();\n      }, function(error) {\n        reject();\n      });\n    });\n  }\n  \n  function deleteAccount(builds) {\n    var auth = firebase.auth();\n    var user = service.getUser();\n    \n    return $q(function(resolve, reject) {\n      \n      var pList = [\n        firebase.database().ref('builds/' + user.uid).remove(),\n        firebase.database().ref('profile/' + user.uid).remove(),\n        firebase.database().ref('private/' + user.uid).remove()];\n        \n      var jobIds = [];\n      for(var buildName in builds) {\n        if(builds[buildName].job) {\n          jobIds.push(builds[buildName].job.id);\n        }\n      }\n      \n      jobIds = _.uniq(jobIds);\n      _.each(jobIds, function(id) {\n        pList.push(\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\n        )\n      });\n        \n      $q.all(pList).then(function() {\n        // console.log('deleted data');\n        user.delete().then(function() {\n          // console.log('deleted user');\n          auth.signOut().then(function() {\n            // console.log('signed out');\n            resolve();\n          }, function(error) {\n            reject();\n          });\n        });\n      });\n    });\n  }\n  \n  function deleteBuild(buildName, build) {\n    \n    var pList = [];\n    var user = service.getUser();\n    if(user) {\n      pList.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      \n      if(build.job) {\n        pList.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      }\n    }\n    \n    return $q.all(pList);\n  }\n  \n  function stripBuildName(buildName) {\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\n\n  return {\n    getItem: getItem,\n    findData: findData\n  };\n  \n  function getItem(datas) {\n    var item = null;\n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.isItemStep) {\n        item = datas[d].value;\n      }\n    }\n    \n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.alterItem) {\n        datas[d].def.alterItem(datas[d].value.id, item);\n      }\n    }\n    \n    return item;\n  }\n  \n  function findData(category, build, datas, maxItems) {\n    if(!maxItems) {\n      maxItems = 9999;\n    }\n    \n    var allItems = itemCategory.getItems(category.name);\n    var retVal = [];\n    var numItems = allItems.length;\n\n    var sortFunc = null;\n    var sortId = null;\n    \n    for(var i=0;i<numItems;++i) {\n      \n      var item = allItems[i];\n      \n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n        continue;\n      }\n      itemFactory.initItem(item);\n      \n      var addItem = true;\n      for(var d=0;d<datas.length;++d) {\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\n          if('sortFunc' in datas[d].def) {\n            sortFunc = datas[d].def.sortFunc;\n            sortId = datas[d].value.id;\n          }\n        }\n        else {\n          addItem = false;\n          break;\n        }\n      }\n      \n      if(addItem) {\n        retVal.push(item);\n      }\n      \n      if(retVal.length >= maxItems) {\n        break;\n      }\n    }\n\n    retVal = filterDuplicates(retVal);\n\n    retVal = retVal.sort(function(item1, item2) {\n      if(sortFunc) {\n        return sortFunc(sortId, item1, item2);\n      }\n      else {\n        return item1.name.localeCompare(item2.name);\n      }\n    });\n    \n    return retVal;\n  }\n\n  function filterDuplicates(items) {\n    var retVal = [];\n    for(var i=0;i<items.length;++i) {\n        var found = false;\n        for(var j=0;j<i;++j) {\n            if(areSameItem(items[i], items[j])) {\n                found = true;\n                break;\n            }\n        }\n\n        if(!found) {\n            retVal.push(items[i]);\n        }\n    }\n\n    return retVal;\n  }\n\n  function areSameItem(item1, item2) {\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\n          return false;\n      }\n\n      return _.isEqual(item1.stats, item2.stats);\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAdd', quickAdd);\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\n\n  return {\n    categorySteps: {\n      titles: ['titleStep'],\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\n      custom: ['customStep'],\n    },\n    getOptions: function(category, build, datas) {\n      var t = this;\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        var stepDef = quickAddSteps[stepName];\n        var allOptions = stepDef.getOptions(category, build, datas);\n        if(stepDef.isItemStep) {\n          return allOptions;\n        }\n        else {\n          if(stepDef.minOptions) {\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\n          }\n\n          var newOptions = _.filter(allOptions, function(option) {\n            var tempDatas = datas.concat([\n              t.createData(option, category, datas.length)\n            ]);\n\n            var items;\n            if(stepDef.minOptions) {\n              if(allOptions[0] == option) {\n                return true;\n              }\n\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\n              if(items.length > 0 && items.length < 50) {\n                return items.length < unfilteredItems.length;\n              }\n            }\n            else {\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\n            }\n            return items.length;\n          });\n\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\n            return [allOptions[0]];\n          }\n\n          return newOptions;\n        }\n      }\n      else {\n        return [];\n      }\n    },\n    hasOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        if(quickAddSteps[stepName].hasOptions) {\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\n        }\n        else {\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\n        }\n      }\n      else {\n        return false;\n      }\n    },\n    isValidStepNumber: function(category, stepNumber) {\n      return this.categorySteps[category.name].length > stepNumber;\n    },\n    createData: function(value, category, stepNumber) {\n      var stepName = this.getStepName(category, stepNumber);\n      var def = quickAddSteps[stepName];\n      \n      return {\n        step: stepName,\n        value: value,\n        def: def,\n      };\n    },\n    getItem: quickAddHelper.getItem,\n    getStepName: function(category, stepNumber) {\n      return this.categorySteps[category.name][stepNumber];\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\n\n  return {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            if(build.items) {\n              for(var i=0;i<build.items.length;++i) {\n                if(build.items[i].exchangeType == exId) {\n                  numExchange++;\n                }\n              }\n            }\n            \n            if(numExchange >= category.maxExchange) {\n              continue;\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            var exName = '';\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({id: exId, name: exName.toLowerCase()});\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(exId == 10 || exId == 25) {\n              if(numExchange >= 2) {\n                continue;\n              }\n            }\n            else {\n              if(numExchange >= 1) {\n                continue;\n              }\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n              \n              exchanges.push({id: exId, name: exName.toLowerCase()});\n            }\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      levelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 95, name: 'level 95' },\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          { id: 50, name: 'level 50' }, \n          { id: 40, name: 'level 40' }, \n          { id: 32, name: 'level 32' }, \n          { id: 24, name: 'level 24' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 999, name: 'quality high grade' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            // todo: change this to use the name id\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n              \n            if(id == 999) {\n              return index === 0;\n            }\n            else {\n              return item.rank && item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 4, name: 'unique' },\n          { id: 999, name: 'quality high grade epic' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n            if(id == 999) {\n              return item.rank && item.rank.id == 3 && index >= 0;\n            }\n            else {\n              return item.rank && item.rank.id == id && index < 0;\n            }\n          }\n          return false;\n        }\n      },\n      rankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          var values = [];\n          for(var id in hCodeValues.rankNames) {\n            values.push(hCodeValues.rankNames[id]);\n          }\n          return values;\n        },\n        matchesItem: function(id, item) {\n          return item.rank && item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 100, name: '+100% slot' },\n          { id: 75, name: '+75% slot' },\n          { id: 25, name: '+25% slot' },\n          { id: 0, name: '+0% slot' },\n          ];\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for(var i=0;i<allTitles.length;++i) {\n            switch(allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              case 230: // Miraculous\n              case 279: // Provoking\n              case 2032: // Sharing Goddess's Grief\n              case 2033: // Grief-stricken\n              case 1313: // Jakard's Demise\n              case 2188: // Teary eyed\n              // case 1280: // Dragon Tamer\n              // case 339: // Cow Wrangler\n                usefulTitles.push(allTitles[i]);\n                break;\n            }\n          }\n          \n          return usefulTitles;\n        },\n        hasOptions: function(category, build, datas) {\n          return true;\n        },\n        isItemStep: true,\n      },\n      enhanceEqStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = quickAddHelper.getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 20, name: 'enhance to +20' },\n            { id: 19, name: 'enhance to +19' },\n            { id: 18, name: 'enhance to +18' },\n            { id: 17, name: 'enhance to +17' },\n            { id: 16, name: 'enhance to +16' },\n            { id: 15, name: 'enhance to +15' },\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ];\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      enhanceGemStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = quickAddHelper.getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 15, name: 'enhance to +15' },\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ];\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true,\n        hideName: true,\n      },\n      namedItemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true,\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas, 1);\n          \n          // eventually show all the skills\n          // but for now\n          if(items.length > 0) {\n            return [{id: items[0].skillId, name: items[0].skillId}];\n          }\n          else {\n            return [];\n          }\n        },\n        matchesItem: function(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          \n          for(var i=0;i<build.items.length;++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n          \n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var numStats = {};\n          \n          for(var i=0;i<items.length;++i) {\n            var len = 0;\n            for(var j=0;j<items[i].stats.length;++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if(stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n          \n          var retVal = [];\n          for(var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val,\n            });\n          }\n          \n          retVal = retVal.sort(function(a, b) {\n              return a.id - b.id;\n            });\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          var len = 0;\n          for(var j=0;j<item.stats.length;++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if(stat && !stat.hide) {\n              len++;\n            }\n          }\n            \n          return len == id;\n        },\n        isItemStep: true,\n      },\n      highStatStep: {\n        name: 'High Stat',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n            \n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if(items.length > 1) {\n            var allStats = {};\n            \n            for(var i=0;i<items.length;++i) {\n              for(var j=0;j<items[i].stats.length;++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\n                  allStats['high ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for(var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val,\n              });\n            }\n            \n            if(retVal.length <= 2) {\n              retVal = [allItem];\n            }\n            else {\n              retVal = retVal.sort(function(a, b) {\n                  return a.id - b.id;\n                });\n            }\n          }\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          if(id == -1) {\n            return true;\n          }\n          \n          var largestVal = 0;\n          var selectedVal = 0;\n          \n          for(var j=0;j<item.stats.length;++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if(stat.quickHigh) {\n              if(val.id == id) {\n                selectedVal += val.max;\n              }\n              else if(val.max > largestVal) {\n                largestVal = val.max;\n              }\n            }\n          }\n          \n          return selectedVal > largestVal;\n        },\n        sortFunc: function(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n          \n          for(var i=0;i<item1.stats.length;++i) {\n            if(item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for(var j=0;j<item2.stats.length;++j) {\n            if(item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3,\n      },\n      hasStatStep: {\n        name: 'Has Stat',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n            \n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if(items.length > 1) {\n            var allStats = {};\n            \n            for(var i=0;i<items.length;++i) {\n              for(var j=0;j<items[i].stats.length;++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\n                  allStats['has ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for(var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val,\n              });\n            }\n            \n            if(retVal.length <= 2) {\n              retVal = [allItem];\n            }\n            else {\n              retVal = retVal.sort(function(a, b) {\n                  return a.id - b.id;\n                });\n            }\n          }\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          if(id == -1) {\n            return true;\n          }\n          \n          for(var j=0;j<item.stats.length;++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if(stat.searchable) {\n              if(val.id == id) {\n                return true;\n              }\n            }\n          }\n          \n          return false;\n        },\n        sortFunc: function(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n          \n          for(var i=0;i<item1.stats.length;++i) {\n            if(item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for(var j=0;j<item2.stats.length;++j) {\n            if(item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3,\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true,\n      },\n    }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\nfunction region(translations,dntReset,dntData,$route) {\n  \n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\n  var hostedFiles =[\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\n      {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\n    ];\n  \n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n  var dntLocation = null;\n  if(dntLocationRegion) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region == dntLocationRegion) {\n        dntLocation = hostedFile;\n      }\n    });\n  }\n\n  var lastTFile = localStorage.getItem('UIStrings_file');\n  var tlocation = null;\n  if(lastTFile) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n        tlocation = hostedFile;\n      }\n    });\n  }\n  \n  if(tlocation == null) {\n    tlocation = dntLocation;\n  }\n\n  return {\n    hostedFiles : hostedFiles,\n    alternativeFiles : alternativeFiles,\n    dntLocation : dntLocation,\n    tlocation : tlocation,\n    \n    setCustomUrl: function(url) {\n      // console.log('setting custom location');\n      this.alternativeFiles.url = url;\n\n      var newFiles = [];\n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region != alternativeFiles.region) {\n          newFiles.push(hostedFile);\n        }\n      });\n  \n      newFiles.push(alternativeFiles);\n      hostedFiles = newFiles;\n      this.hostedFiles = newFiles;\n    },\n    \n    setLocationByName: function(locationName) {\n      var newLocation = null;\n      \n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region == locationName) {\n          newLocation = hostedFile;\n        }\n      });\n        \n      this.setLocation(newLocation);\n    },\n    \n    setLocation: function(location) {\n      if(location && location != this.dntLocation) {\n        this.dntLocation = location;\n        dntReset();\n        localStorage.setItem('lastDNTRegion', location.region);\n        dntReset();\n        $route.reload();\n      }\n\n      var override = this.getOverride();\n      if(this.tlocation == null || !override) {\n        this.setTLocation(location);\n      }\n      \n      this.init();\n      \n      // $route.reload();\n    },\n    \n    setTLocation: function(location) {\n      \n      if(location != this.tlocation) {\n        \n        this.tlocation = location;\n        sessionStorage.removeItem('UIStrings');\n        localStorage.removeItem('UIStrings_file');\n        dntReset();\n        translations.reset();\n        if(location) {\n          var override = this.getOverride();\n          translations.small = !override;\n          translations.location = this.tlocation.url;\n          translations.region = this.tlocation.region;\n          translations.init(function() {}, function() {\n            $route.reload();\n          });\n        }\n      }\n    },\n    \n    getOverride: function() {\n      if(localStorage.getItem('tOverride')) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },\n    \n    setOverride: function(value) {\n      if(!value) {\n        localStorage.removeItem('tOverride');\n      }\n      else {\n        localStorage.setItem('tOverride', '1');\n      }\n      this.setTLocation(this.dntLocation);\n    },\n    \n    init: function() {\n      if(this.getOverride()) {\n        translations.small = false;\n      }\n      else {\n        this.tLocation = this.dntLocation;\n        translations.small = true;\n      }\n      \n      if(this.tlocation) {\n        translations.location = this.tlocation.url;\n        translations.region = this.tlocation.region;\n      }\n      dntData.setLocation(this.dntLocation);\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\nfunction saveHelper(itemCategory) {\n  return {\n    saveItem: function(groupName, item) {\n      var groups = this.getSavedItems();\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\n        \n        groups[groupName].items.push(item);\n        groups[groupName].lastUpdate = (new Date()).getTime();\n        this.updatedSavedItems(groupName, groups[groupName].items);\n      }\n      else {\n        this.updatedSavedItems(groupName, [item]);\n      }\n    },\n    \n    saveBuildSelection : function(buildName, builds) {\n      this.setCurrentBuild(buildName);\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\n      }\n    },\n    \n    importGroup: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      groupName = this.getUniqueGroupName(groupName, items);\n      this.updatedSavedItems(groupName, updatedItems);\n      return groupName;\n    },\n    \n    getUniqueGroupName: function(groupName, existingGroups) {\n      var groupNameIndex = 0;\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\n        var startIndex = groupName.lastIndexOf('(');\n        if(startIndex > 0) {\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\n          if(foundIndex > 0) {\n            groupNameIndex = foundIndex + 1;\n            groupName = groupName.substr(0, startIndex - 1);\n          }\n        }\n      }\n      \n      var originalName = groupName;\n      for(;;) {\n        var groupName = originalName;\n        if(groupNameIndex > 0) {\n          groupName = originalName + ' (' + groupNameIndex + ')';\n        }\n        \n        if(groupName in existingGroups) {\n          groupNameIndex++;\n        }\n        else {\n          break;\n        }\n      }\n      \n      return groupName;\n    },\n    \n    deleteBuild: function(buildName) {\n      var builds = this.getSavedItems();\n      if(buildName in builds) {\n          delete builds[buildName];\n          this.setCurrentBuild(null);\n          this.saveBuilds(builds);\n      }\n    },\n    \n    updatedSavedItems: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      if(groupName in items) {\n        items[groupName].items = updatedItems;\n        items[groupName].lastUpdate = (new Date()).getTime();\n      }\n      else {\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\n          // console.log('created group');\n      }\n      \n      this.saveBuilds(items);\n    },\n    \n    saveBuilds: function(builds) {\n      var stringifiedData = JSON.stringify(builds);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n\n    saveBuild: function(oldGroupName, newGroupName, build) {\n      this.updateBuild(\n        oldGroupName, \n        newGroupName,\n        build.enemyLevel,\n        build.playerLevel,\n        build.heroLevel,\n        build.job,\n        build.damageType,\n        build.element,\n        build.secondaryElement,\n        build.critResist,\n        build.eleResist,\n        build.enemyStatCaps, \n        build.playerStatCaps, \n        build.conversions, \n        build.baseStats, \n        build.heroStats);\n    },\n    \n    updateBuild: function(\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n        \n      var savedItems = this.getSavedItems();\n      \n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\n        // console.log('not changing name');\n        newGroupName = oldGroupName;\n      }\n      else if(oldGroupName in savedItems) {\n        var group = savedItems[oldGroupName];\n        savedItems[newGroupName] = group;\n        delete savedItems[oldGroupName];\n      }\n      \n      savedItems[newGroupName].enemyLevel = enemyLevel;\n      savedItems[newGroupName].playerLevel = playerLevel;\n      savedItems[newGroupName].heroLevel = heroLevel;\n      savedItems[newGroupName].job = job;\n      savedItems[newGroupName].damageType = damageType;\n      savedItems[newGroupName].element = element;\n      savedItems[newGroupName].secondaryElement = secondaryElement;\n      savedItems[newGroupName].critResist = critResist;\n      savedItems[newGroupName].eleResist = eleResist;\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\n      savedItems[newGroupName].conversions = conversions;\n      savedItems[newGroupName].baseStats = baseStats;\n      savedItems[newGroupName].heroStats = heroStats;\n      \n      this.saveBuilds(savedItems);\n    },\n    \n    getSavedItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    currentBuild: null,\n    getCurrentBuild: function() {\n      if(!this.currentBuild) {\n        this.currentBuild = localStorage.getItem('currentGroup');\n        if(this.currentBuild) {\n          var savedItems = this.getSavedItems();\n          if(!(this.currentBuild in savedItems)) {\n            localStorage.removeItem('currentGroup');\n            this.currentBuild = null;\n          }\n        }\n      }\n      \n      return this.currentBuild;\n    },\n    \n    setCurrentBuild: function(buildName) {\n      this.currentBuild = buildName;\n      if(!buildName) {\n        localStorage.removeItem('currentGroup', buildName);\n      }\n      else {\n        localStorage.setItem('currentGroup', buildName);\n      }\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\nfunction statHelper(hCodeValues) {\n\n  return {\n    \n    getSetStats: function(groupItems) {\n      var stats = [];\n      var sets = {};\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value !== null && value.setStats != null) {\n          if(value.setId in sets) {\n            sets[value.setId].numItems++;\n          }\n          else {\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\n          }\n        }\n      });\n      \n      angular.forEach(sets, function(value, key) {\n        angular.forEach(value.stats, function(stat, index) {\n          if(stat.needSetNum <= value.numItems) {\n            stats.push(stat);\n          }\n        });\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getNumItemsForSet: function(items, setId) {\n      var numItems = 0;\n      angular.forEach(items, function(value, key) {\n        if(value && value.setId && value.setId == setId) {\n          numItems++;\n        }\n      });\n      \n      return numItems;\n    },\n    \n    getCombinedStats: function(groupItems) {\n      var stats = [];\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value) {\n          \n          if(value.fullStats) {\n            stats = stats.concat(value.fullStats);\n          }\n          else if(value.stats) {\n            stats = stats.concat(value.stats);\n          }\n        }\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCalculatedStatsFromItems: function(group, items) {\n      var nakedStats = this.getNakedStats(group);\n      var combinedStats = this.getCombinedStats(items);\n      var setStats = this.getSetStats(items);\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\n      if(group.heroStats != null && group.heroStats.length > 0) {\n        allStats = allStats.concat(group.heroStats);\n      }\n      allStats = hCodeValues.mergeStats(allStats);\n      \n      return this.getCalculatedStats(group, allStats);\n    },\n    \n    getCalculatedStats: function(group, combinedStats) {\n      \n      var retVal = [];\n      var statLookup = {};\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\n        return [];\n      }\n      \n      angular.forEach(combinedStats, function(stat, index) {\n        statLookup[stat.id] = stat;\n      });\n      \n      function getPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.pc]) {\n          return Number(statLookup[statDef.pc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function getSkillPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.skPc]) {\n          return Number(statLookup[statDef.skPc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function applyPc(stat) {\n        stat.max = Math.floor(\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\n          );\n      }\n      \n      function dupeStat(id) {\n        var stat = statLookup[id];\n        if(stat) {\n          return {id: id, max: Number(stat.max), pc: stat.pc};\n        }\n        else {\n          return {id: id, max: 0, pc: 0};\n        }\n      }\n      \n      function addStat(stat) {\n        if(stat.max > 0) {\n          retVal.push(stat);\n        }\n      }\n\n      var critResist;\n      if(!('critResist' in group)) {\n        critResist = 0.20;\n      }\n      else {\n        critResist = group.critResist / 100.0;\n      }\n\n      var eleResist;\n      if(!('eleResist' in group)) {\n        eleResist = 0;\n      }\n      else {\n        eleResist = group.eleResist / 100.0;\n      }\n      \n      // base stats\n      var str = dupeStat(0);\n      applyPc(str);\n      addStat(str);\n      \n      var agi = dupeStat(1);\n      applyPc(agi);\n      addStat(agi);\n      \n      var int = dupeStat(2);\n      applyPc(int);\n      addStat(int);\n\n      var vit = dupeStat(3);\n      applyPc(vit);\n      addStat(vit);\n\n      // add vit to hp\n      var hp = dupeStat(25);\n      hp.max += (vit.max * Number(group.conversions.HP));\n      applyPc(hp);\n      addStat(hp);\n      \n      // defs\n      var def = dupeStat(8);\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\n      applyPc(def);\n      addStat(def);\n      \n      var defpc = dupeStat(1008);\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(defpc);\n      \n      var mdef = dupeStat(9);\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\n      applyPc(mdef);\n      addStat(mdef);\n      \n      var mdefpc = dupeStat(1009);\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(mdefpc);\n      \n      // attack power - like fd but for bufs\n      // this shows as blue damage\n      // i think there are magic and phis variants of this but doesnt matter\n      var aPwr = dupeStat(3000);\n      \n      var minPdmg = dupeStat(4);\n      var maxPdmg = dupeStat(5);\n\n      // physical damage\n      if(!group.damageType || group.damageType.id != 2) {\n        var extraPdmg = dupeStat(32);\n        var extraPdmgMod= dupeStat(101);\n        var paPwr = dupeStat(3001);\n        \n        // special stats for zeal\n        var intToPdmg = dupeStat(10164);\n        \n        minPdmg.max += extraPdmg.max;\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(minPdmg);\n  \n        maxPdmg.max += extraPdmg.max;\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(maxPdmg);\n      }\n      \n      var minMdmg = dupeStat(6);\n      var maxMdmg = dupeStat(7);\n      \n      // magic damage\n      if(!group.damageType || group.damageType.id != 1) {\n        var extraMdmg = dupeStat(33);\n        var extraMdmgMod = dupeStat(102);\n        var maPwr = dupeStat(3002);\n        \n        // special stats for zeal\n        var strToMdmg = dupeStat(10165);\n        var intToMdmg = dupeStat(10372);\n        \n        minMdmg.max += extraMdmg.max;\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\n\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\n        addStat(minMdmg);\n        \n        maxMdmg.max += extraMdmg.max;\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\n        \n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\n        addStat(maxMdmg);\n      }\n      \n      \n      // crit chance %\n      var crit = dupeStat(12);\n      crit.max += (agi.max*Number(group.conversions.Critical));\n      applyPc(crit);\n      \n      var skCrit = dupeStat(4012);\n      crit.max += skCrit.max;\n      addStat(crit);\n      var itemCrit = dupeStat(1012);\n      \n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\n      retVal.push({id: 1012, max: critChance});\n\n      // crit damage %\n      var cDmg = dupeStat(103);\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\n      applyPc(cDmg);\n      addStat(cDmg);\n\n      var itemCtriDmg = dupeStat(1103);\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\n      addStat({id: 1103, max: critDamagePc + 2});\n\n      // fd\n      var fd = dupeStat(29);\n      addStat(fd);\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n      \n      var fdPc = dupeStat(1029);\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\n      addStat(fdPc);\n      \n      // elements\n      var firePc = dupeStat(16);\n      addStat(firePc);\n      \n      var icePc = dupeStat(17);\n      addStat(icePc);\n      \n      var lightPc = dupeStat(18);\n      addStat(lightPc);\n      \n      var darkPc = dupeStat(19);\n      addStat(darkPc);\n      \n      // average damage\n      function addAvgDamageStat(id, min, max) {\n        \n        var nonEleDamage = (min+max)/2;\n        // add crit\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\n        // apply fd\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\n        \n        // apply element(s)\n        var avgDmg = nonEleDamage;\n        if(group.element && group.element.id > 0) {\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\n          if(elementStat) {\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\n          }\n        }\n        addStat({id: id, max: avgDmg});\n        var secElementId = 0;\n        var priElementId = 0;\n        if(group.element) {\n          priElementId = group.element.id;\n        }\n        else {\n          priElementId = 0;\n        }\n        if(group.secondaryElement) {\n          secElementId = group.secondaryElement.id;\n        }\n        else {\n          secElementId = 0;\n        }\n        \n        if(secElementId != priElementId) {\n          if(secElementId > 0) {\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\n            if(secondaryElementStat) {\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\n              addStat({id: id + 1000, max: secAvgDmg});\n            }\n          }\n          else {\n            addStat({id: id + 1000, max: nonEleDamage});\n          }\n        }\n      }\n      \n      // average damages\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n      }\n\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n      }\n      \n      if(!group.damageType || group.damageType.id == 3) {\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\n      }\n      \n      // Equivalent HP\n      var pdefEqHp = dupeStat(2008);\n      pdefEqHp.max = hp.max / (1-defpc.max);\n      \n      var mdefEqHp = dupeStat(2009);\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\n      \n      var eqHp = dupeStat(3008);\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n      addStat(eqHp);\n      \n      return retVal;\n    },\n    \n    getNakedStats: function(group) {\n      \n      if(\n        group.baseStats && \n        group.baseStats.Strength > 0) {\n\n        return [\n          {id:0, max:group.baseStats.Strength},\n          {id:1, max:group.baseStats.Agility},\n          {id:2, max:group.baseStats.Intelligence},\n          {id:3, max:group.baseStats.Stamina}\n          ];\n      }\n      else {\n        return [];\n      }\n    },\n    \n    getSkillStats : function (item, data, skillData) {\n\n      var skillLevelVals = null;\n      angular.forEach(skillData, function(value, index) {\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n          skillLevelVals = value;\n          return;\n        }\n      });\n      \n      if(!skillLevelVals) {\n        return null;\n      }\n      \n      var index = 1;\n      var effects = [];\n      var stillCols = true;\n      \n      while(stillCols) {\n        var colName = 'EffectClass' + index;\n        var valColName = 'EffectClassValue' + index;\n        if(data && colName in data && valColName in skillLevelVals) {\n          if(data[colName] > 0) {\n            \n            var val = skillLevelVals[valColName];\n            \n            // for now add 10k\n            var effectId = data[colName];\n            var map = hCodeValues.skillEffectMapping[effectId];\n            if(map && map.getVals) {\n              var vals = map.getVals(val);\n              for(var i=0;i<vals.length;++i) {\n                effects.push(vals[i]);\n              }\n            }\n            else {\n              var statId;\n              if(map && map.mapTo) {\n                statId = map.mapTo;\n              }\n              else {\n                statId = 10000 + effectId;\n              }\n              \n              if(val > 0) {\n                effects.push({ id: statId, effect: effectId, max: val });\n              }\n              else {\n                if(val.toString().indexOf(';') > 0) {\n                  var vals = val.split(';');\n                  if(vals.length > 0 && vals[0] > 0) {\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\n                  }\n                }\n              }\n            }\n          }\n        }\n        else {\n          stillCols = false;\n        }\n        \n        index++;\n      }\n      \n      return effects;\n    },\n\n    getBuildStats: function(build) {\n      var stats = {};\n      stats.nakedStats = this.getNakedStats(build);\n      stats.combinedStats = this.getCombinedStats(build.items);\n      stats.setStats = this.getSetStats(build.items);\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n      if(build.heroStats && build.heroStats.length) {\n        stats.heroStats = build.heroStats;\n        stats.allStats = stats.allStats.concat(build.heroStats);\n      }\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\n      \n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n      return stats;\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\n\n  var dnTranslations = new DnTranslations();\n  var smallFile = 'uistring.optimised.lzjson';\n  var bigFile = 'uistring.lzjson';\n\n  var completeCallback = [];\n  var progressCallback = [];\n\n  return {\n\n    getRawData: function() {\n      return dnTranslations.data;\n    },\n    \n    reset : function() {\n      dnTranslations = new DnTranslations();\n      dnTranslations.sizeLimit = 100;\n      this.loaded = false;\n      this.startedLoading = false;\n      completeCallback = [];\n      progressCallback = [];\n    },\n    \n    getFileName: function() {\n      if(this.small) {\n        // console.log('loading optimised translations');\n        return smallFile;\n      }\n      else {\n        // console.log('loading full translations');\n        return bigFile;\n      }\n    },\n    \n    loaded : false,\n    startedLoading : false,\n    small: false,\n    \n    location : null,\n    region: null,\n  \n    init : function(progress, complete) {\n\n      if(this.isLoaded()) {\n        complete();\n      }\n      else {\n        progressCallback = [];\n        if(progress) {\n          progressCallback.push(progress);\n        }\n        if(complete) {\n          completeCallback.push(complete);\n        }\n  \n        if(!this.startedLoading) {\n          this.startedLoading = true;\n          var t = this;\n          \n          var fileName = null;\n          if(this.location && this.location != '') {\n            fileName = this.location + '/' + this.getFileName();\n            \n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n              sessionStorage.removeItem('UIStrings');\n              localStorage.removeItem('UIStrings_file');\n            }\n          }\n          \n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n          dnTranslations.loadDefaultFile(\n            fileName, \n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n            }, \n            function() {\n              uiTranslations.addTranslations(t.region, t.getRawData());\n              // console.log('using ', t.region);\n              $translate.use(t.region);\n              t.loaded = true;\n              angular.forEach(completeCallback, function(value, key) { value(); });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            },\n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            }\n          );\n        }\n      }\n    },\n    \n    isLoaded : function() {\n      if(!this.loaded) {\n        var fileName = this.location + '/' + this.getFileName();\n        \n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n        }\n\n        this.loaded = dnTranslations.loadFromSession();\n        if(this.loaded) {\n          uiTranslations.addTranslations(this.region, this.getRawData());\n          $translate.use(this.region);\n          this.startedLoading = true;\n        }\n      }\n      return this.loaded;\n    },\n    \n    translate : function(id,idParam) {\n      if(this.loaded) {\n        try {\n          var name;\n          if(!id) {\n            return '';\n          }\n          else {\n            name = dnTranslations.translate(id);\n            \n            if(typeof name != 'string') {\n              return 'm' + name;\n            }\n          }\n          \n          if(idParam && name) {\n            \n            if(typeof idParam === 'string') {\n              var params = idParam.split(',');\n              for(var p=0;p<params.length;++p) {\n                var pid = params[p];\n                if(pid.indexOf('{') == 0) {\n                  pid = params[p].replace(/\\{|\\}/g,'');\n                  pid = dnTranslations.translate(pid);\n                }\n                \n                name = name.replace('{' + p + '}', pid);\n              }\n            }\n            else {\n              name = name.replace('{0}', idParam);\n            }\n          }\n\n          return name;\n        }\n        catch(ex) {\n          console.log('unable to translate', id, idParam, ex);\n        }\n      }\n\n      return 'm' + id;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\n\n// translations for each region go in here\n// the key is the english text\nvar uiTranslationLookup = {\n    cdn: {\n        'dragon nest gear simulator': '龙之谷配装模拟器',\n        'enemy lvl': '敌人等级',\n        'damage type': '伤害类型',\n        'player lvl': '玩家等级',\n        'hero level stats': '英雄等级状态',\n        'naked stats': '裸装状态',\n        'stat affects': '状态影响',\n        'str': '力量',\n        'agi': '敏捷',\n        'int': '智力',\n        'builds': '方案',\n        'search': '搜索',\n        'select region': '选择地区',\n        'create a new build': '创建一个新方案',\n        'import': '输入',\n        'publish': '发布',\n        'find a build': '寻找一个新方案',\n        'about': '关于',\n        'import a build from a json build file': '从一个json文件导入方案',\n        'log in and publish your builds online': '登录并发布您的方案',\n        'vit': '体质',\n        'fd': '最终伤害',\n        'pdmg': '物理攻击力',\n        'mdmg': '魔法攻击力',\n        'crit': '致命一击',\n        'cdmg': '致命一击伤害',\n        'fire%': '火攻击',\n        'ice%': '水攻击',\n        'light%': '光攻击',\n        'dark%': '暗攻击',\n        'pdef': '物理防御力',\n        'mdef': '魔法防御力',\n        'weapons': '武器',\n        'armour': '防具',\n        'techs': '技巧饰品',\n        'titles': '称号',\n        'expedition plates': '远征队纹章',\n        'enhancement plates': '强化纹章',\n        'increasing gems': '强化龙玉',\n        'offensive gems': '属性龙玉',\n        'back': '返回',\n        'cancel': '取消',\n        'epic': 'A级',\n        'unique': 'S级',\n        'legendary': 'L级',\n        'quick add': '快速添加',\n        'hero lvl': '英雄等级'\n    },\n    sea: {\n        'offensive gems':  'offensive jades',\n        'increasing gems':  'increasing jades',\n        'expedition plates': 'unique heraldry',\n        'enhancement plates': 'normal heraldry',\n        'techs': 'skill accessory',\n    },\n};\n\n// this function gets called on language change to add the translations to the main list\nfunction uiTranslations($routeParams, $rootScope) {\n    return {\n        addTranslations: function(region, data) {\n            if(region && data && region in uiTranslationLookup) {\n                var regionData = uiTranslationLookup[region];\n                for(var key in regionData) {\n                    data[key] = regionData[key];\n                }\n            }\n        }\n    }\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\nfunction hCodeValues() {\n\n  function toOneDec(stat) {\n    return Math.round(stat.max*10)/10;\n  }\n  function toNoDec(stat) {\n    return Math.floor(stat.max);\n  }\n  function inThousands(stat) {\n    var val = Number(stat.max);\n    if(val < 100) {\n      return val;\n    }\n    else if(val < 100000) {\n      return Math.round(val/100)/10 + 'k';\n    }\n    else if(val < 1000000) {\n      return Math.round(val/1000) + 'k';\n    }\n    else if(val < 10000000) {\n      return Math.round(val/10000)/100 + 'm';\n    }\n    else {\n      return Math.round(val/1000000) + 'm';\n    }\n  }\n  function toPercent(stat) {\n    return (Math.round(stat.max*10000)/100) + '%';\n  }\n  \n  return {\n    stats : {\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\n      \n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\n      \n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\n\n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\n\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\n      \n      // stats below here are ones I made up\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n      \n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\n      \n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\n      \n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n      \n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n      \n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\n      \n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n      \n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\n      \n      // special cases for skills\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\n      // items over 10000 are unknown skill effects\n    },\n  \n    rankNames : {\n      0 : { id: 0, name : 'normal' },\n      1 : { id: 1, name : 'magic' },\n      2 : { id: 2, name : 'rare' },\n      3 : { id: 3, name : 'epic' },\n      4 : { id: 4, name : 'unique' },\n      5 : { id: 5, name : 'legendary' },\n      // 6 : { id: 6, name : 'divine' },\n    },\n    \n    shopNames : {\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\n      59001: 'garden bunny',\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \n      89001: 'guild master',\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \n      66001: 'erosion',\n      35006: 'plate',\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\n      91001: 'wrath',\n      45001: 'farm',\n      100004: 'event',\n      89000: 'nightmare'\n    },\n    \n    checkedRank : {\n      0 : true,\n      1 : true,\n      2 : true,\n      3 : true,\n      4 : true,\n      5 : true,\n    },\n    \n    typeNames : {\n      0 : 'weapons',\n      1 : 'equipment',\n      5 : 'plates',\n      8 : 'pouch',\n      38 : 'plates',\n      90 : 'welspring',\n      132 : 'talisman',\n      139 : 'gems',\n    },\n    \n    elements : {\n      0 : { id: 0, name: 'non-ele' },\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\n      3 : { id: 3, name: 'light', dmgStat: 18 },\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\n    },\n    \n    damageTypes : {\n      0 : { id: 0, name: 'both separate' },\n      1 : { id: 1, name: 'physical' },\n      2 : { id: 2, name: 'magical' },\n      3 : { id: 3, name: 'both combined' },\n    },\n    \n    // note: skills shown on-screen have 1k added to their id\n    skillEffectMapping : {\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n      13 : { id: 13, name: 'mp', mapTo: 26 },\n      25 : { id: 25, name: 'action speed' },\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\n      34 : { id: 34, name: 'light %', mapTo: 18 },\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\n      38 : { id: 38, name: 'light def', mapTo: 22 },\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\n      65 : { id: 65, name: 'range' },\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\n      // 134 : { id: 134, name: 'p dmg reduction%' },\n      // 135 : { id: 135, name: 'm dmg reduction%' },\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\n      222: {\n        id: 222, \n        name: 'hellfire', \n        getVals: function(val) {\n          if(val.indexOf(';') > 0) {\n            var vals = val.split(';');\n            return [\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\n              {id: 4012, effect: 222, max: Number(vals[1])},\n              ];\n          }\n          else {\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\n          }\n        }\n      },\n      372: {\n        id: 372,\n        name: 'statConversion',\n        getVals: function(val) {\n          if(val.indexOf(';') > 0) {\n            var vals = val.split(';');\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\n            }\n          }\n          return [];\n        }\n      },\n      \n      \n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\n    },\n    \n    gemExchanges: [\n      {id: 2, exchange: 1, name: 'Weapon'},\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\n      {id: 4, exchange: 3, name: 'Headgear'},\n      {id: 5, exchange: 4, name: 'Body Armor'},\n      {id: 6, exchange: 5, name: 'Leg Armor'},\n      {id: 7, exchange: 6, name: 'Gloves'},\n      {id: 8, exchange: 7, name: 'Shoes'},\n      {id: 101, exchange: 8, name: 'Necklace'},\n      {id: 102, exchange: 9, name: 'Earrings'},\n      {id: 103, exchange: 10, name: 'Ring'},\n    ],\n    \n    customItems: \n    [\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\n    ],\n  \n    getStats : function(data) {\n\n      var useMax=false;\n      var useStateXVal=false;\n      var mightHaveSets=true;\n      var prop = 'State1_Max';\n      if(prop in data) {\n        useMax = true;\n      }\n      else {\n        prop = 'State1Value';\n        if(prop in data) {\n          useStateXVal = true;\n        }\n      }\n      \n      var currentState = 0;\n      var statVals = [];\n      for(;;) {\n        currentState++;\n        \n        var stateProp = 'State' + currentState;\n        if(!(stateProp in data)) {\n          break;\n        }\n\n        var stateId = data[stateProp];\n        if(stateId == -1) {\n          break;\n        }\n        \n        if(stateId == 107) {\n          // is this mp?\n        }\n        else {\n          \n          var currentData = { id: stateId };\n          \n          var prop;\n        \n          if(useMax) {\n            prop = 'State' + currentState + '_Max';\n            currentData.max = data[prop];\n          }\n          else if(useStateXVal) {\n            prop = 'State' + currentState + 'Value';\n            currentData.max = data[prop];\n          }\n          else {\n            prop = 'StateValue' + currentState;\n            currentData.max = Number(data[prop]);\n          }\n          \n          if(currentData.max > 0 || currentData.max < 0) {\n            if(mightHaveSets) {\n              prop = 'NeedSetNum' + currentState;\n              if(prop in data) {\n                if(data[prop] == 0) {\n                  break;\n                }\n                currentData.needSetNum = data[prop];\n              }\n              else {\n                mightHaveSets = false;\n              }\n            }\n          \n            statVals.push(currentData);\n          }\n        }\n      }\n      \n      return statVals;\n    },\n    \n    setupStat : function(stat, id) {\n      stat.id = Number(id);\n    },\n    \n    mergeStats : function(stats1, stats2) {\n      var statMap = {};\n      \n      var self = this;\n      function add(value) {\n        \n        var amount = Number(value.max);\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\n          amount = Math.floor(amount);\n        }\n        \n        if(value.id in statMap) {\n          statMap[value.id] += amount;\n        }\n        else {\n          statMap[value.id] = amount;\n        }\n      }\n      \n      angular.forEach(stats1, function(value, key) {\n        if(value) {\n          add(value);\n        }\n      });\n      \n      if(stats2) {\n        angular.forEach(stats2, function(value, key) {\n          if(value) {\n            add(value);\n          }\n        });\n      }\n      \n      var newStats = [];\n      \n      for(var key in statMap) {\n        var stat = { max : statMap[key], id: Number(key) };\n        newStats.push(stat);\n      }\n        \n      return newStats;\n    }\n  }\n}\n\n})();"]}