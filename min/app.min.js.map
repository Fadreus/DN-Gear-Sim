{"version":3,"sources":["routes.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","groupAssignment","hCodeValues","statHelper","saveHelper","itemCategory","$scope","exportLinkHelper","dntData","calcStatPercent","newVal","origVal","saveGroup","saveBuildSelection","vm","groupName","savedItems","this","getSavedItems","groupNames","Object","keys","savedGroup","summaryStatIds","id","stats","summaryDisplay","push","clearGroup","addAffectAmount","replaceAffectAmount","groupCalcStats","dntFiles","anyLoading","tryToSetItem","columns","fileName","isLoaded","allLoaded","item","reloadItem","getDntFiles","forEach","indexOf","init","getAddAffectAmount","stat","initAddAffects","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","getGroupCalcStats","group","items","getBuild","origStats","newItems","concat","getCalculatedStatsFromItems","getStat","newStats","max","index","len","length","i","getStatName","retVal","element","eleId","elements","name","secondaryElement","getGroupItems","numMatches","str","matches","itemSplit","typeName","groupItems","existing","sparkTypeId","itemSource","_","each","exchangeType","sort","b","a","hasMaxExchangable","cat","find","maxCat","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","onChange","replaceItem","newItemList","gItem","updatedSavedItems","$inject","directive","scope","bindToController","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","controllerAs","$timeout","translations","itemColumnsToLoad","itemFactory","getEnchantLevel","enchantments","itemType","num","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","enchantmentStats","setEnchantment","enchantmentNum","getStats","NeedCoin","Math","round","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","number","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","p","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","sparkStats","isMoreSparks","isFirstSpark","prevSpark","sid","setTalisman","amount","extraStats","useStats","mergeStats","updateItem","attainments","files","texts","file","splitVal","singleText","split","ItemGainText","text","translate","region","typeId","console","log","pouchFileNames","usedFiles","lookupId","datas","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","d","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","url","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","rows","r","row","col","colName","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","item1","TabNameID","item2","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","$window","jobs","$routeParams","$location","anyToLoad","allJobs","job","needJobClass","jobName","setFullStats","document","anyDntToLoad","tryInit","getJobName","title","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","fullStats","getBuilds","builds","mainDnt","replace","setLocationByName","scrollTo","decodeItem","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","exchange","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","buildName","getCurrentBuild","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","handleChange","search","encodeItem","copy","preInitItem","body","className","rawSavedData","exportData","JSON","stringify","save","localStorage","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","path","icon","buildAction","withBuildMenu","isSearch","noRegion","isLoading","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","value","simError","ex","message","key","error","dntInit","dntReset","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","removeItem","sessionStorage","translationsStatus","clear","reload","setCustomUrl","noLocation","progress","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","getById","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","filter","toUpperCase","result","data","profile","getSavedBuilds","getProfile","storedBuilds","load","build","newGroupName","importGroup","saveBuild","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","lastUpdate","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","deleteBuild","serverToDelete","published","getBuildStats","copyLocally","input","window","encodeURIComponent","escapeFilter","percentageFilter","$stateful","copyGroup","reloaded","reloadGroup","setShortUrl","createGroupLink","shortUrl","getItem","longUrl","groupHelper","blob","saveAs","Blob","type","export","exportBuild","target","event","reader","FileReader","readAsText","onload","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","subCatList","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","exchangeId","subCat","gemExchange","gemExchanges","e","isInSubCat","foundSubCatItem","canMove","allSubCatItems","subCatItem","move","moveItem","destination","allowMoreItems","getGemSlot","cancelEdit","handleItemEdit","server","gemSlot","gemSlots","getGemSlotName","editMode","setupBuilds","buildNames","currentGroup","createGroup","toggleGroup","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","character","updateRows","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","pcIndexes","pcIndex","rowIndex","makeFakeCells","makeCell","selectedIndex","click","swapEnchantmentNumber","newEnhancementNum","fullStats1","fullStats2","useItem2Stats","bulidController","selectedCategory","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","numItems","numItemText","newCustom","newGroup","editBuildCtrl","heroStats","oldGroupName","damageTypes","initDamageType","damageType","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","EnglishName","critResist","enemyLevel","playerLevel","eleResist","newJobs","heroLevel","setHeroStats","getStatCap","getStatCaps","getJobConversion","invalidGroupName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","tryToAddItem","cancel","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","goToBuild","allInit","g","h","itemString","itemStr","anyItems","newBuildName","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","paPwr","maxMdmg","extraPdmgMod","intToPdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","newFdPc","Cfinaldamage","maxFd","pow","dmgStat","lightPc","firePc","darkPc","icePc","mdefEqHp","eqHp","pdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","skillEffectMapping","getVals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1029","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","typeNames","38","90","132","34","35","36","37","39","87","88","89","185","251","effect","372","404","useMax","useStateXVal","mightHaveSets","currentData","currentState","stateProp","stateId","add","setupStat","stats2","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n'use strict';\n\nangular.module('dnsim').config(['$routeProvider', config]);\n\nfunction config($routeProvider) {\n\n  $routeProvider.\n  \n    when('/about', {\n      templateUrl: 'ui/about/about.html',\n      controller: 'AboutCtrl as about'\n    }).\n    \n    when('/setup', {\n      templateUrl: 'ui/nav/setup.html',\n      controller: 'SetupCtrl'\n    }).\n    when('/test', {\n      templateUrl: 'ui/nav/test.html',\n      controller: 'TestCtrl'\n    }).\n    \n    when('/items', {\n      templateUrl: 'ui/search/everything-search.html',\n      controller: 'ItemsCtrl as items',\n      reloadOnSearch: false,\n    }).\n    \n    when('/', {\n      templateUrl: 'ui/welcome.html',\n    }).\n    when('/builds', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/build', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/view-group', {\n      templateUrl: 'ui/builds/view-group.html',\n      controller: 'ViewGroupCtrl'\n    }).\n    when('/edit-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/new-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      // reloadOnSearch: false,\n    }).\n    when('/delete-build', {\n      templateUrl: 'ui/builds/delete-build.html',\n      controller: 'DeleteBuildCtrl as deleteBuild',\n      // reloadOnSearch: false,\n    }).\n    when('/reload-build', {\n      templateUrl: 'ui/builds/reload-build.html',\n      controller: 'ReloadBuildCtrl as ctrl',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/search', {\n      templateUrl: 'ui/search/search.html',\n      controller: 'ItemSearchCtrl as ctrl',\n      reloadOnSearch: false,\n    }).\n    \n    when('/item', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    when('/item', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      // reloadOnSearch: false,\n    }).\n    \n    when('/export', {\n      templateUrl: 'ui/nav/export.html',\n      controller: 'ExportCtrl',\n    }).\n    \n    when('/talismans', {\n      templateUrl: 'ui/builds/build-talismans.html',\n      controller: 'BuildTalismansCtrl as ctrl',\n    }).\n    \n    when('/publish', {\n      templateUrl: 'ui/online/publish.html',\n      controller: 'PublishCtrl as ctrl',\n    }).\n    \n    when('/profile', {\n      templateUrl: 'ui/online/profile.html',\n      controller: 'ProfileCtrl as ctrl',\n    }).\n    \n    when('/published', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/import', {\n      templateUrl: 'ui/builds/build-import.html',\n      controller: 'BuildImportCtrl as ctrl',\n    }).\n    \n    when('/published', {\n      templateUrl: 'ui/online/published.html',\n      controller: 'PublishedCtrl as ctrl',\n    }).\n    \n    when('/build-search', {\n      templateUrl: 'ui/online/build-search.html',\n      controller: 'BuildSearchCtrl as ctrl',\n    }).\n    \n    otherwise({\n      redirectTo: '/'\n    });\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      compact: '=compact',\n      onChange: '&onChange'\n    },\n    controller: groupAssignment,\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/group-assignment.html'\n  };\n});\n\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\n  \n  var vm = this;\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupName) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n\n  if(!(this.groupName in this.savedItems)) {\n    this.groupName = null;\n  }\n\n  if(!this.groupName && this.savedItems) {\n    for(var savedGroup in this.savedItems) {\n      this.groupName = savedGroup;\n      break;\n    }\n  }\n\n  if(!this.groupName) {\n    return;\n  }\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n    \n  this.clearGroup = function() {\n    vm.addAffectAmount = null;\n    vm.replaceAffectAmount = {};\n\n    vm.groupItems = null;\n    vm.groupCalcStats = null;\n  }\n\n  vm.tryToSetItem = function(dntFiles) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        vm.item = exportLinkHelper.reloadItem(vm.item);\n      }\n    }\n  }\n\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\n  angular.forEach(dntFiles, function(columns, fileName) {\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\n      delete dntFiles[fileName];\n    }\n    else {\n      dntData.init(fileName, columns, function() {}, function() {\n        vm.tryToSetItem(dntFiles);\n      });\n    }\n  });\n  vm.tryToSetItem(dntFiles);\n\n  $scope.$watch('editCtrl.item', function() {\n    vm.clearGroup();\n  });\n  \n  this.getAddAffectAmount = function(stat) {\n    this.initAddAffects();\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\n    return this.addAffectAmount[stat];\n  };\n  \n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    return this.replaceAffectAmount[itemIndex][statId];\n  };\n  \n  this.getGroupCalcStats = function() {\n    \n    if(this.groupCalcStats == null) {\n      \n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  };\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  };\n  \n  this.initAddAffects = function() {\n    \n    if(vm.addAffectAmount) {\n      return;\n    }\n    \n    // console.log('initialising add affects ');\n    \n    var origStats = vm.getGroupCalcStats();\n    var group = vm.savedItems[vm.groupName];\n    var newItems = [];\n    if(group.items) {\n      newItems = group.items.concat([vm.item]);\n    }\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    \n    this.addAffectAmount = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex]) {\n      return;\n    }\n    \n    var group = vm.savedItems[vm.groupName];\n    var newItems = [vm.item];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    this.replaceAffectAmount[itemIndex] = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  };\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  };\n  \n  this.getGroupItems = function() {\n\n    var itemSplit;\n    function numMatches(str) {\n      if(str) {\n        var matches = 0;\n        for(var i=0;i<itemSplit.length;++i) {\n          if(str.indexOf(itemSplit[i]) > 0) {\n            matches++;\n          }\n        }\n        return matches;\n      }\n      else {\n        return -1;\n      }\n    }\n    \n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n      vm.groupItems = [];\n\n      var existing;\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\n        });\n      }\n\n      var items = [];\n      if(existing) {\n        items.push(existing);\n      }\n      else {\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\n            if(item.exchangeType == vm.item.exchangeType) {\n              items.push(item);\n            }\n          }\n          else if(item.typeName == vm.item.typeName) {\n            items.push(item);\n          }\n        });\n        \n        if(vm.item.name) {\n          itemSplit = vm.item.name.split(' ');\n        }\n        items.sort(function(a,b) {\n          return numMatches(b.name)-numMatches(a.name);\n        });\n      }\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name == vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name != vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n    }\n    return vm.groupItems;\n  };\n  \n  this.hasMaxExchangable = function() {\n    var cat = itemCategory.byName(this.item.typeName);\n    var items = this.getGroupItems();\n\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\n      if(_.find(items, function(item) {\n        return item.sparkTypeId == vm.item.sparkTypeId;\n      })) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxCat) {\n      if(items.length >= cat.maxCat) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxExchange) {\n      if(items.length >= cat.maxExchange) {\n        for(var i=0;i<items.length;++i) {\n          if(!items[i].exchangeType) {\n            return false;\n          }\n        }\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n        return true;\n      }\n    }\n    return false;\n  };\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    saveGroup();\n    vm.clearGroup();\n  };\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    saveGroup();\n    vm.clearGroup();\n  };\n  \n  this.addToGroup = function() {\n    saveHelper.saveItem(vm.groupName, vm.item);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n    vm.onChange();\n  };\n  \n  this.replace = function(item) {\n    item.replaceItem = true;\n    var newItemList = [];\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\n      if(gItem.replaceItem) {\n        // console.log('found replace item');\n        newItemList.push(vm.item);\n      }\n      else {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n    vm.onChange();\n  };\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n};\n\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\n\n['hCodeValues','$scope',\nfunction(hCodeValues,$scope) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\n    return;\n  }\n  \n  var vm = this;\n\n  this.statMap = {};\n  \n  // console.log(vm.item.stats);\n  _.forEach(vm.item.stats, function(stat) {\n    // console.log('got stat', stat.id);\n    vm.statMap[stat.id] = stat.max;\n  });\n  \n  for(var statId in hCodeValues.stats) {\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \n\n      if(newValue != oldValue) {\n        // console.log(statId);\n        // console.log('watch got stat value', newValue);\n\n        var anyChange = false;\n        var newStats = [];\n        for(var statId in vm.statMap) {\n\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\n            _.each(vm.item.stats, function(stat) { \n              if(stat.id == statId) {\n                anyChange = true;\n              }\n            });\n          }\n          else {\n            newStats.push({\n              id: Number(statId),\n              max: Number(vm.statMap[statId])\n            });\n\n            var found = false;\n            _.each(vm.item.stats, function(stat) {\n              if(stat.id == statId) {\n                found = true;\n                // console.log('comparing', stat.max, vm.statMap[statId]);\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\n                  anyChange = true;\n                }\n              } \n            });\n\n            if(!found) {\n              anyChange = true;\n            }\n          }\n        }\n\n        if(anyChange) {\n          // console.log('GOT CHANGES!', newStats);\n          vm.item.stats = newStats;\n          vm.onChange();\n        }\n      }\n    });\n  }\n  \n}])\n.directive('dngearsimItemEditCustom', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-custom.html'\n  };\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\n\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(!vm.item || !vm.item.enchantmentId) {\n    return;\n  }\n  \n  if('itemSource' in this.item) {\n    vm.itemType = items[vm.item.itemSource];\n  }\n  \n  if(!vm.itemType) {\n    return;\n  }\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\n    return;\n  }\n  \n  if(vm.itemType.enchantDnt) {\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n  if(vm.itemType.enchantDnt2) {\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\n  }\n  \n  if(vm.itemType.petLevelDnt) {\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\n  }\n  \n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if(vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n  \n  this.setEnchantment = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 0;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\n          }\n          else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  }\n  \n  function getEnchantLevel(num) {\n    if('petLevelDnt' in vm.itemType) {\n      return vm.enchantments[num].PetLevel;\n    }\n    else {\n      return vm.enchantments[num].EnchantLevel;\n    }\n  }\n  \n  this.setPetLevel = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n      }\n    }\n  }\n  \n  this.isMaxEnchantLevel = function() {\n\n    if(vm.enchantments != null &&\n      vm.enchantments.length > 0 &&\n      typeof vm.item.enchantmentNum == 'number') {\n\n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  \n  this.setEnchantmentNum = function(enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    if('petLevelDnt' in vm.itemType) {\n      vm.setPetLevel();\n    }\n    else {\n      vm.setEnchantment();\n    }\n    vm.onChange();\n  }\n  \n  this.nextEnchantment = function() {\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\n      if(i == 0) {\n        vm.enhancementOptions.push({number: 0});\n      }\n      else {\n        vm.enhancementOptions.push(vm.getOption(i-1));\n      }\n    }\n  }\n  \n  this.prevEnchantment = function() {\n    vm.enhancementOptions = [];\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\n      vm.enhancementOptions.push(vm.getOption(i-1));\n    }\n    \n    vm.enhancementOptions.push({number: 0});\n  }\n  \n  this.getOption = function(enchantmentNum) {\n    return {\n      number: getEnchantLevel(enchantmentNum),\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\n    };\n  }\n  \n  this.getEnchantments = function() {\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\n        }\n        vm.setEnchantment();\n      }\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\n        vm.setPetLevel();\n      }\n    }\n    \n    return vm.enchantments;\n  }\n  \n  var fileName = 'all-items.lzjson';\n  \n  this.showMaterials = function() {\n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        \n        if(!vm.enchantmentAfter) {\n          return;\n        }\n        \n        vm.materials = [];\n        for(var i=1;i<=5;++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if(itemId > 0 && itemCount > 0) {\n            \n            var items = dntData.find(fileName, 'id', itemId);\n            if(items.length == 0) {\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\n            }\n            else {\n              var item = items[0];              \n              if(item) {\n                var material = {\n                  item: itemFactory.createBasicItem(item),\n                  num: itemCount,\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  if(dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n})\n.directive('dngearsimItemEditEnchantment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-enchantment.html'\n  };\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\n\n['dntData','items','hCodeValues','itemColumnsToLoad',\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n  \n  if(this.item == null) return;\n  \n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n  \n  if(vm.itemType.potentialDnt) {\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\n  }\n  \n  this.getPotentials = function() {\n    if(!vm.potentials) {\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n        \n        if(potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        }\n        else if('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n        \n          if(potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n    \n    return vm.potentials;\n  }\n  \n  this.nextPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i+1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n  \n  this.prevPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i-1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n    \n  this.changePotential = function(pid) {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  }\n  \n  this.isFirstPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  }\n  \n  this.isLastPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\n  }\n  \n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n    \n    if(vm.potentials != null) {\n      angular.forEach(vm.potentials, function(p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\n          if(!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n        \n        if(stats.length > 0) {\n          pStats[p.id] = stats;\n        }\n        else if(!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n    \n    return pStats;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditPotential', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-potential.html'\n  };\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\n\n['$timeout','dntData','statHelper',\nfunction($timeout,dntData,statHelper) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'skills') {\n    return;\n  }\n  \n  if(!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n  \n  var vm = this;\n  \n  function getDntFile() {\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n  }\n  \n  this.initSkills = function() {\n    var dntFile = getDntFile();\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n    })});\n  }\n  \n  this.nextEnchantment = function() {\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  }\n  \n  this.isMaxSkillLevel = function() {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  }\n  \n  this.prevEnchantment = function() {\n    if(this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    }\n    else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  dntData.init(getDntFile(), null, null, vm.initSkills);\n\n}])\n.directive('dngearsimItemEditSkill', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-skill.html'\n  };\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\n\n['dntData','hCodeValues','items','itemColumnsToLoad',\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!vm.itemType || !vm.itemType.sparkDnt) {\n    return\n  }\n  \n  if(vm.itemType.sparkDnt) {\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\n  }\n  \n  this.sparks = null;\n\n  this.nextSpark = function() {\n    var index = getPotentialIndex();\n    index++;\n    if(index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.isMoreSparks = function() {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\n  }\n  \n  this.isFirstSpark = function() {\n    return getPotentialIndex() == 0;\n  }\n  \n  this.prevSpark = function() {\n    var index = getPotentialIndex();\n    index--;\n    if(index < 0) {\n      index = vm.sparks.length-1;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.removeSpark = function() {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  }\n  \n  this.getSparks = function() {\n    if(vm.item == null || vm.itemType == null) return null;\n    if(vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if(sid) {\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n    \n    return vm.sparks;\n  }\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if(vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function(spark, index) {\n        if(spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n      \n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditSpark', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-spark.html'\n  };\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\n\n['hCodeValues', function(hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'tman') {\n    return;\n  }\n  \n  this.setTalisman = function(amount) {\n    if(amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    }\n    else {\n      this.item.enchantmentNum = amount;\n      \n      var extraStats = [];\n\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\n\n      angular.forEach(useStats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\n      });\n      \n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  }\n\n}])\n.directive('dngearsimItemEditTalisman', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-talisman.html'\n  };\n});","angular.module('dnsim').controller('itemEditCtrl',\n\n['hCodeValues',\nfunction(hCodeValues) {\n  'use strict';\n  \n  var vm = this;\n  \n  if(!vm.item) {\n    return;\n  }\n  \n  vm.onUpdateItem = function() {\n    vm.updateItem();\n  }\n  \n}])\n.directive('dngearsimItemEdit', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n      updateItem: '&updateItem'\n    },\n    controller: 'itemEditCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-edit.html'\n  };\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.attainments = [];\n\n  var files = [\n    'itemgaintable.lzjson',\n    'itemgaintable_dragonjewel.lzjson',\n    'itemgaintable_enchant.lzjson',\n    'itemgaintable_etc.lzjson',\n    'itemgaintable_reboot.lzjson',\n    'itemgaintable_talisman.lzjson'];\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.init();\n      });\n    });\n  }\n  \n  this.init = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n    \n    vm.attainments = [];\n    files.forEach(function(file) {\n      var attainments = dntData.find(file, 'id', vm.item.id);\n      if(attainments.length) {\n        attainments.forEach(function(attainment) {\n          var text = attainment.ItemGainText;\n          if(text) {\n            var texts = text.split('{');\n            texts.forEach(function(singleText) {\n              var splitVal = singleText.split('}');\n              if(splitVal.length) {\n                if(splitVal[0].indexOf('#') == -1) {\n                  vm.attainments.push(translations.translate(splitVal[0]));\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n}])\n.directive('dngearsimItemViewAttainment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewAttainmentCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-attainment.html'\n  };\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\n\n['$timeout','dntData','itemFactory','region',\n  function($timeout, dntData, itemFactory, region) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n  \n  var vm = this;\n  \n  var pouchFileNames = [\n    'itemdroptable.lzjson',\n    'itemdroptable_abyss.lzjson',\n    'itemdroptable_apprentice.lzjson',\n    'itemdroptable_cook.lzjson',\n    'itemdroptable_darklair.lzjson',\n    'itemdroptable_dimension.lzjson',\n    'itemdroptable_disjoint.lzjson',\n    'itemdroptable_dnexpedition.lzjson',\n    'itemdroptable_event.lzjson',\n    'itemdroptable_farm.lzjson',\n    'itemdroptable_fishing.lzjson',\n    'itemdroptable_guildwar.lzjson',\n    'itemdroptable_item.lzjson',\n    'itemdroptable_monsteritem.lzjson',\n    'itemdroptable_propdrop.lzjson',\n    'itemdroptable_pvp.lzjson',\n    'itemdroptable_randomcompound.lzjson',\n    'itemdroptable_stageclear.lzjson',\n    'itemdroptable_themepark.lzjson',\n    'itemdroptable_union.lzjson']\n  \n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  this.usedFiles = {};\n  this.lookupId = null;\n  \n  var files;\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  }\n  else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxContents();\n      });\n    });\n  }\n  \n  this.initBoxContents = function() {\n    // console.log('init contents', this.item.fileName);\n\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if(datas.length > 0) {\n      var d = datas[0];\n      this.lookupId = d.TypeParam1;\n      vm.items = [];\n      \n      \n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\n        vm.getCharmItems(d.TypeParam1);\n      }\n      else if (vm.item.typeId == 8) {\n        vm.getPouchItems(d.TypeParam1);\n      }\n      \n    }\n  }\n  \n  this.getPouchItems = function(boxType) {\n    for(var f=0;f<pouchFileNames.length;++f) {\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\n    }\n  }\n  \n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\n    \n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          }\n          else {\n            // console.log('adding item ' + pouchItem);\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\n              // console.log('found item ' + basicItem.name);\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: basicItem\n              });\n              this.usedFiles[pouchFileName] = true;\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n  \n  this.getCharmItems = function(boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for(var i=0;i<charmFiles.length;++i) {\n\n      var charmData = dntData.getData(charmFiles[i]);\n      // console.log('box: ' + boxType, charmData);\n      \n      for(var c=0;c<charmData.length;++c) {\n        var cd = charmData[c];\n        if(cd.CharmNum == boxType && cd.Look) {\n          \n          if(cd.CharmType) {\n            this.getCharmItems(cd.ItemID)\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n            if(itemds.length > 0) {\n              vm.items.push({\n                count: cd.Count,\n                gold: cd.Gold,\n                item: itemFactory.createBasicItem(itemds[0])\n              });\n              this.usedFiles[charmFiles[i]] = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  this.getFileLink = function(fileName) {\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\n  }\n\n}])\n.directive('dngearsimItemViewBox', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-box.html'\n  };\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = [\n    'itemcompoundtable.lzjson',\n    'itemcompoundtable_custom.lzjson',\n    'itemcompoundtable_glyph.lzjson',\n    'itemcompoundtable_glyph95.lzjson',\n    'itemcompoundtable_jewel.lzjson',\n    'itemcompoundtable_renewal.lzjson',\n    'itemcompoundtable_set.lzjson'];\n  \n  var dropFile = 'itemdroptable.lzjson';\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = cFiles.concat([allItemFileName, dropFile]);\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initCrafts();\n      });\n    });\n  }\n  \n  this.initCrafts = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\n        return;\n      }\n    }\n    \n    vm.crafts = [];\n    for(var i=0;i<cFiles.length;++i) {\n      vm.initCraft(cFiles[i], vm.item.id);\n    }\n\n    for(var di=1;di<=20;++di) {\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\n      if(drops.length) {\n        drops.forEach(function(drop) {\n          for(var i=0;i<cFiles.length;++i) {\n            vm.initCraft(cFiles[i], drop.id);\n          }\n        });\n      }\n    }\n    \n    var newCrafts = [];\n    for(var i=0;i<vm.crafts.length;++i) {\n      var found = false;\n      for(var j=0;j<newCrafts.length;++j) {\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\n            \n            found = true;\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n                  found = false;\n              }\n            }\n        }\n      }\n      \n      if(!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n    \n    vm.crafts = newCrafts;\n  }\n\n  this.initCraft = function(fileName, id) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\n    \n    for(var i=0;i<fCrafts.length;++i) {\n      var c = fCrafts[i];\n      \n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost/100/100,\n        items: [],\n      };\n      \n      var j=0;\n      for(;;) {\n        j++;\n        var itemColName = 'Slot' + j +'Id';\n        var qtyColName = 'Slot' + j +'Num';\n        if(!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if(items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName],\n          });\n        }\n      }\n      \n      vm.crafts.push(craft);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewCraft', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-craft.html'\n  };\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\n\n['$timeout','dntData','itemFactory','items',\n  function($timeout, dntData, itemFactory, items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  \n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [extractFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initExtract();\n      });\n    });\n  }\n  \n  this.initExtract = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if(d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n    \n    var itemType = items[vm.item.itemSource];\n    if(itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      if(!enchantments.length && itemType.enchantDnt2) {\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\n      }\n\n      for(var i=0;i<enchantments.length;++i) {\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n    \n    vm.items = [];\n    if(disjoint) {\n      vm.getItems(disjoint);\n    }\n  }\n  \n  this.getGold = function() {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount)/100/100;\n  }\n  \n  this.getItems = function(disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 1;\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getItems(pouchItem);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0]),\n              });\n            }\n          }\n        }\n        itemIndex++;\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewExtraction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-extraction.html'\n  };\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = [plateFile,allItemFileName];\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    getPlates();\n  }\n  \n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for(var r=0;r<rows.length;++r) {\n      var row = rows[r];\n      var col=0;\n      for(;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if(!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if(itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewPlate', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-plate.html'\n  };\n});","angular.module('dnsim').controller('itemViewSetCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var files = [\n  'partstable.optimised.json',\n  'partstable_cash.optimised.json',\n  'partstable_common2014.optimised.json',\n  'partstable_common2015.optimised.json',\n  'partstable_common2016.lzjson',\n  'partstable_commoncash.lzjson',\n  'partstable_equipment.optimised.json',\n  'partstable_event.lzjson',\n  'partstable_guild.lzjson',\n  'partstable_pvp.optimised.json',\n  'partstable_reboot.optimised.json',\n  'partstable_skilllevelup.lzjson',\n  'weapontable.optimised.json',\n  'weapontable_cash.optimised.json',\n  'weapontable_common2014.optimised.json',\n  'weapontable_common2015.optimised.json',\n  'weapontable_common2016.lzjson',\n  'weapontable_commoncash.lzjson',\n  'weapontable_equipment.optimised.json',\n  'weapontable_event.lzjson',\n  'weapontable_guild.lzjson',\n  'weapontable_pvp.optimised.json',\n  'weapontable_reboot.optimised.json',\n  //'weapontable_skilllevelup.lzjson'\n  ];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = files.concat([allItemFileName]);\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    for(var i=0;i<files.length;++i) {\n      getSetItems(files[i]);\n    }\n  }\n  \n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for(var r=0;r<rows.length;++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if(itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewSet', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-set.html'\n  };\n});","angular.module('dnsim').controller('itemViewShopCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.shopCosts = [];\n  \n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initShops();\n      });\n    });\n  }\n  \n  this.initShops = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n    \n    var newShopCosts = [];\n    for(var i=0;i<vm.shopCosts.length;++i) {\n      var found = false;\n      for(var j=0;j<newShopCosts.length;++j) {\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n            found = true;\n            break;\n        }\n      }\n      \n      if(!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n    \n    vm.shopCosts = newShopCosts;\n  }\n  \n  /*\n  function getShopCosts() {\n    var shops = dntData.getData(shopFileName);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n      \n      var c = 0;\n      for(;;) {\n        ++c;\n        \n        var colName = 'itemIndex' + c;\n        if(!(colName in s)) {\n          break;\n        }\n        \n        var itemId = s[colName];\n        if(!itemId) {\n          break;\n        }\n        \n        if(itemId == vm.item.id) {\n          s = {\n            shopName: s.ShopID,\n            tabName: translations.translate(s.TabNameID),\n            gold: s['Quantity' + c],\n          };\n          \n      \n          if(s.shopName in hCodeValues.shopNames) {\n            s.shopName = hCodeValues.shopNames[s.shopName];\n          }\n      \n          if(!s.shopName) {\n            s.shopName = s.ShopId;\n          }\n          vm.shopCosts.push(s);\n        }\n      }\n    }\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n        \n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n      \n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        dungeonPoints: 0,\n        nestPoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0,\n      };\n      \n      if(shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n      \n      if(s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\n      }\n      else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n        shopCost.pointsId1 = s.PurchaseType1;\n      }\n      \n      if(s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType1 == 13) {\n        shopCost.nestPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType1 == 14) {\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\n      }\n      else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n        shopCost.pointsId2 = s.PurchaseType2;\n      }\n      \n      shopCost.gold = shopCost.gold/100/100;\n      \n      vm.shopCosts.push(shopCost);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewShop', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-shop.html'\n  };\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.matchingTransfers = [];\n  \n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\n  \n  var files = [transferFileName,allItemFileName,transferItemsFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.matchingTransfers = [];\n    \n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\n    if(transferItem && transferItem.length > 0) {\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n      \n      for(var i=0;i<transfers.length;++i) {\n        var t = transfers[i];\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n          \n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n          \n          vm.matchingTransfers.push({\n            level: t.ResultLevel,\n            enchantmentNum: t.ResultEnchantLevel,\n            gold: t.NeedCoin/100/100,\n            rank: hCodeValues.rankNames[t.ResultRank],\n            numItem1: t.NeedItemCount1,\n            item1: itemFactory.createBasicItem(item1s[0]),\n            numItem2: t.NeedItemCount2,\n            item2: itemFactory.createBasicItem(item2s[0]),\n          });\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTransfer', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-transfer.html'\n  };\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.rewardItems = [];\n  \n  var allItemFileName = 'all-items.lzjson';\n  var changeFileName = 'itemchangetable.lzjson';\n  \n  var files = [allItemFileName,changeFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    vm.rewardItems = [];\n\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\n    if(changes && changes.length > 0) {\n      for(var i=0;i<changes.length;++i) {\n        var c = changes[i];\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\n\n          vm.rewardItems.push({\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\n          });\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTuning', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTuningCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-tuning.html'\n  };\n});","angular.module('dnsim').controller('ItemCtrl',\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\n  'use strict';\n  \n  region.setLocationByName($routeParams.region);\n  \n  $window.scrollTo(0, 0);\n  \n  $scope.jobName = null;\n  // console.log('search string: ', $routeParams.i);\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\n  if('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n  \n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n  \n  $scope.getDescription = function() {\n    if($scope.item.description) {\n      return $scope.item.description;\n    }\n    else if($scope.itemType &&\n      $scope.itemType.name == 'title' &&\n      translations.isLoaded() &&\n      dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    else if($scope.item.fileName &&\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\n        \n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      } \n    }\n    return '';\n  }\n  \n  $scope.getExchangeType = function() {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if(translations.isLoaded() &&\n      dntData.isLoaded(exchangeDnt) &&\n      $scope.item.exchangeType > 0) {\n        \n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  }\n  \n  $scope.setDetail = function(detail) {\n    $scope.detail = detail;\n  }\n  \n  $scope.getNumInSet = function() {\n    \n    var buildName = $scope.getBuildName();\n    if(buildName && $scope.item && $scope.item.setId) {\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\n    }\n    \n    return 0;\n  }\n  \n  $scope.getBuildName = function() {\n    var buildName = saveHelper.getCurrentBuild();\n    if($scope.builds) {\n      if(!buildName || !(buildName in $scope.builds)) {\n        var allBuildNames = Object.keys($scope.builds);\n        if(allBuildNames.length) {\n          buildName = allBuildNames[0];\n        }\n      }\n    }\n    \n    return buildName;\n  }\n\n  $scope.getSellingPrice = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\n\n      var gold = Math.floor(itemData.SellAmount / 10000);\n      if(gold) {\n        retVal += gold + 'gold ';\n      }\n\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\n      if(silver) {\n        retVal += silver + 'silver ';\n      }\n\n      var copper = itemData.SellAmount % 100;\n      if(copper) {\n        retVal += copper + 'copper ';\n      }\n    }\n    return retVal;\n  }\n  \n  $scope.getServerStorage = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    var retVal = '';\n    \n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if(itemData && 'AbleWStorage' in itemData) {\n        if(itemData.AbleWStorage == 1) {\n          retVal = 'can server storage';\n        }\n        else if(itemData.AbleWStorage == 0) {\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\n            retVal = 'not transferable';\n          }\n        }\n      }\n\n      if(itemData && 'Reversion' in itemData) {\n        if(retVal.length) {\n          retVal += ', ';\n        }\n        \n        if(itemData.Reversion == 0) {\n          retVal += 'can trade';\n        }\n        else if(itemData.Reversion == 1) {\n          retVal += 'not tradable ';\n        }\n      }\n    }\n    return retVal;\n  }\n  \n  $scope.getMoreInfo = function() {\n    var sealTimes = 0;\n    var numStamps = 0;\n    \n    if($scope.moreInfoLoaded()) {\n      var itemData = itemFactory.getItemData($scope.item);\n      \n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\n          sealTimes = itemData.SealCount;\n            \n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\n            \n            var colName = 'Count0';\n            if($scope.item.enchantmentNum) {\n              colName = 'Count' + $scope.item.enchantmentNum;\n            }\n            \n            if(colName in sealData[0]) {\n              numStamps = sealData[0][colName];\n            }\n          }\n        }\n      }\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\n        if(itemData.Reversion == 2) {\n          if(itemData.CashTradeCount) {\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\n          }\n          else {\n            return 'can server storage, can use warranty';\n          }\n        }\n        else if(itemData.AbleWStorage) {\n          return 'can server storage';\n        }\n        else {\n          return 'not tradable';\n        }\n      }\n    }\n    \n    if(sealTimes && numStamps) {\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\n    }\n    else {\n      return '';\n    }\n  }\n  \n  $scope.moreInfoLoaded = function() {\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\n      dntData.isLoaded('sealcounttable.lzjson');\n  }\n  \n  $scope.loadMoreInfo = function() {\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\n    dntData.init('sealcounttable.lzjson', null, $timeout);\n  }\n  \n  $scope.handleChange = function() {\n    // console.log('changes');\n    if($scope.item.itemSource != 'custom') {\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\n    }\n    else {\n      setFullStats();\n      $scope.item = angular.copy($scope.item);\n    }\n    getBuilds();\n  }\n  \n  function getJobName() {\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function(job, index) {\n      if(job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n      }\n    });\n  }\n  \n  function init() {\n    getBuilds();\n    $scope.preInitItem = $scope.item;\n    $scope.item = null;\n  \n    var anyToLoad = false;\n    \n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, tryInit);\n        anyToLoad = true;\n      }\n    });\n    \n    if(!translations.isLoaded()) {\n      translations.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n    \n    if(!jobs.isLoaded()) {\n      jobs.init(reportProgress, tryInit);\n      anyToLoad = true;\n    }\n    \n    if(!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n\n  function isLoaded() {\n    var anyDntToLoad = false;\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        anyDntToLoad = true;\n      }\n    });\n\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\n  }\n  \n  function tryInit() {\n    if(isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\n      if($scope.item == null) {\n        return;\n      }\n      \n      setFullStats();\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\n      if($scope.item.itemSource != 'custom') {\n      \n        if($scope.item.typeName == 'skills') {\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          }\n          else {\n            $scope.item.pve = 'pvp';\n          }\n        }\n        else {\n          if($scope.item.needJobClass > 0) {\n            getJobName();\n          }\n        }\n        \n        setFileName();\n      }\n\n      setupTabs();\n    }\n  }\n\n  function setupTabs() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if(itemData.DisjointDrop1 > 0) {\n      $scope.canExtract = true;\n    }\n    \n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n      $scope.canTransfer = true;\n    } \n\n    if(itemData.Type == 0 || itemData.Type == 1) {\n      $scope.canTune = true;\n    }\n    \n    if($scope.item.setId) {\n      $scope.isInSet = true;\n    }\n    \n    if($scope.item.typeId == 5) {\n      $scope.isPlate = true;\n    }\n    \n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\n      $scope.hasContents = true;\n      $scope.detail = 'contents';\n    }\n    else if($scope.item.typeName != null) {\n      $scope.canUse = true;\n      $scope.detail = 'use';\n    }\n    else if($scope.canExtract) {\n      $scope.detail = 'extract';\n    }\n    else if($scope.canTransfer) {\n      $scope.detail = 'transfer';\n    }\n    else if($scope.canTune) {\n      $scope.detail = 'tuning';\n    }\n    else if($scope.isPlate) {\n      $scope.detail = 'plate';\n    }\n    else {\n      $scope.detail = 'attainment';\n    }\n  }\n  \n  function setFileName() {\n    if(!$scope.item.fileName) {\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\n      }\n    }\n  }\n  \n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    $scope.item.fullStats = $scope.item.stats;\n    \n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n    \n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n  \n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n  \n  function getBuilds() {\n    var builds = saveHelper.getSavedItems();\n    $scope.builds = builds;\n  }\n}]);","angular.module('dnsim').controller('ExportCtrl', \n  ['$scope','$window','saveHelper',\n   function($scope, $window, saveHelper) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | EXPORT';\n  \n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n  \n  $scope.save = function() {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  }\n}]);\n","angular.module('dnsim').controller('HeaderCtrl', \n[\n  function() {\n    'use strict';\n    var vm = this;\n  }\n]).directive('dngearsimHeader', function() {\n  return {\n    templateUrl: 'ui/nav/header.html',\n  };\n});","angular.module('dnsim').controller('NavCtrl', \n  ['$scope','$location','translations','region','itemCategory','saveHelper',\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\n    'use strict';\n    \n    try {\n      var noLocationMenu = [];\n      var normalMenu = [\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\n        {path: 'search', name:'search', icon: 'search'},\n        ];\n      \n      var buildAction = {path: 'build', name:'build'};\n      \n      var withBuildMenu = [\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\n        {path: 'search', name:'search', icon: 'search'},\n        buildAction,\n        ];\n        \n      region.init();\n    \n      $scope.isSearch = function() {\n        return $location.path().indexOf('/search') == 0;\n      }\n  \n      $scope.isLoading = function() {\n        return translations.startedLoading && \n              !translations.isLoaded() &&\n              region.tlocation != null &&\n              region.tlocation.url != '' &&\n              !$scope.noRegion();\n      }\n      \n      $scope.noRegion = function() {\n        return region.dntLocation == null;\n      }\n      \n      $scope.isHttpOnly = function() {\n        return location.protocol != 'https:' && location.hostname != 'localhost';\n      }\n        \n      $scope.getActions = function() {\n        try {\n          var menu = null;\n          \n          var currentBuild = saveHelper.getCurrentBuild();\n          if(currentBuild) {\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\n              // console.log('loading saved items');\n              $scope.savedItems = saveHelper.getSavedItems();\n            }\n            \n            if(!(currentBuild in $scope.savedItems)) {\n              currentBuild = null;\n            }\n          }\n    \n          if(region.dntLocation != null && region.dntLocation.url == '') {\n            menu = noLocationMenu; \n          }\n          else if(region.tlocation != null && region.tlocation.url == '') {\n            menu = noLocationMenu; \n          }\n          else if(currentBuild && currentBuild != 'null') {\n            menu = withBuildMenu;\n            buildAction.path = 'build?buildName=' + currentBuild;\n            buildAction.name = currentBuild;\n            if(currentBuild in $scope.savedItems) {\n              buildAction.build = $scope.savedItems[currentBuild];\n            }\n          }\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\n            menu = normalMenu;\n          }\n          else {\n            menu = normalMenu;\n          }\n          \n          var path = $location.path;\n          angular.forEach(menu, function(value, key) {\n            delete value.extraCss;\n            if(path && path.length == 1) {\n              if(value.path.length == 1) {\n                value.extraCss = 'active';\n              }\n            }\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\n              if(value.path != 'builds' || path == '/builds') {\n                value.extraCss = 'active';\n              }\n            }\n          });\n          \n          return menu;\n        }\n        catch(ex) {\n          $scope.simError = ex.message;\n          console.error(ex);\n        }\n      };\n    }\n    catch(ex) {\n      $scope.simError = ex.message;\n      console.error(ex);\n    }\n  }\n])\n.directive('dngearsimNav', function() {\n  return {\n    templateUrl: 'ui/nav/nav.html'\n  };\n});","angular.module('dnsim').controller('SetupCtrl', \n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'dngearsim | SETUP';\n  \n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n  \n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if(sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n  \n  $scope.location = sessionLocation;\n  if($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  }\n  else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n  \n  $scope.setLocation = function(url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  $scope.resetSessionData = function() {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function() {   \n      location.hash = '';\n      location.reload(true);\n    });\n  }\n  \n  $scope.loadUiString = function() {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.region = region.tlocation.region;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n  \n  function progress(msg) {\n    $timeout(\n      function() {\n        if($scope.testResults != null) {\n          $scope.testResults.push(msg);\n        }\n      });\n  }\n  \n  function progressTranslations(msg) {\n    $timeout(\n      function() {\n        if($scope.translationResults != null) {\n          $scope.translationResults.push(msg);\n        }\n      });\n  }\n  \n  $scope.saveLocation = function() {\n    dntReset();\n    if($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n      \n      region.init();\n      if(region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = [\n        'Location saved',\n        'Using location ' + $scope.location];\n    }\n  }\n  \n  $scope.testLocation = function() {\n    if($scope.location != noLocation) {\n      $scope.testResults = [\n        'Using location ' + $scope.location,\n        'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  }\n}]);\n","(function () {\n'use strict';\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\n\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.maxDisplay = 15;\n  vm.totalNumResults = 0;\n  \n  jobs.init(null, function() {\n    if($routeParams.jobId) {\n      vm.job = jobs.getById($routeParams.jobId);\n      getClassBuilds();\n    } \n  })\n  \n  this.setJob = function() {\n    $timeout(function() {\n      $location.search('jobId', vm.job.id);\n    });\n  }\n  \n  this.showMoreResults = function(extra) {\n    vm.maxDisplay = vm.totalNumResults + extra;\n    vm.totalNumResults = 0;\n  }\n  \n  vm.allResults = null;\n  vm.getFilteredBuilds = function() {\n    \n    // init\n    if(vm.allResults == null) {\n      vm.allResults = [];\n      for(var uid in vm.jobBuilds) {\n        for(var buildName in vm.jobBuilds[uid]) {\n          vm.allResults.push({\n            uid: uid,\n            name: buildName,\n            data: vm.jobBuilds[uid][buildName]\n          });\n        }\n      }\n    }\n    \n    var results = [];\n    for(var i=0;i<vm.allResults.length;++i) {\n      \n      var result = vm.allResults[i];\n      if(vm.filter && vm.filter.length > 0) {\n        var f = vm.filter.toUpperCase();\n        if(result.name.toUpperCase().indexOf(f) == -1) {\n          if(!result.data.guild ||\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\n\n            continue;\n          }\n        }\n      }\n      \n      results.push(result);\n\n      if(results.length >= vm.maxDisplay) {\n        break;\n      }\n    }\n    \n    vm.totalNumResults = results.length;\n    return results;\n  }\n  \n  function getClassBuilds() {\n    if(vm.job) {\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\n        if(builds) {\n          // console.log('got builds', builds);\n          vm.jobBuilds = builds;\n        }\n        else {\n          // console.log('no builds');\n          vm.jobBuilds = {};\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\n\nfunction profile($location, $routeParams, onlineService, saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  \n  getSavedBuilds();\n  getProfile();\n  \n  function getSavedBuilds() {\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\n      if(builds) {\n        vm.storedBuilds = builds;\n      }\n      else {\n        vm.storedBuilds = {};\n      }\n    });\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      build);\n      \n    vm.builds = saveHelper.getSavedItems();\n    \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\n\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.show = $routeParams.show;\n  \n  onlineService.login().then(function(user) {\n    getSavedBuilds();\n    getProfile();\n  \n    vm.builds = saveHelper.getSavedItems();\n  });\n  \n  function getSavedBuilds() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\n        if(builds) {\n          vm.storedBuilds = builds;\n        }\n        else {\n          vm.storedBuilds = {};\n        }\n      });\n    }\n  }\n  \n  function getProfile() {\n    var user = vm.getUser();\n    if(user) {\n      onlineService.getProfile(user.uid).then(function(profile) {\n        if(profile) {\n          vm.profile = profile;\n        }\n        else {\n          vm.profile = {};\n        }\n      });\n    }\n  }\n  \n  this.saveProfile = function() {\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\n  }\n  \n  this.getUser = function() {\n    return onlineService.getUser();\n  }\n  \n  this.save = function(buildName, build) {\n    build.lastUpdate = (new Date()).getTime();\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\n    vm.publishBuild = null;\n  }\n  \n  this.startPublish = function(buildName) {\n    if(buildName in vm.storedBuilds) {\n      if(!vm.builds[buildName].region) {\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\n      }\n      \n      if(!vm.builds[buildName].about) {\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\n      }\n      \n      if(!vm.builds[buildName].guild) {\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\n      }\n    }\n    \n    if(!vm.builds[buildName].region) {\n      vm.builds[buildName].region = region.dntLocation.region;\n    }\n    \n    vm.publishBuild = buildName;\n  }\n  \n  function handleError(err) {\n    console.log(err);\n  }\n  \n  this.deleteAccount = function() {\n    onlineService.deleteAccount(vm.storedBuilds);\n  }\n  \n  this.getBuildLimit = function() {\n    if(vm.profile && vm.profile.maxBuilds) {\n      return vm.profile.maxBuilds;\n    }\n    else {\n      return 15;\n    }\n  }\n  \n  this.getNumStoredBuilds = function() {\n    return _.size(vm.storedBuilds);\n  }\n  \n  this.getNumBuilds = function() {\n    return _.size(vm.builds);\n  }\n  \n  this.load = function(buildName, build) {\n\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      build);\n      \n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  this.signOut = function() {\n    onlineService.signOut();\n  }\n  \n  vm.deleteLocal = function(buildName) {\n    vm.localToDelete = buildName;\n  }\n  \n  vm.getAllBuildNames = function() {\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\n    return _.uniq(allKeys.sort(), true);\n  }\n  \n  vm.reallyDeleteLocal = function(buildName) {\n    saveHelper.updatedSavedItems(buildName, []);\n    vm.localToDelete = null;\n    vm.builds = saveHelper.getSavedItems();\n  }\n  \n  vm.deleteServer = function(buildName) {\n    vm.serverToDelete = buildName;\n  }\n  \n  vm.reallyDeleteServer = function(buildName) {\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\n    vm.serverToDelete = null;\n  }\n  \n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\n\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.uid = $routeParams.uid;\n  vm.buildName = $routeParams.buildName;\n  \n  getBuild();\n  getProfile();\n  \n  vm.copyLocally = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n      \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n  \n  function getProfile() {\n    onlineService.getProfile(vm.uid).then(function(profile) {\n      if(profile) {\n        vm.profile = profile;\n      }\n      else {\n        vm.profile = {};\n      }\n    });\n  }\n  \n  function getBuild() {\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\n      if(build) {\n        vm.build = build;\n        vm.stats = statHelper.getBuildStats(build);\n      }\n      else {\n        vm.build = {};\n      }\n    });\n  }\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim')\n.controller('AboutCtrl', \n  ['$window',\n  function($window) {\n    'use strict';\n    document.body.className = 'default-back';\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\n  }]\n);\n})();","(function () {\n'use strict';\nangular.module('dnsim').filter('escape', [function() {\n  'use strict';\n\n  function escapeFilter(input) {\n      if(input) {\n          return window.encodeURIComponent(input);\n      }\n      return '';\n  }\n\n  return escapeFilter;\n}]);\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').filter('percentage', [function() {\n  'use strict';\n\n  function percentageFilter(input) {\n    if(typeof input == 'number') {\n      return (Math.round(input * 100 * 100) / 100) + '%';\n    }\n    else {\n      return input;\n    }\n  }\n  percentageFilter.$stateful = false;\n\n  return percentageFilter;\n}]);\n\n})();","angular.module('dnsim').controller('buildActionsCtrl',\n\n['$location','saveHelper','exportLinkHelper',\nfunction($location,saveHelper,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.deleteGroup = function() {\n    $location.path('/delete-build');\n    $location.search('name', vm.buildName);\n  }\n  \n  this.editGroup = function() {\n    $location.path('/edit-build');\n    $location.search('buildName', vm.buildName);\n  }\n  \n  this.copyGroup = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n    \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n  \n  this.reloaded = false;\n  this.reloadGroup = function() {\n    $location.path('/reload-build');\n    $location.search('name', vm.buildName);\n  }\n  \n  function progress() {\n  }\n    \n  this.setShortUrl = function() {\n    if(vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  }\n  \n  this.setShortUrl();\n}])\n.directive('dngearsimBuildActions', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    templateUrl: 'ui/builds/build-actions.html'\n  };\n});","angular.module('dnsim').controller('buildExportActionCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.export = exportBuild;\n  \n  function exportBuild() {\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\n  }\n}])\n.directive('dngearsimBuildExportAction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildExportActionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-export-action.html'\n  };\n});","angular.module('dnsim').controller('BuildImportCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.onFileChange = onFileChange;\n  vm.copyLocally = copyLocally;\n  \n  function onFileChange(event) {\n    var files = event.target.files;\n    console.log('importing files', files);\n    if(files && files.length) {\n      \n      var fileName = files[0].name;\n      var reader = new FileReader();\n      reader.readAsText(files[0]);\n      reader.onload = function() {\n        vm.build = JSON.parse(reader.result);\n        if(fileName && fileName.length > 5) {\n          vm.buildName = fileName.substr(0, fileName.length-5);\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\n        }\n        else {\n          vm.buildName = 'imported build';\n        }\n        $timeout();\n      }\n    }\n  }\n  \n  function copyLocally() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.saveBuild(\n      newGroupName, \n      newGroupName,\n      vm.build);\n      \n    $location.path('/build');\n    $location.search('buildName', newGroupName);\n  }\n}]);","'use strict';\n  \nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      category: '=category',\n      server: '=server',\n      onChange: '&onChange'\n    },\n    controller: buildItemListController,\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-item-list.html'\n  };\n});\n\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\n\n  var vm = this;\n\n  vm.getCategoryItems = function() {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if(vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    }\n    else {\n      return [];\n    }\n  }\n\n  var subCats = {};\n  var subCatCatName = '';\n  vm.getSubCategories = function() {\n    if(subCatCatName != vm.category.name) {\n      subCats = {};\n      subCatCatName = vm.category.name;\n      var subCatList = [];\n\n      var items = vm.build.items.sort(function(item1, item2) {\n        return item1.exchangeType - item2.exchangeType;\n      });\n      if(vm.category.name == 'increasing gems') {\n        subCatList = _.filter(items, function(item) {\n          return item.increasingGemSlots > 0;\n        });\n      }\n      else if(vm.category.name == 'offensive gems') {\n        subCatList = _.filter(items, function(item) {\n          return item.offensiveGemSlots > 0;\n        });\n      }\n      else if(vm.category.name == 'imprint') {  \n        var costumeCat = itemCategory.byName('costume');\n        subCatList = _.filter(items, function(item) {\n          return itemCategory.isItemForCat(costumeCat, item);\n        });\n      }\n      _.each(subCatList, function(item) {\n        if(!(item.exchangeType in subCats)) {\n          subCats[item.exchangeType] = {\n            names: [],\n            slots: 0,\n            exchangeType: item.exchangeType\n          };\n        }\n\n        subCats[item.exchangeType].names.push(item.name);\n        if(vm.category.name == 'increasing gems') {\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\n        }\n        else if(vm.category.name == 'offensive gems') {\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\n        }\n        else {\n            subCats[item.exchangeType].slots = 1;\n        }\n      });\n      subCats[0] = null;\n    }\n    \n    return subCats;\n  }\n\n  vm.getNumTaken = function(subCat) {\n    var retVal = 0;\n    var exchangeId;\n    if(vm.category.name == 'imprint') {\n      exchangeId = subCat.exchangeType;\n    }\n    else {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      exchangeId = gemExchange.id;\n    }\n\n    if(exchangeId) {\n      var items = vm.getCategoryItems();\n      _.each(items, function(item) {\n        if(item.gemSlot == exchangeId) {\n          ++retVal;\n        }\n      });\n    }\n    return retVal;\n  }\n\n  vm.isInSubCat = function(item, subCat) {\n    if(!subCat && !item.gemSlot) {\n      return true;\n    }\n    else {\n      var exchangeId;\n      if(vm.category.name == 'imprint') {\n        exchangeId = item.gemSlot;\n      }\n      else {\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n          return e.id == item.gemSlot;\n        });\n        if(gemExchange) {\n          exchangeId = gemExchange.exchange;\n        }\n      }\n\n      if(!subCat && exchangeId) {\n        // check for invalid slot\n        var allSubCatItems = vm.getSubCategories();\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\n        });\n\n        if(!foundSubCatItem) {\n          return true;\n        }\n      }\n      else if(subCat && exchangeId) {\n        return exchangeId == subCat.exchangeType;\n      }\n      else {\n        return false;\n      }\n    }\n  }\n\n  vm.canMove = function() {\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\n  }\n\n  vm.getGemSlot = function(subCat) {\n    if(vm.category.name == 'imprint') {\n      return subCat.exchangeType;\n    }\n    else if(subCat) {\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\n        return e.exchange == subCat.exchangeType;\n      });\n\n      if(!gemExchange) {\n          console.log('cannot find exchange for', subCat);\n      }\n      return gemExchange.id;\n    }\n  }\n\n  vm.move = function(moveItem, destination) {\n    moveItem.gemSlot = vm.getGemSlot(destination);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.allowMoreItems = function() {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  vm.handleChange = function() {\n    subCatCatName = '';\n    vm.onChange();\n  }\n  \n  vm.handleItemEdit = function() {\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.cancelEdit = function() {\n    vm.onChange();\n  }\n  \n  vm.canEdit = function(item) {\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\n  }\n  \n  vm.removeItem = function(item) {\n    subCatCatName = '';\n    item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function(gItem, index) {\n      if(gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n\n    vm.build.items = newItemList;\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.handleChange();\n  }\n}","angular.module('dnsim').controller('buildItemCtrl',\n\n['$timeout','statHelper','saveHelper','hCodeValues',\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.updateItem = setFullStats;\n  vm.gemSlots = hCodeValues.gemExchanges;\n  vm.getGemSlotName = getGemSlotName;\n  \n  function getGemSlotName(item) {\n    if(item.gemSlot) {\n      for(var i=0;i<vm.gemSlots.length;++i) {\n        if(vm.gemSlots[i].id == item.gemSlot) {\n          return vm.gemSlots[i].name;\n        }\n      }\n    }\n  }\n  \n  function setFullStats() {\n    // full stats are cleared when publishing builds\n    vm.item.fullStats = vm.item.stats;\n    \n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\n    }\n    \n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\n    }\n  }\n  \n}])\n.directive('dngearsimBuildItem', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      editMode: '=editMode',\n      onChange: '&onChange',\n      cancelEdit: '&cancelEdit'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-item.html'\n  };\n});","angular.module('dnsim').controller('BuildListCtrl', \n  [ '$window','$location','$routeParams','$timeout','saveHelper',\n  function($window,$location,$routeParams,$timeout,saveHelper) {\n    'use strict';\n    \n    var vm = this;\n    document.body.className = 'saved-back';\n    this.setupBuilds = function() {\n      vm.savedItems = saveHelper.getSavedItems();\n      vm.buildNames = Object.keys(vm.savedItems).sort();\n      vm.builds = [];\n      for(var i=0;i<vm.buildNames.length;++i) {\n        vm.builds.push({\n          name: vm.buildNames[i],\n          build: vm.savedItems[vm.buildNames[i]],\n        });\n      }\n    }\n    this.setupBuilds();\n    \n    if('buildName' in $routeParams) {\n      if($routeParams.buildName in vm.savedItems) {\n        if($routeParams.buildName != this.currentGroup) {\n          this.currentGroup = $routeParams.buildName;\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n        }\n      }\n      else {\n        this.currentGroup = null;\n      }\n    }\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\n      $location.path('/build');\n      $location.search('buildName', this.currentGroup);\n    }\n    else {\n      this.currentGroup = null;\n    }\n    \n    if(this.currentGroup) {\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\n    }\n    else {\n      $window.document.title = 'dngearsim | BUILDS';\n    }\n\n    this.anyItems = function() {\n      return Object.keys(this.savedItems).length > 0;\n    }\n\n    this.createGroup = function() {\n      $location.path('/new-build');\n    }\n    \n    this.handleChange = function() {\n      vm.setupBuilds();\n      $timeout();\n      // console.log('change');\n    }\n  \n    this.toggleGroup = function(buildName) {\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\n      $location.url('/build?buildName=' + buildName);\n    }\n    \n    this.publish = function() {\n      $location.url('/publish');\n    }\n    \n    this.search = function() {\n      $location.url('/build-search');\n    }\n  }]\n);\n","'use strict';\n\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n      buildName: '=buildName',\n    },\n    controller: buildStatsController,\n    controllerAs: 'statsCtrl',\n    templateUrl: 'ui/builds/build-stats.html'\n  };\n});\n\nfunction buildStatsController(statHelper,dvStatcardHelper) {\n  var vm = this;\n\n  vm.exportStatCard = function() {\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\n    window.open(url);\n  }\n}","angular.module('dnsim').controller('buildSummaryCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.getBuildSummary = function(group) {\n    var summary = '';\n    \n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\n      if(itemsByType.length > 0) {\n        if(summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n    \n    return summary;\n  }\n}])\n.directive('dngearsimBuildSummary', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-summary.html'\n  };\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  \n  $window.document.title = 'dngearsim | TALISMANS';\n  $window.scrollTo(0, 0);\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = saveHelper.getCurrentBuild();\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    // console.log('cannot find build');\n    return;\n  }\n  \n  this.getGroupCalcStats = function() {\n    if(this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.pickup = function(index) {\n    vm.selectedIndex = index;\n    \n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n  this.headers = [\n    '+100%',\n    '+75%',\n    '+25%',\n    '+0%',\n    ];\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n  \n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n  \n  this.selectedIndex = -1;\n  \n  this.rows = [];\n  \n  this.updateRows = function() {\n    vm.rows = [];\n        \n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n      if(item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if(!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n        \n        var rowIndex = 0;\n        for(;;) {\n          if(!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n          \n          if(vm.rows[rowIndex][pcIndex].index < 0) {\n            if(!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n            \n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          }\n          else {\n            rowIndex++;\n          }\n        }\n      }\n      \n    });\n    \n    if(vm.rows.length < 3) {\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\n    }\n  };\n  \n  this.makeFakeCells = function(num) {\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\n  };\n  \n  this.makeCell = function(item, index) {\n    return { item: item, index: index };\n  };\n  \n  this.click = function(col) {\n    if(vm.selectedIndex == -1) {\n      if(col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    }\n    else {\n      vm.move(col);\n    }\n  };\n  \n  this.move = function(col) {\n    \n    var items = vm.savedItems[vm.groupName].items;\n    if(col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n      \n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    }\n    else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  };\n  \n  this.setTalisman = function(item, newEnhancementNum) {\n    var extraStats = [];\n    var useStats = hCodeValues.mergeStats(item.stats, []);\n    angular.forEach(useStats, function(stat, index) {\n      if(newEnhancementNum) {\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\n      }\n    });\n    \n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n    \n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  };\n  \n    \n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if(this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  };\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n    \n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n    \n    var extraStats = [];\n    var fullStats1 = [];\n    if(item.stats) {\n      var useStats = hCodeValues.mergeStats(item.stats, []);\n      angular.forEach(useStats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n    \n    extraStats = [];\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\n    angular.forEach(useItem2Stats, function(stat, index) {\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  };\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  };\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  };\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.save = function() {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/build');\n    $location.search('buildName', vm.groupName);\n  };\n  \n  this.updateRows();\n  \n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange',\n      server: '=server'\n    },\n    controller: bulidController,\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build.html'\n  };\n});\n\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\n  'use strict';  \n  var vm = this;\n  \n  vm.stats = statHelper.getBuildStats(vm.build);\n  \n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  vm.category = itemCategory.byName(selectedCategory);\n  if(!vm.category || vm.category.hideInBuild) {\n    selectedCategory = 'titles';\n    vm.category = itemCategory.byName('titles');\n  }\n  \n  vm.getCategoryItems = function() {\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\n    if(vm.category.name in itemsByCat) {\n      return itemsByCat[vm.category.name];\n    }\n    else {\n      return [];\n    }\n  }\n\n  vm.changeCategory = function() {\n    vm.xsView = null;\n    vm.moveItem = null;\n    vm.categoryChanging = true;\n    $timeout(function() {\n      vm.categoryChanging = false;\n    }, 0);\n  }\n  \n  vm.getCategories = function() {\n    return itemCategory.categories;\n  }\n    \n  vm.setSelectedCategory = function(value) {\n    vm.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  }\n  \n  vm.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  vm.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  vm.allowMoreItems = function() {\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  vm.getItemCount = function() {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n    \n    if(vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        }\n        else if(item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n      \n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    }\n    else if(vm.category.name == 'increasing gems') {\n      \n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if(!gemType) {\n            gemType = 0;\n          }\n          \n          if(!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        }\n        else if(item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n      \n      itemCountText = ''\n      angular.forEach(numIncreasingGems, function(number, gemType) {\n        if(itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n      \n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    }\n    else {\n      var numItems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n      \n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if(cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n    \n    return itemCountText;\n  }\n  \n  vm.newCustom = function() {\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\n    vm.build.items = vm.build.items.concat(newCustom);\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\n    vm.handleChange();\n  }\n  \n  vm.handleChange = function() {\n    vm.stats = statHelper.getBuildStats(vm.build);\n    vm.onChange();\n  }\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\n\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  this.newGroup = true;\n  if('name' in $routeParams) {\n      this.name = $routeParams.name;\n  }\n  \n  this.delete = function() {\n    saveHelper.deleteBuild(this.name);\n    $location.path('/builds/');\n  }\n    \n}]); ","(function () {\n'use strict';\n\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\n\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\n  'use strict';\n  \n  var vm = this;\n  vm.savedItems = saveHelper.getSavedItems();\n  vm.group = {};\n  vm.newGroup = true;\n  if('buildName' in $routeParams) {\n      vm.groupName = $routeParams.buildName;\n      if(vm.groupName in vm.savedItems) {\n        vm.group = vm.savedItems[vm.groupName];\n        vm.newGroup = false;\n      }\n  }\n  else {\n    vm.groupName = '';\n  }\n  vm.oldGroupName = vm.groupName;\n  vm.heroStats = [];\n  vm.elements = hCodeValues.elements;\n  vm.damageTypes = hCodeValues.damageTypes;\n  \n  vm.initDamageType = function() {\n    if(vm.job) {\n      if(vm.group.damageType) {\n        vm.damageType = vm.group.damageType;\n      }\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\n        if(vm.job.d.DamageType) {\n          vm.damageType = hCodeValues.damageTypes[2];\n        }\n        else {\n          vm.damageType = hCodeValues.damageTypes[1];\n        }\n      }\n      else {\n        vm.damageType = hCodeValues.damageTypes[0];\n      }\n    }\n  }\n\n  vm.initDefaultElement = function() {\n    var defaultElement = hCodeValues.elements[0];\n    var defaultSecondaryElement = hCodeValues.elements[0];\n\n    if(vm.job && vm.job.d) {\n      var jobName = vm.job.d.EnglishName;\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\n        defaultElement = hCodeValues.elements[3];\n        defaultSecondaryElement = hCodeValues.elements[3];\n      }\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\n        defaultElement = hCodeValues.elements[4];\n        defaultSecondaryElement = hCodeValues.elements[4];\n      }\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\n        defaultElement = hCodeValues.elements[1];\n        defaultSecondaryElement = hCodeValues.elements[1];\n      }\n      else if(jobName == 'ELESTRA') {\n        defaultElement = hCodeValues.elements[2];\n        defaultSecondaryElement = hCodeValues.elements[2];\n      }\n      else if(jobName == 'ADEPT') {\n        defaultElement = hCodeValues.elements[1];\n        defaultSecondaryElement = hCodeValues.elements[2];\n      }\n      else if(jobName == 'LIGHTFURY') {\n        defaultElement = hCodeValues.elements[3];\n        defaultSecondaryElement = hCodeValues.elements[4];\n      }\n    }\n\n    if(vm.newGroup) {\n      vm.element = defaultElement;\n      vm.secondaryElement = defaultSecondaryElement;\n    }\n    \n    if(!vm.element) {\n      vm.element = defaultElement;\n    }\n\n    if(!vm.secondaryElement) {\n      vm.secondaryElement = defaultElement;\n    }\n  }\n    \n  if(vm.group.element) {\n    vm.element = vm.group.element;\n  }\n  else {\n    vm.element = hCodeValues.elements[0];\n  }\n    \n  if(vm.group.secondaryElement) {\n    vm.secondaryElement = vm.group.secondaryElement;\n  }\n  else {\n    vm.secondaryElement = hCodeValues.elements[0];\n  }\n\n  if(!('critResist' in vm.group)) {\n    vm.critResist = 20;\n  }\n  else {\n    vm.critResist = vm.group.critResist;\n  }\n\n  if(!('eleResist' in vm.group)) {\n    vm.eleResist = 0;\n  }\n  else {\n    vm.eleResist = vm.group.eleResist;\n  }\n\n  if(vm.group.enemyLevel) {\n    vm.enemyLevel = vm.group.enemyLevel;\n  }\n  else {\n    vm.enemyLevel = 95;\n  }\n  \n  if(vm.group.playerLevel) {\n    vm.playerLevel = vm.group.playerLevel;\n  }\n  else {\n    vm.playerLevel = 95;\n  }\n  \n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\n    vm.heroLevel = vm.group.heroLevel;\n  }\n  else {\n    vm.heroLevel = 1;\n  }\n  \n  vm.init = function() {\n    var newJobs = jobs.getFinalJobs();\n    if(newJobs.length > 0) {\n      $timeout( function() {\n        \n        if('job' in vm.group) {\n          angular.forEach(newJobs, function(value, key) {\n            if(value.id == vm.group.job.id) {\n              vm.job = value;\n            }\n          });\n        }\n\n        vm.initDamageType();\n        vm.initDefaultElement();\n        vm.setHeroStats();\n      });\n    }\n  }\n  \n  vm.setJob = function() {\n    $window.scrollTo(0, 0);\n    $timeout(function() {\n      vm.initDamageType();\n      vm.initDefaultElement();\n    });\n  }\n  \n  region.init();\n  character.init(function() {\n    vm.init();\n  });\n  \n  vm.getStatCap = function(colName, useLevel) {\n    return character.getStatCaps(useLevel)[colName];\n  }\n  vm.getJobConversion = function(colName) {\n    return character.getConversions(vm.job.id)[colName];\n  }\n  vm.getJobBaseStat = function(colName) {\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\n  }\n  \n  vm.invalidGroupName = function() {\n    if(!vm.groupName) {\n      return true;\n    }\n    \n    if(vm.groupName in vm.savedItems) {\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  vm.ok = function() {\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\n    var conversions = character.getConversions(vm.job.id);\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\n    var heroStats = character.getHeroStats(vm.heroLevel);\n    \n    if(vm.newGroup) {\n      vm.oldGroupName = vm.groupName;\n      saveHelper.importGroup(vm.groupName, []);\n    }\n    \n    saveHelper.saveBuild(\n      vm.oldGroupName, \n      vm.groupName,\n      {\n      enemyLevel: vm.enemyLevel,\n      playerLevel: vm.playerLevel,\n      heroLevel: vm.heroLevel,\n      job: vm.job,\n      damageType: vm.damageType,\n      element: vm.element,\n      secondaryElement: vm.secondaryElement,\n      critResist: vm.critResist,\n      eleResist: vm.eleResist,\n      enemyStatCaps: enemyStatCaps, \n      playerStatCaps: playerStatCaps, \n      conversions: conversions,\n      baseStats: baseStats,\n      heroStats: heroStats\n      });\n    \n    $location.path('/build');\n    $location.search('buildName', vm.groupName);\n  }\n  \n  vm.setHeroStats = function() {\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\n  }\n  \n  $timeout(function() {\n    var input = document.getElementById('groupNameInput');\n    if(input) {\n      input.focus();\n      input.setSelectionRange(0, 9999);\n    }\n  });\n}\n\n})();","angular.module('dnsim').controller('quickAddCtrl',\n\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n  \n  this.setOptions = function() {\n    if(vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if(vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  }\n  \n  this.selectOption = function(value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n      \n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function(columns, fileName) {\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    }\n    else {\n      vm.setOptions();\n      // console.log('setup next step');\n    }\n  }\n  \n  this.tryToAddItem = function(dntFiles, item) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        if(vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          newItem.gemSlot = vm.gemSlot;\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.build.items.push(newItem);\n          vm.onChange();\n        }\n      }\n    }\n  }\n  \n  this.reset = function() {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function() {\n      vm.setOptions();\n    });\n  }\n  \n  this.hasStarted = function() {\n    return vm.startedForCat == vm.category.name;\n  }\n  \n  this.start = function() {\n    vm.startedForCat = vm.category.name;\n    \n    jobs.init(function() {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  }\n  \n  this.hasOptions = function() {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  }\n  \n  this.cancel = function() {\n    vm.startedForCat = '';\n    vm.reset();\n  }\n  \n  this.back = function() {\n    if(vm.stepNumber == 0) {\n      vm.cancel();\n    }\n    else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n        \n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\n      \n      vm.setOptions();\n    }\n  }\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\n  \n}])\n.directive('dngearsimQuickAdd', function() {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      gemSlot: '=gemSlot',\n      onChange: '&onChange',\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    templateUrl: 'ui/builds/quick-add.html'\n  };\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\n\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\n  'use strict';\n  \n  var vm = this;\n  if('name' in $routeParams) {\n      vm.name = $routeParams.name;\n  }\n  \n  var savedItems = saveHelper.getSavedItems();\n  if(vm.name in savedItems) {\n    vm.build = savedItems[vm.name];\n  }\n  \n  vm.reloaded = false;\n  vm.reload = function() {\n    dntReset();\n    vm.reloaded = false;\n    \n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n  }\n  \n  vm.goToBuild = function() {\n    $location.path('/build');\n    $location.search('buildName', vm.name);\n  }\n  \n  function progress() {\n  }\n\n  function tryInit() {\n    if(vm.reloaded) {\n      return;\n    }\n    \n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n    \n    if(allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\n      saveHelper.updatedSavedItems(vm.name, newItems);\n      vm.build.items = newItems;\n      \n      vm.reloaded = true;\n    }\n  }\n    \n}","angular.module('dnsim').controller('ViewGroupCtrl', \n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\n    'use strict';\n  \n    document.body.className = 'saved-back';\n    \n    region.setLocationByName($routeParams.region);\n    \n    $scope.buildName = '';\n    $scope.build = {};\n    \n\n    if('g' in $routeParams && 'i' in $routeParams) {\n      $scope.buildName = $routeParams.g;\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\n      \n      $scope.enemyLevel = $routeParams.e;\n      $scope.playerLevel = $routeParams.p;\n      $scope.heroLevel = $routeParams.h;\n      $scope.job = { id: $routeParams.j };\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n      $scope.element = hCodeValues.elements[$routeParams.t];\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n        \n      var items = [];\n      \n      var itemString = $routeParams.i;\n      \n      angular.forEach(itemString.split(','), function(itemStr, index) {\n        var item = exportLinkHelper.decodeItem(itemStr);\n        \n        if(item.id > 0) {\n          items.push(item);\n        }\n      });\n\n      $scope.build = {};\n      $scope.savedItems = {};\n      $scope.savedItems[$scope.buildName] = $scope.build;\n      $scope.build.items = items;\n      $scope.isLoading = true;\n      \n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        dntData.init(fileName, columns, progress, tryInit);\n      });\n      \n      translations.init(progress, tryInit);\n      jobs.init(progress, tryInit);\n      character.init(tryInit);\n      \n      $timeout();\n    }\n    \n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n    \n    function tryInit() {\n      \n      var allInit = true;\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allInit = false;\n        }\n      });\n      \n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n        return;\n      }\n      \n      $timeout(function() {\n        var groupName = $scope.buildName;\n        var group = $scope.build;\n        \n        $scope.job = jobs.getById($scope.job.id);\n        \n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n        if($scope.job) {\n          $scope.conversions = character.getConversions($scope.job.id);\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n        }\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\n        \n        var newItems = groupHelper.reloadGroup(groupName, group);\n      \n        $scope.savedItems = {};\n        $scope.build = {\n          items: newItems,\n          lastUpdate: group.lastUpdate,\n\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats,\n        };\n        $scope.savedItems[groupName] = $scope.build;\n        $scope.stats = statHelper.getBuildStats($scope.build);\n        \n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n      });\n    }\n    \n    function progress() {\n    }\n    \n    $scope.copyGroup = function() {\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n      // console.log('copying in as ' + newBuildName);\n      \n      saveHelper.saveBuild(\n        newBuildName, \n        newBuildName,\n        {\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          critResist: $scope.critResist,\n          eleResist: $scope.eleResist,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats\n        });\n      \n      $location.url('/build?buildName=' + newBuildName);\n    }\n  }]\n);\n","angular.module('dnsim').controller('RegionCtrl', \n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\n    'use strict';\n    \n    var vm = this;\n\n    vm.override = region.getOverride();\n    region.init();\n    translations.init(\n      function(msg) { \n        // console.log(msg);\n      }, \n      function() {\n        $timeout();\n      });\n      \n    vm.region = region;\n    vm.tHoverLocation = region.tlocation;\n    vm.hoverLocation = region.dntLocation;\n    vm.edit = (region.dntLocation == null);\n    vm.dntVersion = '';\n    setDntVersion();\n    \n    function setDntVersion() {\n      // console.log('setting version for ', vm.region.dntLocation);\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\n          if(res && res.data) {\n            var newLineDetails = res.data.split('\\r\\n');\n            if(newLineDetails.length) {\n              var spaceDetails = newLineDetails[0].split(' ');\n              if(spaceDetails.length > 1) {\n                vm.dntVersion = 'v' + spaceDetails[1];\n              }\n            }\n          }\n        });\n      }\n    }\n    \n    vm.getDntLocation = function() {\n      return region.dntLocation;\n    };\n    vm.getTlocation = function() {\n      return region.tlocation;\n    };\n     \n    vm.getHostedFiles = function() {\n      // console.log('getting hosted files');\n      return region.hostedFiles;\n    };\n    \n    vm.getWorldName = function() {\n      if(translations.isLoaded()) {\n        return translations.translate(10169);\n      }\n      else {\n        return '';\n      }\n    };\n    \n    vm.setTLocation = function(location) {\n      region.setTLocation(location);\n      vm.edit = false;\n    };\n    \n    vm.setLocation = function(location) {\n      if(!vm.override) {\n        vm.setTLocation(null);\n      }\n      \n      if($routeParams.region) {\n        $routeParams.region = location.region;\n        $route.updateParams($routeParams);\n        $route.reload();\n      }\n      else {\n        region.setLocation(location);\n      }\n      vm.edit = false;\n      setDntVersion();\n    };\n    \n    vm.setOverride = function(value) {\n      region.setOverride(value);\n      vm.override = value;\n      vm.edit = value;\n    };\n  }\n])\n.directive('dngearsimRegion', function() {\n  return {\n    templateUrl: 'ui/region/region.html',\n    controllerAs: 'ctrl',\n  };\n});","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\n  return {\n    scope: {},\n    bindToController: {\n    },\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\n    controllerAs: 'customItems',\n    templateUrl: 'ui/search/custom-items.html'\n  };\n});\n\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\n  'use strict';\n\n  var vm = this;\n  \n  this.customItems = hCodeValues.customItems;\n  \n  this.maxDisplay = 10;\n  this.currentResults = 0;\n  \n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n  \n  this.getResults = function() {\n    return this.customItems;\n  }\n  \n  this.getNewStatName = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      return 'unnamed custom item';\n    }\n    else {\n      return this.nameSearch;\n    }\n  }\n  \n  this.createCustomItem = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      this.nameSearch = this.getNewStatName();\n    }\n    $location.path('/item/_custom:.' + this.nameSearch);\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\n  return {\n    scope: {},\n    bindToController: {\n      nameSearch: '=nameSearch'\n    },\n    controller: everythingSearchCtrl,\n    controllerAs: 'items',\n    templateUrl: 'ui/search/everything-search.html'\n  };\n});\n\n\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\n    \n  var vm = this;\n  \n  vm.everything = null;\n  vm.maxDisplay = 32;\n  vm.currentResults = 0;\n  vm.results = null;\n  vm.minLevel = 1;\n  vm.maxLevel = 99;\n  vm.version = 'all';\n  vm.versions = [vm.version];\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if($routeParams.minLevel) {\n    minLevel = Number($routeParams.minLevel);\n  }\n  if(minLevel > 0 && minLevel < 100) {\n    vm.minLevel = minLevel;\n  }\n  vm.origMinLevel = minLevel;\n  \n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if($routeParams.maxLevel) {\n    maxLevel = Number($routeParams.maxLevel);\n  }\n  if(maxLevel > 0 && maxLevel < 100) {\n    vm.maxLevel = maxLevel;\n  }\n  vm.origMaxLevel = maxLevel;\n\n  if(!vm.nameSearch) {\n    vm.nameSearch = localStorage.getItem('nameSearch');\n    if($routeParams.name) {\n      vm.nameSearch = $routeParams.name;\n    }\n    if(vm.nameSearch == null) {\n      vm.nameSearch = '';\n    }\n  }\n  \n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\n  \n  vm.initeverything = function() {\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\n      vm.everything = [];\n      \n      var versionMap = {};\n      var datas = dntData.getData(fileName);\n      // console.log(datas.length + ' everything');\n      for(var i=0;i<datas.length;++i) {\n        var data = datas[i];\n        if(data.NameID > 0) {\n          var item = {\n            id: data.id,\n            name: translations.translate(data.NameID, data.NameIDParam),\n            rank: hCodeValues.rankNames[data.Rank],\n            icon: data.IconImageIndex,\n            levelLimit: data.LevelLimit,\n            fileName: data.fileName,\n            version: data.version\n          }\n          vm.everything.push(item);\n\n          if(data.version) {\n            versionMap[data.version] = true;\n          }\n        }\n      }\n\n      for(var version in versionMap) {\n        vm.versions.push(version);\n      }\n      \n      vm.everything = _.sortBy(vm.everything, 'name');\n      \n      $timeout(function() {\n        vm.showMoreResults();\n      });\n    }\n  }\n  \n  vm.getResults = function() {\n    if(vm.everything == null) {\n      vm.initeverything();\n    }\n    \n    if(vm.everything == null) {\n      return [];\n    }\n\n    var newResults = [];\n    var numeverything = vm.everything.length;\n    var curDisplay = 0;\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\n      var e = vm.everything[i];\n\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\n        continue;\n      }\n\n      if(vm.version != 'all' && vm.version != e.version) {\n        continue;\n      }\n\n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(nameSearches.length == 0) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      newResults.push(e);\n      curDisplay++;\n    }\n    \n    vm.totalNumResults = newResults.length;\n    return newResults;\n  }\n  \n  vm.changeSearch = function() {\n    if(vm.minLevel != vm.origMinLevel) {\n      localStorage.setItem('minLevel', vm.minLevel);\n      $location.search('minLevel', vm.minLevel);\n      vm.origMinLevel = vm.minLevel;\n    }\n    \n    if(vm.maxLevel != vm.origMaxLevel) {\n      localStorage.setItem('maxLevel', vm.maxLevel);\n      $location.search('maxLevel', vm.maxLevel);\n      vm.origMaxLevel = vm.maxLevel;\n    }\n\n    localStorage.setItem('nameSearch', vm.nameSearch);\n    $location.search('name', vm.nameSearch);\n    \n    vm.maxDisplay = 64;\n    vm.results = vm.getResults();\n  }\n\n  vm.showMoreResults = function() {\n    $timeout(function() {\n      // console.log('show more', vm.maxDisplay);\n      vm.maxDisplay += 18;\n      vm.results = vm.getResults();\n    });\n  }\n\n  var fileName = 'all-items.lzjson';  \n  dntData.init(fileName, null, function() {}, function() {\n    vm.initeverything();\n  }, false);\n\n  translations.init(null, vm.initeverything);\n}\n\n})();\n","(function () {\n'use strict';\n\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\n'translations',\n'itemCategory',\n'jobs',\n'hCodeValues',\n'itemFactory',\n'region',\n'saveHelper', itemSearchCtrl];\n\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\n\nfunction itemSearchCtrl(\n  $scope,$window,$routeParams,$timeout,$location,$route,\n  translations,\n  itemCategory,\n  jobs,\n  hCodeValues,\n  itemFactory,\n  region,\n  saveHelper) {\n  'use strict';\n  \n  var vm = this;\n  \n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\n  if(!vm.itemCategory) {\n     var catName = localStorage.getItem('selectedItemCategory');\n     if(!catName) {\n       catName = 'titles';\n     }\n     \n     vm.itemCategory = itemCategory.byName(catName);\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\n       catName = 'titles';\n       vm.itemCategory = itemCategory.byName('titles');\n     }\n     if(vm.itemCategory) {\n       // console.log('moving');\n       $location.search('cat', vm.itemCategory.path);\n       $route.reload();\n     }\n     return;\n  }\n  \n  \n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\n  \n  vm.job = {id: -1, name: ''};\n  vm.jobs = [vm.job];\n  vm.allJobs = [];\n  vm.minLevel = 1;\n  vm.maxLevel = 99;\n  vm.maxDisplay = 10;\n  vm.totalNumResults = 0;\n  vm.grades = hCodeValues.rankNames;\n  vm.stat = {id:-1, name:''};\n  vm.stats = [vm.stat];\n  vm.results = null;\n  \n  angular.forEach(hCodeValues.stats, function(stat, statId) {\n    if(stat.searchable) {\n      vm.stats.push(stat);\n    }\n  });\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if($routeParams.minLevel) {\n    minLevel = Number($routeParams.minLevel);\n  }\n  if(minLevel > 0 && minLevel < 100) {\n    vm.minLevel = minLevel;\n  }\n  vm.origMinLevel = minLevel;\n  \n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if($routeParams.maxLevel) {\n    maxLevel = Number($routeParams.maxLevel);\n  }\n  if(maxLevel > 0 && maxLevel < 100) {\n    vm.maxLevel = maxLevel;\n  }\n  vm.origMaxLevel = maxLevel;\n  \n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if($routeParams.name) {\n    vm.nameSearch = $routeParams.name;\n  }\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\n  if($routeParams.stat) {\n    vm.origSavedSearchStatId = $routeParams.stat;\n  }\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\n  }\n\n  vm.navigate = function() {\n    var catName = localStorage.getItem('selectedItemCategory');\n    if(catName) {\n      vm.itemCategory = itemCategory.byName(catName);\n      if(vm.itemCategory) {\n        // console.log('navigating to ', vm.itemCategory.path);\n        $location.search('cat', vm.itemCategory.path);\n        vm.save();\n        $route.reload();\n      }\n    }\n  }\n\n  vm.save = function() {\n    if(!vm.itemCategory.hideLevel) {\n      if(vm.minLevel != vm.origMinLevel) {\n        localStorage.setItem('minLevel', vm.minLevel);\n        $location.search('minLevel', vm.minLevel);\n        vm.origMinLevel = vm.minLevel;\n      }\n      \n      if(vm.maxLevel != vm.origMaxLevel) {\n        localStorage.setItem('maxLevel', vm.maxLevel);\n        $location.search('maxLevel', vm.maxLevel);\n        vm.origMaxLevel = vm.maxLevel;\n      }\n    }\n    else {\n      $location.search('minLevel', null);\n      $location.search('maxLevel', null);\n    }\n    \n    if(!vm.itemCategory.hideJob) {\n      if(vm.job != null) {\n        if(vm.origJobNumber != vm.job.id) {\n          localStorage.setItem('jobNumber', vm.job.id);\n          if(vm.job.id > -1) {\n            $location.search('job', vm.job.id);\n          }\n          else {\n            $location.search('job', null);\n          }\n          vm.origJobNumber = vm.job.id;\n        }\n      }\n    }\n    else {\n      $location.search('job', null);\n    }\n  \n    if(vm.stat) {\n      if(vm.origSavedSearchStatId != vm.stat.id) {\n        localStorage.setItem('searchStat', vm.stat.id);\n        if(vm.stat.id > -1) {\n          $location.search('stat', vm.stat.id);\n        }\n        else {\n          $location.search('stat', null);\n        }\n        \n        vm.origSavedSearchStatId = vm.stat.id;\n      }\n    }\n\n    localStorage.setItem('nameSearch', vm.nameSearch);\n    $location.search('name', vm.nameSearch);\n  };\n  \n  function init() {\n    jobs.init(reportProgress, jobInit);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    // console.log('called the job init func');\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      // console.log('trying to init jobs');\n      // console.log('job dropdown should be set');\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, vm.jobs[0]);\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if($routeParams.job && $routeParams.job) {\n        lastJobNumber = Number($routeParams.job);\n      }\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            return;\n          }\n        });\n      }\n\n      itemCategory.init(vm.itemCategory.name, loadResults);\n    }\n  }\n  \n  vm.rankChecked = hCodeValues.checkedRank;\n    \n  vm.changeSearch = function() {\n    vm.save();\n    loadResults();\n  }\n  \n  function loadResults() {\n    vm.maxDisplay = 24;\n    vm.results = getResults();\n  }\n  \n  function getResults() {\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\n    if(allItems == null) {\n      return null;\n    }\n    \n    allItems = allItems.sort(function(item1, item2) {\n        return (item2.levelLimit - item1.levelLimit);\n      });\n          \n    var pcStatId = -1;\n    if('pc' in vm.stat) {\n      pcStatId = vm.stat.pc;\n    }\n          \n    var altStatId = -1;\n    if('altStat' in vm.stat) {\n      altStatId = vm.stat.altStat;\n    }\n  \n    var statVals = [];\n    var newResults = [];\n    var numEquip = allItems.length;\n    var curDisplay = 0;\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\n      var e = allItems[i];\n      if(e) {\n        \n        if(!vm.itemCategory.hideLevel) {\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideRank) {\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\n            continue;\n          }\n        }\n          \n        if(!vm.itemCategory.hideJob) {\n          if(vm.job && vm.job.id > -1) {\n            if(!vm.job.isClassJob(e.needJobClass)) {\n              continue;\n            }\n          }\n        }\n        \n        itemFactory.initItem(e);\n        if(e.typeName != vm.itemCategory.name) {\n          continue;\n        }\n        // console.log('name filter', vm.nameSearch); \n        \n        if(vm.nameSearch != '') {\n          // console.log('filtering on name');\n          var nameSearches = vm.nameSearch.split(' ');\n          if(!nameSearches.length) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        if(vm.stat.id >= 0) {\n          var statFound = false;\n          \n          var statVal = {};\n          for(var s=0;s<e.stats.length;++s) {\n            var stat = e.stats[s];\n            if(stat.id == vm.stat.id) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n              break;\n            }\n            else if(stat.id == pcStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n            else if(stat.id == altStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n          }\n          \n          if(!statFound) {\n            continue;\n          }\n          else {\n            statVals.push(statVal);\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n    }\n    \n    if(vm.stat.id >= 0) {\n      \n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\n      \n      statVals = statVals.sort(function(value1, value2) {\n        return value2.s - value1.s;\n      });\n      \n      var statResults = [];\n      for(var i=0;i<currentResults;++i) {\n        statResults.push(newResults[statVals[i].i]);\n      }\n      newResults = statResults;\n    }\n    \n    vm.totalNumResults = newResults.length;\n    \n    return newResults;\n  }\n\n  vm.showMoreResults = function() {\n    $timeout(function() {\n      vm.maxDisplay += 18;\n      vm.results = getResults();\n    });\n  }\n  \n  region.init();\n  translations.init(reportProgress, init);\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\n  return {\n    scope: {},\n    bindToController: {\n      job: '=job',\n      jobs: '=jobs',\n    },\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\n    controllerAs: 'skillSearch',\n    templateUrl: 'ui/search/skill-search.html'\n  };\n});\n\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\n\n  var vm = this;\n  \n  vm.allJobs = [];\n  vm.dntName = '';\n  vm.skills = [];\n  vm.loadedJobId = -1;\n\n  vm.itemCategory = itemCategory.byName('skills');\n\n  vm.nameSearch = localStorage.getItem('nameSearch');\n  if(!vm.nameSearch) {\n    vm.nameSearch = '';\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n\n  vm.navigate = function() {\n    $timeout(function() {\n      if(vm.itemCategory) {\n        $location.path(vm.itemCategory.path);\n      }\n    });\n  }\n  \n  vm.isLoading = function() {\n    \n    if(!translations.isLoaded()) {\n      // console.log('transations not loaded');\n      if(!translations.startedLoading) {\n        translations.init(reportProgress, function() { } );\n      }\n\n      return true;\n    }\n    \n    var baseName = jobs.getBaseJobName(vm.job);\n    var dntName = getDntName(baseName);\n    if(dntName) {\n      if(!dntData.isLoaded(dntName)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  \n  function getDntName(baseClassName) {\n    // console.log('got base class :' + baseClassName);\n    if(baseClassName != null) {\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n    }\n    else {\n      return null;\n    }\n  }\n\n  function getSkills() {\n    // console.log('getting skills for ' + vm.job.name);\n    if(vm.loadedJobId == vm.job.id) {\n      return vm.skills;\n    }\n    else {\n      \n      var baseJobNames = [];\n      if(vm.job.id >= 0) {\n        var baseName = jobs.getBaseJobName(vm.job);\n        baseJobNames.push(baseName);\n      }\n\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n        if(dntName) {\n          if(!dntData.isLoaded(dntName)) {\n            // console.log('loading skills for ' + baseName);\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\n          }\n          else {\n            setupSkills(baseJobNames, vm.job);\n          }\n        }\n      });\n    }\n  }\n  \n  function setupSkills(baseJobNames, job) {\n    \n    vm.skills = [];\n    var allReady = true;\n    angular.forEach(baseJobNames, function(baseName, index) {\n      var dntName = getDntName(baseName);\n      if(!dntData.isLoaded(dntName)) {\n        allReady = false;\n      }\n    });\n    \n    if(allReady) {\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n      \n        var skills = dntData.getData(dntName);\n        var numSkills = skills.length;\n        for(var s=0;s<numSkills;++s) {\n          if(skills[s].NameID == 0) {\n            continue;\n          }\n          \n          if(skills[s].EffectClass1 > 0 || \n             skills[s].EffectClass2 > 0 || \n             skills[s].EffectClass3 > 0 || \n             skills[s].EffectClass4 > 0 ||\n             skills[s].EffectClass5 > 0 ||  \n             skills[s].EffectClass6 > 0) {\n               \n            var newItem = {d: skills[s]};\n            \n            newItem.id = skills[s].id;\n            newItem.typeName = 'skills';\n            newItem.itemSource = 'skills';\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n            newItem.needJobClass = skills[s].NeedJob;\n            newItem.rank = hCodeValues.rankNames[0];\n            newItem.baseJobName = baseName.toLowerCase();\n            newItem.icon = skills[s].IconImageIndex;\n            \n            vm.skills.push(newItem);\n          }\n        }\n      });\n  \n      vm.loadedJobId = job.id;\n    }\n  }\n  \n  vm.getResults = function() {\n    \n    var skills = getSkills();\n    if(skills == null) {\n      return [];\n    }\n    \n    if(vm.job && vm.job.id >= 0) {\n      localStorage.setItem('jobNumber', vm.job.id);\n    }\n    localStorage.setItem('nameSearch', vm.nameSearch);\n\n    var newResults = [];\n    var numSkills = skills.length;\n    var curDisplay = 0;\n    for(var i=0;i<numSkills;++i) {\n      var e = skills[i];\n      \n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(!nameSearches.length) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n        continue;\n      }\n      \n      newResults.push(e);\n    }\n    return newResults;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      var newJobs = jobs.getFinalJobs();\n\n      if(vm.jobs && vm.jobs.length) {\n        newJobs.splice(0, 0, vm.jobs[0]);\n      }\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      // console.log('using job', lastJobNumber);\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            // console.log('using job', value);\n            return;\n          }\n        });\n      }\n      \n      vm.getResults();\n    }\n  }\n  \n  function init() {\n    // console.log('skill init');\n    if(jobs.isLoaded()) {\n      $timeout(jobInit);\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\n\nfunction chooseClass() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      job: '=job',\n      onSetJob: '&onSetJob'\n    },\n    templateUrl: 'ui/widgets/choose-class.html',\n    controllerAs: 'ctrl',\n    controller: [\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \n      chooseClassController],\n  };\n}\n\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  this.getFinalJobs = function() {\n    var allJobs = jobs.getFinalJobs();\n    var finalJobs = [];\n    for(var j=0;j<allJobs.length;++j) {\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n        finalJobs.push(allJobs[j]);\n      }\n    }\n    return finalJobs;\n  }\n  \n  this.getBaseJobs = function() {\n    return jobs.getBaseJobs();\n  }\n  \n  this.getJobName = function(englishName) {\n    var allJobs = jobs.getAllJobs();\n    for(var j=0;j<allJobs.length;++j) {\n      if(allJobs[j].d.EnglishName == englishName) {\n        return allJobs[j].name;\n      }\n    }\n  }\n  \n  this.setJob = function(job) {\n    this.job = job;\n    if(job) {\n      this.onSetJob();\n    }\n  }\n  \n  \n  jobs.init(reportProgress, $timeout);\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\n\nfunction dnsimCategoryLinks() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      collapse: '=collapse',\n      cat: '=cat',\n      buildScreen: '=buildScreen',\n      onChange: '&onChange'\n    },\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\n    controller: dnsimCategoryLinksController,\n    controllerAs: 'ctrl',\n  };\n};\n\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\n\n  var vm = this;\n\n  vm.categories = itemCategory.categories;\n  vm.collapsed = true;\n\n  vm.shouldShow = function(action) {\n    if(vm.buildScreen) {\n      return !action.hideInBuild;\n    }\n    else {\n      return !action.hideInSearch;\n    }\n  }\n\n  vm.isLoading = function() {\n    return !translations.loaded;\n  }\n\n  vm.setCategory = function(action) {\n    \n    if(vm.collapse) {\n      // console.log('collapsing cat', action);\n      vm.collapsed = !vm.collapsed;\n      $window.scrollTo(0, 0);\n    }\n    \n    // console.log('setting cat', action);\n    if(vm.cat != action) {\n      vm.cat = action;\n      localStorage.setItem('selectedItemCategory', action.name);\n\n      if(vm.onChange) {\n        vm.onChange();\n      }\n    }\n  }\n\n  vm.getName = function(action) {\n    if(action.tId) {\n      return translations.translate(action.tId).toLowerCase();\n    }\n    else {\n      return $translate.instant(action.name);\n    }\n  }\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\n\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.iconImage = $scope.getIcon();\n        }\n      });\n      \n      $scope.getIcon = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\n          \n          var prefix;\n          if($scope.item.typeName == 'skills') {\n            prefix = 'skillicon';\n          }\n          else {\n            prefix = 'itemicon';\n          }\n          \n          if(fileIndex > 9) {\n            return prefix + fileIndex + '.png';\n          }\n          else {\n            return prefix + '0' + fileIndex + '.png';\n          }\n        }\n        return null;\n      }\n      \n      $scope.iconImage = $scope.getIcon();\n      \n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (($scope.item.icon % 10) * 40) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\n\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n      noClick: '=noClick',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\n    link: function($scope, element, attrs) {\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\n        }\n      });\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\n\nfunction dnsimJobIcon() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: {\n      item: '=item',\n      small: '=small'\n    },\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\n    controller: dnsimJobIconController,\n    controllerAs: 'ctrl'\n  }\n}\n\nfunction dnsimJobIconController() {\n  \n  if(this.small) {\n    this.sizeValue = '205px 205px';\n    this.iconSize = 22;\n    this.iconOffset = 0;\n  }\n  else {\n    this.sizeValue = '410px 410px';\n    this.iconSize = 44;\n    this.iconOffset = 5;\n  }\n\n  this.getIconXPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\n    }\n    return 0;\n  }\n  \n  this.getIconYPostion = function() {\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\n    }\n    return 0;\n  }\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\n\nfunction dnsimLoading(dntData, translations, $timeout, region) {\n  'use strict';\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n      alsoShowFor: '=alsoShowFor',\n    },\n    templateUrl: 'ui/widgets/dnsim-loading.html',\n    link: function($scope, element, attrs) {\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n      \n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n\n      $scope.numLoading = 0;\n      $scope.setLoadCount = function() {\n        $scope.noRegion = !region.dntLocation;\n        \n        var n = dntData.anyLoading();\n        if(!translations.isLoaded())\n        {\n          n++;\n        }\n        \n        // $timeout(function() {\n          if($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n        // });\n        $timeout();\n      };\n      \n      $scope.loadError = false;\n      $scope.setLoadCount();\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\nfunction dnsimSelectAllOnClick() {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var hasSelectedAll = false;\n      element.on('click', function($event) {\n        if (!hasSelectedAll) {\n          try {\n            //IOs, Safari, thows exception on Chrome etc\n            this.selectionStart = 0;\n            this.selectionEnd = this.value.length + 1;\n            hasSelectedAll = true;\n          } catch (err) {\n            //Non IOs option if not supported, e.g. Chrome\n            this.select();\n            hasSelectedAll = true;\n          }\n        }\n      });\n      //On blur reset hasSelectedAll to allow full select\n      element.on('blur', function($event) {\n        hasSelectedAll = false;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\n\nfunction dnsimStats(hCodeValues, $translate) {\n  return {\n    restrict: 'A',\n    scope: {\n      stats: '=stats',\n      build: '=build',\n      altStats: '=altStats',\n      separator: '=separator',\n      filter: '=filter',\n      numInSet: '=numInSet'\n    },\n    link: function($scope, element, attrs) {\n      \n      var sep;\n      if(!$scope.separator) {\n        sep = '';\n      }\n      else {\n        sep = '&nbsp;' + $scope.separator + ' ';\n      }\n      \n      var addedElements = [];\n      var originalDisplay = element.css('display');\n      \n      function showStats() {\n        element.css('display', 'none' );\n        var stats = $scope.stats;\n        if(!stats) {\n          stats = $scope.altStats;\n        }\n        \n        angular.forEach(addedElements, function(value, key) {\n          value.remove();\n        });\n        \n        var first = true;\n        var lastElement = element;\n        \n        function append(text) {\n          var newElement = element.clone();\n          newElement.css('display', originalDisplay);\n          newElement.html(text);\n          \n          lastElement.after(newElement);\n          lastElement = newElement;\n          addedElements.push(newElement);\n        }\n\n        // get stats that are used to summarise\n        var summaryForStats = {};\n        angular.forEach(stats, function(stat, key) {\n          var def = hCodeValues.stats[stat.id];\n          if(def && def.summaryFor) {\n            summaryForStats[def.summaryFor] = stat;\n          }\n        });\n        \n        angular.forEach(stats, function(stat, key) {\n          var output = '';\n\n          // console.log('processing stat', stat);\n          \n          if(stat.id in hCodeValues.stats) {\n            \n            var def = hCodeValues.stats[stat.id];\n            if(!$scope.filter && 'hide' in def && def.hide) {\n              return;\n            }\n            \n            if($scope.filter && !def[$scope.filter]) {\n              return;\n            }\n\n            if(def.summaryFor) {\n              return;\n            }\n            // console.log('no summaryFor');\n\n            // hide when the hideIf stat exists\n            if('hideIf' in def && def.hideIf > 0) {\n              var hideStat = _.find(stats, function(s) {\n                return s.id == def.hideIf;\n              });\n              if(hideStat) {\n                return;\n              }\n            }\n\n            // alter stat when addTo is set\n            if('addTo' in def && def.addTo > 0) {\n              var addStat = _.find(stats, function(s) {\n                return s.id == def.addTo;\n              });\n              if(addStat) {\n                stat = _.clone(stat);\n                stat.max += addStat.max;\n              }\n            }\n            \n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              if(stat.needSetNum <= $scope.numInSet) {\n                output += '*';\n              }\n              output += stat.needSetNum + '&nbsp;';\n            }\n\n            output += '<strong>';\n            \n            if($scope.build) {\n              if(def.element == 'primary') {\n                var eleId = 0;\n                if($scope.build.element) {\n                  eleId = $scope.build.element.id;\n                }\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n              }\n              else if(def.element == 'secondary') {\n                var eleId = 0;\n                if($scope.build.secondaryElement) {\n                  eleId = $scope.build.secondaryElement.id;\n                }\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\n              }\n            }\n            \n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\n            if(def.combineWith > 0) {\n              angular.forEach(stats, function(stat2, key2) {\n                if(stat2.id == def.combineWith) {\n\n                  // alter stat when addTo is set\n                  if('addTo' in def && def.addTo > 0) {\n                    var addStat2 = _.find(stats, function(s) {\n                      return s.id == def.addTo;\n                    });\n                    if(addStat2) {\n                      stat2 = _.clone(stat2);\n                      stat2.max += addStat2.max;\n                    }\n                  }\n\n                  if(stat2.max != stat.max) {\n                    output += '-' + def.display(stat2);\n                  }\n                }\n              });\n            }\n\n            if(stat.id in summaryForStats) {\n              var sStat = summaryForStats[stat.id];\n              var sDef = hCodeValues.stats[sStat.id];\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\n              output += '</em>';\n            }\n\n          }\n          else {\n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '-Increases&nbsp;';\n            }\n            \n            output += stat.id+':&nbsp;'+stat.max;\n          }\n          \n          append(output);\n        });\n      }\n        \n      $scope.$watch('stats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('altStats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('numInSet', function(newValue, oldValue) {\n        if (newValue >= 0) {\n          showStats();\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + value;\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10);\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + (value/100.0);\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10)*100;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\n\nfunction fileChangeFunction($parse) {\n\n    return {\n      restrict: 'A',\n      link: function ($scope, element, attrs) {\n\n        // Get the function provided in the file-change attribute.\n        // Note the attribute has become an angular expression,\n        // which is what we are parsing. The provided handler is \n        // wrapped up in an outer function (attrHandler) - we'll \n        // call the provided event handler inside the handler()\n        // function below.\n        var attrHandler = $parse(attrs['fileChange']);\n\n        // This is a wrapper handler which will be attached to the\n        // HTML change event.\n        var handler = function (e) {\n\n          $scope.$apply(function () {\n\n            // Execute the provided handler in the directive's scope.\n            // The files variable will be available for consumption\n            // by the event handler.\n            attrHandler($scope, { $event: e, files: e.target.files });\n          });\n        };\n\n        // Attach the handler to the HTML change event \n        element[0].addEventListener('change', handler, false);\n      }\n    };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('character', character);\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\n\n  var jobConversions = 'rebootplayerweighttable.lzjson';\n  var statCaps = 'playercommonleveltable.lzjson';\n  var jobBaseStats = 'playerleveltable.optimised.json';\n\n  var heroLevels = 'heroleveltable.lzjson';\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  return {\n    init: function(complete) {\n      jobs.init(reportProgress, complete);\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\n      dntData.init(heroLevels, null, reportProgress, complete, false);\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\n    },\n    \n    getHeroStats: function(heroLevel) {\n      var heroStats = [];\n      if(heroLevel > 0) {\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\n        if(index.length == 1) {\n          var h = dntData.getRow(heroLevels, index[0]);\n          if(h) {\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n            if(pIndex.length == 1) {\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n              if(p) {\n                heroStats = hCodeValues.getStats(p);\n              }\n            }\n          }\n        }\n      }\n      return heroStats;\n    },\n    \n    getStatCaps: function(level) {\n      if(level > 0) {\n        var index = dntData.findFast(statCaps, 'id', level);\n        if(index.length == 1) {\n          return dntData.getRow(statCaps, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getConversions: function(jobId) {\n      if(jobId > 0) {\n        var index = dntData.findFast(jobConversions, 'id', jobId);\n        if(index.length == 1) {\n          return dntData.getRow(jobConversions, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getBaseStats: function(level, jobId) {\n      if(level > 0 && jobId > 0) {\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\n        if(index.length == 1) {\n          return dntData.getRow(jobBaseStats, index[0]);\n        }\n      }\n      \n      return {};\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\nfunction itemColumnsToLoad() {\n  return {\n    mainDnt: {\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n      State1: true, StateValue1: true, State1_Max: true,\n      State2: true, StateValue2: true, State2_Max: true,\n      State3: true, StateValue3: true, State3_Max: true,\n      State4: true, StateValue4: true, State4_Max: true,\n      State5: true, StateValue5: true, State5_Max: true,\n      State6: true, StateValue6: true, State6_Max: true,\n      State7: true, StateValue7: true, State7_Max: true,\n      State8: true, StateValue8: true, State8_Max: true,\n      State9: true, StateValue9: true, State9_Max: true,\n      State10: true,StateValue10: true,State10_Max: true,\n      EnchantID: true,\n      SkillID: true,\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\n      TierName: true\n    },\n    partsDnt: {\n      SetItemID: true\n    },\n    enchantDnt: {\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\n      DisjointDrop: true,\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\n    },\n    potentialDnt : {\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\n      State1: true,State1Value: true,\n      State2: true,State2Value: true,\n      State3: true,State3Value: true,\n      State4: true,State4Value: true,\n      State5: true,State5Value: true,\n      State6: true,State6Value: true,\n      State7: true,State7Value: true,\n      State8: true,State8Value: true,\n      State9: true,State9Value: true,\n      State10: true,State10Value: true,\n      State11: true,State11Value: true,\n      State12: true,State12Value: true,\n      State13: true,State13Value: true,\n      State14: true,State14Value: true,\n      State15: true,State15Value: true,\n      State16: true,State16Value: true\n    },\n    gemDnt: {\n      Type: true\n    },\n    setDnt : null,\n    sparkDnt: null,\n    jobsDnt: {\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\n    },\n    jobBaseStatColsToLoad: {\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\n    },\n    statCapColsToLoad: {\n      Cbase: true,\n      Cdefense: true,\n      Ccritical: true,\n      Cfinaldamage: true,\n      CcriticalDamage: true,\n    },\n    jobConversionColsToLoad: {\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\n\nfunction dntData($rootScope,$timeout) {\n  \n  function createLoader(dntLocation, file, colsToLoad) {\n\n    var loader = {\n      reader: new DntReader(),\n      \n      loaded: false,\n      startedLoading: false,\n      \n      file: file,\n      \n      dntLocation: dntLocation,\n      // progressCallback: null,\n      completeCallbacks : [],\n      \n      init: function(progress, complete, ignoreErrors) {\n        \n        if(this.loaded) {\n          if(complete) {\n            complete();\n          }\n        }\n        else {\n          // this.progressCallback = progress;\n          if(complete) {\n            this.completeCallbacks.push(complete);\n          }\n          \n          if(!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n            \n            this.reader.colsToLoad = colsToLoad;\n            \n            if(this.dntLocation && \n              this.dntLocation.url &&\n              this.dntLocation.url.length) {\n\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n              $timeout(function() {\n                t.reader.loadDntFromServerFile(\n                  t.dntLocation.url + '/' + file,\n                  function(msg) {\n                    // if(t.progressCallback) {\n                      // t.progressCallback(msg);\n                    // }\n                  }, \n                  function(result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n                    \n                    angular.forEach(t.completeCallbacks, function(value, key) {\n                      if(value) {\n                        value();\n                      }\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  },\n                  function(msg) {\n                    t.failed = true;\n                    if(ignoreErrors) {\n                      t.loaded = true;\n                      console.log('ignoring the error - this file may not exist yet for the region');\n                      angular.forEach(t.completeCallbacks, function(value, key) {\n                        if(value) {\n                          value();\n                        }\n                      });\n                      t.completeCallbacks = [];\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                    }\n                    else {\n                      t.startedLoading = false;\n                      t.loaded = false;\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    }\n                  }  );\n              });\n            }\n            else {\n              // console.log(\"dnt location not set!\");\n            }\n          }\n        }\n      },\n      \n      reset: function() {\n        this.reader = new DntReader();\n        this.loaded = false;\n        this.startedLoading = false;\n      }\n    }\n  \n    return loader;\n  };\n  \n  return {\n    loaders : {},\n    findIndexes : {},\n    dntLocation : null,\n    \n    setLocation: function(location) {\n      this.dntLocation = location;\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        if(value.dntLocation != location) {\n          value.dntLocation = location;\n          t.reset(key);\n        }\n      });\n    },\n    \n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\n      if(ignoreErrors !== false) {\n        ignoreErrors = true;\n      }\n\n      if(!progress) {\n        progress = function() {};\n      }\n      if(!(fileName in this.loaders)) {\n        if(fileName.length > 0) {\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n        }\n      }\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\n    },\n    getData : function (fileName) {\n      if(this.isLoaded(fileName)) {\n        var reader = this.loaders[fileName].reader;\n        var retVal = new Array(reader.numRows);\n        for(var i=0;i<reader.numRows;++i) {\n          retVal[i] = reader.getRow(i);\n        }\n        \n        return retVal;\n      }\n      else {\n        return [];\n      }\n    },\n    find : function(fileName, column, value) {\n      var results = this.findFast(fileName, column, value);\n      var retVal = [];\n      var numResults = results.length;\n      for(var i=0;i<numResults;++i) {\n        retVal.push(this.getRow(fileName, results[i]));\n      }\n      \n      return retVal;\n    },\n    findFast : function(fileName, column, value) {\n      \n      if(this.isLoaded(fileName)) {\n        if(!(fileName in this.findIndexes)) {\n          this.findIndexes[fileName] = {};\n        }\n        \n        var reader = this.loaders[fileName].reader;\n        var colIndex = reader.columnIndexes[column];\n        \n        var findIndex = this.findIndexes[fileName];\n        \n        if(!(column in findIndex)) {\n          var index = {}\n          findIndex[column] = index;\n          \n          var data = reader.data;\n          var len = data.length;\n          for(var r=0;r<len;++r) {\n            var val = data[r][colIndex];\n\n            if(!(val in index)) {\n              index[val] = [r];\n            }\n            else {\n              index[val].push(r);\n            }\n          }\n        }\n        \n        if(value in findIndex[column]) {\n          if(Array.isArray(findIndex[column][value])) {\n            return findIndex[column][value];\n          }\n          else {\n            return [findIndex[column][value]];\n          }\n        }\n        else {\n          return [];\n        }\n      }\n      \n      return [];\n    },\n    isLoaded : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].loaded;\n    },\n    hasFailed : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].failed;\n    },\n    hasStartedLoading : function(fileName) {\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\n    },\n    reset : function(fileName) {\n      if(fileName in this.loaders) {\n        this.loaders[fileName].reset();\n        delete this.loaders[fileName];\n        delete this.findIndexes[fileName];\n      }\n    },\n    resetAll : function() {\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        t.reset(key);\n      });\n    },\n    anyLoading : function() {\n      var found = 0;\n      angular.forEach(this.loaders, function(value, key) {\n        if(!value.loaded && value.startedLoading) {\n          found++;\n        }\n      });\n      \n      return found;\n    },\n    getNumRows : function(fileName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.numRows;\n      }\n      else {\n        return 0;\n      }\n    },\n    getRow : function(fileName, index) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getRow(index);\n      }\n      else {\n        return {};\n      }\n    },\n    lookupValue: function(fileName, data, columnName) {\n      if(this.isLoaded(fileName)) {\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\n      }\n      else {\n        return null;\n      }\n    },\n    convertData: function(fileName, data) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.convertData(data);\n      }\n      else {\n        return null;\n      }\n    },\n    getValue : function(fileName, index, columnName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getValue(index, columnName);\n      }\n      else {\n        return null;\n      }\n    },\n    saveMemory: function() {\n      for(var fileName in this.loaders) {\n        this.loaders[fileName].saveReaderMemory();\n      }\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\nfunction dntInit(items,jobs,dntData,itemFactory) {\n  return function(progress) {\n    \n    progress('starting init');\n    \n    var allFactories = [jobs];\n    \n    var dntFiles = {};\n    angular.forEach(items, function(item, key) {\n      if(key != 'all') {\n        angular.forEach(item, function(value, prop) {\n          if(prop.indexOf('Dnt') == prop.length-3) {\n            var newFactory = { \n              init: function(progress, complete) {\n                dntData.init(value, null, progress, complete);\n              },\n              isLoaded: function() {\n                return dntData.isLoaded(value);\n              },\n              fileName: value,\n            };\n            \n            allFactories.push(newFactory);\n          }\n        });\n      }\n    });\n    \n    function initFactory(index) {\n    \n      if(index < allFactories.length) {\n        allFactories[index].init(progress, function() { \n          if(allFactories[index].isLoaded()) {\n            if('fileName' in allFactories[index]) {\n              progress('dnt loaded: ' + allFactories[index].fileName);\n            }\n            initFactory(index+1);\n          }\n        });\n      }\n      else {\n        progress('Full initialise complete');\n      }\n    }\n    \n    initFactory(0);\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\nfunction dntReset(items, jobs, dntData) {\n  return function() {\n    \n    angular.forEach(items, function(source, name) {\n      source.reset();\n    });\n    \n    jobs.reset();\n    dntData.resetAll();\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\nfunction dvStatcardHelper() {\n  'use strict';\n\n  // Conversions between dngs stat IDs and dvstatcard keys\n  var statMap = {\n      0: 'statStr',\n      1: 'statAgi',\n      2: 'statInt',\n      3: 'statVit',\n      4: 'statPDmgMin',\n      5: 'statPDmgMax',\n      6: 'statMDmgMin',\n      7: 'statMDmgMax',\n      8: 'statPDef',\n      9: 'statMDef',\n      12: 'statCrit',\n      16: 'statFire',\n      17: 'statIce',\n      18: 'statLight',\n      19: 'statDark',\n      25: 'statHp',\n      26: 'statMana',\n      29: 'statFD',\n      103: 'statCritDmg',\n  };\n\n  //    Converts dngs stat IDs to dvstatcard stat keys\n  function convertStat(stat) {\n    var ret = statMap[stat.id];\n    return ret || 'unknown';\n  };\n\n  function convertPercentToNum(val) {\n      return val * 100;\n  };\n\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\n  var adjustments = {\n      16: convertPercentToNum,\n      17: convertPercentToNum,\n      18: convertPercentToNum,\n      19: convertPercentToNum,\n  }\n\n  //    Convert between numerical standards between dngs and dvstatcard\n  function adjustStat(stat) {\n      var func = adjustments[stat.id];\n      if (func) {\n          return func(stat.max);\n      }\n      return stat.max;\n  };\n\n  return {\n      convertStats: function(build, buildName, calcStats) {\n        var ret = {\n            characterName: buildName,\n            remark: 'Imported from DNGearsim',\n            classId: build.job.id,\n            statHeroLevel: build.heroLevel,\n        }\n        for (var k in calcStats) {\n            var v = calcStats[k];\n            ret[convertStat(v)] = adjustStat(v);\n        }\n        return ret;\n      },\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\n\n  return {\n    \n    encodeItem: function(item, small) {\n      if(item) {\n        var itemString;\n\n        if(item.typeName == 'custom')  {\n          itemString = '_custom';\n          angular.forEach(item.stats, function(stat, index) {\n            if(index > 0) {\n              itemString += '|';\n            }\n            else {\n              itemString += ':C';\n            }\n            itemString += stat.id.toString(36) + '=' + stat.max;\n          });\n        }\n        else if(item.id) {\n          itemString = 'I' + item.id.toString(36) + ':_';\n          if('itemSource' in item) {\n            itemString += item.itemSource;\n          }\n          else if('itemTypeName' in item) {\n            // this is to support groups saved with the old property name\n            itemString += item.itemTypeName;\n          }\n          else if(item.fileName) {\n            itemString += ':F' + item.fileName;\n          }\n        \n          if(item.enchantmentNum || item.enchantmentNum == 0) {\n            itemString += ':E' + item.enchantmentNum.toString(36);\n          }\n          if(item.pid > 0) {\n            itemString += ':P' + item.pid.toString(36);\n          }\n          // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n          // }\n          if(item.sparkId > 0) {\n            itemString += ':H' + item.sparkId.toString(36);\n          }\n          if(item.typeName == 'skills') {\n            itemString += ':J' + item.baseJobName;\n          }\n          if(item.pve) {\n            itemString += ':V' + item.pve;\n          }\n        }\n        \n        if(item.name && !small) {\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n        }\n\n        return itemString;\n      }\n      \n      return '';\n    },\n    \n    decodeItem: function(itemStr) {\n      var item = {};\n      \n      if(itemStr) {\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\n          if(itemBit.charAt(0) == 'I') {\n            item.id = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'E') {\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'P') {\n            item.pid = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'S') {\n            item.setId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'H') {\n            item.sparkId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'J') {\n            item.baseJobName = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == 'V') {\n            item.pve = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '_') {\n            item.itemSource = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '.') {\n            item.name = itemBit.substr(1).replace('-', ' ');\n          }\n          else if(itemBit.charAt(0) == 'C') {\n            item.stats = [];\n            var statString = itemBit.substr(1);\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\n              var splitStat = statBit.split('=');\n              item.stats.push({\n                id: parseInt(splitStat[0], 36),\n                max: Number(splitStat[1])\n              });\n            });\n          }\n          else if(itemBit.charAt(0) == 'F') {\n            \n            item.fileName = itemBit.substr(1);\n            angular.forEach(items, function(itemSource, key) {\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                item.itemSource = key;\n              }\n            });\n          }\n        });\n      }\n      \n      return item;\n    },\n    \n    createGroupLink: function(groupName, group) {\n      var itemStrings = [];\n      var self = this;\n      \n      if(group == null) {\n        return '';\n      }\n      \n      angular.forEach(group.items, function(item, key) {\n        var itemString = self.encodeItem(item, true);  \n        if(itemString && itemString.length) {\n          itemStrings.push(itemString);\n        }\n      });\n  \n      var retVal = 'view-group?region=';\n      if(region.dntLocation && region.dntLocation.region) {\n        retVal += region.dntLocation.region;\n      }\n      \n      if(group.enemyLevel) {\n        retVal += '&e=' + group.enemyLevel;\n      }\n      if(group.playerLevel) {\n        retVal += '&p=' + group.playerLevel;\n      }\n      if(group.heroLevel) {\n        retVal += '&h=' + group.heroLevel;\n      }\n      if(group.job && group.job.id) {\n        retVal += '&j=' + group.job.id;\n      }\n      if(group.damageType && group.damageType.id) {\n        retVal += '&d=' + group.damageType.id;\n      }\n      if(group.element && group.element.id) {\n        retVal += '&t=' + group.element.id;\n      }\n      if(group.secondaryElement && group.secondaryElement.id) {\n        retVal += '&s=' + group.secondaryElement.id;\n      }\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n      return retVal;\n    },\n\n    reloadSkill: function(item) {\n\n        if(!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n        \n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if(item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n        \n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        if(!skillData) {\n          console.log('cannot get skill data from ', skillDnt);\n        }\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n          }\n        });\n        \n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve\n        };\n        \n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n    },\n\n    reloadSourceItem: function(item) {\n      var itemType = items[item.itemSource];\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n      if(!ds.length) {\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n        return;\n      }\n\n      var rowNum = ds[0];\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\n    \n      var p = null;\n      \n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n      if(!ps.length) {\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\n      }\n      \n      if(!ps.length) {\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n        if(!ps.length) {\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\n        }\n      }\n      \n      if(ps.length > 0) {\n        p = ps[0];\n        \n        if(p.PotentialID != typeParam1) {\n          // this happened one time\n          // not sure how but it corrupted the stats\n          p = null;\n          console.log('bad potential');\n        }\n      }\n      \n      var newItem = itemFactory.createItem(itemType, rowNum, p);\n      itemFactory.initItem(newItem);\n      itemCategory.setItemCategory(newItem);\n      newItem.gemSlot = item.gemSlot;\n\n      var usePartDnt = null;\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\n        usePartDnt = 'partsDnt';\n      }\n      else {\n        usePartDnt = 'weaponDnt';\n      }\n\n      if(usePartDnt) {\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n          newItem.setStats = [];\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n          if(parts.length > 0) {\n            newItem.setId = parts[0].SetItemID;\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n            if(sets.length > 0) {\n              newItem.setStats = hCodeValues.getStats(sets[0]);\n            }\n          }\n        }\n      }\n\n      newItem.fullStats = newItem.stats;\n      if(item.enchantmentNum >= 0) {\n        newItem.enchantmentNum = item.enchantmentNum;\n        \n        if(newItem.typeName == 'skills') {\n          // would this even happen?\n        }\n        else if(newItem.typeName == 'talisman') {\n          var extraStats = [];\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\n          angular.forEach(useStats, function(stat, index) {\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\n          });\n          \n          newItem.enchantmentStats = extraStats;\n        }\n        else if(itemType.enchantDnt) {\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n          if(!enchantments.length && itemType.enchantDnt2) {\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\n          }\n\n          angular.forEach(enchantments, function(enchantment, index) {\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n            }\n          });\n        }\n        else if(itemType.petLevelDnt) {\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\n          angular.forEach(petLevels, function(enchantment, index) {\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n            }\n          });\n        }\n      }\n\n      if(newItem.enchantmentStats) {\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n      }\n      \n      if(item.sparkId > 0) {\n        newItem.sparkId = item.sparkId;\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n        if(sparks.length > 0) {\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n        }\n      }\n      else if(newItem.dragonjeweltype) {\n        newItem.offensiveGemSlots = 0;\n        newItem.increasingGemSlots = 0;\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\n        if(itemData && itemData.length > 0) {\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n          \n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n        }\n      }\n      \n      return newItem;\n    },\n    \n    reloadItem: function(item) {\n\n      if(item == null) {\n        // console.log('cannot reload null item');\n        return;\n      }\n      \n      // support for old property name\n      if('itemTypeName' in item && !item.itemSource) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      // console.log('checking ' + item.itemSource)\n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n        // console.log('changed to ' + item.itemSource)\n      }\n      \n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\n        item.typeName = 'custom';\n        return item;\n      }\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n        return this.reloadSkill(item);\n      }\n      else if(item.itemSource in items) {\n        var itemType = items[item.itemSource];\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\n        if(ds.length) {\n          return this.reloadSourceItem(item);\n        }\n      }\n      \n      if(item.fileName) {\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\n        if(datas.length > 0) {\n          var row = datas[0];\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\n          var newItem = itemFactory.createBasicItem(d);\n          newItem.row = row;\n          newItem.needJobClass = d.NeedJobClass;\n          newItem.exchangeType = d.ExchangeType;\n          newItem.fileName = item.fileName;\n          newItem.gemSlot = item.gemSlot;\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\n          itemFactory.initItem(newItem);\n          return newItem;\n        }\n        else {\n          return {name: 'unknown item'};\n        }\n      }\n      else {\n        return {name: 'unknown item source: ' + item.itemSource};\n      }\n    },\n    \n    getDntFiles: function(item) {\n      if(item == null) {\n        return {};\n      }\n\n      var dntFiles = {};\n      if(!item.itemSource && item.itemTypeName in items) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n      }\n      \n      if(item.itemSource in items) {\n        var itemType = items[item.itemSource];\n        \n        dntFiles['exchange.lzjson'] = null;\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n        \n        for(var fileType in itemType) {\n          if(fileType.indexOf('Dnt') > 0) {\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\n            }\n          }\n        }\n      }\n      \n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n          dntFiles[skillDnt] = null;\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n          dntFiles[skillLevelDnt] = null;\n      }\n      \n      if(item.fileName) {\n        dntFiles[item.fileName + '.lzjson'] = null;\n      }\n    \n      return dntFiles;\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\nfunction groupHelper(exportLinkHelper) {\n  'use strict';\n  \n  return {\n    reloadGroup: function(groupName, group) {\n      var newItems = [];\n      angular.forEach(group.items, function(item, key) {\n        var newItem = exportLinkHelper.reloadItem(item);\n        if(newItem) {\n          newItems.push(newItem);\n        }\n      });\n      \n      return newItems;\n    },\n    \n    getDntFiles: function(group) {\n\n      var allDntFiles = {};\n      angular.forEach(group.items, function(item, key1) {\n        \n        var dntFiles = exportLinkHelper.getDntFiles(item);\n\n        angular.forEach(dntFiles, function(value, key) {\n          allDntFiles[key] = value;\n        });\n      });\n      \n      return allDntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemCategory',\n['itemFactory','items','dntData',itemCategory]);\nfunction itemCategory(itemFactory,items,dntData) {\n\n  return {\n    categories: [\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\n      {path: 'skills', name:'skills', searchType: 'skills'},\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\n      ],\n      \n    byName: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.name == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n      \n    byPath: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.path == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n    \n    getItems: function(name) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var retVal = [];\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType && retVal) {\n            if(!source.items && !source.loading) {\n              itemFactory.loadItems(source);\n            }\n            \n            if(source.items) {\n              retVal = retVal.concat(source.items);\n            }\n            else {\n              retVal = null; // if any are null just return null\n            }\n          }\n        });\n        \n        var catItems = [];\n        if(retVal) {\n          var vm = this;\n          angular.forEach(retVal, function(item, index) {\n            if(item.typeName == name) {\n              catItems.push(item);\n            }\n            else if(vm.isItemForCat(cat, item, item.data)) {\n              item.typeName = name;\n              catItems.push(item);\n            }\n          });\n        }\n        \n        return catItems;\n      }\n      else {\n        return null;\n      }\n    },\n    \n    isItemForCat: function(cat, item) {\n\n      if(!(item.itemSource in items)) {\n        return false;\n      }\n      \n      if(items[item.itemSource].type != cat.sourceType) {\n        return false;\n      }\n      \n      if(item.itemType == cat.name) {\n        return true;\n      }\n      \n      var anyMatch;\n      if(cat.limitExchange) {\n        anyMatch = false;\n        for(var i=0;i<cat.limitExchange.length;++i) {\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\n            anyMatch = true;\n          }\n        }\n\n        if(!anyMatch) {\n          return false;\n        }\n      }\n\n      if(cat.limitRank) {\n        anyMatch = false;\n        for(var i=0;i<cat.limitRank.length;++i) {\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\n            anyMatch = true;\n          }\n        }\n\n        if(!anyMatch) {\n          return false;\n        }\n      }\n\n      if(cat.limitGemType) {\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n        if(gemTypes.length > 0) {\n          \n          if(gemTypes[0].Type != cat.limitGemType) {\n            return false;\n          }\n        }\n      }\n      \n      return true;\n    },\n    \n    init: function(name, complete) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var sources = _.filter(items, function(source) {\n          return (source.type == cat.sourceType);\n        });\n\n        var numComplete = 0;\n        _.each(sources, function(source) {\n          source.init(function() {}, function() {\n              numComplete++;\n              if(numComplete == sources.length) {\n                complete();\n              }\n          });\n        });\n      }\n    },\n    \n    setItemCategory: function (item, rawData) {\n      var vm = this;\n      \n      angular.forEach(this.categories, function(cat, index) {\n        if(vm.isItemForCat(cat, item, rawData)) {\n          item.typeName = cat.name;\n        }\n      });\n    },\n    \n    getItemsByCategory: function(items) {\n      var itemMap = {};\n      if(items) {\n        var types = {};\n        angular.forEach(items, function(item, index) {\n          if(item) {\n            if(!(item.typeName in types)) {\n              types[item.typeName] = [];\n            }\n            types[item.typeName].push(item);\n          }\n        });\n        \n        angular.forEach(this.categories, function(category, index) {\n\n          if(category.name in types) {\n            \n            var sorted = types[category.name].sort(function(item1, item2) {\n              if(category.name == 'talisman') {\n                \n                var enh1 = item1.enchantmentNum;\n                if(!enh1) enh1 = 0;\n                var enh2 = item2.enchantmentNum;\n                if(!enh2) enh2 = 0;\n                \n                if(enh1 != enh2) {\n                  return enh2 - enh1;\n                }\n              }\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                if(item1.gemSlot || item2.gemSlot) {\n                  if(!item1.gemSlot) {\n                    return 1;\n                  }\n                  else if(!item2.gemSlot) {\n                    return -1;\n                  }\n                  return item1.gemSlot - item2.gemSlot;\n                }\n                else if(item2.levelLimit != item1.levelLimit) {\n                  return item2.levelLimit - item1.levelLimit;\n                }\n              }\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\n                return item1.exchangeType - item2.exchangeType;\n              }\n              \n              return item1.name.localeCompare(item2.name);\n            });\n            itemMap[category.name] = sorted;\n          }\n          else {\n            itemMap[category.name] = [];\n          }\n        });\n        \n        /*\n        angular.forEach(items, function(item, index) {\n          if(item && !(item.typeName in itemMap)) {\n            // console.log('we dont know ' + item.typeName + ' anymore')\n            itemMap.typeError = true;\n          }\n        });\n        */\n      }\n      return itemMap;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('excludeService', excludeService);\n\nfunction excludeService() {\n return {\n     ids: [{\n            name: 'unbound plates',\n            min: 0,\n            max: 0\n        }\n     ],\n };\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemFactory',itemFactory);\n\nfunction itemFactory(translations,dntData,hCodeValues,items) {\n  \n  return {\n    loadItems: loadItems,\n    initItem: initItem,\n    createItem: createItem,\n    getItemData: getItemData,\n    createBasicItem: createBasicItem,\n  };\n  \n  function createItem(itemType, row, p) {\n    \n    // data and potential are used to initialise name and stats\n    // this is only done when needed\n    // they are then removed from the object\n    return {\n      row: row,\n      potential : p,\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\n      itemSource : itemType.name,\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\n      pid: null,\n      name : null,\n      stats : null,\n      potentialRatio : null,\n      typeName : null,\n      sparkId: null,\n    };\n  }\n\n  function isDataLoaded(itemType) {\n    \n    if(!dntData.isLoaded(itemType.mainDnt)) {\n      return false;\n    }\n    \n    if(!translations.isLoaded()) {\n      return false;\n    }\n    \n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n      return false;\n    }\n    \n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n      return false;\n    }\n\n    return true;\n\n  }\n  \n  function loadItems(itemType) {\n\n    if(!isDataLoaded(itemType)) {\n      return null;\n    }\n    \n    var start = new Date().getTime();\n    \n    itemType.items = [];\n    var numRows = dntData.getNumRows(itemType.mainDnt);\n    for(var r=0;r<numRows;++r) {\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n        \n      // skip items with no data\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\n        var potentials = [];\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n          \n          if(!potentials.length && 'potentialDntEx' in itemType) {\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n          }\n        }\n        \n        var numPotentials = potentials.length;\n        if(!numPotentials) {\n          potentials = [null];\n          numPotentials = 1;\n        }\n\n        for(var p=0;p<numPotentials;++p) {\n          var found = false;          \n          if(!found) {\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\n          }\n        }\n      }\n    }\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\n  }\n  \n  function initItem(item) {\n    \n    if(item.row >= 0) {\n      var d;\n      if(item.itemSource && item.itemSource in items) {\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\n      }\n      else if(item.fileName) {\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\n      }\n      delete item.row;\n\n      var p = item.potential;\n  \n      if(item.name == null) {\n        item.name = translations.translate(d.NameID, d.NameIDParam);\n        if(d.TierName) {\n          item.name += ' (' + translations.translate(d.TierName) + ')';\n        }\n      }\n      \n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\n        item.sparkTypeId = d.TypeParam2;\n      }\n      \n      if(item.stats == null) {\n        var stats = hCodeValues.getStats(d);\n        if(p) {\n          var potentialStats = hCodeValues.getStats(p);\n          stats = hCodeValues.mergeStats(stats, potentialStats);\n        }\n        \n        item.stats = stats;\n      }\n      \n      if(d.SkillID && !item.skillId) {\n        item.skillId = d.SkillID;\n      }\n      \n      if(item.iconIndex == null) {\n        item.icon = d.IconImageIndex;\n        if(!item.icon && item.itemSource == 'title') {\n          item.icon = 12417;\n        }\n      }\n      \n      if(d.dragonjeweltype >= 0) {\n        item.dragonjeweltype = d.dragonjeweltype;\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      else if(d.Type == 35) {\n        item.itemSource = 'xtras';\n        var itemType = items[item.itemSource];\n        if(itemType) {\n          // item.fileName = itemType.mainDnt;\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\n          if(petData && petData.length) {\n            item.enchantmentId = petData[0].PetLevelTypeID;\n          }\n        }\n      }\n      \n      if(p) {\n        item.pid = p.id;\n      }\n      \n      delete item.potential;\n    }\n  }\n  \n  function getItemData(item) {\n    var itemType = items[item.itemSource];\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\n      var result = getItemDataFromFile(itemType.mainDnt, item);\n      if(result) {\n        return result;\n      }\n    }\n    \n    return [];\n  }\n  \n  function getItemDataFromFile(fileName, item) {\n    if(fileName) {\n      var itemData = dntData.find(fileName, 'id', item.id);\n      if(itemData && itemData.length > 0) {\n        return itemData[0];\n      }\n    }\n    \n    return null;\n  }\n  \n  function createBasicItem(d) {\n    if(!d) {\n      return [];\n    }\n    return {\n      id: d.id,\n      name: translations.translate(d.NameID, d.NameIDParam),\n      rank: hCodeValues.rankNames[d.Rank],\n      icon: d.IconImageIndex,\n      levelLimit : d.LevelLimit,\n      fileName: d.fileName,\n      typeId: d.Type\n    };\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('items',\n['translations','dntData','itemColumnsToLoad',items]);\nfunction items(translations,dntData,itemColumnsToLoad) {\n  \n  var itemSources = {\n    \n      title : {\n        mainDnt: 'appellationtable.optimised.json', \n        type: 'titles', \n        minLevel: 0, \n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n      \n      tech: { \n        mainDnt: 'itemtable_skilllevelup.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'techs', \n        minLevel: 60,\n        minRank: 0},\n      \n      tman: { \n        mainDnt: 'itemtable_talisman.optimised.json', \n        type: 'talisman', \n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\n        minLevel: 24,\n        minRank: 0 },\n      \n      gem: { \n        mainDnt: 'itemtable_dragonjewel.optimised.json', \n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \n        gemDnt: 'dragonjeweltable.optimised.json',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3},\n      \n      plate: { \n        mainDnt : 'itemtable_glyph.optimised.json', \n        potentialDnt: 'potentialtable_glyph.optimised.json',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n      plate95: { \n        mainDnt : 'itemtable_glyph95.lzjson', \n        potentialDnt: 'potentialtable_glyph95.lzjson',\n        type: 'plates',\n        minLevel: 1,\n        minRank: 1,\n        ignoreErrors: true },\n\n      items: {\n        mainDnt: 'itemtable.optimised.json', \n        partsDnt: 'partstable.optimised.json', \n        weaponDnt: 'weapontable.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.json', \n        partsDnt: 'partstable_equipment.optimised.json', \n        weaponDnt: 'weapontable_equipment.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        potentialDnt: 'potentialtable.optimised.json',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 21,\n        minRank: 3 },\n      rbeq: { \n        mainDnt: 'itemtable_reboot.optimised.json', \n        partsDnt: 'partstable_reboot.optimised.json', \n        weaponDnt: 'weapontable_reboot.optimised.json', \n        enchantDnt: 'enchanttable_reboot.optimised.json',\n        enchantDnt2: 'enchanttable_95.lzjson',\n        potentialDnt: 'potentialtable_reboot.optimised.json',\n        setDnt: 'setitemtable.optimised.json',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: { \n        mainDnt: 'itemtable_pvp.optimised.json',\n        partsDnt: 'partstable_pvp.optimised.json', \n        weaponDnt: 'weapontable_pvp.optimised.json', \n        enchantDnt: 'enchanttable.optimised.json', \n        setDnt: 'setitemtable.optimised.json',\n        type: 'equipment',\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\n        minLevel: 24,\n        minRank: 3 },\n\n      cCommon: {\n        mainDnt: 'itemtable_commoncash.lzjson', \n        partsDnt: 'partstable_commoncash.lzjson', \n        weaponDnt: 'weapontable_commoncash.lzjson', \n        setDnt: 'setitemtable_cash.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      cClone: {\n        mainDnt: 'itemtable_cashclone.optimised.json',\n        partsDnt: 'partstable_cashclone.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 4 },\n      c2016: { \n        mainDnt: 'itemtable_common2016.optimised.json', \n        partsDnt: 'partstable_common2016.optimised.json', \n        weaponDnt: 'weapontable_common2016.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2017: { \n        mainDnt: 'itemtable_common2017.optimised.json', \n        partsDnt: 'partstable_common2017.optimised.json', \n        weaponDnt: 'weapontable_common2017.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        ignoreErrors: true,\n        minRank: 0 },\n      c2015: { \n        mainDnt: 'itemtable_common2015.optimised.json', \n        partsDnt: 'partstable_common2015.optimised.json', \n        weaponDnt: 'weapontable_common2015.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: { \n        mainDnt: 'itemtable_common2014.optimised.json', \n        partsDnt: 'partstable_common2014.optimised.json', \n        weaponDnt: 'weapontable_common2014.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: { \n        mainDnt: 'itemtable_cash.optimised.json', \n        partsDnt: 'partstable_cash.optimised.json', \n        weaponDnt: 'weapontable_cash.optimised.json', \n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.json',\n        partsDnt: 'partstable_event.optimised.json',\n        weaponDnt: 'weapontable_event.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.json',\n        partsDnt: 'vehiclepartstable.optimised.json',\n        setDnt: 'setitemtable_cash.optimised.json',\n        petDnt: 'vehicletable.lzjson',\n        petLevelDnt: 'petleveltable.lzjson', \n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n      imprint: {\n        mainDnt: 'itemtable_imprinting.optimised.json',\n        type: 'imprint',\n        minLevel: 0,\n        minRank: 0 },\n    };\n    \n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function(itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function() {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n  \n  \n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n  \n      if(itemSource.items) {\n        complete();\n      }\n      else {\n        \n        translations.init(progress, function() {\n          doComplete(itemSource, complete)\n        });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\n          doComplete(itemSource, complete)\n        }, itemSource.ignoreErrors);\n        if('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n        if('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n        if('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\n            doComplete(itemSource, complete)\n          }, itemSource.ignoreErrors);\n        }\n  \n        doComplete(itemSource, complete);\n      }\n    }\n    \n    function doComplete(itemSource, complete) {\n      if(translations.isLoaded() && \n      dntData.isLoaded(itemSource.mainDnt) && \n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\n      ) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\nfunction jobs(dntData, translations, itemColumnsToLoad) {\n  \n  var fileName ='jobtable.lzjson';\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\n  \n  return {\n    fileName : fileName,\n    allJobs : null,\n    \n    isLoaded : function() {\n      return dntData.isLoaded(fileName);\n    },\n    \n    hasStartedLoading: function() {\n      return dntData.hasStartedLoading(fileName);\n    },\n    \n    init : function(progress, complete) {\n      dntData.init(fileName, colsToLoad, progress, function() {\n        complete();\n        }, false);\n    },\n\n    reset : function() {\n      this.allJobs = null;\n      dntData.reset(fileName);\n    },\n    \n    getFinalJobs : function () {\n      var jobs = [];\n      var alljobs = this.getAllJobs();\n      if(alljobs) {\n        var numRows = alljobs.length;\n        for(var r=0;r<numRows;++r) {\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n            jobs.push(alljobs[r]);\n          }\n        }\n      }\n      \n      return jobs;\n    },\n    \n    getBaseJobs : function () {\n      var retVal=[];\n      var baseJobs = {};\n\n      var self = this;\n      angular.forEach(this.getFinalJobs(), function(job, key) {\n        baseJobs[self.getBaseJobName(job)] = job;\n      });\n\n      angular.forEach(baseJobs, function(job, jobName) {\n        retVal.push(jobName);\n      });\n\n      return retVal;\n    },\n    \n    getAllJobs : function () {\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n        var jobs = [];\n        var data = dntData.getData(fileName);\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          jobs[jobs.length] = this.createJob(data[r]);\n        }\n        \n        this.allJobs = jobs;\n      }\n      return this.allJobs;\n    },\n    \n    getById: function(id) {\n      var data = this.getAllJobs();\n      if(data) {\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          if(data[r].id == id) {\n            return data[r];\n          }\n        }\n      }\n    },\n    \n    createJob : function(d) {\n      var t = this;\n      return {\n          d : d,\n          id : d.id,\n          name : translations.translate(d.JobName),\n          isClassJob : function(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n    },\n    \n    isClassJob : function (d, c) {\n      if(!c) return true;\n      if(d.id == c) {\n        return true;\n      }\n      \n      var parentJob = d.ParentJob;\n      \n      if(!parentJob) return false;\n      if(parentJob == c) return true;\n\n      var parentJobData = this.getById(parentJob);\n      if(parentJobData) {\n        return this.isClassJob(parentJobData.d, c);\n      }\n      \n      return false;\n    },\n    \n    getBaseJobName : function(job) {\n      if(this.isLoaded()) {\n        var alljobs = this.getAllJobs();\n        if(alljobs) {\n          var numRows = alljobs.length;\n          for(var r=0;r<numRows;++r) {\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\n              return alljobs[r].d.EnglishName;\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\n\nfunction onlineService($window, $q, hCodeValues) {\n  // console.log('setup online service');\n  \n  var service = {\n    login: login,\n    getUser: function() {\n      return firebase.auth().currentUser;\n    },\n    signOut: signOut,\n    deleteAccount: deleteAccount,\n    \n    getUserBuilds: getUserBuilds,\n    deleteBuild: deleteBuild,\n    saveBuild: saveBuild,\n    getBuild: getBuild,\n    getClassBuilds: getClassBuilds,\n    \n    getProfile: getProfile,\n    saveProfile: saveProfile,\n    \n    stripBuildName: stripBuildName\n  };\n  \n  init();\n  \n  return service;\n  \n  function init() {\n    // console.log('init');\n    firebase.initializeApp({\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\n      authDomain: 'dngearsim.firebaseapp.com',\n      databaseURL: 'https://dngearsim.firebaseio.com',\n      storageBucket: 'dngearsim.appspot.com',\n    });\n  }\n  \n  function login() {\n    return $q(function(resolve, reject) {\n      var auth = firebase.auth();\n        \n      auth.onAuthStateChanged(function(user) {\n        if(user == null) {\n          // console.log('redirecting');\n          $window.location.href = 'login.html';\n        }\n        else {\n          // console.log('logged in');\n          resolve(user);\n        }\n      });\n    });\n  }\n  \n  function getProfile(uid) {\n    // console.log('get profile');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(storedProfile.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getBuild(uid, buildName) {\n    // console.log('get build');\n    return $q(function(resolve, reject) {\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\n        if(storedProfile) {\n          resolve(decompressBuild(storedProfile.val()));\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function saveProfile(profile) {\n    return $q(function(resolve, reject) {\n      var user = service.getUser();\n      if(user) {\n        profile = angular.copy(profile);\n        deleteNullProperties(profile, true);\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\n      }\n    });\n  }\n  \n  function getUserBuilds(uid) {\n    // console.log('get builds');\n    return $q(function(resolve, reject) {\n      // console.log('getting builds');\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\n        if(storedBuilds) {\n          var retVal = {};\n          var val = storedBuilds.val();\n          for(var buildName in val) {\n            retVal[buildName] = decompressBuild(val[buildName]);\n          }\n          resolve(retVal);\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function getClassBuilds(job) {\n    // console.log('get class builds');\n    return $q(function(resolve, reject) {\n      // console.log('getting builds', job.id);\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\n        // console.log('ok');\n        if(jobBuilds) {\n          resolve(jobBuilds.val());\n        }\n        else {\n          resolve({});\n        }\n      });\n    });\n  }\n  \n  function compressBuild(build) {\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        delete item.fullStats;\n      });\n    }\n    \n    var stringifiedData = JSON.stringify(build);\n    return LZString.compressToUTF16(stringifiedData);\n  }\n  \n  function decompressBuild(compressedBuild) {\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\n    var build = JSON.parse(stringifiedData);\n    \n    if(build.items) {\n      _.each(build.items, function(item) {\n        item.fullStats = item.stats;\n        \n        if(item.enchantmentStats && item.enchantmentStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\n        }\n        \n        if(item.sparkStats && item.sparkStats.length) {\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\n        }\n      });\n    }\n    \n    return build;\n  }\n  \n  function saveBuild(buildName, build) {\n    var user = service.getUser();\n    var actions = [];\n    if(user) {\n      build = angular.copy(build);\n      deleteNullProperties(build, true);\n      // console.log('saving', build);\n      actions.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\n      );\n      \n      if(build.job && build.job.id) {\n        // console.log('saving build');\n          \n        var data = {};\n        if(build.playerLevel) {\n          data.lev = build.playerLevel;\n        }\n        if(build.region) {\n          data.region = build.region;\n        }\n        if(build.guild) {\n          data.guild = build.guild;\n        }\n        if(build.about) {\n          data.about = build.about;\n        }\n        \n        deleteNullProperties(data, true);\n          \n        actions.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\n        );\n      }\n    }\n    return $q.all(actions);\n  }\n  \n  function deleteNullProperties(test, recurse) {\n    for (var i in test) {\n        if (test[i] === undefined) {\n            delete test[i];\n        } else if (recurse && typeof test[i] === 'object') {\n            deleteNullProperties(test[i], recurse);\n        }\n    }\n  }\n  \n  function signOut() {\n    var auth = firebase.auth();\n    return $q(function(resolve, reject) {\n      auth.signOut().then(function() {\n        resolve();\n      }, function(error) {\n        reject();\n      });\n    });\n  }\n  \n  function deleteAccount(builds) {\n    var auth = firebase.auth();\n    var user = service.getUser();\n    \n    return $q(function(resolve, reject) {\n      \n      var pList = [\n        firebase.database().ref('builds/' + user.uid).remove(),\n        firebase.database().ref('profile/' + user.uid).remove(),\n        firebase.database().ref('private/' + user.uid).remove()];\n        \n      var jobIds = [];\n      for(var buildName in builds) {\n        if(builds[buildName].job) {\n          jobIds.push(builds[buildName].job.id);\n        }\n      }\n      \n      jobIds = _.uniq(jobIds);\n      _.each(jobIds, function(id) {\n        pList.push(\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\n        )\n      });\n        \n      $q.all(pList).then(function() {\n        // console.log('deleted data');\n        user.delete().then(function() {\n          // console.log('deleted user');\n          auth.signOut().then(function() {\n            // console.log('signed out');\n            resolve();\n          }, function(error) {\n            reject();\n          });\n        });\n      });\n    });\n  }\n  \n  function deleteBuild(buildName, build) {\n    \n    var pList = [];\n    var user = service.getUser();\n    if(user) {\n      pList.push(\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      \n      if(build.job) {\n        pList.push(\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\n      }\n    }\n    \n    return $q.all(pList);\n  }\n  \n  function stripBuildName(buildName) {\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\n\n  return {\n    getItem: getItem,\n    findData: findData\n  };\n  \n  function getItem(datas) {\n    var item = null;\n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.isItemStep) {\n        item = datas[d].value;\n      }\n    }\n    \n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.alterItem) {\n        datas[d].def.alterItem(datas[d].value.id, item);\n      }\n    }\n    \n    return item;\n  }\n  \n  function findData(category, build, datas, maxItems) {\n    if(!maxItems) {\n      maxItems = 9999;\n    }\n    \n    var allItems = itemCategory.getItems(category.name);\n    var retVal = [];\n    var numItems = allItems.length;\n\n    var sortFunc = null;\n    var sortId = null;\n    \n    for(var i=0;i<numItems;++i) {\n      \n      var item = allItems[i];\n      \n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n        continue;\n      }\n      itemFactory.initItem(item);\n      \n      var addItem = true;\n      for(var d=0;d<datas.length;++d) {\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\n          if('sortFunc' in datas[d].def) {\n            sortFunc = datas[d].def.sortFunc;\n            sortId = datas[d].value.id;\n          }\n        }\n        else {\n          addItem = false;\n          break;\n        }\n      }\n      \n      if(addItem) {\n        retVal.push(item);\n      }\n      \n      if(retVal.length >= maxItems) {\n        break;\n      }\n    }\n\n    retVal = filterDuplicates(retVal);\n\n    retVal = retVal.sort(function(item1, item2) {\n      if(sortFunc) {\n        return sortFunc(sortId, item1, item2);\n      }\n      else {\n        return item1.name.localeCompare(item2.name);\n      }\n    });\n    \n    return retVal;\n  }\n\n  function filterDuplicates(items) {\n    var retVal = [];\n    for(var i=0;i<items.length;++i) {\n        var found = false;\n        for(var j=0;j<i;++j) {\n            if(areSameItem(items[i], items[j])) {\n                found = true;\n                break;\n            }\n        }\n\n        if(!found) {\n            retVal.push(items[i]);\n        }\n    }\n\n    return retVal;\n  }\n\n  function areSameItem(item1, item2) {\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\n          return false;\n      }\n\n      return _.isEqual(item1.stats, item2.stats);\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAdd', quickAdd);\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\n\n  return {\n    categorySteps: {\n      titles: ['titleStep'],\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\n      custom: ['customStep'],\n    },\n    getOptions: function(category, build, datas) {\n      var t = this;\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        var stepDef = quickAddSteps[stepName];\n        var allOptions = stepDef.getOptions(category, build, datas);\n        if(stepDef.isItemStep) {\n          return allOptions;\n        }\n        else {\n          if(stepDef.minOptions) {\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\n          }\n\n          var newOptions = _.filter(allOptions, function(option) {\n            var tempDatas = datas.concat([\n              t.createData(option, category, datas.length)\n            ]);\n\n            var items;\n            if(stepDef.minOptions) {\n              if(allOptions[0] == option) {\n                return true;\n              }\n\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\n              if(items.length > 0 && items.length < 50) {\n                return items.length < unfilteredItems.length;\n              }\n            }\n            else {\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\n            }\n            return items.length;\n          });\n\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\n            return [allOptions[0]];\n          }\n\n          return newOptions;\n        }\n      }\n      else {\n        return [];\n      }\n    },\n    hasOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        if(quickAddSteps[stepName].hasOptions) {\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\n        }\n        else {\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\n        }\n      }\n      else {\n        return false;\n      }\n    },\n    isValidStepNumber: function(category, stepNumber) {\n      return this.categorySteps[category.name].length > stepNumber;\n    },\n    createData: function(value, category, stepNumber) {\n      var stepName = this.getStepName(category, stepNumber);\n      var def = quickAddSteps[stepName];\n      \n      return {\n        step: stepName,\n        value: value,\n        def: def,\n      };\n    },\n    getItem: quickAddHelper.getItem,\n    getStepName: function(category, stepNumber) {\n      return this.categorySteps[category.name][stepNumber];\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\n\n  return {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            if(build.items) {\n              for(var i=0;i<build.items.length;++i) {\n                if(build.items[i].exchangeType == exId) {\n                  numExchange++;\n                }\n              }\n            }\n            \n            if(numExchange >= category.maxExchange) {\n              continue;\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            var exName = '';\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({id: exId, name: exName.toLowerCase()});\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(exId == 10 || exId == 25) {\n              if(numExchange >= 2) {\n                continue;\n              }\n            }\n            else {\n              if(numExchange >= 1) {\n                continue;\n              }\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n              \n              exchanges.push({id: exId, name: exName.toLowerCase()});\n            }\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      levelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 95, name: 'level 95' },\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          { id: 50, name: 'level 50' }, \n          { id: 40, name: 'level 40' }, \n          { id: 32, name: 'level 32' }, \n          { id: 24, name: 'level 24' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 999, name: 'quality high grade' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            // todo: change this to use the name id\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n              \n            if(id == 999) {\n              return index === 0;\n            }\n            else {\n              return item.rank && item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 4, name: 'unique' },\n          { id: 999, name: 'quality high grade epic' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n            if(id == 999) {\n              return item.rank && item.rank.id == 3 && index >= 0;\n            }\n            else {\n              return item.rank && item.rank.id == id && index < 0;\n            }\n          }\n          return false;\n        }\n      },\n      rankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          var values = [];\n          for(var id in hCodeValues.rankNames) {\n            values.push(hCodeValues.rankNames[id]);\n          }\n          return values;\n        },\n        matchesItem: function(id, item) {\n          return item.rank && item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 100, name: '+100% slot' },\n          { id: 75, name: '+75% slot' },\n          { id: 25, name: '+25% slot' },\n          { id: 0, name: '+0% slot' },\n          ];\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for(var i=0;i<allTitles.length;++i) {\n            switch(allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              case 230: // Miraculous\n              case 279: // Provoking\n              case 2032: // Sharing Goddess's Grief\n              case 2033: // Grief-stricken\n              case 1313: // Jakard's Demise\n              case 2188: // Teary eyed\n              // case 1280: // Dragon Tamer\n              // case 339: // Cow Wrangler\n                usefulTitles.push(allTitles[i]);\n                break;\n            }\n          }\n          \n          return usefulTitles;\n        },\n        hasOptions: function(category, build, datas) {\n          return true;\n        },\n        isItemStep: true,\n      },\n      enhanceEqStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = quickAddHelper.getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 20, name: 'enhance to +20' },\n            { id: 19, name: 'enhance to +19' },\n            { id: 18, name: 'enhance to +18' },\n            { id: 17, name: 'enhance to +17' },\n            { id: 16, name: 'enhance to +16' },\n            { id: 15, name: 'enhance to +15' },\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ];\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      enhanceGemStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = quickAddHelper.getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 15, name: 'enhance to +15' },\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ];\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true,\n        hideName: true,\n      },\n      namedItemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return quickAddHelper.findData(category, build, datas);\n        },\n        isItemStep: true,\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas, 1);\n          \n          // eventually show all the skills\n          // but for now\n          if(items.length > 0) {\n            return [{id: items[0].skillId, name: items[0].skillId}];\n          }\n          else {\n            return [];\n          }\n        },\n        matchesItem: function(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          \n          for(var i=0;i<build.items.length;++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n          \n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n          var numStats = {};\n          \n          for(var i=0;i<items.length;++i) {\n            var len = 0;\n            for(var j=0;j<items[i].stats.length;++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if(stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n          \n          var retVal = [];\n          for(var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val,\n            });\n          }\n          \n          retVal = retVal.sort(function(a, b) {\n              return a.id - b.id;\n            });\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          var len = 0;\n          for(var j=0;j<item.stats.length;++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if(stat && !stat.hide) {\n              len++;\n            }\n          }\n            \n          return len == id;\n        },\n        isItemStep: true,\n      },\n      highStatStep: {\n        name: 'High Stat',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n            \n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if(items.length > 1) {\n            var allStats = {};\n            \n            for(var i=0;i<items.length;++i) {\n              for(var j=0;j<items[i].stats.length;++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\n                  allStats['high ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for(var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val,\n              });\n            }\n            \n            if(retVal.length <= 2) {\n              retVal = [allItem];\n            }\n            else {\n              retVal = retVal.sort(function(a, b) {\n                  return a.id - b.id;\n                });\n            }\n          }\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          if(id == -1) {\n            return true;\n          }\n          \n          var largestVal = 0;\n          var selectedVal = 0;\n          \n          for(var j=0;j<item.stats.length;++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if(stat.quickHigh) {\n              if(val.id == id) {\n                selectedVal += val.max;\n              }\n              else if(val.max > largestVal) {\n                largestVal = val.max;\n              }\n            }\n          }\n          \n          return selectedVal > largestVal;\n        },\n        sortFunc: function(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n          \n          for(var i=0;i<item1.stats.length;++i) {\n            if(item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for(var j=0;j<item2.stats.length;++j) {\n            if(item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3,\n      },\n      hasStatStep: {\n        name: 'Has Stat',\n        getOptions: function(category, build, datas) {\n          var items = quickAddHelper.findData(category, build, datas);\n            \n          var allItem = { id: -1, name: 'all' };\n          var retVal = [allItem];\n          if(items.length > 1) {\n            var allStats = {};\n            \n            for(var i=0;i<items.length;++i) {\n              for(var j=0;j<items[i].stats.length;++j) {\n                var stat = hCodeValues.stats[items[i].stats[j].id];\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\n                  allStats['has ' + stat.name] = stat.id;\n                }\n              }\n            }\n\n            for(var val in allStats) {\n              retVal.push({\n                id: allStats[val],\n                name: val,\n              });\n            }\n            \n            if(retVal.length <= 2) {\n              retVal = [allItem];\n            }\n            else {\n              retVal = retVal.sort(function(a, b) {\n                  return a.id - b.id;\n                });\n            }\n          }\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          if(id == -1) {\n            return true;\n          }\n          \n          for(var j=0;j<item.stats.length;++j) {\n            var val = item.stats[j];\n            var stat = hCodeValues.stats[val.id];\n            if(stat.searchable) {\n              if(val.id == id) {\n                return true;\n              }\n            }\n          }\n          \n          return false;\n        },\n        sortFunc: function(id, item1, item2) {\n          var val1 = 0;\n          var val2 = 0;\n          \n          for(var i=0;i<item1.stats.length;++i) {\n            if(item1.stats[i].id == id) {\n              val1 = item1.stats[i].max;\n              break;\n            }\n          }\n          for(var j=0;j<item2.stats.length;++j) {\n            if(item2.stats[j].id == id) {\n              val2 = item2.stats[j].max;\n              break;\n            }\n          }\n          return val2 - val1;\n        },\n        isItemStep: false,\n        minOptions: 3,\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true,\n      },\n    }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\nfunction region(translations,dntReset,dntData,$route) {\n  \n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\n  var hostedFiles =[\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\n    ];\n  \n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n  var dntLocation = null;\n  if(dntLocationRegion) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region == dntLocationRegion) {\n        dntLocation = hostedFile;\n      }\n    });\n  }\n\n  var lastTFile = localStorage.getItem('UIStrings_file');\n  var tlocation = null;\n  if(lastTFile) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n        tlocation = hostedFile;\n      }\n    });\n  }\n  \n  if(tlocation == null) {\n    tlocation = dntLocation;\n  }\n\n  return {\n    hostedFiles : hostedFiles,\n    alternativeFiles : alternativeFiles,\n    dntLocation : dntLocation,\n    tlocation : tlocation,\n    \n    setCustomUrl: function(url) {\n      // console.log('setting custom location');\n      this.alternativeFiles.url = url;\n\n      var newFiles = [];\n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region != alternativeFiles.region) {\n          newFiles.push(hostedFile);\n        }\n      });\n  \n      newFiles.push(alternativeFiles);\n      hostedFiles = newFiles;\n      this.hostedFiles = newFiles;\n    },\n    \n    setLocationByName: function(locationName) {\n      var newLocation = null;\n      \n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region == locationName) {\n          newLocation = hostedFile;\n        }\n      });\n        \n      this.setLocation(newLocation);\n    },\n    \n    setLocation: function(location) {\n      if(location && location != this.dntLocation) {\n        this.dntLocation = location;\n        dntReset();\n        localStorage.setItem('lastDNTRegion', location.region);\n        dntReset();\n        $route.reload();\n      }\n\n      var override = this.getOverride();\n      if(this.tlocation == null || !override) {\n        this.setTLocation(location);\n      }\n      \n      this.init();\n      \n      // $route.reload();\n    },\n    \n    setTLocation: function(location) {\n      \n      if(location != this.tlocation) {\n        \n        this.tlocation = location;\n        sessionStorage.removeItem('UIStrings');\n        localStorage.removeItem('UIStrings_file');\n        dntReset();\n        translations.reset();\n        if(location) {\n          var override = this.getOverride();\n          translations.small = !override;\n          translations.location = this.tlocation.url;\n          translations.region = this.tlocation.region;\n          translations.init(function() {}, function() {\n            $route.reload();\n          });\n        }\n      }\n    },\n    \n    getOverride: function() {\n      if(localStorage.getItem('tOverride')) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    },\n    \n    setOverride: function(value) {\n      if(!value) {\n        localStorage.removeItem('tOverride');\n      }\n      else {\n        localStorage.setItem('tOverride', '1');\n      }\n      this.setTLocation(this.dntLocation);\n    },\n    \n    init: function() {\n      if(this.getOverride()) {\n        translations.small = false;\n      }\n      else {\n        this.tLocation = this.dntLocation;\n        translations.small = true;\n      }\n      \n      if(this.tlocation) {\n        translations.location = this.tlocation.url;\n        translations.region = this.tlocation.region;\n      }\n      dntData.setLocation(this.dntLocation);\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\nfunction saveHelper(itemCategory) {\n  return {\n    saveItem: function(groupName, item) {\n      var groups = this.getSavedItems();\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\n        \n        groups[groupName].items.push(item);\n        groups[groupName].lastUpdate = (new Date()).getTime();\n        this.updatedSavedItems(groupName, groups[groupName].items);\n      }\n      else {\n        this.updatedSavedItems(groupName, [item]);\n      }\n    },\n    \n    saveBuildSelection : function(buildName, builds) {\n      this.setCurrentBuild(buildName);\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\n      }\n    },\n    \n    importGroup: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      groupName = this.getUniqueGroupName(groupName, items);\n      this.updatedSavedItems(groupName, updatedItems);\n      return groupName;\n    },\n    \n    getUniqueGroupName: function(groupName, existingGroups) {\n      var groupNameIndex = 0;\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\n        var startIndex = groupName.lastIndexOf('(');\n        if(startIndex > 0) {\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\n          if(foundIndex > 0) {\n            groupNameIndex = foundIndex + 1;\n            groupName = groupName.substr(0, startIndex - 1);\n          }\n        }\n      }\n      \n      var originalName = groupName;\n      for(;;) {\n        var groupName = originalName;\n        if(groupNameIndex > 0) {\n          groupName = originalName + ' (' + groupNameIndex + ')';\n        }\n        \n        if(groupName in existingGroups) {\n          groupNameIndex++;\n        }\n        else {\n          break;\n        }\n      }\n      \n      return groupName;\n    },\n    \n    deleteBuild: function(buildName) {\n      var builds = this.getSavedItems();\n      if(buildName in builds) {\n          delete builds[buildName];\n          this.setCurrentBuild(null);\n          this.saveBuilds(builds);\n      }\n    },\n    \n    updatedSavedItems: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      if(groupName in items) {\n        items[groupName].items = updatedItems;\n        items[groupName].lastUpdate = (new Date()).getTime();\n      }\n      else {\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\n          // console.log('created group');\n      }\n      \n      this.saveBuilds(items);\n    },\n    \n    saveBuilds: function(builds) {\n      var stringifiedData = JSON.stringify(builds);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n\n    saveBuild: function(oldGroupName, newGroupName, build) {\n      this.updateBuild(\n        oldGroupName, \n        newGroupName,\n        build.enemyLevel,\n        build.playerLevel,\n        build.heroLevel,\n        build.job,\n        build.damageType,\n        build.element,\n        build.secondaryElement,\n        build.critResist,\n        build.eleResist,\n        build.enemyStatCaps, \n        build.playerStatCaps, \n        build.conversions, \n        build.baseStats, \n        build.heroStats);\n    },\n    \n    updateBuild: function(\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n        \n      var savedItems = this.getSavedItems();\n      \n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\n        // console.log('not changing name');\n        newGroupName = oldGroupName;\n      }\n      else if(oldGroupName in savedItems) {\n        var group = savedItems[oldGroupName];\n        savedItems[newGroupName] = group;\n        delete savedItems[oldGroupName];\n      }\n      \n      savedItems[newGroupName].enemyLevel = enemyLevel;\n      savedItems[newGroupName].playerLevel = playerLevel;\n      savedItems[newGroupName].heroLevel = heroLevel;\n      savedItems[newGroupName].job = job;\n      savedItems[newGroupName].damageType = damageType;\n      savedItems[newGroupName].element = element;\n      savedItems[newGroupName].secondaryElement = secondaryElement;\n      savedItems[newGroupName].critResist = critResist;\n      savedItems[newGroupName].eleResist = eleResist;\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\n      savedItems[newGroupName].conversions = conversions;\n      savedItems[newGroupName].baseStats = baseStats;\n      savedItems[newGroupName].heroStats = heroStats;\n      \n      this.saveBuilds(savedItems);\n    },\n    \n    getSavedItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    currentBuild: null,\n    getCurrentBuild: function() {\n      if(!this.currentBuild) {\n        this.currentBuild = localStorage.getItem('currentGroup');\n        if(this.currentBuild) {\n          var savedItems = this.getSavedItems();\n          if(!(this.currentBuild in savedItems)) {\n            localStorage.removeItem('currentGroup');\n            this.currentBuild = null;\n          }\n        }\n      }\n      \n      return this.currentBuild;\n    },\n    \n    setCurrentBuild: function(buildName) {\n      this.currentBuild = buildName;\n      if(!buildName) {\n        localStorage.removeItem('currentGroup', buildName);\n      }\n      else {\n        localStorage.setItem('currentGroup', buildName);\n      }\n    }\n  };\n}\n\n})();","(function () {\n  'use strict';\n  \n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\n  function statHelper(hCodeValues) {\n  \n    return {\n      \n      getSetStats: function(groupItems) {\n        var stats = [];\n        var sets = {};\n        \n        angular.forEach(groupItems, function(value, key) {\n          if(value !== null && value.setStats != null) {\n            if(value.setId in sets) {\n              sets[value.setId].numItems++;\n            }\n            else {\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\n            }\n          }\n        });\n        \n        angular.forEach(sets, function(value, key) {\n          angular.forEach(value.stats, function(stat, index) {\n            if(stat.needSetNum <= value.numItems) {\n              stats.push(stat);\n            }\n          });\n        });\n        \n        return hCodeValues.mergeStats(stats);\n      },\n      \n      getNumItemsForSet: function(items, setId) {\n        var numItems = 0;\n        angular.forEach(items, function(value, key) {\n          if(value && value.setId && value.setId == setId) {\n            numItems++;\n          }\n        });\n        \n        return numItems;\n      },\n      \n      getCombinedStats: function(groupItems) {\n        var stats = [];\n        \n        angular.forEach(groupItems, function(value, key) {\n          if(value) {\n            \n            if(value.fullStats) {\n              stats = stats.concat(value.fullStats);\n            }\n            else if(value.stats) {\n              stats = stats.concat(value.stats);\n            }\n          }\n        });\n        \n        return hCodeValues.mergeStats(stats);\n      },\n      \n      getCalculatedStatsFromItems: function(group, items) {\n        var nakedStats = this.getNakedStats(group);\n        var combinedStats = this.getCombinedStats(items);\n        var setStats = this.getSetStats(items);\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\n        if(group.heroStats != null && group.heroStats.length > 0) {\n          allStats = allStats.concat(group.heroStats);\n        }\n        allStats = hCodeValues.mergeStats(allStats);\n        \n        return this.getCalculatedStats(group, allStats);\n      },\n      \n      getCalculatedStats: function(group, combinedStats) {\n        \n        var retVal = [];\n        var statLookup = {};\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\n          return [];\n        }\n        \n        angular.forEach(combinedStats, function(stat, index) {\n          statLookup[stat.id] = stat;\n        });\n        \n        function getPc(stat) {\n          var statDef = hCodeValues.stats[stat.id];\n          if(statLookup[statDef.pc]) {\n            return Number(statLookup[statDef.pc].max);\n          }\n          else {\n            return 0;\n          }\n        }\n        \n        function getSkillPc(stat) {\n          var statDef = hCodeValues.stats[stat.id];\n          if(statLookup[statDef.skPc]) {\n            return Number(statLookup[statDef.skPc].max);\n          }\n          else {\n            return 0;\n          }\n        }\n        \n        function applyPc(stat) {\n          stat.max = Math.floor(\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\n            );\n        }\n        \n        function dupeStat(id) {\n          var stat = statLookup[id];\n          if(stat) {\n            return {id: id, max: Number(stat.max), pc: stat.pc};\n          }\n          else {\n            return {id: id, max: 0, pc: 0};\n          }\n        }\n        \n        function addStat(stat) {\n          if(stat.max > 0) {\n            retVal.push(stat);\n          }\n        }\n  \n        var critResist;\n        if(!('critResist' in group)) {\n          critResist = 0.20;\n        }\n        else {\n          critResist = group.critResist / 100.0;\n        }\n  \n        var eleResist;\n        if(!('eleResist' in group)) {\n          eleResist = 0;\n        }\n        else {\n          eleResist = group.eleResist / 100.0;\n        }\n        \n        // base stats\n        var str = dupeStat(0);\n        applyPc(str);\n        \n        var agi = dupeStat(1);\n        applyPc(agi);\n        \n        var int = dupeStat(2);\n        applyPc(int);\n  \n        var vit = dupeStat(3);\n        applyPc(vit);\n  \n        // add vit to hp\n        var hp = dupeStat(25);\n        hp.max += (vit.max * Number(group.conversions.HP));\n        applyPc(hp);\n        \n        // defs\n        var def = dupeStat(8);\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\n        applyPc(def);\n        \n        var defpc = dupeStat(1008);\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\n        addStat(defpc);\n        \n        var mdef = dupeStat(9);\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\n        applyPc(mdef);\n        \n        var mdefpc = dupeStat(1009);\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\n        addStat(mdefpc);\n        \n        // attack power - like fd but for bufs\n        // this shows as blue damage\n        // i think there are magic and phis variants of this but doesnt matter\n        var aPwr = dupeStat(3000);\n        \n        var minPdmg = dupeStat(4);\n        var maxPdmg = dupeStat(5);\n  \n        // physical damage\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\n          var extraPdmg = dupeStat(32);\n          var extraPdmgMod= dupeStat(101);\n          var paPwr = dupeStat(3001);\n          \n          // special stats for zeal\n          var intToPdmg = dupeStat(10164);\n          \n          minPdmg.max += extraPdmg.max;\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n          \n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\n          addStat(minPdmg);\n    \n          maxPdmg.max += extraPdmg.max;\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n          \n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n          addStat(maxPdmg);\n        }\n        \n        var minMdmg = dupeStat(6);\n        var maxMdmg = dupeStat(7);\n        \n        // magic damage\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\n          var extraMdmg = dupeStat(33);\n          var extraMdmgMod = dupeStat(102);\n          var maPwr = dupeStat(3002);\n          \n          // special stats for zeal\n          var strToMdmg = dupeStat(10165);\n          var intToMdmg = dupeStat(10372);\n          \n          minMdmg.max += extraMdmg.max;\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\n  \n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\n          addStat(minMdmg);\n          \n          maxMdmg.max += extraMdmg.max;\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\n          \n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\n          addStat(maxMdmg);\n        }\n        \n        \n        // crit chance %\n        var crit = dupeStat(12);\n        crit.max += (agi.max*Number(group.conversions.Critical));\n        applyPc(crit);\n        \n        var skCrit = dupeStat(4012);\n        crit.max += skCrit.max;\n        addStat(crit);\n        var itemCrit = dupeStat(1012);\n        \n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\n        retVal.push({id: 1012, max: critChance});\n  \n        // crit damage %\n        var cDmg = dupeStat(103);\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\n        applyPc(cDmg);\n        addStat(cDmg);\n  \n        var itemCtriDmg = dupeStat(1103);\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\n        addStat({id: 1103, max: critDamagePc + 2});\n  \n        // fd\n        var fd = dupeStat(29);\n        addStat(fd);\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n        \n        var fdPc = dupeStat(1029);\n        var newFdPc = dupeStat(1030);\n        newFdPc.max += fdPc.max + Math.min(1, (fd.max / maxFd));\n        addStat(newFdPc);\n        \n        fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\n        addStat(fdPc);\n        \n        var secElementId = 0;\n        var priElementId = 0;\n        if(group.element) {\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\n        }\n        else {\n          priElementId = 0;\n        }\n        if(group.secondaryElement) {\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\n        }\n        else {\n          secElementId = 0;\n        }\n        \n        // elements\n        var firePc = dupeStat(16);\n        if(firePc.id == priElementId || firePc.id == secElementId) {\n          addStat(firePc);\n        }\n        \n        var icePc = dupeStat(17);\n        if(icePc.id == priElementId || icePc.id == secElementId) {\n          addStat(icePc);\n        }\n        \n        var lightPc = dupeStat(18);\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\n          addStat(lightPc);\n        }\n        \n        var darkPc = dupeStat(19);\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\n          addStat(darkPc);\n        }\n        \n        // average damage\n        function addAvgDamageStat(id, min, max) {\n          \n          var nonEleDamage = (min+max)/2;\n          // add crit\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\n          // apply fd\n          nonEleDamage = nonEleDamage * (1 + fdPc.max);\n          \n          // apply element(s)\n          var avgDmg = nonEleDamage;\n          if(priElementId > 0) {\n            var elementStat = statLookup[priElementId];\n            if(elementStat) {\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\n            }\n          }\n          addStat({id: id, max: avgDmg});\n          \n          if(secElementId != priElementId) {\n            if(secElementId > 0) {\n              var secondaryElementStat = statLookup[secElementId];\n              if(secondaryElementStat) {\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\n                addStat({id: id + 1000, max: secAvgDmg});\n              }\n            }\n            else {\n              addStat({id: id + 1000, max: nonEleDamage});\n            }\n          }\n        }\n        \n        // average damages\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n        }\n  \n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n        }\n        \n        if(!group.damageType || group.damageType.id == 3) {\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\n        }\n        \n        if(group.damageType && group.damageType.id == 4) {\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\n        }\n        \n        if(group.damageType && group.damageType.id == 5) {\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\n        }\n        \n        // Equivalent HP\n        var pdefEqHp = dupeStat(2008);\n        pdefEqHp.max = hp.max / (1-defpc.max);\n        \n        var mdefEqHp = dupeStat(2009);\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\n        \n        var eqHp = dupeStat(3008);\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n        addStat(eqHp);\n\n        addStat(str);\n        addStat(agi);\n        addStat(int);\n        addStat(vit);\n        addStat(hp);\n        addStat(def);\n        addStat(mdef);\n        \n        return retVal;\n      },\n      \n      getNakedStats: function(group) {\n        \n        if(\n          group.baseStats && \n          group.baseStats.Strength > 0) {\n  \n          return [\n            {id:0, max:group.baseStats.Strength},\n            {id:1, max:group.baseStats.Agility},\n            {id:2, max:group.baseStats.Intelligence},\n            {id:3, max:group.baseStats.Stamina}\n            ];\n        }\n        else {\n          return [];\n        }\n      },\n      \n      getSkillStats : function (item, data, skillData) {\n  \n        var skillLevelVals = null;\n        angular.forEach(skillData, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n            return;\n          }\n        });\n        \n        if(!skillLevelVals) {\n          return null;\n        }\n        \n        var index = 1;\n        var effects = [];\n        var stillCols = true;\n        \n        while(stillCols) {\n          var colName = 'EffectClass' + index;\n          var valColName = 'EffectClassValue' + index;\n          if(data && colName in data && valColName in skillLevelVals) {\n            if(data[colName] > 0) {\n              \n              var val = skillLevelVals[valColName];\n              \n              // for now add 10k\n              var effectId = data[colName];\n              var map = hCodeValues.skillEffectMapping[effectId];\n              if(map && map.getVals) {\n                var vals = map.getVals(val);\n                for(var i=0;i<vals.length;++i) {\n                  effects.push(vals[i]);\n                }\n              }\n              else {\n                var statId;\n                if(map && map.mapTo) {\n                  statId = map.mapTo;\n                }\n                else {\n                  statId = 10000 + effectId;\n                }\n                \n                if(val > 0) {\n                  effects.push({ id: statId, effect: effectId, max: val });\n                }\n                else {\n                  if(val.toString().indexOf(';') > 0) {\n                    var vals = val.split(';');\n                    if(vals.length > 0 && vals[0] > 0) {\n                      effects.push({ id: statId, effect: effectId, max: vals[0] });\n                    }\n                  }\n                }\n              }\n            }\n          }\n          else {\n            stillCols = false;\n          }\n          \n          index++;\n        }\n        \n        return effects;\n      },\n  \n      getBuildStats: function(build) {\n        var stats = {};\n        stats.nakedStats = this.getNakedStats(build);\n        stats.combinedStats = this.getCombinedStats(build.items);\n        stats.setStats = this.getSetStats(build.items);\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n        if(build.heroStats && build.heroStats.length) {\n          stats.heroStats = build.heroStats;\n          stats.allStats = stats.allStats.concat(build.heroStats);\n        }\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\n        \n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n        return stats;\n      }\n    };\n  }\n  \n  })();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\n\n  var dnTranslations = new DnTranslations();\n  var smallFile = 'uistring.optimised.lzjson';\n  var bigFile = 'uistring.lzjson';\n\n  var completeCallback = [];\n  var progressCallback = [];\n\n  return {\n\n    getRawData: function() {\n      return dnTranslations.data;\n    },\n    \n    reset : function() {\n      dnTranslations = new DnTranslations();\n      dnTranslations.sizeLimit = 100;\n      this.loaded = false;\n      this.startedLoading = false;\n      completeCallback = [];\n      progressCallback = [];\n    },\n    \n    getFileName: function() {\n      if(this.small) {\n        // console.log('loading optimised translations');\n        return smallFile;\n      }\n      else {\n        // console.log('loading full translations');\n        return bigFile;\n      }\n    },\n    \n    loaded : false,\n    startedLoading : false,\n    small: false,\n    \n    location : null,\n    region: null,\n  \n    init : function(progress, complete) {\n\n      if(this.isLoaded()) {\n        complete();\n      }\n      else {\n        progressCallback = [];\n        if(progress) {\n          progressCallback.push(progress);\n        }\n        if(complete) {\n          completeCallback.push(complete);\n        }\n  \n        if(!this.startedLoading) {\n          this.startedLoading = true;\n          var t = this;\n          \n          var fileName = null;\n          if(this.location && this.location != '') {\n            fileName = this.location + '/' + this.getFileName();\n            \n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n              sessionStorage.removeItem('UIStrings');\n              localStorage.removeItem('UIStrings_file');\n            }\n          }\n          \n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n          dnTranslations.loadDefaultFile(\n            fileName, \n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n            }, \n            function() {\n              uiTranslations.addTranslations(t.region, t.getRawData());\n              // console.log('using ', t.region);\n              $translate.use(t.region);\n              t.loaded = true;\n              angular.forEach(completeCallback, function(value, key) { value(); });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            },\n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            }\n          );\n        }\n      }\n    },\n    \n    isLoaded : function() {\n      if(!this.loaded) {\n        var fileName = this.location + '/' + this.getFileName();\n        \n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n        }\n\n        this.loaded = dnTranslations.loadFromSession();\n        if(this.loaded) {\n          uiTranslations.addTranslations(this.region, this.getRawData());\n          $translate.use(this.region);\n          this.startedLoading = true;\n        }\n      }\n      return this.loaded;\n    },\n    \n    translate : function(id,idParam) {\n      if(this.loaded) {\n        try {\n          var name;\n          if(!id) {\n            return '';\n          }\n          else {\n            name = dnTranslations.translate(id);\n            \n            if(typeof name != 'string') {\n              return 'm' + name;\n            }\n          }\n          \n          if(idParam && name) {\n            \n            if(typeof idParam === 'string') {\n              var params = idParam.split(',');\n              for(var p=0;p<params.length;++p) {\n                var pid = params[p];\n                if(pid.indexOf('{') == 0) {\n                  pid = params[p].replace(/\\{|\\}/g,'');\n                  pid = dnTranslations.translate(pid);\n                }\n                \n                name = name.replace('{' + p + '}', pid);\n              }\n            }\n            else {\n              name = name.replace('{0}', idParam);\n            }\n          }\n\n          return name;\n        }\n        catch(ex) {\n          console.log('unable to translate', id, idParam, ex);\n        }\n      }\n\n      return 'm' + id;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\n\n// translations for each region go in here\n// the key is the english text\nvar uiTranslationLookup = {\n    cdn: {\n        'dragon nest gear simulator': '龙之谷配装模拟器',\n        'enemy lvl': '敌人等级',\n        'damage type': '伤害类型',\n        'player lvl': '玩家等级',\n        'hero level stats': '英雄等级状态',\n        'naked stats': '裸装状态',\n        'stat affects': '状态影响',\n        'str': '力量',\n        'agi': '敏捷',\n        'int': '智力',\n        'builds': '方案',\n        'search': '搜索',\n        'select region': '选择地区',\n        'create a new build': '创建一个新方案',\n        'import': '输入',\n        'publish': '发布',\n        'find a build': '寻找一个新方案',\n        'about': '关于',\n        'import a build from a json build file': '从一个json文件导入方案',\n        'log in and publish your builds online': '登录并发布您的方案',\n        'vit': '体质',\n        'fd': '最终伤害',\n        'pdmg': '物理攻击力',\n        'mdmg': '魔法攻击力',\n        'crit': '致命一击',\n        'cdmg': '致命一击伤害',\n        'fire%': '火攻击',\n        'ice%': '水攻击',\n        'light%': '光攻击',\n        'dark%': '暗攻击',\n        'pdef': '物理防御力',\n        'mdef': '魔法防御力',\n        'weapons': '武器',\n        'armour': '防具',\n        'techs': '技巧饰品',\n        'titles': '称号',\n        'expedition plates': '远征队纹章',\n        'enhancement plates': '强化纹章',\n        'increasing gems': '强化龙玉',\n        'offensive gems': '属性龙玉',\n        'back': '返回',\n        'cancel': '取消',\n        'epic': 'A级',\n        'unique': 'S级',\n        'legendary': 'L级',\n        'quick add': '快速添加',\n        'hero lvl': '英雄等级'\n    },\n    sea: {\n        'offensive gems':  'offensive jades',\n        'increasing gems':  'increasing jades',\n        'expedition plates': 'unique heraldry',\n        'enhancement plates': 'normal heraldry',\n        'techs': 'skill accessory',\n    },\n};\n\n// this function gets called on language change to add the translations to the main list\nfunction uiTranslations($routeParams, $rootScope) {\n    return {\n        addTranslations: function(region, data) {\n            if(region && data && region in uiTranslationLookup) {\n                var regionData = uiTranslationLookup[region];\n                for(var key in regionData) {\n                    data[key] = regionData[key];\n                }\n            }\n        }\n    }\n}\n\n})();\n","(function () {\n  'use strict';\n  \n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\n  function hCodeValues() {\n  \n    function toOneDec(stat) {\n      return Math.round(stat.max*10)/10;\n    }\n    function toNoDec(stat) {\n      return Math.floor(stat.max);\n    }\n    function inThousands(stat) {\n      var val = Number(stat.max);\n      if(val < 100) {\n        return val;\n      }\n      else if(val < 100000) {\n        return Math.round(val/100)/10 + 'k';\n      }\n      else if(val < 1000000) {\n        return Math.round(val/1000) + 'k';\n      }\n      else if(val < 100000000) {\n        return Math.round(val/10000)/100 + 'm';\n      }\n      else {\n        return Math.round(val/1000000) + 'm';\n      }\n    }\n    function toPercent(stat) {\n      return (Math.round(stat.max*10000)/100) + '%';\n    }\n    \n    return {\n      stats : {\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1029, searchable: true },\n        \n        // these are both min and max\n        // shows with the same name but these are used really just for set bonus I think\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\n        \n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\n  \n        // these are both min and max\n        // shows with the same name but these are used really just for set bonus I think\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\n  \n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\n        \n        // stats below here are ones I made up\n        1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n        1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n        1005: {id: 1005, name: 'pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n        1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n        \n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\n        \n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\n        1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\n        1030: {id: 1030, name: 'future fd', display: toPercent, noCustom: true, dps: true },\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\n        \n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\n        \n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n        \n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\n        \n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\n        \n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\n        \n        // special cases for skills\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\n        // items over 10000 are unknown skill effects\n      },\n    \n      rankNames : {\n        0 : { id: 0, name : 'normal' },\n        1 : { id: 1, name : 'magic' },\n        2 : { id: 2, name : 'rare' },\n        3 : { id: 3, name : 'epic' },\n        4 : { id: 4, name : 'unique' },\n        5 : { id: 5, name : 'legend' },\n        6 : { id: 6, name : 'divine' },\n        7 : { id: 7, name : 'ancient' },\n      },\n      \n      shopNames : {\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\n        59001: 'garden bunny',\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \n        89001: 'guild master',\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \n        66001: 'erosion',\n        35006: 'plate',\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\n        91001: 'wrath',\n        45001: 'farm',\n        100004: 'event',\n        89000: 'nightmare'\n      },\n      \n      checkedRank : {\n        0 : true,\n        1 : true,\n        2 : true,\n        3 : true,\n        4 : true,\n        5 : true,\n        6 : true,\n        7 : true,\n      },\n      \n      typeNames : {\n        0 : 'weapons',\n        1 : 'equipment',\n        5 : 'plates',\n        8 : 'pouch',\n        38 : 'plates',\n        90 : 'welspring',\n        132 : 'talisman',\n        139 : 'gems',\n      },\n      \n      elements : {\n        0 : { id: 0, name: 'non-ele' },\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\n        3 : { id: 3, name: 'light', dmgStat: 18 },\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\n      },\n      \n      damageTypes : {\n        0 : { id: 0, name: 'both separate' },\n        1 : { id: 1, name: 'physical' },\n        2 : { id: 2, name: 'magical' },\n        3 : { id: 3, name: 'both combined' },\n        4 : { id: 4, name: 'physical healing' },\n        5 : { id: 5, name: 'magical healing' },\n      },\n      \n      // note: skills shown on-screen have 1k added to their id\n      skillEffectMapping : {\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n        13 : { id: 13, name: 'mp', mapTo: 26 },\n        25 : { id: 25, name: 'action speed' },\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\n        34 : { id: 34, name: 'light %', mapTo: 18 },\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\n        38 : { id: 38, name: 'light def', mapTo: 22 },\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\n        65 : { id: 65, name: 'range' },\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\n        // 134 : { id: 134, name: 'p dmg reduction%' },\n        // 135 : { id: 135, name: 'm dmg reduction%' },\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\n        222: {\n          id: 222, \n          name: 'hellfire', \n          getVals: function(val) {\n            if(val.indexOf(';') > 0) {\n              var vals = val.split(';');\n              return [\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\n                {id: 4012, effect: 222, max: Number(vals[1])},\n                ];\n            }\n            else {\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\n            }\n          }\n        },\n        372: {\n          id: 372,\n          name: 'statConversion',\n          getVals: function(val) {\n            if(val.indexOf(';') > 0) {\n              var vals = val.split(';');\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\n              }\n            }\n            return [];\n          }\n        },\n        \n        \n        389: { id: 389, name: 'fd buf', mapTo: 1029 },\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\n      },\n      \n      gemExchanges: [\n        {id: 2, exchange: 1, name: 'Weapon'},\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\n        {id: 4, exchange: 3, name: 'Headgear'},\n        {id: 5, exchange: 4, name: 'Body Armor'},\n        {id: 6, exchange: 5, name: 'Leg Armor'},\n        {id: 7, exchange: 6, name: 'Gloves'},\n        {id: 8, exchange: 7, name: 'Shoes'},\n        {id: 101, exchange: 8, name: 'Necklace'},\n        {id: 102, exchange: 9, name: 'Earrings'},\n        {id: 103, exchange: 10, name: 'Ring'},\n      ],\n      \n      customItems: \n      [\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\n      ],\n    \n      getStats : function(data) {\n  \n        var useMax=false;\n        var useStateXVal=false;\n        var mightHaveSets=true;\n        var prop = 'State1_Max';\n        if(prop in data) {\n          useMax = true;\n        }\n        else {\n          prop = 'State1Value';\n          if(prop in data) {\n            useStateXVal = true;\n          }\n        }\n        \n        var currentState = 0;\n        var statVals = [];\n        for(;;) {\n          currentState++;\n          \n          var stateProp = 'State' + currentState;\n          if(!(stateProp in data)) {\n            break;\n          }\n  \n          var stateId = data[stateProp];\n          if(stateId == -1) {\n            break;\n          }\n          \n          if(stateId == 107) {\n            // is this mp?\n          }\n          else {\n            \n            var currentData = { id: stateId };\n            \n            var prop;\n          \n            if(useMax) {\n              prop = 'State' + currentState + '_Max';\n              currentData.max = data[prop];\n            }\n            else if(useStateXVal) {\n              prop = 'State' + currentState + 'Value';\n              currentData.max = data[prop];\n            }\n            else {\n              prop = 'StateValue' + currentState;\n              currentData.max = Number(data[prop]);\n            }\n            \n            if(currentData.max > 0 || currentData.max < 0) {\n              if(mightHaveSets) {\n                prop = 'NeedSetNum' + currentState;\n                if(prop in data) {\n                  if(data[prop] == 0) {\n                    break;\n                  }\n                  currentData.needSetNum = data[prop];\n                }\n                else {\n                  mightHaveSets = false;\n                }\n              }\n            \n              statVals.push(currentData);\n            }\n          }\n        }\n        \n        return statVals;\n      },\n      \n      setupStat : function(stat, id) {\n        stat.id = Number(id);\n      },\n      \n      mergeStats : function(stats1, stats2) {\n        var statMap = {};\n        \n        var self = this;\n        function add(value) {\n          \n          var amount = Number(value.max);\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\n            amount = Math.floor(amount);\n          }\n          \n          if(value.id in statMap) {\n            statMap[value.id] += amount;\n          }\n          else {\n            statMap[value.id] = amount;\n          }\n        }\n        \n        angular.forEach(stats1, function(value, key) {\n          if(value) {\n            add(value);\n          }\n        });\n        \n        if(stats2) {\n          angular.forEach(stats2, function(value, key) {\n            if(value) {\n              add(value);\n            }\n          });\n        }\n        \n        var newStats = [];\n        \n        for(var key in statMap) {\n          var stat = { max : statMap[key], id: Number(key) };\n          newStats.push(stat);\n        }\n          \n        return newStats;\n      }\n    }\n  }\n  \n  })();"]}