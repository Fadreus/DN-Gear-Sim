{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","filters/filters.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","nav/export.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$routeParams","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","currentGroup","saveBuildSelection","anyItems","createGroup","handleChange","console","log","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","Math","round","scrollTo","groupNames","localStorage","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","input","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","filter","$stateful","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","indexOf","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","translate","NameID","NameIDParam","material","icon","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","msg","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","dntLocation","encodeItem","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","startedLoading","tlocation","noRegion","fireAction","action","getActions","menu","currentBuild","extraCss","$route","dntInit","translationsStatus","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","_","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItems","currentResults","nameSearch","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","savedSearchStatId","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","link","attrs","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","copy","deleteNullProperties","set","compressBuild","each","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/saved', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/saved/:groupName*', {\r\n      redirectTo: '/builds/:groupName'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/builds/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item-search', {\r\n      redirectTo: '/search'\r\n    }).\r\n    when('/item-search/:itemType', {\r\n      redirectTo: '/search/:itemType'\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    when('/search/custom', {\r\n      templateUrl: 'ui/search/custom-items.html',\r\n      controller: 'CustomItemCtrl as customItems'\r\n    }).\r\n    when('/search/skills', {\r\n      templateUrl: 'ui/search/skill-search.html',\r\n      controller: 'SkillSearchCtrl as skillSearch'\r\n    }).\r\n    when('/search/:itemType*', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:itemString*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/builds/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/builds/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/builds/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n\r\n  this.toggleGroup = function() {\r\n    localStorage.setItem('currentGroup', null);\r\n    $location.url('/builds');\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/builds/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/builds/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    this.addAffectAmount = null;\r\n    this.replaceAffectAmount = {};\r\n\r\n    this.groupItems = null;\r\n    this.groupCalcStats = null\r\n  }\r\n  this.clearGroup();\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.stat = {id:-1, name:''};\r\n  this.newStatVal = 0;\r\n\r\n  this.dropdownStats = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(!hCodeValues.stats[id].noCustom) {\r\n      this.dropdownStats.push(hCodeValues.stats[id]);\r\n    }\r\n  }\r\n  this.dropdownStats.sort()\r\n\r\n  this.getStats = function() {\r\n    return this.dropdownStats;\r\n  }\r\n  \r\n  this.newStat = function() {\r\n    return {id:this.stat.id,max:this.newStatVal};\r\n  }\r\n  \r\n  this.addStat = function() {\r\n    if(this.stat.id > -1) {\r\n      if(!this.item.stats) {\r\n        this.item.stats = [];\r\n      }\r\n       \r\n      this.item.stats.push(this.newStat());\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.removeStat = function(stat) {\r\n    var i = this.item.stats.indexOf(stat);\r\n    if(i != -1) {\r\n    \tthis.item.stats.splice(i, 1);\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    return this.getStatName(this.newStat());\r\n  }\r\n  \r\n  this.getNewStatDisplayValue = function() {\r\n    return this.getStatDisplayValue(this.newStat());\r\n  }\r\n  \r\n  this.getStatName = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].name;\r\n    }\r\n  }\r\n  \r\n  this.getStatDisplayValue = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].display(stat);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    $location.replace();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n    \r\n    var buildAction = {path: 'builds', name:'builds', icon: 'wrench'};\r\n    \r\n    var withBuildMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      buildAction,\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      var menu = null;\r\n      \r\n      var currentBuild = localStorage.getItem('currentGroup');\r\n      if(currentBuild) {\r\n        var savedItems = saveHelper.getSavedItems();\r\n        if(!(currentBuild in savedItems)) {\r\n          currentBuild = null;\r\n        }\r\n      }\r\n\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(currentBuild && currentBuild != 'null') {\r\n        menu = withBuildMenu;\r\n        buildAction.path = 'builds/' + currentBuild;\r\n        buildAction.name = currentBuild;\r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n\r\n      console.log('path:', $location.path());\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          if(value.path != 'builds' || $location.path() == '/builds') {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/builds/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","angular.module('dnsim').controller('CustomItemCtrl',\r\n\r\n['$window','saveHelper','$location','hCodeValues',\r\nfunction($window,saveHelper,$location,hCodeValues) {\r\n  'use strict';\r\n  \r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     var cat = itemCategory.byName(catName);\r\n     if(cat) {\r\n       $location.path(cat.path);\r\n     }\r\n     return;\r\n  }\r\n\r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.type) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        \r\n        if($scope.nameSearch != '') {\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","angular.module('dnsim').controller('SkillSearchCtrl',\r\n\r\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues',\r\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues) {\r\n  'use strict';\r\n  \r\n  $window.document.title = 'DN Gear Sim | SKILLS';\r\n  \r\n  var vm = this;\r\n  document.body.className = 'search-back';\r\n  \r\n  this.job = {id: -1, d:{}, name: ''};\r\n  this.jobs = [this.job];\r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    if(!jobs.isLoaded()) {\r\n      // console.log('jobs not loaded');\r\n      if(!jobs.hasStartedLoading()) {\r\n        init();\r\n      }\r\n      return true;      \r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}]);","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.categories = itemCategory.categories;\r\n      \r\n      $scope.setCategory = function(action) {\r\n        localStorage.setItem('selectedItemCategory', action.name);\r\n        $location.path('/' + action.path);\r\n      }\r\n\r\n      angular.forEach($scope.categories, function(value, key) {\r\n        if($location.path() == '/' + value.path) {\r\n          value.extraCss = 'active';\r\n        }\r\n        else {\r\n          value.extraCss = 'search-default';\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    link: function($scope, element, attrs) {\r\n\r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills'},\r\n      {path: 'search/custom', name:'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      // {region: 'ina', name: 'indonesian files from gemscool', url : 'https://dnina.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      console.log('saving selection');\r\n      localStorage.setItem('currentGroup', buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        console.log('also job');\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      \r\n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, type: 'dps', pc: 50, skPc: 4050 },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, type: 'dps', pc: 51, skPc: 4051 },\r\n      2  : {id: 2, name: 'int', display: toNoDec, type: 'dps', pc: 52, skPc: 4052 },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, type: 'def', pc: 53, skPc: 4053 },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, type: 'dps', pc: 54 },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, type: 'dps', pc: 56 },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, type: 'def', pc: 58 },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, type: 'def', pc: 59 },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, type: 'dps', pc: 62 },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, type: 'dps' },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, type: 'dps' },\r\n      18 : {id: 18, name: 'light%', display: toPercent, type: 'dps' },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, type: 'dps' },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, type: 'def' },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, type: 'def' },\r\n      22 : {id: 22, name: 'light def', display: toPercent, type: 'def' },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, type: 'def' },\r\n      25 : {id: 25, name: 'hp', display: inThousands, type: 'def', pc: 75, skPc: 4075 },\r\n      26 : {id: 26, name: 'mp', display: inThousands, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, type: 'dps' },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, type: 'dps', pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, type: 'dps', pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent },\r\n      51 : {id: 51, name: 'agi%', display: toPercent },\r\n      52 : {id: 52, name: 'int%', display: toPercent },\r\n      53 : {id: 53, name: 'vit%', display: toPercent },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55 },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57 },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent },\r\n      76 : {id: 76, name: 'mp%', display: toPercent },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, type: 'dps', pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      134 : { id: 134, name: 'physicial defense%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}