{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","groupAssignment","hCodeValues","statHelper","saveHelper","itemCategory","$scope","exportLinkHelper","dntData","calcStatPercent","newVal","origVal","saveGroup","saveBuildSelection","vm","groupName","savedItems","this","getSavedItems","groupNames","Object","keys","savedGroup","summaryStatIds","id","stats","summaryDisplay","push","clearGroup","addAffectAmount","replaceAffectAmount","groupCalcStats","dntFiles","anyLoading","tryToSetItem","columns","fileName","isLoaded","allLoaded","item","reloadItem","getDntFiles","forEach","init","$watch","stat","initAddAffects","getAddAffectAmount","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","getGroupCalcStats","group","getCalculatedStatsFromItems","items","getBuild","origStats","newItems","newStats","getStat","max","gItem","index","len","length","i","getStatName","retVal","element","eleId","name","elements","secondaryElement","getGroupItems","itemSplit","str","matches","indexOf","typeName","existing","_","find","each","exchangeType","itemSource","split","sort","a","b","numMatches","groupItems","hasMaxExchangable","cat","byName","sparkTypeId","maxCat","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","onChange","replace","newItemList","$inject","directive","scope","bindToController","compact","statMap","newValue","oldValue","Number","found","anyChange","controllerAs","$timeout","translations","itemColumnsToLoad","itemFactory","getEnchantLevel","enchantments","itemType","num","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","enchantmentStats","setEnchantment","enchantmentNum","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","number","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","p","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","sparkStats","isMoreSparks","isFirstSpark","prevSpark","sid","setTalisman","amount","extraStats","updateItem","attainments","files","texts","file","splitVal","singleText","ItemGainText","text","translate","region","typeId","console","log","pouchFileNames","usedFiles","lookupId","datas","concat","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","d","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","url","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","rows","r","row","col","colName","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","item1","TabNameID","item2","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","$window","jobs","$routeParams","$location","anyToLoad","allJobs","job","needJobClass","jobName","setFullStats","anyDntToLoad","tryInit","getJobName","title","setupTabs","canExtract","canTransfer","setFileName","getItemData","canUse","detail","Type","isInSet","isPlate","fullStats","getBuilds","mainDnt","builds","mergeStats","setLocationByName","scrollTo","decodeItem","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","exchange","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","buildName","getCurrentBuild","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","handleChange","search","encodeItem","copy","preInitItem","copyGroup","newGroupName","importGroup","build","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","shortUrl","sessionStorage","getItem","longUrl","groupHelper","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","target","event","reader","FileReader","readAsText","onload","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","subCatList","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","exchangeId","subCat","gemExchanges","e","isInSubCat","gemExchange","foundSubCatItem","canMove","allSubCatItems","subCatItem","move","moveItem","destination","allowMoreItems","getGemSlot","updatedSavedItems","cancelEdit","handleItemEdit","removeItem","server","gemSlot","gemSlots","getGemSlotName","editMode","setupBuilds","buildNames","currentGroup","createGroup","toggleGroup","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","character","updateRows","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","pcIndexes","pcIndex","rowIndex","makeFakeCells","data","makeCell","selectedIndex","click","swapEnchantmentNumber","newEnhancementNum","fullStats2","fullStats1","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","numItems","numItemText","newCustom","newGroup","deleteBuild","editBuildCtrl","heroStats","oldGroupName","damageTypes","initDamageType","damageType","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","EnglishName","critResist","enemyLevel","playerLevel","eleResist","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","tryToAddItem","cancel","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","goToBuild","allInit","getById","g","h","itemString","itemStr","isLoading","anyItems","newBuildName","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","89000","typeNames","38","90","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","222","372","389","404","useMax","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats2","stats1","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    dntData.init(fileName, columns, function() {}, function() {\r\n      vm.tryToSetItem(dntFiles);\r\n    });\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          angular.forEach(newItem.stats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : dntData.getValue(itemType.mainDnt, row, 'LevelLimit'),\r\n      needJobClass : dntData.getValue(itemType.mainDnt, row, 'NeedJobClass'),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\r\n      {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}