{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","floor","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","251","164","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats2","add","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: Math.floor(stat.max) * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var changeFileName = 'itemchangetable.lzjson';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          angular.forEach(newItem.stats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: Math.floor(stat.max) * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}