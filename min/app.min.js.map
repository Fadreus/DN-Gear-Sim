{"version":3,"sources":["routes.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","document","body","className","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","encodeURIComponent","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","doClose","isClosed","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","titleStep","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","newFdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","paPwr","maxMdmg","extraPdmgMod","intToPdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","fdPc","Cfinaldamage","maxFd","pow","dmgStat","lightPc","firePc","darkPc","icePc","mdefEqHp","eqHp","pdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","skillEffectMapping","getVals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1029","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","effect","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + encodeURIComponent(buildName));\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.json', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + encodeURIComponent(newBuildName));\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.json';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.json';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.json',\r\n    'itemgaintable_dragonjewel.json',\r\n    'itemgaintable_enchant.json',\r\n    'itemgaintable_etc.json',\r\n    'itemgaintable_reboot.json',\r\n    'itemgaintable_talisman.json'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.json',\r\n    'itemdroptable_abyss.json',\r\n    'itemdroptable_apprentice.json',\r\n    'itemdroptable_cook.json',\r\n    'itemdroptable_darklair.json',\r\n    'itemdroptable_dimension.json',\r\n    'itemdroptable_disjoint.json',\r\n    'itemdroptable_dnexpedition.json',\r\n    'itemdroptable_event.json',\r\n    'itemdroptable_farm.json',\r\n    'itemdroptable_fishing.json',\r\n    'itemdroptable_guildwar.json',\r\n    'itemdroptable_item.json',\r\n    'itemdroptable_monsteritem.json',\r\n    'itemdroptable_propdrop.json',\r\n    'itemdroptable_pvp.json',\r\n    'itemdroptable_randomcompound.json',\r\n    'itemdroptable_stageclear.json',\r\n    'itemdroptable_themepark.json',\r\n    'itemdroptable_union.json']\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var charmItemtable = 'charmitemtable.json';\r\n  var commonCharmItemtable = 'charmitemtable_common.json';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.json', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.json',\r\n    'itemcompoundtable_custom.json',\r\n    'itemcompoundtable_glyph.json',\r\n    'itemcompoundtable_glyph95.json',\r\n    'itemcompoundtable_jewel.json',\r\n    'itemcompoundtable_renewal.json',\r\n    'itemcompoundtable_set.json'];\r\n  \r\n  var dropFile = 'itemdroptable.json';\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.json', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.json',\r\n  'partstable_commoncash.json',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.json',\r\n  'partstable_guild.json',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.json',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.json',\r\n  'weapontable_commoncash.json',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.json',\r\n  'weapontable_guild.json',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.json'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.json';\r\n  var cSysShopFileName = 'combinedshoptable_system.json';\r\n  var cCashShopFileName = 'combinedshoptable_cash.json';\r\n  // var shopFileName = 'shoptable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  var transferItemsFileName = 'enchanttransferitemtable.json';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var changeFileName = 'itemchangetable.json';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.json')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.json', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.json';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.json', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.json') &&\r\n      dntData.isLoaded('sealcounttable.json');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.json', null, $timeout);\r\n    dntData.init('sealcounttable.json', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.json', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n\r\n    var noticeId = 'notice1';\r\n    var vm = this;\r\n\r\n    vm.doClose = function() {\r\n      localStorage.setItem(noticeId, true)\r\n      vm.isClosed = true;\r\n    }\r\n    \r\n    vm.isClosed = localStorage.getItem(noticeId) != null;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n    controller: 'HeaderCtrl',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + encodeURIComponent(currentBuild);\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.json';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.json';\r\n  var statCaps = 'playercommonleveltable.json';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.json';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.json';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper(items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.json';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.json', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.json', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.json', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.json'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.json'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.json', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.json', \r\n        potentialDnt: 'potentialtable_glyph95.json',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.json',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.json', \r\n        partsDnt: 'partstable_commoncash.json', \r\n        weaponDnt: 'weapontable_commoncash.json', \r\n        setDnt: 'setitemtable_cash.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.json',\r\n        petLevelDnt: 'petleveltable.json', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: [],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemFactory, hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              case 2252: // Teardrop\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\n  function statHelper(hCodeValues) {\r\n  \r\n    return {\r\n      \r\n      getSetStats: function(groupItems) {\r\n        var stats = [];\r\n        var sets = {};\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value !== null && value.setStats != null) {\r\n            if(value.setId in sets) {\r\n              sets[value.setId].numItems++;\r\n            }\r\n            else {\r\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n            }\r\n          }\r\n        });\r\n        \r\n        angular.forEach(sets, function(value, key) {\r\n          angular.forEach(value.stats, function(stat, index) {\r\n            if(stat.needSetNum <= value.numItems) {\r\n              stats.push(stat);\r\n            }\r\n          });\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getNumItemsForSet: function(items, setId) {\r\n        var numItems = 0;\r\n        angular.forEach(items, function(value, key) {\r\n          if(value && value.setId && value.setId == setId) {\r\n            numItems++;\r\n          }\r\n        });\r\n        \r\n        return numItems;\r\n      },\r\n      \r\n      getCombinedStats: function(groupItems) {\r\n        var stats = [];\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value) {\r\n            \r\n            if(value.fullStats) {\r\n              stats = stats.concat(value.fullStats);\r\n            }\r\n            else if(value.stats) {\r\n              stats = stats.concat(value.stats);\r\n            }\r\n          }\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getCalculatedStatsFromItems: function(group, items) {\r\n        var nakedStats = this.getNakedStats(group);\r\n        var combinedStats = this.getCombinedStats(items);\r\n        var setStats = this.getSetStats(items);\r\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n        if(group.heroStats != null && group.heroStats.length > 0) {\r\n          allStats = allStats.concat(group.heroStats);\r\n        }\r\n        allStats = hCodeValues.mergeStats(allStats);\r\n        \r\n        return this.getCalculatedStats(group, allStats);\r\n      },\r\n      \r\n      getCalculatedStats: function(group, combinedStats) {\r\n        \r\n        var retVal = [];\r\n        var statLookup = {};\r\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n          return [];\r\n        }\r\n        \r\n        angular.forEach(combinedStats, function(stat, index) {\r\n          statLookup[stat.id] = stat;\r\n        });\r\n        \r\n        function getPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.pc]) {\r\n            return Number(statLookup[statDef.pc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function getSkillPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.skPc]) {\r\n            return Number(statLookup[statDef.skPc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function applyPc(stat) {\r\n          stat.max = Math.floor(\r\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n            );\r\n        }\r\n        \r\n        function dupeStat(id) {\r\n          var stat = statLookup[id];\r\n          if(stat) {\r\n            return {id: id, max: Number(stat.max), pc: stat.pc};\r\n          }\r\n          else {\r\n            return {id: id, max: 0, pc: 0};\r\n          }\r\n        }\r\n        \r\n        function addStat(stat) {\r\n          if(stat.max > 0) {\r\n            retVal.push(stat);\r\n          }\r\n        }\r\n  \r\n        var critResist;\r\n        if(!('critResist' in group)) {\r\n          critResist = 0.20;\r\n        }\r\n        else {\r\n          critResist = group.critResist / 100.0;\r\n        }\r\n  \r\n        var eleResist;\r\n        if(!('eleResist' in group)) {\r\n          eleResist = 0;\r\n        }\r\n        else {\r\n          eleResist = group.eleResist / 100.0;\r\n        }\r\n        \r\n        // base stats\r\n        var str = dupeStat(0);\r\n        applyPc(str);\r\n        \r\n        var agi = dupeStat(1);\r\n        applyPc(agi);\r\n        \r\n        var int = dupeStat(2);\r\n        applyPc(int);\r\n  \r\n        var vit = dupeStat(3);\r\n        applyPc(vit);\r\n  \r\n        // add vit to hp\r\n        var hp = dupeStat(25);\r\n        hp.max += (vit.max * Number(group.conversions.HP));\r\n        applyPc(hp);\r\n        \r\n        // defs\r\n        var def = dupeStat(8);\r\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n        applyPc(def);\r\n        \r\n        var defpc = dupeStat(1008);\r\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(defpc);\r\n        \r\n        var mdef = dupeStat(9);\r\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n        applyPc(mdef);\r\n        \r\n        var mdefpc = dupeStat(1009);\r\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(mdefpc);\r\n        \r\n        // attack power - like fd but for bufs\r\n        // this shows as blue damage\r\n        // i think there are magic and phis variants of this but doesnt matter\r\n        var aPwr = dupeStat(3000);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        var maxPdmg = dupeStat(5);\r\n  \r\n        // physical damage\r\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\r\n          var extraPdmg = dupeStat(32);\r\n          var extraPdmgMod= dupeStat(101);\r\n          var paPwr = dupeStat(3001);\r\n          \r\n          // special stats for zeal\r\n          var intToPdmg = dupeStat(10164);\r\n          \r\n          minPdmg.max += extraPdmg.max;\r\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(minPdmg);\r\n    \r\n          maxPdmg.max += extraPdmg.max;\r\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(maxPdmg);\r\n        }\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        var maxMdmg = dupeStat(7);\r\n        \r\n        // magic damage\r\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\r\n          var extraMdmg = dupeStat(33);\r\n          var extraMdmgMod = dupeStat(102);\r\n          var maPwr = dupeStat(3002);\r\n          \r\n          // special stats for zeal\r\n          var strToMdmg = dupeStat(10165);\r\n          var intToMdmg = dupeStat(10372);\r\n          \r\n          minMdmg.max += extraMdmg.max;\r\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n  \r\n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(minMdmg);\r\n          \r\n          maxMdmg.max += extraMdmg.max;\r\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n          \r\n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(maxMdmg);\r\n        }\r\n        \r\n        \r\n        // crit chance %\r\n        var crit = dupeStat(12);\r\n        crit.max += (agi.max*Number(group.conversions.Critical));\r\n        applyPc(crit);\r\n        \r\n        var skCrit = dupeStat(4012);\r\n        crit.max += skCrit.max;\r\n        addStat(crit);\r\n        var itemCrit = dupeStat(1012);\r\n        \r\n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n        retVal.push({id: 1012, max: critChance});\r\n  \r\n        // crit damage %\r\n        var cDmg = dupeStat(103);\r\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n        applyPc(cDmg);\r\n        addStat(cDmg);\r\n  \r\n        var itemCtriDmg = dupeStat(1103);\r\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n        addStat({id: 1103, max: critDamagePc + 2});\r\n  \r\n        // fd\r\n        var fd = dupeStat(29);\r\n        addStat(fd);\r\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n        \r\n        var fdPc = dupeStat(1029);\r\n        var newFdPc = dupeStat(1030);\r\n        newFdPc.max += fdPc.max + Math.min(1, (fd.max / maxFd));\r\n        addStat(newFdPc);\r\n        \r\n        fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n        addStat(fdPc);\r\n        \r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        // elements\r\n        var firePc = dupeStat(16);\r\n        if(firePc.id == priElementId || firePc.id == secElementId) {\r\n          addStat(firePc);\r\n        }\r\n        \r\n        var icePc = dupeStat(17);\r\n        if(icePc.id == priElementId || icePc.id == secElementId) {\r\n          addStat(icePc);\r\n        }\r\n        \r\n        var lightPc = dupeStat(18);\r\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\r\n          addStat(lightPc);\r\n        }\r\n        \r\n        var darkPc = dupeStat(19);\r\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\r\n          addStat(darkPc);\r\n        }\r\n        \r\n        // average damage\r\n        function addAvgDamageStat(id, min, max) {\r\n          \r\n          var nonEleDamage = (min+max)/2;\r\n          // add crit\r\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n          // apply fd\r\n          nonEleDamage = nonEleDamage * (1 + newFdPc.max);\r\n          \r\n          // apply element(s)\r\n          var avgDmg = nonEleDamage;\r\n          if(priElementId > 0) {\r\n            var elementStat = statLookup[priElementId];\r\n            if(elementStat) {\r\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n            }\r\n          }\r\n          addStat({id: id, max: avgDmg});\r\n          \r\n          if(secElementId != priElementId) {\r\n            if(secElementId > 0) {\r\n              var secondaryElementStat = statLookup[secElementId];\r\n              if(secondaryElementStat) {\r\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n                addStat({id: id + 1000, max: secAvgDmg});\r\n              }\r\n            }\r\n            else {\r\n              addStat({id: id + 1000, max: nonEleDamage});\r\n            }\r\n          }\r\n        }\r\n        \r\n        // average damages\r\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\r\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n        }\r\n  \r\n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\r\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n        }\r\n        \r\n        if(!group.damageType || group.damageType.id == 3) {\r\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 4) {\r\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 5) {\r\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\r\n        }\r\n        \r\n        // Equivalent HP\r\n        var pdefEqHp = dupeStat(2008);\r\n        pdefEqHp.max = hp.max / (1-defpc.max);\r\n        \r\n        var mdefEqHp = dupeStat(2009);\r\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n        \r\n        var eqHp = dupeStat(3008);\r\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n        addStat(eqHp);\r\n\r\n        addStat(str);\r\n        addStat(agi);\r\n        addStat(int);\r\n        addStat(vit);\r\n        addStat(hp);\r\n        addStat(def);\r\n        addStat(mdef);\r\n        \r\n        return retVal;\r\n      },\r\n      \r\n      getNakedStats: function(group) {\r\n        \r\n        if(\r\n          group.baseStats && \r\n          group.baseStats.Strength > 0) {\r\n  \r\n          return [\r\n            {id:0, max:group.baseStats.Strength},\r\n            {id:1, max:group.baseStats.Agility},\r\n            {id:2, max:group.baseStats.Intelligence},\r\n            {id:3, max:group.baseStats.Stamina}\r\n            ];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      getSkillStats : function (item, data, skillData) {\r\n  \r\n        var skillLevelVals = null;\r\n        angular.forEach(skillData, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        if(!skillLevelVals) {\r\n          return null;\r\n        }\r\n        \r\n        var index = 1;\r\n        var effects = [];\r\n        var stillCols = true;\r\n        \r\n        while(stillCols) {\r\n          var colName = 'EffectClass' + index;\r\n          var valColName = 'EffectClassValue' + index;\r\n          if(data && colName in data && valColName in skillLevelVals) {\r\n            if(data[colName] > 0) {\r\n              \r\n              var val = skillLevelVals[valColName];\r\n              \r\n              // for now add 10k\r\n              var effectId = data[colName];\r\n              var map = hCodeValues.skillEffectMapping[effectId];\r\n              if(map && map.getVals) {\r\n                var vals = map.getVals(val);\r\n                for(var i=0;i<vals.length;++i) {\r\n                  effects.push(vals[i]);\r\n                }\r\n              }\r\n              else {\r\n                var statId;\r\n                if(map && map.mapTo) {\r\n                  statId = map.mapTo;\r\n                }\r\n                else {\r\n                  statId = 10000 + effectId;\r\n                }\r\n                \r\n                if(val > 0) {\r\n                  effects.push({ id: statId, effect: effectId, max: val });\r\n                }\r\n                else {\r\n                  if(val.toString().indexOf(';') > 0) {\r\n                    var vals = val.split(';');\r\n                    if(vals.length > 0 && vals[0] > 0) {\r\n                      effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stillCols = false;\r\n          }\r\n          \r\n          index++;\r\n        }\r\n        \r\n        return effects;\r\n      },\r\n  \r\n      getBuildStats: function(build) {\r\n        var stats = {};\r\n        stats.nakedStats = this.getNakedStats(build);\r\n        stats.combinedStats = this.getCombinedStats(build.items);\r\n        stats.setStats = this.getSetStats(build.items);\r\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n        if(build.heroStats && build.heroStats.length) {\r\n          stats.heroStats = build.heroStats;\r\n          stats.allStats = stats.allStats.concat(build.heroStats);\r\n        }\r\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n        \r\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n        return stats;\r\n      }\r\n    };\r\n  }\r\n  \r\n  })();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\n  function hCodeValues() {\r\n  \r\n    function toOneDec(stat) {\r\n      return Math.round(stat.max*10)/10;\r\n    }\r\n    function toNoDec(stat) {\r\n      return Math.floor(stat.max);\r\n    }\r\n    function inThousands(stat) {\r\n      var val = Number(stat.max);\r\n      if(val < 100) {\r\n        return val;\r\n      }\r\n      else if(val < 100000) {\r\n        return Math.round(val/100)/10 + 'k';\r\n      }\r\n      else if(val < 1000000) {\r\n        return Math.round(val/1000) + 'k';\r\n      }\r\n      else if(val < 100000000) {\r\n        return Math.round(val/10000)/100 + 'm';\r\n      }\r\n      else {\r\n        return Math.round(val/1000000) + 'm';\r\n      }\r\n    }\r\n    function toPercent(stat) {\r\n      return (Math.round(stat.max*10000)/100) + '%';\r\n    }\r\n    \r\n    return {\r\n      stats : {\r\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1030, searchable: true },\r\n        \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n        \r\n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n  \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n  \r\n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n        \r\n        // stats below here are ones I made up\r\n        1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1005: {id: 1005, name: 'pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n        \r\n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n        1029: {id: 1029, name: 'old fd', display: toPercent, noCustom: true, dps: true },\r\n        1030: {id: 1030, name: 'future fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n        \r\n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        \r\n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n        \r\n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n        \r\n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n        \r\n        // special cases for skills\r\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        // items over 10000 are unknown skill effects\r\n      },\r\n    \r\n      rankNames : {\r\n        0 : { id: 0, name : 'normal' },\r\n        1 : { id: 1, name : 'magic' },\r\n        2 : { id: 2, name : 'rare' },\r\n        3 : { id: 3, name : 'epic' },\r\n        4 : { id: 4, name : 'unique' },\r\n        5 : { id: 5, name : 'legend' },\r\n        6 : { id: 6, name : 'divine' },\r\n        7 : { id: 7, name : 'ancient' },\r\n      },\r\n      \r\n      shopNames : {\r\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n        59001: 'garden bunny',\r\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n        89001: 'guild master',\r\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n        66001: 'erosion',\r\n        35006: 'plate',\r\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n        91001: 'wrath',\r\n        45001: 'farm',\r\n        100004: 'event',\r\n        89000: 'nightmare'\r\n      },\r\n      \r\n      checkedRank : {\r\n        0 : true,\r\n        1 : true,\r\n        2 : true,\r\n        3 : true,\r\n        4 : true,\r\n        5 : true,\r\n        6 : true,\r\n        7 : true,\r\n      },\r\n      \r\n      typeNames : {\r\n        0 : 'weapons',\r\n        1 : 'equipment',\r\n        5 : 'plates',\r\n        8 : 'pouch',\r\n        38 : 'plates',\r\n        90 : 'welspring',\r\n        132 : 'talisman',\r\n        139 : 'gems',\r\n      },\r\n      \r\n      elements : {\r\n        0 : { id: 0, name: 'non-ele' },\r\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n        3 : { id: 3, name: 'light', dmgStat: 18 },\r\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n      },\r\n      \r\n      damageTypes : {\r\n        0 : { id: 0, name: 'both separate' },\r\n        1 : { id: 1, name: 'physical' },\r\n        2 : { id: 2, name: 'magical' },\r\n        3 : { id: 3, name: 'both combined' },\r\n        4 : { id: 4, name: 'physical healing' },\r\n        5 : { id: 5, name: 'magical healing' },\r\n      },\r\n      \r\n      // note: skills shown on-screen have 1k added to their id\r\n      skillEffectMapping : {\r\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n        13 : { id: 13, name: 'mp', mapTo: 26 },\r\n        25 : { id: 25, name: 'action speed' },\r\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n        34 : { id: 34, name: 'light %', mapTo: 18 },\r\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n        38 : { id: 38, name: 'light def', mapTo: 22 },\r\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n        65 : { id: 65, name: 'range' },\r\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n        // 134 : { id: 134, name: 'p dmg reduction%' },\r\n        // 135 : { id: 135, name: 'm dmg reduction%' },\r\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n        222: {\r\n          id: 222, \r\n          name: 'hellfire', \r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              return [\r\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n                {id: 4012, effect: 222, max: Number(vals[1])},\r\n                ];\r\n            }\r\n            else {\r\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n            }\r\n          }\r\n        },\r\n        372: {\r\n          id: 372,\r\n          name: 'statConversion',\r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n              }\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n        \r\n        \r\n        389: { id: 389, name: 'fd buf', mapTo: 1030 },\r\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n      },\r\n      \r\n      gemExchanges: [\r\n        {id: 2, exchange: 1, name: 'Weapon'},\r\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n        {id: 4, exchange: 3, name: 'Headgear'},\r\n        {id: 5, exchange: 4, name: 'Body Armor'},\r\n        {id: 6, exchange: 5, name: 'Leg Armor'},\r\n        {id: 7, exchange: 6, name: 'Gloves'},\r\n        {id: 8, exchange: 7, name: 'Shoes'},\r\n        {id: 101, exchange: 8, name: 'Necklace'},\r\n        {id: 102, exchange: 9, name: 'Earrings'},\r\n        {id: 103, exchange: 10, name: 'Ring'},\r\n      ],\r\n      \r\n      customItems: \r\n      [\r\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n      ],\r\n    \r\n      getStats : function(data) {\r\n  \r\n        var useMax=false;\r\n        var useStateXVal=false;\r\n        var mightHaveSets=true;\r\n        var prop = 'State1_Max';\r\n        if(prop in data) {\r\n          useMax = true;\r\n        }\r\n        else {\r\n          prop = 'State1Value';\r\n          if(prop in data) {\r\n            useStateXVal = true;\r\n          }\r\n        }\r\n        \r\n        var currentState = 0;\r\n        var statVals = [];\r\n        for(;;) {\r\n          currentState++;\r\n          \r\n          var stateProp = 'State' + currentState;\r\n          if(!(stateProp in data)) {\r\n            break;\r\n          }\r\n  \r\n          var stateId = data[stateProp];\r\n          if(stateId == -1) {\r\n            break;\r\n          }\r\n          \r\n          if(stateId == 107) {\r\n            // is this mp?\r\n          }\r\n          else {\r\n            \r\n            var currentData = { id: stateId };\r\n            \r\n            var prop;\r\n          \r\n            if(useMax) {\r\n              prop = 'State' + currentState + '_Max';\r\n              currentData.max = data[prop];\r\n            }\r\n            else if(useStateXVal) {\r\n              prop = 'State' + currentState + 'Value';\r\n              currentData.max = data[prop];\r\n            }\r\n            else {\r\n              prop = 'StateValue' + currentState;\r\n              currentData.max = Number(data[prop]);\r\n            }\r\n            \r\n            if(currentData.max > 0 || currentData.max < 0) {\r\n              if(mightHaveSets) {\r\n                prop = 'NeedSetNum' + currentState;\r\n                if(prop in data) {\r\n                  if(data[prop] == 0) {\r\n                    break;\r\n                  }\r\n                  currentData.needSetNum = data[prop];\r\n                }\r\n                else {\r\n                  mightHaveSets = false;\r\n                }\r\n              }\r\n            \r\n              statVals.push(currentData);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return statVals;\r\n      },\r\n      \r\n      setupStat : function(stat, id) {\r\n        stat.id = Number(id);\r\n      },\r\n      \r\n      mergeStats : function(stats1, stats2) {\r\n        var statMap = {};\r\n        \r\n        var self = this;\r\n        function add(value) {\r\n          \r\n          var amount = Number(value.max);\r\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n            amount = Math.floor(amount);\r\n          }\r\n          \r\n          if(value.id in statMap) {\r\n            statMap[value.id] += amount;\r\n          }\r\n          else {\r\n            statMap[value.id] = amount;\r\n          }\r\n        }\r\n        \r\n        angular.forEach(stats1, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n        \r\n        if(stats2) {\r\n          angular.forEach(stats2, function(value, key) {\r\n            if(value) {\r\n              add(value);\r\n            }\r\n          });\r\n        }\r\n        \r\n        var newStats = [];\r\n        \r\n        for(var key in statMap) {\r\n          var stat = { max : statMap[key], id: Number(key) };\r\n          newStats.push(stat);\r\n        }\r\n          \r\n        return newStats;\r\n      }\r\n    }\r\n  }\r\n  \r\n  })();"]}