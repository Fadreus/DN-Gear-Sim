{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","encodeURIComponent","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","251","164","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats2","add","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var changeFileName = 'itemchangetable.lzjson';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 100000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1029, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n      33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legend' },\r\n      6 : { id: 6, name : 'divine' },\r\n      7 : { id: 7, name : 'ancient' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n      6 : true,\r\n      7 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}