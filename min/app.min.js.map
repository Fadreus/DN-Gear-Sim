{"version":3,"sources":["routes.js","about/about.js","filters/filters.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","nav/export.js","nav/nav.js","nav/setup.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$routeParams","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","currentGroup","saveBuildSelection","anyItems","createGroup","handleChange","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","localStorage","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","clearGroup","addAffectAmount","groupItems","$watch","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","indexOf","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","statMap","_","newValue","oldValue","anyChange","Number","found","each","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","getStats","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","translate","NameID","NameIDParam","material","icon","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","msg","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","console","log","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","dntLocation","encodeItem","copy","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","$route","getDntLocation","getTlocation","tlocation","getHostedFiles","hostedFiles","getWorldName","setTLocation","location","edit","setLocation","updateParams","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","startedLoading","noRegion","fireAction","action","getActions","menu","currentBuild","extraCss","dntInit","translationsStatus","progressTranslations","testResults","translationResults","advancedSetup","noLocation","sessionLocation","alternativeFiles","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","searchable","savedSearchStatId","navigate","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","dnsimCategoryLinksController","collapsed","setCategory","dnsimItemIcon","link","attrs","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","display","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasStartedLoading","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","searchType","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","deleteNullProperties","set","compressBuild","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","itemCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","3","4","5","6","7","8","9","10","noCustom","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:itemType?', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n\r\n  this.toggleGroup = function() {\r\n    localStorage.setItem('currentGroup', null);\r\n    $location.url('/builds');\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/build/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory','$scope',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory,$scope) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null\r\n  }\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    // console.log('item changed');\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/build/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n    \r\n    var buildAction = {path: 'build', name:'build', icon: 'wrench'};\r\n    \r\n    var withBuildMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      buildAction,\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      var menu = null;\r\n      \r\n      var currentBuild = localStorage.getItem('currentGroup');\r\n      if(currentBuild) {\r\n        var savedItems = saveHelper.getSavedItems();\r\n        if(!(currentBuild in savedItems)) {\r\n          currentBuild = null;\r\n        }\r\n      }\r\n\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(currentBuild && currentBuild != 'null') {\r\n        menu = withBuildMenu;\r\n        buildAction.path = 'build/' + currentBuild;\r\n        buildAction.name = currentBuild;\r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          if(value.path != 'builds' || $location.path() == '/builds') {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     $scope.itemCategory = itemCategory.byName(catName);\r\n     if($scope.itemCategory) {\r\n       // console.log('moving');\r\n       $location.path($scope.itemCategory.path);\r\n     }\r\n     return;\r\n  }\r\n  \r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      $scope.itemCategory = itemCategory.byName(catName);\r\n      if($scope.itemCategory) {\r\n        // console.log('navigating to ', $scope.itemCategory.path);\r\n        $location.path($scope.itemCategory.path);\r\n      }\r\n    }\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    // console.log('getting items');\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      // console.log('no items');\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    // console.log('got ', allItems);\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', $scope.nameSearch); \r\n        \r\n        if($scope.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.itemCategory = itemCategory.byName('skills');\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  this.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: ['itemCategory', dnsimCategoryLinksController],\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.setCategory = function(action) {\r\n    // console.log('setting cat', action);\r\n    vm.cat = action;\r\n    localStorage.setItem('selectedItemCategory', action.name);\r\n    \r\n    if(vm.collapse) {\r\n      vm.collapsed = !vm.collapsed;\r\n    }\r\n\r\n    if(vm.onChange) {\r\n      vm.onChange();\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    link: function($scope, element, attrs) {\r\n\r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills', searchType: 'skills'},\r\n      {path: 'search/custom', name:'custom', searchType: 'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesian files from gemscool', url : 'https://inafiles-da491.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      // console.log('saving selection');\r\n      localStorage.setItem('currentGroup', buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        // console.log('also job');\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}