{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","path","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloadGroup","reloaded","createShortUrl","createGroupLink","setShortUrl","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","search","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","updateRows","newVal","origVal","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","calcStatPercent","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","input","conversions","setSelectionRange","getElementById","focus","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","progress","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","encodeURIComponent","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","$watch","initAddAffects","getAddAffectAmount","getGroupItems","itemSplit","str","matches","indexOf","existing","itemSource","split","a","b","numMatches","groupItems","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","compact","statMap","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","typeId","pouchFileNames","getCharmItems","TypeParam1","getPouchItems","pouchData","gold","isGroup","boxType","f","basicItem","getPouchItemsFromFile","pouchFileName","pouchItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","c","charmData","CharmNum","cd","CharmType","itemds","ItemID","count","getData","Look","Count","Gold","crafts","cFiles","initCrafts","initCraft","j","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","numItem1","translate","TabNameID","numItem2","ladderPoints","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","canUse","detail","Type","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","dntLocation","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","collapsed","action","loaded","setCategory","getName","tId","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","floor","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","text","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","dragonjeweltype","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","file","progressCallback","completeCallbacks","ignoreErrors","$broadcast","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasFailed","resetAll","getNumRows","lookupValue","columnName","getValue","columnNames","convertData","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","href","join","basePath","querySelector","attr","success","status","headers","skillDnt","skillLevelDnt","skillLevelDatas","SkillIndex","SkillLevel","skillLevelVals","pv","SkillExplanationID","rowNum","typeParam1","SkillExplanationIDParam","ps","getSkillStats","ds","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","PetLevel","DragonJewelSlot4","itemTypeName","fileType","key1","allDntFiles","searchType","sourceType","limitExchange","catItems","loading","rawData","gemTypes","gem","gemDnt","sources","numComplete","types","enh1","enh2","itemMap","sorted","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","SkillID","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","partsDnt","weaponDnt","minRank","eq","rbeq","pvpeq","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","hasStartedLoading","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","titleStep","enhanceStep","isItemStep","techSkillStep","itemNameStep","itemNames","itemStep","itemNamesList","hideName","namedItemStep","distinctItemNameStep","numStatsStep","numStats","highStatStep","allItem","quickHigh","allStats","selectedVal","largestVal","val1","val2","searchable","hasStatStep","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","defToPdmg","intToPdmg","extraPdmgMod","maxMdmg","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","dnTranslations","completeCallback","DnTranslations","sizeLimit","getFileName","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","110373","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","100004","typeNames","38","90","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","222","372","389","useMax","404","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats1","stats2","add"],"mappings":"cAAA,WAGAA,QAAAA,GAAAC,GAEAA,EAEEA,KAAAA,UAGIC,YAAa,sBACbC,WAAY,uBAKZA,KAAAA,UATJD,YAAA,oBAYIA,WAAAA,cADYE,KAKdA,SACEF,YAAa,mBACbC,WAAY,aAKZD,KAAAA,UAvBJA,YAyBO,mCACHA,WAAAA,qBACAC,gBAAY,IAIZA,KAAAA,KA/BJD,YAiCO,oBAEHC,KAAAA,WAnCJD,YAqCO,4BACHA,WAAAA,+BAD8BE,KAKhCA,sBACEF,YAAa,4BACbC,WAAY,+BAIZD,KAAAA,wBACAC,YAAY,4BAjDhBA,WAoDO,kBAEHA,KAAAA,2BAtDJD,YA0DO,4BACHA,WAAAA,+BADoBE,KAMtBA,cACEF,YAAa,4BACbC,WAAY,+BAKZA,KAAAA,wBAvEJD,YA2EO,8BACHA,WAAAA,mCAKAA,KAAAA,wBACAC,YAAY,8BAlFhBA,WAqFO,4BAMHD,KAAAA,iBACAC,YAAY,wBA5FhBA,WA+FO,yBACHD,gBAAa,IAKbA,KAAAA,SACAC,YAAY,oBAtGhBA,WAyGO,aAA+BC,KAKpCA,sBACEF,YAAa,oBACbC,WAAY,aAMjBC,KAAA,WA7HDF,YAAA,qBAoFMC,WAAY,eAGdC,KAAK,cACHF,YAAa,iCACbC,WAAY,+BAGdC,KAAK,YACHF,YAAa,yBACbC,WAAY,wBAGdC,KAAK,kBACHF,YAAa,yBACbC,WAAY,wBAGdC,KAAK,cACHF,YAAa,2BACbC,WAAY,0BAGdC,KAAK,WACHF,YAAa,8BACbC,WAAY,4BAGdC,KAAK,+BACHF,YAAa,2BACbC,WAAY,0BAGdC,KAAK,yBACHF,YAAa,8BACbC,WAAY,4BAGdE,WACEC,WAAY,MA1HlBN,QAAAO,OAAA,SAAAC,QAAA,iBAAAA;cCDA,WAAAR,QAACO,OAAY,SACbJ,WAAA,aAGG,UAFHH,SAAQO,GAKJE,SAASC,KAAKC,UAAY,eAA1BF,EAAAA,SAAcE,MAAd;YCPJX,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,YAAQO,aAAgBJ,mBAItB,SAAAS,EAAAC,EAAAC,GAEA,GAAIC,GAAKC,IAGPJ,MAAAA,YAAe,WADjBA,EAAAK,KAAA,iBAAAF,EAAAG,YAKEN,KAAAA,UAAe,WADjBA,EAAAK,KAAA,eAAAF,EAAAG,YAKEF,KAAAG,UAAIC,WAAJ,GAAIA,GAAeP,EAAWQ,YAAYN,EAAGG,UAAWH,EAAGO,MAAMC,MAEjEV,GAAWW,UAKXZ,EARFQ,EAMIL,EAAGO,OAMPV,EAAKa,KAAL,UAAmBL,IADnBJ,KAAKU,UAAW,EAKhBV,KAAAS,YAAA,WAHEb,EAAUK,KAAK,iBAAmBF,EAAGG,YAWrCF,KAAAW,eAAa,WACXb,EAAcA,eAAAA,EAAiBc,UAAAA,EAAgBb,QAGlDC,KALDa,YAAA,WACE,GAAGd,EAAGO,MAAO,CAMf,GAAKO,GAALf,EAAAc,gBAAAb,EAAAG,UAAAH,EAAAO,MAEDQ,GAAAA,MAAUC,SAAAC,eAAyBC,QAAAC,KAI9BhB,KAAAA,iBAEAiB,UAAAA,wBAAU,WAHM,OAKlBhC,OAAAA,EACAiC,kBACAlC,UAAa,aATfoB,MAAA,SAjDFa,SAAA,aAwDIhC,WAAY,mBACZiC,aAAc,eACdlC,YAAa;YC1DjBF,SAAQO,OAAO,SAASJ,WAAW,yBAAnCH,WAAQO,YAAgBJ,cAAW,aAAA,eAElC,aAAW,mBAAY,cAAc,eAAa,UAAe,WAEhE,SAAAkC,EAAAzB,EAAA0B,EAAAC,EAAAC,EAAA3B,EAAAC,EAAA2B,EAAAC,EAAAC,EAAAC,GAOE,QAAIC,KACJC,GAAAA,GAAA,GAAaC,OAAAC,KAAAC,UAAkB/B,EAAAA,MAAY,KAA3C,KAAAgC,KAAA,4BACDJ,QAAAD,EAAA,aAAA9B,EAAAG,UAAA,SAPD,GAAIH,GAAKC,IAETD,GAAGoC,OAASC,KASVC,UAAO,6BADF,WAELC,OACEpC,OAAAA,EACAI,kBAJGJ,UAAA,aAMLf,MAAAA,UAEAD,WAAAA,wBARFkC,aAAA,OAhBFlC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,YAAgBJ,cAAW,aAAA,eAEnC,aAAA,mBAAsC,cAAa,eAAe,UAAlE,WAEE,SAAAkC,EAAAzB,EAAA0B,EAAAC,EAAAC,EAAA3B,EAAAC,EAAA2B,EAAAC,EAAAC,EAAAC,GAQE,QAAIW,GAAcC,GAClBC,GAAAA,GAAYC,EAAAF,OAAAD,KACZ,IAAAE,QAAGF,IAAAA,kBAAuBA,GAAvBA,GAASA,EAAMI,OAAQ,CAGxB,GAAIC,GAASL,EAAIM,GAAAA,KACjBD,EAAOE,GAAPD,WACAD,GAAOG,WAASR,EAAA,IACdxC,EAAGO,OAAQ0B,WACXjC,EAAAO,MAAG0C,KAAYA,MAAAA,EAASL,QACtB5C,GAAAiD,EAAeA,OAAgB,GAC/BjD,EAAGG,UAAYH,EAAGG,OAAU+C,EAAAA,EAAQN,OAAc,GAFpD5C,EAAAG,UAIKH,EAAAG,UAAA+C,QAAA,aAAA,KAGL5B,EAAAA,UAAAA,iBAEHA,MAGH,QAAS6B,KAGPrD,GAAAA,GAAWW,EACTJ,YACAA,EAAAA,UACGE,EAHLA,MAAAC,MAKAX,GAAUK,UACXG,EA1CHA,EAuCML,EAAGO,OAELV,EAAUK,KAAK,UAAYG,GAnC7B,GAAIL,GAAKC,IAGTD,GAAGmD,aAAcA,EAAjBnD,EAAGmD,YAAcA;ACTnB,YAkBA,SAASC,yBAAwB7B,EAAaE,EAAc3B,GAE1D,GAAIE,GAAKC,IAETD,GAAGqD,iBAAmB,WAAtBrD,GAAGqD,GAAH5B,EAAsB6B,mBAAWtD,EAAAO,MAAAC,MAC/B,OAAAR,GAAIuD,SAAAA,OAAa9B,GACX+B,EAAHxD,EAAAwD,SAAoBD,SAQzB,IAAIE,MACAC,EAAgB,EACpB1D,GAAG2D,iBAAmB,WACpB,GAAAD,GAAGA,EAAiB1D,SAAA4D,KAApB,CACEH,KACAC,EAAgB1D,EAAGwD,SAASI,IAC5B,IAAIC,MAEArD,EAAQR,EAAGO,MAAMC,MAAMsD,KAAK,SAAAC,EAAAC,GAC9B,MAAOD,GAAME,aAAeD,EAAMC,cAEpC,IAAG,mBAAHjE,EAAGA,SAAA4D,KACDC,EAAaK,EAAEC,OAAO3D,EAAO,SAAA4D,GAC3B,MAAOA,GAAKC,mBAAqB,QAInCR,IAAsBrD,kBAAtBqD,EAAAA,SAAeM,KACbN,EAAOO,EAAKE,OAAAA,EAAAA,SAAZF,GADF,MAAAA,GAAAE,kBAAA,QAMAT,IAAsBrD,WAAtBqD,EAAAA,SAAeM,KAAc,CAC3B,GAAAI,GAAO9C,EAAa+C,OAAaD,UAElCV,GAHDK,EAAAC,OAAA3D,EAAA,SAAA4D,GAID,MAAA3C,GAAA+C,aAAAD,EAAAH,KAEGX,EAAAA,KAAAA,EAAaQ,SAAAA,GACXQ,EAAAA,eAD2BhB,KAE3BiB,EAAAA,EAF2BT,eAG3BA,SAHFS,MAAA,EAMDT,aAAAG,EAAAH,eAGCR,EAAAA,EAAQW,cAARK,MAA2BC,KAASN,EAAKC,MAEvBT,mBAHpB5D,EAAAwD,SAGWA,KACTC,EAAQW,EAAKH,cAAcS,OAASN,EAAKE,mBAGvC,kBAAAb,EAAQW,SAAKH,KAEhBR,EAAAW,EAAAH,cAAAS,OAAAN,EAAAE,kBAGJb,EAAAW,EAAAH,cAAAS,MAAA,IA/CHjB,EAAA,GAAA,KAoDE,MAAIkB,IAGFC,EAAAA,YAAaC,SAAOZ,GAErB,GACCW,GAJFD,EAGK,CAED,IAAO,WAAP3E,EAAAwD,SAASsB,KAEVF,EAHDC,EAAAZ,iBAIAW,CAKAV,EAHDA,EAAAa,KAAAxD,EAAAyD,aAAA,SAAAC,GALG,MAAOA,GAAEH,UAAYD,EAAOZ,eAQPG,GAIpB,GAAAQ,EAAA,CACF,GALDpE,GAAAR,EAAAqD,kBAMDa,GAAAgB,KAAA1E,EAAA,SAAA4D,GAAMO,EAAAA,SAAPC,KAtBFD,IA2BI,MAAAA,IAIA3E,EAAAmF,WAAM3B,SAAHY,EAAoBS,GACrBD,IAAAA,IAAAA,EAAaR,QAEd,OAAI,CAIF,IAHDQ,EAGA,IAAgB,WAAhB5E,EAAGoF,SAAAA,KACDR,EAAAA,EAAaQ,YAGhB,CAPC,GAAIA,GAAclB,EAAEa,KAAKxD,EAAYyD,aAAc,SAASC,GAQ3D,MAAAA,GAAAI,IAAWT,EAAAA,SAEZQ,KACAR,EAAIU,EAAoBP,UAIxB,GAAAF,IAAIS,EAaPC,SAAHV,IAAaD,IACDpB,GAAHqB,EAAoBZ,YAXtB,IAAAuB,GAAAxF,EAAA2D,kBAOF,QANiBiB,EAAAA,KAAbY,EAAyB,SAAAC,GAC5B,MAAqBZ,OAAdD,GAAqBX,GAA5BwB,EAAAxB,gBAKD,QAaCjE,EAAAuF,QAAON,WAER,MAHD,mBAAAjF,EAAAwD,SAAAI,MAAA,kBAAA5D,EAAAwD,SAAAI,MAAA,WAAA5D,EAAAwD,SAAAI,MAKIlB,EAAAA,WAAQgD,SAAIb,GAEf,GAAA,WAAA7E,EAAAwD,SAAAI,KAAD,MAAOwB,GAAAA,YAZX,IAAAP,EAAA,CAKI,GAAIO,GAAclB,EAAEa,KAAKxD,EAAYyD,aAAc,SAASC,GAW7DU,MAAOV,GAAAH,UAASc,EAAUC,cAM1BC,OAHEC,IAHLrD,QAAAgD,IAAA,2BAAAb,GAMGiB,EAAiBT,KAIpBrF,EAAG+F,KAAAA,SAAeH,EAAAC,GAChBnC,EAAAA,QAAA1D,EAAAgG,WAAAH,GACA7F,EAAAiG,kBAAAjG,EAAAG,UAAAH,EAAAO,MAAAC,OAFFR,EAAA+F,gBAMEjG,EAAAA,eAAWmG,WACXjG,OAAG+F,EAAAA,SAAHG,QAAAlG,EAAAqD,mBAAAT,OAAA5C,EAAAwD,SAAA0C,QAGFlG,EAAGmG,aAAa,WACdnG,EAAA,GADFA,EAAAoB,YAKEpB,EAAAoG,eAAYC,WADdvG,EAAAmG,kBAAAjG,EAAAG,UAAAH,EAAAO,MAAAC,OAPER,EAAG+F,gBAaH3B,EAAAA,WAAKkC,WACLtG,EAAAoB,YAGImF,EAAAA,QAAAA,SAAAnC,GAED,MAAA,UAAAA,EAAAiC,UAAA,WAAAjC,EAAAiC,UAAA,UAAAjC,EAAAiC,UAAA,kBAAAjC,EAAAiC,UAAA,mBAAAjC,EAAAiC,UAEHrG,EAAAA,WAAA,SAAiBuG,GACjBzG,EAAWmG,GACXjG,EAAG+F,YAAH,CAZF,IAAAQ,KAcDtH,SAAAuH,QAAAxG,EAAAO,MAAAC,MAAA,SAAAiG,EAAAC,GATQD,IAAUA,EAAMH,YACjBC,EAAYI,KAAKF,KAIrBzG,EAAGO,MAAMC,MAAQ+F,EACjBzG,EAAWmG,kBAAkBjG,EAAGG,UAAWoG,GAC3CvG,EAAG+F,gBA9MP3C,wBAAwBwD,SAAW,cAAe,eAAgB,cAAlExD,QAAAA,OAAAA,SAAwBwD,UAAU,yBAAgB,WAAlD3H,OACEqD,OAAO,EACLA,kBACAC,UAAAA,aACEpC,MAAAA,SACAI,SAAO,YACPiD,OAAAA,UACAqD,SAAQ,aAJQzH,WAFbgE,wBASLhE,aAAYgE,YACZ/B,YAAAA;YCbJpC,SAAQO,OAAO,SAASJ,WAAW,iBAAnCH,WAAQO,aAAgBJ,aAAW,cAIjC,SAAAkC,EAAAE,EAAA1B,EAAAyB,GASE,QAAG6C,GAAcA,GACf,GAAAA,EAAI0C,QACF,IAAA,GAAG9G,GAAG+G,EAAAA,EAAAA,EAAHA,SAAAnE,SAA0BkE,EAC3B,GAAA9G,EAAA+G,SAAUA,GAAAA,IAAYnD,EAAtBkD,QACD,MAAA9G,GAAA+G,SAAAC,GAAApD,KAML,QAAAqD,KACAjH,EAAGoE,KAAK8C,UAAYlH,EAAGoE,KAAK+C,MAGN5F,MAApBvB,EAAGoE,KAAK8C,kBAAwBE,EAAAA,KAAWpH,iBAAQqH,OAAkBrH,IACtEA,EAAAoE,KAAA8C,UAAA3F,EAAA6F,WAAApH,EAAAoE,KAAAiD,iBAAArH,EAAAoE,KAAA8C,YAGqB3F,MAApBvB,EAAGoE,KAAK8C,YAAY3F,EAAY6F,KAAAA,WAAWxE,OAAQ0E,IACpDtH,EAAAoE,KAAA8C,UAAA3F,EAAA6F,WAAApH,EAAAoE,KAAAkD,WAAAtH,EAAAoE,KAAA8C,YA1BH,GAAIlH,GAAKC,IAGTD,GAAG+G,WAAWxF,EACdvB,EAAGuH,SAAAA,EAAiBA,aAApBvH,EAAGuH,eAAiBA,KA6BlBhF,UAAAA,qBAAkB,WAChB6B,OACAoD,OAAAA,EACApG,kBACA+E,KAAAA,QANGqB,SAAA,YAQLpI,SAAY,YACZiC,WAAc,eAThBjC,WAAA,gBArCFiC,aAAA,OA+CIlC,YAAa;YC/CjBF,SAAQO,OAAO,SAASJ,WAAW,iBAC/B,UAAU,YAAY,eAAe,WAAW,aADpDH,SAAQO,EAAOK,EAAST,EAAWkC,EAAnCxB,GAKI,GAAIE,GAAKC,IACTP,UAASC,KAAKC,UAAY,aAC1BK,KAAKwH,YAAc,WACjBzH,EAAG0H,WAAa5H,EAAW6H,gBAC3B3H,EAAG4H,WAAaC,OAAOC,KAAK9H,EAAG0H,YAAY5D,OAC3C9D,EAAG+H,SACH,KAAI,GAAIf,GAAAA,EAARA,EAAYA,EAAAA,WAAKY,SAAWhF,EAC1B5C,EAAG+H,OAAOpB,MACR/C,KAAM5D,EAAG4H,WADIZ,GAEbzG,MAAOP,EAAG0H,WAAW1H,EAAG4H,WAAjBZ,OAIb/G,KAAKwH,cAEF,aAAeO,GACbA,EAAa7H,YAAaH,GAAG0H,WAC3BM,EAAa7H,WAAaF,KAAKgI,eAChChI,KAAKgI,aAAeD,EAAa7H,UACjCL,EAAWoI,mBAAmBjI,KAAKgI,aAAchI,KAAKyH,aAKzDzH,KAAAgI,aAAA,KAKEhI,KAAAgI,cAAAhI,KAAAgI,eAAAhI,MAAAyH,WACH7H,EAAKoI,KAAL,UAAAhI,KAAAgI,cAGChI,KAAKgI,aAAc,KAIpBE,KAAQzI,aACTyI,EAAAzI,SAAA0I,MAAA,eAAAnI,KAAAgI,aAGCE,EAAON,SAAYO,MAAKV,qBAG1BzH,KAAKoI,SAAL,WACExI,MAAAA,QAAeiI,KAAA7H,KAAAyH,YAAf9E,OAAA,GAGF3C,KAAK8F,YAAe,WAClB/F,EAAGyH,KAAH,eADFxH,KAAA8F,aAAA,WACE/F,EAAGyH,cAKLnG,KAAArB,KAAKqI,YAAc,SAASnI,GAK5BL,EAAeoI,mBAAW/H,EAAAF,KAAAyH,YACxB7H,EAAU0I,IAAI,UAAdpI,IAGFF,KAAKuI,QAAS,WACZ3I,EAAU0I,IAAI,aADhBtI,KAAKuI,OAAS,WACZ3I,EAAU0I,IAAI;ACrEpB,YAgBA,SAASE,sBAAqBjH,EAAWkH,GAAzC,GAAA1I,GAASyI,IAGPzI,GAAG2I,eAAiB,WAApB3I,GAAG2I,GAAiBD,EAAWE,aAAA5I,EAAAO,MAAAP,EAAAG,UAAAH,EAAAmH,MAAA0B,iBACzBC,EAAAA,EAAiBJ,cAAiBE,eAAjBG,KAA2C5I,KAAAA,UAAcgH,GAC9E6B,QAAIT,KAAMG,IAnBdD,qBAAqB7B,SAAW,aAAc,oBAA9C6B,QAAAA,OAAAA,SAAqB7B,UAAW,sBAAc,WAA9C3H,OACEqD,OAAO,EACLA,kBACAC,MAAAA,SACE4E,MAAO,SACP5G,UAAO,cAFSnB,WAFbqJ,qBAOLrJ,aAAYqJ,YACZpH,YAAAA;YCXJpC,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,eAAe,YAASG,cAAW,aAEnC,eAEE,SAAA4I,EAAAnI,EAAA0B,EAAAC,EAAAC,GAEA,GAAIzB,GAAKC,IAGTA,MAAKgJ,MAAAA,EAAkBxH,cAAa6B,KAAAA,OAApCrD,KAAKgJ,gBAAkBxH,EAAa6B,mBAAmBrD,KAAKM,MAAMC,OAGhEP,KAAAiJ,YAAYC,SAAaC,GACvB,GAAApJ,EAAImJ,MAAAA,WAAiBE,EAAKrJ,CAE3B,MADQmJ,IAAWG,MAAAA,EAAAA,MAAAA,YACnBA,uBAIDrJ,KAAAsJ,YAAYJ,SAAaC,GACvB,GAAApJ,EAAImJ,MAAAA,WAAiBE,EAAKrJ,CAE3B,MADQmJ,IAAWK,MAAAA,EAAAA,MAAAA,YACnBA,uBAIDvJ,KAAAwJ,gBAAA,SAAAL,GAAA,GAAIM,GAAU,EADhB,OAOIzK,SAAG0K,QAAAA,EAAY/G,gBAAY,SAAA+G,EAAAxH,GACzBwH,EAAW/G,OAAX,IACE8G,EAAAA,OAAA,IACDA,GAAA,MAEFA,GAAAC,EAAA/G,OAAA,IAAAT,KAZLuH,MAoBEpH,UAAO,wBADF,WAELC,OACEpC,OAAAA,EACAI,kBAJGJ,UAAA,aAMLf,MAAAA,UAEAD,WAAAA,mBARFkC,aAAA,YA5CFlC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,sBAAnCH,UAAQO,YAAR,eAAmC,WAAA,aAElC,aAAU,OAAY,cAAvB,oBAAiD,YAE/C,SAAA2I,EAAAtI,EAAAmI,EAAA1G,EAAAxB,EAAA0B,EAAAoI,EAAArI,EAAAsI,EAAAC,GA+QA,QAAKC,GAALC,EAAAC,GAnRF,MAAAD,IAAAC,EAuQaC,KAAKC,MAAM,KAAS,EAAKF,EAAUD,IAAY,IAG/C,EApQX,GAAIhK,GAAKC,IAyBP,IAtBFkI,EAAQiC,SAAShC,MAAjB,wBAAAD,EAAQiC,SAAS,EAAG,GAGpBnK,KAAKoK,WAAaxC,EAAAF,gBAClB1H,KAAIoK,WAAKA,OAAYvC,KAAA7H,KAAAyH,YACnBzH,KAAKoK,aACNpK,KAAAoK,eAECpK,KAAKqK,WAAYxK,OAAAA,EADnBG,KAGKqK,UAAAxK,EAAAyK,kBACHtK,KAAKqK,UAAY,KAKfrK,KAAKqK,WAAYrK,KAAKoK,YAAtBpK,MAAAyH,YACDzH,KAAAoK,WAAAzH,OAAA,IACF3C,KAAAqK,UAAArK,KAAAoK,WAAA,IAICpK,KAAAqK,UAAA,CAKErK,KAAAuK,kBAAe9C,WACf,GAAU,MAAVzH,KAAGmJ,eAAO,CACR,GAAAA,GAAKqB,EAAAA,WAAiBjJ,EAAAA,UACvB4H,KACFnJ,KAAAwK,eAAAjJ,EAAAkJ,4BAAAtB,EAAAA,EAAA5I,QAED,MAAOP,MAAKwK,gBAKbxK,KAFD0K,SAAA,WACE,MAAO3K,GAAG0H,WAAW1H,EAAGsK,YAG1BrK,KAAK2K,OAAS,SAASlE,GAGrB1G,EAAG6K,cAAAA,EAEH7K,EAAG8K,yBACH9K,EAAG+K,2BANL/K,EAAA8K,2BAME9K,EAAG+K,8BAcL9K,KAAK+K,SACL,QACE,OACE,OACD,OAGH/K,KAAKgL,iBACL,KAAA,GAAKA,KAAL1J,GAAA4F,MACK8D,EAAU9D,MAAQ9B,GAAvB6F,gBACAjL,KAAKgL,eAALtE,KAAAtB,EAHApF,MAAKgL,aAQLhL,KAAKkL,UAAL,KAAA,EANAlL,KAAKgL,UAAU,IAAQ,EAQvBhL,KAAK8J,UAAL,IAAkB,EAChB/J,KAAGmL,UAAH,GAAA,EAEAlM,KAAAA,eAAmByI,EAEfzH,KAAAkL,QAEEC,KAAAA,WAAU,WACXpL,EAAAmL,QAEDlM,QAAIoM,QAAAA,EAAW3D,WAAf1H,EAAAsK,WAAA9J,MAAA,SAAA4D,EAAAsC,GACA,GAAQ,YAARtC,EAAAiC,SAAQ,CACN,GAAA+E,GAAIpL,EAAQqL,UAAWjH,EAAAkH,eACrBtL,IAAoBA,GAAZqL,IACTD,EAAA,EAIGhH,KADF,GAAAiH,GAASC,IACPlH,CAKF,GAJCpE,EAAAmL,KAAAE,KANDrL,EAAGmL,KAAKE,GAAYrL,EAAGuL,iBAUvBvL,EAAAmL,KAAAE,GAAAD,GAAA1E,MAAA,EAAA,CAPFtC,EASKkH,iBACHD,EAAAA,eAAAA,EAGL,IAAAG,GAAAxL,EAAAyL,SAAArH,EAAAsC,EA1BH1G,GAAAmL,KAAAE,GAAAD,GAAAI,CAoBQ,OAYPH,QAOEI,EAAAA,KAAL7I,OAAgB,IACd5C,EAAAmL,KAAS/G,EAAAA,KAAMA,OAAMsC,GAAOA,EAArB6E,kBAIPtL,KAAAsL,cAAMG,SAAqBC,GACzB,OAAGC,EAAIlF,UAAP4E,eAAmB,MAAA,GAAAtL,EAAAyL,UAAAH,eAAA,KAAA,GAAAtL,EAAAyL,UAAAH,eAAA,KAAA,GAAAtL,EAAAyL,UAAAH,eAAA,IAAA,KAGpBrL,KAJDwL,SAKK,SAAArH,EAAAsC,GACH1G,OAAAoE,KAAAA,EAAAsC,MAAAA,IAPJzG,KAAK4L,MAAQ,SAASD,GAWjBjG,EAAAA,gBAAO,EATLiG,EAAIlF,OAAS,GAWdlG,EAAAA,OAAQR,EAAG0H,OAIb1H,EAAG8L,KAAAA,IAIJ7L,KAPD0F,KAQK,SAAAiG,GAEH5L,GAAAA,GAAG8L,EAAAA,WAAkBF,EAAIxH,WAAKkH,KAC9B9K,IAAAA,EAAAA,OAAaR,EAAG0L,CAChBlL,GAAAA,GAAAoL,EAAAxH,KAAAkH,cATAtL,GAAG8L,YAAYF,EAAIxH,KAAM5D,EAAMR,EAAG0L,eAAeJ,gBAYnDtL,EAAGyK,YAAHjK,EAAoBR,EAApB0L,eAAAK,GACA/L,EAAG0L,EAAAA,OAAHlL,EAAAR,EAAA0L,eACA1L,EAAG+J,EAAAA,eAAH6B,EAAAxH,SAEA9C,CAtBF,GAAA8C,GAAA5D,EAAAR,EAAA0L,cAaI1L,GAAG8L,YAAY1H,EAAMwH,EAAIxH,KAAKkH,gBAYlC9K,EAAKsL,OAAL9L,EAAmB0L,cAAeM,GAChCxL,EAAIyL,KAAAA,GAGAA,EAAAA,eAAgB,KACjBjM,EAAA0L,eAAA,EACF1L,EAJD+J,aANA/J,EAAGkM,uBAYH9H,KAGAA,KAAAA,YAAiB7C,SAAAA,EAAY6F,GAX/B,GAAA6E,KAEEhN,SAAQuH,QAAQpC,EAAK+C,MAAO,SAASgF,EAAMzF,GAaxCwF,GACAE,EAAAA,MAAAA,GAALD,EAA8B9G,GAAAgH,IAASC,EAATD,KAAiBE,EAAiB,SAI7DnI,EAAAiD,iBAAA4E,EAJH7H,EAAAkH,eAAAU,EAOA5H,EAAKoI,UAAAA,EAAqBpF,WAASmF,EAAWnI,iBAAMA,EAAA+C,QAIlDlH,KAAAiM,uBAXFjM,KAAKmM,uBAAyB,SAASE,EAAQC,EAAWnI,GAcxD,GADAnE,KAAImJ,mBAAW1B,EAAc4C,GAC7BrK,KAAI+D,oBAAuB0H,GAXzB,MAAOzL,MAAKiM,oBAAoBK,GAAWD,IAgB3CrN,KAAAA,mBAAqBkI,SAAOoF,EAAAnI,GAC1B6H,IAAAA,EAAAA,oBAAqBE,IAAcA,EAAAA,gBAAkBb,EAArDW,CAGHhM,KAAAiM,oBAAAK,KAEDN,IAAAA,GAAAA,EAAAvE,WAAA1H,EAAAsK,WACArL,EAAQuH,EAAQxC,MAAMmD,EAAtBuE,eAAAO,KAGIQ,IAXDrI,GAAK+C,QAaRlI,QAAIyN,QAAavF,EAAAA,MAAOwF,SAAaR,EAAChF,GACtClI,EAAA0H,MAAgByC,GAAM5I,EAAO6E,GAAAgH,IAAS5F,EAAT4F,KAAArI,EAAwBsH,eAAA,SAEjDoB,EAAS/F,EAATS,WAAA6E,EAAA7H,EAAA+C,QATJ8E,KAaAhN,QAAI2N,QAAWpL,EAAAA,MAAWkJ,SAAAA,EAAAA,GAC1BuB,EAAIY,MAAerC,GAAAA,EAAAA,GAAAA,IAAH2B,EAAhBE,KAAAjI,EAAAkH,eAAA,QAEA,IAAAmB,GAAclL,EAAY4F,WAAO8E,EAAAjI,EAAAmD,OAE7BnH,IAAGkM,MAAAA,IAA+B7G,MAAMyH,GACzC7N,SAAAuH,QAAA4C,EAAA5I,MAAA,SAAAiG,EAAAC,GACFtC,IAAAqC,GAAAzC,IAAAyC,GAtCHiG,EAAA/F,KAAAF,IA2CE,IAAGlF,GAAAA,EAAsBwL,4BAAsB3D,EAAAsD,GAC7CG,EAAA7M,EAAAwK,mBAEEwC,KAAAA,GAAAA,KAAQhN,GAAcA,MACvBuB,EAAA4F,MAAA9B,GAAA6F,iBACDvG,EAAAA,oBAAsBsI,GAAZ5H,GAAVyH,EAAA9M,EAAAkN,QAAA7H,EAAAuH,GAAAP,IAAArM,EAAAkN,QAAA7H,EAAAwH,GAAAR,QAMCpM,KAAAkN,YAAA,SAAA9H,GACDV,GAAAA,GAAUpD,EACX,IAAA,WAAAA,EAAA4F,MAAA9B,GAAA0H,QAAA,CACD,GAAAC,GAAOrI,CAhBT3E,GAAA0H,WAAA1H,EAAAsK,WAAAyC,UAKMC,EAAQhN,EAAG0H,WAAW1H,EAAGsK,WAAWyC,QAAQ1H,IAehDV,GAAUwC,EAAV8F,SAAAD,GAAApJ,SAEE,IAAsB,aAAnBuD,EAAAA,MAAmB9B,GAAA0H,QAAA,CACpB,GAAAC,GAAO7F,CACRnH,GAAA0H,WAAA1H,EAAAsK,WAAA8C,mBACFJ,EAAAhN,EAAA0H,WAAA1H,EAAAsK,WAAA8C,iBAAA/H,IANHV,GAAApD,EAAA0L,SAAAD,GAAApJ,KAUA,MAASkJ,GAAAA,IAATvL,EAAiC0I,MAAS5E,GAAAzB,MAGvC3D,KAFDiN,QAGK,SAAA7H,EAAA8B,GAEJ,IAAA,GADCkG,GAAAlG,EAAAvE,OACDoE,EAAA,EAAAA,EAAAqG,IAAArG,EACF,GAAAG,EAAAH,GAAA3B,IAAAA,EAbK,MAAO8B,GAAMH,EAiBjBnH,QAAAA,GAAUK,EAAKmM,IAAA,IAFjBpM,KAAKqN,KAAO,WACVxN,EAAWmG,kBAAkBjG,EAAGsK,UAAWtK,EAAG0H,WAAW1H,EAAGsK,WAAW9J,OACvEX,EAAUK,KAAK,UAAYF,EAAGsK,YAGhCrK,KAAK8J;YCrQN,SAdDwD,iBAAAjM,EAAAE,EAAAC,EAAA3B,GAeA,GAAAE,GAASuN,IAIPvN,GAAGmH,MAAQ3F,EAAWgM,cAAcxN,EAAGO,MAEvC,IAAIkN,GAAmBC,aAAaxM,QAAQ,uBAF5ClB,GAAGmH,SAAQ3F,EAAWgM,OAAAA,GAIlBxN,EAAGwD,WAAYxD,EAAGwD,SAASmK,cAF/BF,EAAIA,SACJzN,EAAGwD,SAAW/B,EAAamM,OAAOH,WAGhCzN,EAAAA,iBAAcyB,WAEf,GAAA8B,GAAA9B,EAAA6B,mBAAAtD,EAAAO,MAAAC,MAGC,OAAGR,GAAGwD,SAASI,OAAQL,GAFtBF,EAAmBrD,EAAAwD,SAAWI,UAShC5D,EATD6N,eAAA,WAWE7N,EAAG8N,OAAS,KADd9N,EAAG6N,SAAAA,KACD7N,EAAG8N,kBAAH,EACA9N,EAAG4F,WACH5F,EAAG+N,kBAAmB,GACtBzM,IAIDtB,EARDgO,cAAA,WAUE,MAAOvM,GAAawM,YAErBjO,EAHDkO,oBAAA,SAAAC,GAKEnO,EAAGwD,SAAW/B,EAAamM,OAAOO,GADpCnO,aAAGkO,QAAH,uBAAyCC,IAIxCnO,EAJDkJ,YAAA,SAAAE,GAME,GAAGpJ,EAAGO,MAAM4I,WAAa,EAAG,CAA5B,MADe,IAAAE,MAASD,EAAT7I,MAAgB4I,YACnBA,uBAKbnJ,EANDuJ,YAAA,SAAAH,GAQE,GAAGpJ,EAAGO,MAAM4I,WAAa,EAAG,CAA5B,MADe,IAAAE,MAASD,EAAT7I,MAAgB4I,YACnBA,uBAKbnJ,EAND8F,eAAA,WAQE,OAAQ9F,EAAGwD,SAAS0C,QAAUlG,EAAGqD,mBAAmBT,OAAS5C,EAAGwD,SAAS0C,QAE1ElG,EAHDoO,aAAA,WAKE,GAAIC,GAAgB,GADnBD,EAAHpO,EAAkBO,MAAAC,KAEhB,IAAe,kBAAfR,EAAIsO,SAAWtO,KAAf,CAGE,GAAIuO,GAAoB,EADvBvO,EAAoB,CACrBf,SAAIsP,QAAAA,EAAJ,SAAAnK,EAAAsC,GACI8H,EAAAA,UAAAA,EAAJhL,SAAAI,KACA3E,IAEIuP,EAAAA,oBADFD,GAGajK,EAAAA,qBAKf+J,EAAgBG,EAAmB,MAAQD,MAZ7C,IAcQ,mBAAHvO,EAAGA,SAAGwD,KAAiB,CAE1B,GAAIiL,GAAsB,EACtBC,EAAqB,EACrBC,IACJ1P,SAAQuH,QAAQ8H,EAAU,SAAAlK,EAAAsC,GACxB,GAAAtC,EAAGA,UAAApE,EAAiBA,SAAA4D,KAApB,CACE,GAAIgL,GAAUxK,EAAKyK,WAChBD,KACDA,EAAU,GAGTA,IAAEA,KACHD,EAAkBC,GAAW,GAE/BD,EAAkBC,KAClBH,QAGAC,GAAAA,qBAEDA,GAAAtK,EAAAC,sBAGHpF,EAAgB0P,GACd1P,QAAGoP,QAAAA,EAA0B,SAAAS,EAAAF,GAC3BP,EAAAA,OAAA,IAEDA,GAAA,KAJHA,GAAAS,IAxBGT,EAiCAI,EAAA,KAAAJ,EAAA,OAAAK,MAEHzP,CACE,GAAA8P,GAAW3K,CACT2K,SAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAED3K,GAAAA,EAAAiC,UAAArG,EAAAwD,SAAAI,MAJHmL,MAQAV,EAAUU,CACRV,IAAAA,GAAAA,EAAiBT,OAAQoB,EAAIC,SAA7BrL,KAEDoL,IAAA,eAAAA,KACFX,GAAA,MAAAW,EAAAC,aACD,MAAOZ,IAKPrO,EAAAA,UAASQ,WACTV,GAAAA,IAAWmG,GAAAA,EAAAA,SAAqB9F,SAAWH,KAAGO,kBAA9C4G,SACAnH,GAAG+F,MAAAA,MAAH/F,EAAAO,MAAAC,MAAA0O,OAAAC,GAJFrP,EAAAmG,kBAAAjG,EAAAG,UAAAH,EAAAO,MAAAC,OAIER,EAAG+F,gBAKH/F,EAAAA,aAAA,WAFFA,EAAAmH,MAAA3F,EAAAgM,cAAAxN,EAAAO,OAIDP,EAAAoB,YAzJDmM,gBAAgB3G,SAAW,WAAY,aAAc,eAAgB,cADrE3H,QAAQO,OAAO,SAASuB,UAAU,iBAAkB,WAClD,OAAFwM,OAAAA,EAAEhL,kBACED,UADK,aAELC,MAAAA,SACEpC,SAAAA,YACAI,OAAO,WAEPsG,WAAQ0G,gBAJQlM,aAFb,YAQLjC,YAAYmO;YCThBtO,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,YAAQO,eAAgBJ,WAAW,aAAnC,UAEC,OAAY,cAAb,oBAEE,SAAAS,EAAAmI,EAAA1G,EAAAxB,EAAA8B,EAAAgI,EAAArI,EAAAsI,GAIA5J,KAAGmP,UAAUpH,EACT,QAAAA,KACH/H,KAAA2D,KAAAoE,EAAApE,MAGC9D,KAAAA,OAAWuP,WACXxP,EAAUK,YAAKD,KAAf2D,MAFF/D,EAAAK,KAAA;cCZF,WAGAoP,QAAAA,GAAAnH,EAAyBtI,EAAWmI,EAAa1G,EAAAxB,EAAgB8B,EAAYgI,EAAArI,EAAcsI,EAAmBC,EAAeyF,GAE7H,GAAAvP,GAASsP,IACPtP,GAAA0H,WAAA5H,EAAA6H,gBAIA3H,EAAGoJ,SAFHpJ,EAAAoP,UAAS,EACTpP,aAAgBF,IAChBE,EAAGoJ,UAAHpB,EAAA7H,UACGiP,EAAAA,YAAHpP,GAAA0H,aACG1H,EAAAoJ,MAAApJ,EAAA0H,WAAeM,EAAlBsC,WACItK,EAAGsK,UAAYtC,IAKdhI,EAAAsK,UAAA,GAEHtK,EAAAA,aAAAA,EAAAsK,UAEDtK,EAAAwP,aAADxP,EAAAA,SAAGyP,EAAkBnF,SACrBtK,EAAAA,YAAeuB,EAAfmO,YAEA1P,EAAAA,eAAiBuB,WAGZvB,EAAG2P,MADLC,EAAAA,MAAAA,WACD5P,EAAGA,WAAQA,EAAAoJ,MAAAyG,WAEJA,EAAAA,UAAgBzG,cAAnBpJ,GAAA2P,IAAAG,EADF9P,EAAA2P,IAGKG,EAAG9P,WACNA,EAAA6P,WAAYE,EAAYL,YAAA,GAItB1P,EAAAA,WAAAuB,EAAgBA,YAAYmO,GAM/B1P,EAAA6P,WAAAtO,EAAAmO,YAAA,KAIH1P,EAAAgQ,mBAAIC,WACJ,GAAAA,GAAIC,EAA0B3O,SAAAA,GAA1B2O,EAA0B3O,EAAY0L,SAAS,EAGjD,IAAAjN,EAAA2P,KAAIQ,EAAAA,IAAUnQ,EAAG2P,CACjB,GAAAQ,GAAGA,EAAWR,IAAAG,EAAAM,WACZH,aAAAA,GAA6BhD,cAAZ1L,GAAjB,YAAA4O,GAAA,SAAAA,GAAA,gBAAAA,GAAA,gBAAAA,GACAD,EAAAA,EAA0B3O,SAAAA,GAE3B2O,EAAkB3O,EAAW4O,SAAW,IAEvCD,SAAAA,GAA0B3O,WAAAA,GAA1B,aAAA4O,GAAA,gBAAAA,GAAA,eAAAA,GAAA,aAAAA,GAAA,aAAAA,GAEDF,EAAOE,EAAWlD,SAAakD,GAC9BF,EAAiB1O,EAAY0L,SAA7B,IAGMkD,WAJHA,GAIyB,UAAXA,GAAW,eAAAA,GAC5BF,EAAAA,EAAiB1O,SAAY0L,GAC7BiD,EAAAA,EAA0B3O,SAAY0L,IAGtCgD,WAAAA,GACAC,EAAAA,EAA0B3O,SAAAA,GAE3B2O,EAAkB3O,EAAa0L,SAAA,IAE9BiD,SAAAA,GAEDD,EAAA1O,EAAA0L,SAAA,GACFiD,EAAA3O,EAAA0L,SAAA,IACe,aAAVmC,IACJpP,EAAaiQ,EAAbhD,SAAA,GACAjN,EAAsBkQ,EAAAA,SAAtB,IAIAlQ,EAAAA,WAEDA,EAAA+M,QAAAkD,EANCjQ,EAAGoN,iBAAmB8C,GAUvBlQ,EAAA+M,UA5CH/M,EAAA+M,QAAAkD,GA+CEjQ,EAAG+M,mBADL/M,EAAAoN,iBAGK6C,IAILjQ,EAAGA,MAAGoJ,QACJpJ,EAAAA,QAAGoN,EAAAA,MAAHL,QAKD/M,EAAA+M,QAAAxL,EAAA0L,SAAA,GAECjN,EAAAA,MAAGqQ,iBAEJrQ,EAHDoN,iBAGKpN,EAAAoJ,MAAAgE,iBANHpN,EAAGoN,iBAAmB7L,EAAY0L,SAAS,GAU7C,cAGKjN,GAAAoJ,MAILpJ,EAAAqQ,WAAYC,EAAAA,MAAYD,WAHtBrQ,EAAAA,WAAA,GAOAA,aAAgBA,GAAhBoJ,MAIApJ,EAAAA,UAAGuQ,EAAHnH,MAAoBA,UAFrBpJ,EAAAwQ,UAAA,EAOAxQ,EAAAoJ,MAAAkH,WAZCtQ,EAAGsQ,WAAatQ,EAAGoJ,MAAMkH,WAgB1BtQ,EAHDsQ,WAGK,GAVFtQ,EAAGoJ,MAAMmH,YAcZvQ,EAAGyQ,YAAOzQ,EAAAoJ,MAAWmH,YAGjBjP,EAAAA,YAAU,GAGNrC,EAAAA,MAAAA,WAAAe,EAAgB0Q,MAAhBC,UAAkCxC,EAChCnO,EAAA2Q,UAAGxC,EAAAA,MAAAwC,UAIJ3Q,EAAA2Q,UALD,EAOF3Q,EAAAA,KAAAA,WACAA,GAAAA,GAAGgQ,EAAAA,cACHhQ,GAAG4Q,OAAAA,GAEJtP,EAdD,WAHJ,OAAAtB,GAAAoJ,OAMQnK,QAAQuH,QAAQkK,EAAS,SAASvC,EAAO0C,GAcjD1C,EAAY9I,IAAArF,EAAWoJ,MAAAuG,IAAAtK,KACb+E,EAAAA,IAAS+D,KADnBnO,EAAA4P,iBANM5P,EAAGgQ,qBAcTT,EAAOkB,kBAKPzQ,EAAAA,OAAG8Q,WACD3I,EAAAiC,SAAON,EAAUiH,GAElBzP,EAHD,WAGAtB,EAAGgR,iBACDhR,EAAAgQ,wBAKDT,EAHDkB,OAVA3G,EAAU2G,KAAK,WAcfzQ,EAAGiR,SAIAjR,EAAA8Q,WAAA,SAAAI,EAAAC,GAbD,MAAOrH,GAAUiH,YAAYI,GAAUD,IAerClR,EAAAgR,iBAAG,SAAkB1G,GACnB,MAAAR,GAAAsH,eAAApR,EAAA2P,IAAAtK,IAAA6L,IAGHlR,EAAAqR,eAAA,SAAAH,GAbD,MAAOpH,GAAUwH,aAAatR,EAAGuQ,YAAavQ,EAAG2P,IAAItK,IAAI6L,IAG3DlR,EAAGiR,iBAAmB,WActBjR,OAAGuR,EAAHjH,eAIEtK,EAAIwR,YAAY1H,GAAAA,cAChB9J,EAAIwP,UAAY1F,EAAAA,WAAU2H,EAAAA,eAWxBnB,EAAAA,GAAAA,WACAC,GAAAA,GAAgBA,EAAAA,YAFhBvQ,EAAAsQ,YAGAK,EAAcA,EAHdI,YAAA/Q,EAAAuQ,aAIAZ,EAJA7F,EAAAsH,eAAApR,EAAA2P,IAAAtK,IAKAwK,EAAY7P,EAAG6P,aALf7P,EAAAuQ,YAAAvQ,EAAA2P,IAAAtK,IAMA0H,EAAYA,EANZ0E,aAAAzR,EAAA2Q,UAQAN,GAAAA,WACAG,EAAAA,aAAcA,EAAAA,UACdkB,EAAAA,YAAeA,EAAAA,eAGfF,EAAAA,UACAhC,EAAAA,aAdAxP,EAHFsK,WAoBAzK,WAAUK,EAAKoQ,WAhCjBC,YAAAvQ,EAAAuQ,YAkBII,UAAW3Q,EAAG2Q,UAiBlB3Q,IAAG4Q,EAAAA,IACD5Q,WAAAA,EAAe8J,WAEfiD,QAAA/M,EAAA+M,QAHFK,iBAAApN,EAAAoN,iBAZIiD,WAAYrQ,EAAGqQ,WAiBnB/O,UAAStB,EAAAwQ,UACPkB,cAAYhS,EACZiS,eAAUA,EACRC,YAAAC,EACAD,UAAME,EAEPtC,UAAAA,IApPL3P,EAAAK,KAAA,UAAAF,EAAAsK,YAyOEtK,EAAG4Q,aAAe,WAChB5Q,EAAGwP,UAAY1F,EAAU2H,aAAazR,EAAG2Q,YAI3CrP,EAAS,WACP,GAAIsQ,GAAQlS,SAASqS,eAAe,iBACjCH,KACDA,EAAMI,QACNJ,EAAME,kBAAkB,EAAG,SAjPjCxC,EAAA1I,SAAA,UAAA,YAAA,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YAAA,UAAA3H,QAAAO,OAAA,SAAAJ,WAAA,gBAAAkQ;YCDArQ,SAAQO,OAAO,SAASJ,WAAW,gBAAnCH,WAAQO,aAAgBJ,aAAW,WAAnC,eAEY,OAAA,UAAa,mBAEvB,SAAAkC,EAAAE,EAAA1B,EAAAmS,EAAAxQ,EAAAmI,EAAAhI,EAAA7B,GAGAC,GAAGkS,GAAAA,IACHlS,GAAGmS,cAAH,GACAnS,EAAGoS,WAAH,EACApS,EAAGqS,SAAHrS,EAAGqS,WAGDpS,KAAAqS,WAAMC,WACJvS,EAAGqS,eACHrS,EAAAqS,QAAMA,EAAHG,WAAwBxS,EAAAwD,SAAAxD,EAAAO,MAAAP,EAAAoS,OACNC,GAAnBrS,EAAGyS,QAAAA,QACJzS,EAAAyS,aAAAzS,EAAAqS,QAAA,MAKHpS,KAAAwS,aAAWR,SAASS,GACpB1S,GAAGoS,GAAMzL,EAAT+L,WAAAvE,EAAAnO,EAAAwD,SAAAxD,EAAAmS,WAEA,IADAnS,EAAGmS,MAAAA,KAAH3G,GACAxL,EAAAmS,aAAIF,EAASU,kBAAkB3S,EAAGwD,SAAUxD,EAAGmS,YAU7CnS,EAAGsS,iBAVuD,CAG1D,GAAIM,GAAAA,EAAW7S,QAAAA,EAAiB8S,OAChC5T,EAAAc,EAA0B8S,YAAAC,EACxBlR,SAAAA,QAAaqB,EAAU8P,SAASA,EAAA9P,GAA4BjD,EAAGgT,KAAAA,EAAaJ,EAAUE,aAA1B,WAAA9S,EAAAgT,aAAAJ,EAAAE,OAC7D9S,EAFDgT,aAAAJ,EAAAE,KAWJ7S,KAAK+S,aAAe,SAAAJ,EAAAxO,GAClB,IAAGxC,EAACA,aAAJ,CAEE,GAAIqR,IAAY,CAOhB,IANAhU,QAAQuH,QAAQoM,EAAU,SAAAG,EAAA9P,GACrBrB,EAACA,SAAAqB,KACFgQ,GAAY,KAIhBA,GACEjT,EAAGA,MAAA4C,OAAA,EAAH,CACE5C,EAAGkT,QACH,IAAIJ,GAAU/S,EAAiBoT,WAAW/O,EAC1C0O,GAAQhM,QAAU9G,EAAG8G,QACrBhH,EAAWsT,SAASpT,EAAGG,UAAW2S,GAClC9S,EAAGO,MAAMC,MAAMmG,KAAKmM,GACpB9S,EAAGoB,cAMXnB,KAAKoT,MAAQ,WACXrT,EAAGmS,WAAa,EAChBnS,EAAGoS,SACH9Q,EAAS,WACPtB,EAAGsS,gBAIPrS,KAAKsS,WAAa,WAChB,MAAOvS,GAAGkS,eAAiBlS,EAAGwD,SAASI,MAGzC3D,KAAKqT,MAAQ,WACXtT,EAAGkS,cAAgBlS,EAAGwD,SAASI,KAE/BgG,EAAK6G,KAAK,aAAVzQ,EAAyBA,OACzByB,EAAagP,KAAKzQ,EAAGwD,SAASI,KAAM5D,EAAGqT,QAGzCpT,KAAKsT,WAAa,WAChB,MAAOtB,GAASsB,WAAWvT,EAAGwD,SAAUxD,EAAGO,WAG7CN,KAAKiT,OAAS,WACZlT,EAAGkS,cAAgB,GACnBlS,EAAGqT,SAGLpT,KAAKuT,KAAO,WACV,GAAG,GAAHxT,EAAGA,WACDA,EAAGkT,aAGA,CACDlT,EAAAA,CACAA,EAAGoS,aAAHpS,EAAGoS,MAAMqB,KAFX,IAAAC,GAKQA,EAAAlB,WAA8BL,EAAAA,SALtCnS,EAAAO,MAAAP,EAAAoS,aAKQsB,EAAY9Q,QAAU,GAAK5C,EAAGmS,WAAa,EAGpDnS,GAAAsS,eAxGL1Q,EA6GCb,KAAU,kBA7GX,KA6GgC,aAAWf,EAAAqT,UAGvC9Q,UAAAA,oBAAkB,WAChBiB,OACAjD,OAAAA,EACAJ,kBACA2G,SAAS,YACT1F,MAAAA,SAPGjB,UAAA,aASLf,QAAAA,WACAiC,SAAAA,aAVFjC,WAAA,eA9GFiC,aAAA,WAyHIlC,YAAa;YCtHjB,SAASwU,iBAAgB9T,EAAUmI,EAAa1G,EAASxB,EAAW8B,EAAQC,EAASH,EAAYC,GA8B/F,QAASiS,MAGT,QAASC,KACP,IAAA7T,EAAGA,SAAH,CAIA,GAAIiT,IAAY,EACZzQ,EAAQd,EAAYmR,YAAY7S,EAAGO,MAQvC,IAPAtB,QAAQuH,QAAQhE,EAAO,SAAAuQ,EAAA9P,GACrB,IAAGrB,EAACA,SAAAqB,GAEF,YADAgQ,GAAY,KAKhBA,GAAGA,EAAatR,WAAhB,CACE,GAAI+K,GAAWhL,EAAYhB,YAAYV,EAAG4D,KAAM5D,EAAGO,MACnDT,GAAWmG,kBAAkBjG,EAAG4D,KAAM8I,GACtC1M,EAAGO,MAAMC,MAAQkM,EAEjB1M,EAAGW,UAAW,IAjDlB,GAAIX,GAAKC,IAAT,SAAA+H,KACGhI,EAAA4D,KAAUoE,EAAbpE,KAIA,IAAI8D,GAAa5H,EAAW6H,eAA5B3H,GAAI0H,OAAAA,KACJ1H,EAAGA,MAAA0H,EAAWA,EAAY9D,OAI1B5D,EAAGW,UAAW,EAAdX,EAAGW,OAAH,WACAX,IACE6B,EAAAA,UAAAA,EAGAF,EAAa8O,KAAKmD,EAAUC,EAE5B,IAAIrR,GAAQd,EAAYmR,YAAY7S,EAAGO,MAAvCtB,SAAIuD,QAAQd,EAAAA,SAAYmR,EAAetS,GACvCtB,EAAQuH,KAARvD,EAAuB8P,EAASA,EAAS9P,MAK3CjD,EAAG8T,UAAY,WAAf9T,EAAAE,KAAe,UAAWF,EAAA4D,OA7B5B3E,QAAQO,OAAO,SAASJ,WAAW,mBAClC,YAAY,eAAe,WAAW,aAAa,UAAU,WAAW,cAAc,eAAeuU;YCDtG1U,SAAQO,OAAO,SAASJ,WAAW,iBAChC,SAAS,UAAU,SAAS,YAAY,eAAe,aAAa,UAAU,WAAW,eAAe,WAAW,mBAAmB,cAAc,OAAO,YAAY,aAAa,cADvLH,SAAQO,EAAO2I,EAAS/I,EAAAA,EAAW4I,EAChClI,EAAS8B,EAAUN,EAASK,EAAYE,EAAA9B,EAAe2B,EAAakI,EAAUE,EAAWtI,EAAAD,GAuDxF,QAASsS,KAGP5U,GAAAA,IAAgByC,CACdzC,SAAI2C,QAAQmS,EAAS9Q,YAAW+Q,EAAAzT,OAAA,SAAAwS,EAAA9P,GAC9BgR,EAAUF,SAAV9Q,KACDgR,GAAA,KAIDA,IAAArS,EAAAsS,cAAAvS,EAAAoS,YAAAnK,EAAAmK,YAIAzS,EAAIgJ,WACJ,GAAIlB,GAAQ4K,EAAZ7T,UAAIiJ,EAAQ4K,EAAOzT,KAEnByT,GAAOrE,IAAM/F,EAAKuK,QAAQH,EAAOrE,IAAItK,IAGrC2O,EAAOrC,cAAiB7H,EAAUiH,YAAYiD,EAAOzD,YACrDyD,EAAGA,eAAYlK,EAAAiH,YAAAiD,EAAAzD,aACbyD,EAAOnC,MACPmC,EAAOxC,YAAY1H,EAAUwH,eAAa0C,EAAOzD,IAAAA,IAClDyD,EAAAxC,UAAA1H,EAAAwH,aAAA0C,EAAAzD,YAAAyD,EAAArE,IAAAtK,KACD2O,EAAOxE,UAAY1F,EAAU2H,aAAauC,EAAOrD,UAEjD,IAAIjE,GAAWhL,EAAYhB,YAAY4J,EAAWlB,EAGlD4K,GAAOzT,cACLC,EAAOkM,OACPvD,MAAAA,EAAAA,WAAYC,EAAMD,WAGlBoH,WAAayD,EAAOzD,WACpBI,YAAWqD,EAAOrD,YAClBhB,UAAYA,EAPCgB,UAQbd,IAAAA,EAAYmE,IACZjH,WAASiH,EAAOjH,WAChBK,QAAAA,EAAkB4G,QAClBtC,iBAAesC,EAAOtC,iBACtBC,cAAgBqC,EAAOrC,cACvBE,eAAamC,EAAOnC,eACpBL,YAAWwC,EAAOxC,YAClBhC,UAAWwE,EAAOxE,UAfpBA,UAAAwE,EAAAxE,WAkBAwE,EAAO7M,WAAQ3F,GAAWgM,EAAcwG,MAAxCA,EAAO7M,MAAQ3F,EAAWgM,cAAcwG,EAAOzT,MAG/CyT,IAAAA,GAAahT,EAAWC,gBAAuBE,EAA/ChB,UAAA6T,EAAAzT,MAtCFyT,GAAAzT,MAAAS,SAAAC,eAAAC,QAAAC,KA0CF,QAASyS,MAjGPI,GATFtU,SAASC,KAAKC,UAAY,aAE1B2P,EAAO6E,kBAAkBpM,EAAauH,QAEtCyE,EAAO7T,UAAP,GACA6T,EAAOzT,SAILyT,KAAO7T,IAAY6H,KAAnBA,GAAA,CACAG,EAAQzI,UAAS0I,EAAQiM,EAAzBlM,EAAQzI,SAAS0I,MAAQ,eAAiBJ,EAAaqM,EAGvDL,EAAOzD,WAAcvI,EAArB/C,EACA+O,EAAOrD,YAAY3I,EAAnBsM,EACAN,EAAOrE,UAAY3H,EAANuM,EACbP,EAAOnE,KAAPxK,GAAoB9D,EAAYmO,GAChCsE,EAAOjH,WAAUxL,EAAY0L,YAASjF,EAAtC8H,GACAkE,EAAO5G,QAAAA,EAAmB7L,SAAY0L,EAASjF,GAA/CgM,EAAO5G,iBAAmB7L,EAAY0L,SAASjF,EAAawM,EAE5D,IAAIhU,MAEAiU,EAAazM,EAAahB,CAG5B/H,SAAImF,QAAOrE,EAAAA,MAAiB2U,KAAWC,SAAvCA,EAAAjO,GAAA,GAAItC,GAAOrE,EAAiB2U,WAAWC,EAGrCnU,GAAMmG,GAAKvC,GACZ5D,EAAAmG,KAAAvC,KAIH4P,EAAOtM,SACPsM,EAAOtM,cACPsM,EAAOzT,WAAPyT,EAAA7T,WAAA6T,EAAAzT,MACAyT,EAAOY,MAAAA,MAAPpU,EAAAwT,EAAOY,WAAY,EAGjBhT,QAAQ6O,QAAKxN,EAAU8P,YAAvBiB,EAA0CH,OAA1C,SAAAd,EAAA9P,GADFrB,EAAA6O,KAAAxN,EAAA8P,EAAAa,EAAAC,KAKAjK,EAAUgK,KAAUC,EAApBA,GACA/J,EAAAA,KAAU2G,EAAVoD,GAAA/J,EAAU2G,KAAKoD,GAGhBvS,IAED0S,EAAOa,SAAWhN,OAAOC,KAAKkM,EAAOtM,YAAY9E,OAAS,EA8DxDoR,EAAA5T,UAAA,WADA,GAAI0U,GAAehV,EAAWQ,YAAY0T,EAAO7T,UAAW6T,EAAOzT,MAAMC,MAQrE+P,GAAAA,UACAI,EACAhB,GAEA5C,WAAgBA,EANlBuD,WAOElD,YAAAA,EAAkB4G,YAClB3D,UAAY2D,EAAO3D,UACnBG,IAAAA,EAAWwD,IACXtC,WAAesC,EAAOtC,WACtBC,QAAAA,EAAgBqC,QAChBnC,iBAAoBA,EAAAA,iBACpBL,WAAWwC,EAAOxC,WAClBhC,UAAWwE,EAAOxE,UAjBtBkC,cAAAsC,EAAAtC,cAcIC,eAAgBqC,EAAOrC,eAM3B9R,YAAcmU,EAAYc,YAxB5BtD,UAAAwC,EAAAxC,UAlHJhC,UAAAwE,EAAAxE,YA0IM3P,EAAU0I,IAAI,UAAYuM;cC1IhC,WAAA7V,QAACO,OAAY,SAAA2E,OAAA,UAAA,WAEblF,QAAQO,GAARoS,GACE,MAAAA,GAIe5I,OAAO+L,mBAAmBnD,GADlCA,GAGH,MAAAoD;cCTN,WAAA/V,QAACO,OAAY,SAAA2E,OAAA,cAAA,WAEblF,QAAQO,GAAgB2E,GACtB,MAAA,gBAAAyN,GAIY1H,KAAKC,MAAc,IAARyH,EAAc,KAAO,IAAO,IAA/CA,EAMJqD,MAFGA,GAAAC,WAAA,EAEHD;cCbF,WAIS,QAAPE,GAAA5T,EAAAC,EAAA1B,EAAA2B,EAAAuS,EAAAjU,EAAA6B,GA2JG,QAAAkL,GAAA9C,EAAAC,GACF,MAvBDD,IAAAC,EAwBS6C,KAAAA,MAAAA,KAAgB9C,EAAQC,EAASD,IAAA,IAGtC,EAoNL,QAAAoL,KAxXDtV,EAAAoI,mBAAAlI,EAAAsK,UAAAtK,EAAA0H,YAmBE,GAAI1H,GAAKC,IASP,IAPFA,KAAKyH,WAAa5H,EAAW6H,gBAF7B1H,KAAAoK,WAAAxC,OAAAC,KAAA7H,KAAAyH,YAIIzH,KAAKqK,YAFTrK,KAAKyH,UAAL5H,EAAkBA,mBAGhBG,KAAKqK,YAAYxK,MAAAA,aAElBG,KAAAqK,UAAA,OAECrK,KAAKqK,WAAYrK,KAAjByH,WAED,IAAA,GAAA2N,KAAApV,MAAAyH,WAAA,CAGGzH,KAAKqK,UAAY+K,CAFrB,OAKG,GAAApV,KAAAqK,UAAA,CAGDrK,KAAA+K,iBAED,KAAA,GAAA3F,KAAA9D,GAAA4F,MAGI5F,EAAY4F,MAAM9B,GAAI6F,gBAF3BjL,KAAK+K,eAAiBrE,KAAtBtB,EAKGpF,MAAAqV,WAAA,WACFtV,EAAAuV,gBAAA,KAGCvV,EAAGkM,uBADHlM,EAAAA,WAAGuV,KACHvV,EAAAA,eAAGkM,MAGHlM,EAAAA,aAAGyK,SAAiBmI,GAErB,IAPDhR,EAAAsS,aAAA,CAQAlU,GAAGwV,IAAe,CAChBvW,SAAI2C,QAAQsS,EAAZ,SAA0BnB,EAAA9P,GAIlBrB,EAAQmS,SAAS9Q,KAFvBgQ,GAAIA,KAKDA,IACFjT,EALDoE,KAAArE,EAAAoT,WAAAnT,EAAAoE,QAUD,IAAAwO,GAAA7S,EAAA8S,YAAA7S,EAAAoE,KACFnF,SAfDuH,QAAAoM,EAAA,SAAAG,EAAA9P,GAkBErB,EAAQ6O,KAAKxN,EAAU8P,EAAS,aAAe,WAFjD/S,EAAI4S,aAAW7S,OAGXC,EAAAA,aAAGwV,GAGNxB,EALDyB,OAAA,gBAAA,WAKAzV,EAAGwV,eAGDxV,KAAAA,mBAAA,SAAAmM,GAGF,MADClM,MAHDyV,iBAIKC,KAAAA,gBAAqBxJ,IAGxBlM,KAAAmM,uBAAYmJ,SAAZjJ,EAAAC,EAAAnI,GAKA,MAHDnE,MALDuM,mBAAAD,EAAAnI,GAQSnE,KAAKiM,oBAAoBK,GAAWD,IAA3CrM,KAAAuK,kBAAY0B,WAKZ,GAA0B,MAAvBjM,KAAKwK,eAAwB,CAE9B,GAAIrB,GAAQpJ,EAAG0H,WAAW1H,EAAGsK,UAF/BlB,KAIInJ,KAAKwK,eAAiBjJ,EAAWkJ,4BAA4BtB,EAAOA,EAAM5I,QAE3E,MAAAP,MAAAwK,gBAEHxK,KAAA0K,SAAYF,WAEb,MAZDzK,GAAA0H,WAAA1H,EAAAsK,YAcErK,KAAAyV,eAAUhO,WAKV,IAAG1H,EAAGuV,gBAAN,CAMA,GAAI1I,GAAY7M,EAAGwK,oBADnBpB,EAAApJ,EAAA0H,WAAA1H,EAAAsK,WAGIoC,IAFJtD,GAAIyD,QACJH,EAAItD,EAAW1B,MAAAA,QAAc4C,EAAAA,OAE7B,IAAAsC,GAASpM,EAAOkK,4BAAAtB,EAAAsD,EAGfzM,MAAAsV,kBAAD,KAAA,GAAI3I,KAAAA,GAAWpL,MAIVD,EAAY4F,MAAM9B,GAAI6F,iBAF3BlL,EAAKuV,gBAALlQ,GAAAyH,EAAA9M,EAAAkN,QAAA7H,EAAAuH,GAAAP,IAAArM,EAAAkN,QAAA7H,EAAAwH,GAAAR,QAMCpM,KAAAuM,mBAAA,SAAAD,EAAAnI,GACF,IAvBDpE,EAAAkM,oBAAAK,GAuBC,CAGG,GAAAnD,GAAApJ,EAAA0H,WAAA1H,EAAAsK,WAEDoC,GAAA1M,EAAAoE,KAGDnF,SAAQuH,QAAQ4C,EAAM5I,MAAO,SAASiG,EAAQC,GAF9CtC,IAAYpE,GACZ0M,EAAIA,KAAY1M,IAKb,IAAA4M,GAAApL,EAAAkJ,4BAAAtB,EAAAsD,GAJHG,EAAA7M,EAAAwK,mBAMAvK,MAAAiM,oBAAe1K,KACf,KAAA,GAAIqL,KAAAA,GAAerC,MAIdjJ,EAAY4F,MAAM9B,GAAI6F,iBAF3BlL,EAAKkM,oBAAoBK,GAAzBlH,GAAAyH,EAAA9M,EAAAkN,QAAA7H,EAAAuH,GAAAP,IAAArM,EAAAkN,QAAA7H,EAAAwH,GAAAR,QAiBDpM,KAAAiN,QAAA,SAAA7H,EAAA8B,GACD,IAAA,GACMkG,GAAMlG,EAAMvE,OADbsK,EAAAA,EAALlG,EAAAqG,IAAerG,EACb,GAAAG,EAAIkG,GAAMlG,IAAMvE,EAChB,MAAQoE,GAARA,EAIG,QAAA3B,GAAAA,EAAAgH,IAAA,IAGJpM,KATDkN,YAAA,SAAA9H,GAWE,GAAIV,GAAS,EADf,IAAgC,WAAhCpD,EAAK4L,MAAc9H,GAAA0H,QAAa,CAC9B,GAAIpI,GAAAA,CACJ3E,GAAGuB,WAAY4F,EAAAA,WAAU4F,UACvBC,EAAIA,EAAAA,WAAJhN,EAAAsK,WAAAyC,QAAA1H,IAEE2H,GAAAA,EAAWtF,SAAc4C,GAAjB1G,SAEVe,IAAU,aAAVA,EAAUpD,MAAY0L,GAAAA,QAAtB,CAED,GAPDD,GAOQzL,CACNvB,GAAIgN,WAAJhN,EAAAsK,WAAA8C,mBACAJ,EAAMtF,EAAAA,WAAc4C,EAAAA,WAAW8C,iBAAkB/H,IAGhDV,GAAApD,EAAA0L,SAAAD,GAAApJ,KAEF,MAAAe,GAAA,IAAApD,EAAA4F,MAAA9B,GAAAzB,MAGH3D,KAAK2V,cAAgB,WAEnB,QAAIC,GAAJC,GACA,GAAAA,EAAA,CAEI,IAAA,GADCA,GAAK,EACFC,EAAAA,EAAAA,EAAAA,EAAJnT,SAAAoE,EACA8O,EAAIE,QAAJH,EAAcA,IAAUjT,GACtBmT,GAID,OAAAA,GAGD,OAAA,EAZJ,GAAIF,EAgBJ,IAAG,MAAH7V,EAAGA,YAAAA,EAAyBA,WAAzBA,EAAyCA,YAAAA,GAAgBA,YAAzDA,EAA0EA,MAA1EA,EAAqFA,KAAGoE,SAAKiC,CAC9FrG,EAAAA,aAEA,IAAAiW,EACG,UAAHjW,EAAGA,KAAGoE,YAA8B,QAAjCpE,EAAiCA,KAAGoE,aACrC6R,EAAAA,EAAW/R,KAAEa,EAAK/E,WAAG0H,EAAW1H,WAAdQ,MAAP,SAA0C4D,GACnD,MAAAA,GAAOA,aAAApE,EAAoBA,KAAGoE,aAAvBpE,EAA2CA,KAAGoE,YAAHA,EAAsBA,aAI5E,IAAA5D,KACAyV,GACEzV,EAAAA,KAAMmG,IAIJzC,EAAAgB,KAAAlF,EAAGoE,WAAKH,EAAAA,WAAqBiS,MAAAA,SAAc9R,GACzCA,EAAGA,cAA6BH,OAAxBA,EAAgBjE,YAAsB,SAAAoE,EAAA8R,YAAA,QAAA9R,EAAA8R,WAC5C1V,EAAAA,cAAAR,EAAAoE,KAAAH,cAEDzD,EAAAmG,KAAAvC,GAIFA,EAAAiC,UAAArG,EAAAoE,KAAAiC,UATH7F,EAAAmG,KAAAvC,KAcCpE,EAAAoE,KAAAR,OAADpD,EAAWR,EAAAoE,KAAAR,KAAAuS,MAAc,MAGxB3V,EAHDsD,KAAA,SAAAsS,EAAAC,GAID,MAAAC,GAAAD,EAAAzS,MAAA0S,EAAAF,EAAAxS,SAGG5D,QAAAA,QAAGuW,EAAW5P,SAAdvC,EAAAsC,GAEDtC,EAAAR,MAAA5D,EAAAoE,KAAAR,MAJH5D,EAAAuW,WAAA5P,KAAAvC,KAQIpE,QAAAA,QAAGuW,EAAW5P,SAAdvC,EAAAsC,GAEDtC,EAAAR,MAAA5D,EAAAoE,KAAAR,MAJH5D,EAAAuW,WAAA5P,KAAAvC,KAMF,MAAOpE,GAAGuW,YAKVtW,KAAAuW,kBAAiBZ,WADjB,GAAI5G,GAAMvN,EAAamM,OAAO3N,KAAKmE,KAAKiC,UAGxC7F,EAAM4D,KAAK8R,eAEP,KAAYrH,SAAZ7O,EAAAoE,KAAA8R,YAAA,QAA8B9R,EAAAA,KAAKyK,aADlC3K,EAAHa,KAEIvE,EAAA,SAAA4D,GACF,MAAAA,GAAOyK,aAAP7O,EAAAoE,KAAAyK,cAGH,OAAA,CAGG,IAAAG,GAAAA,EAAO9I,QAER1F,EAAAoC,QAAAoM,EAAA9I,OACF,OAAA,CAGG,IAAA8I,GAAAA,EAAIyH,aACFjW,EAAAoC,QAAIoM,EAAS/K,YAAc,CACzB,IAAA,GAAA+C,GAAA,EAAAA,EAAOxG,EAAPoC,SAAAoE,EAED,IAAAxG,EAAAwG,GAAA/C,aACF,OAAA,CAIJ,QAAA,EAAD,OAAO,GAKPhE,KAAAyW,UAAIC,WAEJ1X,GAAAA,IAAQuH,EACNkQ,EAAA,IACEzX,SAAAuH,QAAGkQ,EAAAA,WAAmB,SAAApM,EAAA5D,GACpBgQ,GAED,MAAAA,IACFA,EAAApM,GAGAA,GAAAtK,EAAAsK,YATHqM,GAAA,KAcC,MAAAD,IAFCA,EAAY1W,EAAGqK,WAAW,IAK5BrK,EAAAA,UAAA0W,EAEDtB,IAFCpV,EAAGsV,cAKHrV,KAAA2W,UAAIC,WAEJ5X,GAAAA,IAAA,EACE2X,EAAGtM,IACDuM,SAAAA,QAAAA,EAAaxM,WAAb,SAAAC,EAAA5D,GAED4D,GAAAtK,EAAAsK,YAFCuM,GAAa,GAMdA,IARHD,EAAAtM,KAaC,MAAAsM,IAFCA,EAAY5W,EAAGqK,WAAWrK,EAAGqK,WAAWzH,OAAO,IAKjD5C,EAAAA,UAAA4W,EAEDxB,IAFCpV,EAAGsV,cAKHrV,KAAA6W,WAAKpP,WACL1H,EAAGsV,SAAHtV,EAAAsK,UAAAtK,EAAAoE,MACApE,KAAGoB,WAAHtB,EAAA6H,gBAED3H,EANDsV,aAIEtV,EAAGoB,YAKHnB,KAAAiD,QAAIqD,SAAJnC,GACAnF,EAAAA,aAAgBe,CACd,IAAAuG,KAEEtH,SAAAuH,QAAAxG,EAAA0H,WAAA1H,EAAAsK,WAAA9J,MAAA,SAAAiG,EAAAC,GAAAH,EAAAA,YAGAA,EAAAA,KAAYI,EAAKF,MAAjBF,EAAYI,KAAKF,KAOrBzG,EAAGoB,kBAAHpB,EAAAsK,UAAA/D,GAEDtG,KAlBDyH,WAAA5H,EAAA6H,gBAeE3H,EAAGsV,aAILtV,EAAAoB,aAnXF+T,EAAAvO,SAAA,cAAA,aAAA,aAAA,eAAA,SAAA,mBAAA,WAAA3H,QAAAO,OAAA,SAAAuB,UAAA,2BAAA,WAGE,OADFoU,OAAAA,EAAAlW,kBACEmF,KAAO,QACL9B,QAAO,WACPC,SAAAA,aAEEwU,WAAAA,EACA3V,aAAU,WAHMjC,YAFb;YCJTF,SAAQO,OAAO,SAASJ,WAAW,sBAAnCH,cAAe,SAIb,SAAAsC,EAAAyS,GAGA,GAAakC,MAAbjW,KAAGmE,OACD,UAAAnE,KAAAmE,KAAA8R,YAAA,UAAAjW,KAAAmE,KAAAiC,UAAA,CAGF,GAAIrG,GAAKC,IAETA,MAAK+W,WAIH9S,EAAAsC,QAAAxG,EAAAoE,KAAA+C,MAAA,SAAAgF,GADFnM,EAAAgX,QAAA7K,EAAA9G,IAAA8G,EAAAE,KAME2H,KAAAA,GAAAA,KAAczS,GAAA4F,MAAd6M,EAAOyB,OAAO,oBAAsBnJ,EAAS,IAAK,SAAS2K,EAAUC,GAGjE,GAAAD,GAAAC,EAAA,CAIA,GAAItK,IAAW,EACfA,IAAA,KAAI,GAAIN,KAAUtM,GAAGgX,QAGjB9S,GAAEgB,EAAAA,QAAQd,IAAY+S,OAAShL,EAAAA,QAAMG,IAQnCjH,CACAgH,EAAK8K,MAFP9R,GAAA8R,OAAA7K,GAEED,IAAK8K,OAAOnX,EAAGgX,QAAQ1K,KAKvB,IAAA8K,IAAQ/R,CACN+R,GAAAA,KAAAA,EAAAA,KAAQjQ,MAAR,SAAAgF,GACAA,EAAA9G,IAAAiH,IACA8K,GAAK9K,EAEJA,IAAAtM,GAAAgX,SAAA7K,EAAAE,KAAArM,EAAAgX,QAAA1K,KACF+K,GAAA,MAKFD,IACFC,GAAA,OAzBGnT,GAAAgB,KAAGiH,EAAAA,KAAAhF,MAAWmF,SAAQH,GACpBkL,EAAAA,IAAY/K,IACb+K,GAAA,IA4BLrX,KAEDA,EAAAoE,KAAA+C,MAAAyF,EACF5M,EAAAoB,mBASDgD,UAAAA,0BADgB,WAEhBhD,OAFgBkB,OAFb,EAMLlD,kBACAiC,KAAAA,QACAlC,SAAAA,aAjFJC,WAAA,qBAgFIiC,aAAc,WACdlC,YAAa;YCjFjBF,SAAQO,OAAO,SAASJ,WAAW,2BAAnCH,UAAQO,cAAgBJ,QAAW,WAAA,eAElC,oBAAW,cAFZH,SAAQO,EAAO+B,EAASnC,EAAWkC,EAAAK,EAAAkI,EAEvByN,GAqEN,QAAAC,GAAUC,GACX,MAFD,eAGKxX,GAAAyX,SACIzX,EAAGwX,aAAa7L,GAAK+L,SAArB1X,EAAGwX,aAAa7L,GAAK+L,aArEhC,GAAI1X,GAAKC,IAET,IAAGD,EAACA,MAAWA,EAACA,KAAA2X,gBAIhB,cAAG1X,MAAgBmE,OACjBpE,EAAGyX,SAAWjX,EAAMR,EAAGoE,KAAK8R,aAG3BlW,EAACA,WAGD,cAAEA,GAAgBA,UAAgB,eAAEA,GAAiBA,WAAxD,CAIAA,EAAGA,SAAA4X,YACDhW,EAAQ6O,KAAKzQ,EAAGyX,SAASG,WAAY/N,EAAkB+N,WAAY,KAAM5X,EAAG6X,iBAG9E7X,EAAGA,SAAA8X,cACDlW,EAAQ6O,KAAKzQ,EAAGyX,SAASM,OAAQlO,EAAkBkO,OAAQ,KAAM/X,EAAG6X,iBACpEjW,EAAQ6O,KAAKzQ,EAAGyX,SAASK,YAAajO,EAAkBiO,YAAa,KAAM9X,EAAG6X,kBAGhF7X,EAAGwX,aAAe,KAClBxX,EAAGgY,YAAc,KACjBhY,EAAGiY,iBAAmB,KACtBjY,EAAGkY,gBAAkB,GACrBlY,EAAGmY,sBACA,MAAHnY,EAAGA,KAAAqH,mBACDrH,EAAGoE,KAAKiD,qBAGVpH,KAAKmY,eAAiB,WAGpB,GAFApY,EAAGoE,KAAKiD,oBAERrH,EAAGA,cAAAA,EAAmBA,aAAA4C,OAAA,EAAtB,CAEK,gBAAA5C,GAAOA,KAAAsL,iBACRtL,EAAGoE,KAAKkH,eAAiB,EACzBtL,EAAGoB,WAGL,KAAA,GAAI4F,GAAIA,EAAAA,EAARhH,EAAYgH,aAAKwQ,SAAa5U,EAC5B5C,EAAGA,KAAAsL,gBAAAiM,EAA0BA,IAC3BvX,EAAGgY,YAAchY,EAAGwX,aAAaxQ,GAEjChH,EAAGoE,KAAKiD,iBAAmB9F,EAAY8W,SAASrY,EAAGgY,cAGhDC,EAAAA,KAAAA,eAAsBT,GAAAA,EAAzBxQ,KACAhH,EAAAiY,iBAAMA,EAAiBK,aAAWtR,GAChChH,EAAGkY,iBAAkBhO,SAAWlK,IADlCA,EAAAkY,gBAGKhO,KAAAC,MAAAnK,EAAAiY,iBAAAK,SAAA,KAAA,GAAA,IAGNtY,EAAAkY,gBAAAhO,KAAAC,MAAAnK,EAAAiY,iBAAAK,SAAA,KAAA,OAiBLrY,KAAAsY,YAAMf,WAGFxX,GALJA,EAAGoE,KAAKiD,oBAKJrH,EAAAA,cAAQsL,EAAAA,aAAR1I,OAAA,EAAA,CAED,gBAAA5C,GAAAoE,KAAAkH,iBAFCtL,EAAGoE,KAAKkH,eAAiB,EAI3BtL,EAAIoB,WAAJ,KAAI,GAAI4F,GAAE,EAAEA,EAAEhH,EAAGwX,aAAa5U,SAASoE,EAInChH,EAAGoE,KAAKiD,gBAAmB9F,EAAAA,aAAY8W,GAAAA,WACxCrY,EAAAgY,YAAAhY,EAAAwX,aAAAxQ,GAEJhH,EAAAoE,KAAAiD,iBAAA9F,EAAA8W,SAAArY,EAAAgY,gBAGH/X,KAAKuY,kBAAoB,WAOnB,GAAWlN,MAAXtL,EAAAwX,cACExX,EAAAwX,aAAA5U,OAAA,GACD,gBAAA5C,GAAAoE,KAAAkH,eAAA,CAEH,IAAA,GAAOtE,GAAA,EAAPA,EAAAhH,EAAAwX,aAAA5U,SAAAoE,EATF,GAWKhH,EAAAoE,KAAAkH,eAAA,GAAAiM,EAAAvQ,GACH,OAAO,CAHP,QAAO,EASThH,OAAGmY,GAKDnY,KAAAA,kBAAA,SAAAyY,GACDzY,EAAAoE,KAAAkH,eAAAmN,EACDzY,EAAGoB,sBATL,eAAApB,GAAAyX,SAIIzX,EAAGuY,cAUHvY,EAAAoY,iBAECpY,EAFDoB,YAMDnB,KAAAyY,gBAAA,WARH,IAAA,GAAA1R,GAAAhH,EAAAoE,KAAAkH,eAAA,GAAAtE,GAAAhH,EAAAwX,aAAAxQ,EAAA,KAAAA,EAEY,GAALA,EASF2R,EAAAA,mBAAkBhS,MAAAmI,OAAW,IAG9B9O,EAAGmY,mBAAmBxR,KAAK3G,EAAG4Y,UAAU5R,EAAE,KAH9C/G,KAAK0Y,gBAAkB,WASvB3Y,EAAK4Y,qBACH,KAAA,GAAO5R,GAAAhH,EAAAoE,KAAAkH,eAAAtE,EAAA,IAAAA,EACL8H,EAAAA,mBAAQyI,KAAgBjM,EAAAA,UADnBtE,EAAA,GADThH,GAAAmY,mBAAAxR,MAAAmI,OAAA,KAQE7O,KAAA2Y,UAAOpB,SAAgBxX,GACrB,OACEA,OAAGwX,EAAe5V,GAClB5B,MAAGoY,EAAHC,SAAArY,EAAAwX,aAAAlM,MAIAtL,KAAAA,gBAAA,WAIJ,OAHGA,EAAAwX,cAAAxX,EAAAoE,MAAApE,EAAAoE,KAAAuT,gBACF3X,EAAAyX,SAAAG,YAAAhW,EAAAmS,SAAA/T,EAAAyX,SAAAG,cAPG5X,EAAGwX,aAAe5V,EAAQmD,KAAK/E,EAAGyX,SAASG,WAAY,YAAa5X,EAAGoE,KAAKuT,eAShF3X,EAAOA,kBANFA,EAAGyX,SAASK,aAAelW,EAAQmS,SAAS/T,EAAGyX,SAASK,eAS3D7U,EAAAA,aAAWrB,EAAAmD,KAAf/E,EAAAyX,SAAAK,YAAA,iBAAA9X,EAAAoE,KAAAuT,eAPM3X,EAAGuY,gBAIAvY,EAAGwX,aAWL,IAAAvU,GAAA,kBAEDjD,MAAAA,cAAe,WACf4B,EAAA6O,KAAQzJ,EAAIA,KAAK,aAAK,WACpB1F,EAAIuX,WAEJ,GAAA7Y,EAAG6Y,iBAAH,CAII7Y,EAAAA,YACD,KAAA,GAFDgH,GAAA,EAGKA,GAAA,IAAAA,EAAA,CACH,GAAA6R,GAAIzU,EAAO5D,iBAAX,aAAAwG,GACA8R,EAAS9Y,EAAAiY,iBAAA,gBAAAjR,EACP,IAAA6R,EAAIE,GAAAA,EAAW,EAAA,CAEbpN,GAAAA,GAAKmN,EAAAA,KAAAA,EAAAA,KAAAA,EAFQ,IAAf,GAAetY,EAAfoC,OAIA5C,EAAAA,UAAGgZ,MAAHrN,IAAkBoN,EAAlBnV,KAAA,YAAAiV,EAAA,UAEH,CACF,GAAAzU,GAAA5D,EAAA,EACF,IAAA4D,EAAA,CA3BH,GAAA2U,IADF3U,KAAAkT,EAAA2B,gBAAA7U,GADFuH,IAAAmN,EAkCW/E,GAAAA,UAAS9Q,KAAW8V,aAU7BzW,EAAOyR,SADF9Q,IAELV,KAAAA,oBAFKxB,UAAP,+BAAA,WAvNF,OAwNIuB,OAAO,EACPC,kBACE6B,KAAM,QACNhD,SAAU,aAEZhC,WAAY,0BACZiC,aAAc,WACdlC,YAAa;YC/NjBF,SAAQO,OAAO,SAASJ,WAAW,yBAAnCH,UAAQO,QAAO,cAASJ,oBAItB,SAAAwC,EAAApB,EAAAe,EAAAsI,GAgGE,QAAIqP,KADJ,GAAIC,MAGDnZ,EAAA,IAsBL,OApBM,OAAAA,EAAAoZ,YACAna,QAAAA,QAAQuH,EAAQjF,WAAY8W,SAAZ/D,EAAyB5N,GACvC,GAAAS,KACEA,SAAAA,QAAWgF,EAAXkM,SAAA/D,GAAA,SAAAnI,EAAAkN,GACD9X,EAAA4F,MAAAgF,EAAA9G,IAAAiU,MAHHnS,EAAAR,KAAAwF,KAMAhF,EAGKvE,OAAIsW,EACPC,EAAO7E,EAAEjP,IAAM8B,EAEhB+R,IAdHC,EAAA7E,EAAAjP,OAgBD6T,EAAA5E,EAAAjP,MAKMkU,EAtHT,GAAIvZ,GAAKC,IAGTA,MAAKuZ,WAAY,KACjBvZ,KAAKwZ,UAAAA,KACLxZ,KAAKyZ,oBAAL,EAAAzZ,KAAKyZ,kBAEW,MAAbzZ,KAAKmE,OAGN,cAAgB5D,MAAM4D,OACvBnE,KAAAwX,SAAAjX,EAAAP,KAAAmE,KAAA8R,aAGCjW,KAAAwX,UAAAxX,KAAAmE,KAAAuV,KAAA,gBAAA1Z,MAAAwX,WAIA7V,EAAAA,SAAa5B,cACd4B,EAAA6O,KAAAzQ,EAAAyX,SAAAmC,aAAA/P,EAAA+P,aAAA,KAAA5Z,EAAA6Z,eAGC5Z,KAAA4Z,cAAA,WACE,IAAA7Z,EAAGA,YACDA,EAAIoZ,MAAAA,EAAAA,KAAaxX,KAAQmD,gBAAiB6U,GAAAA,SAAc,CAAxD,GAAIR,GAAaxX,EAAQmD,KAAK/E,EAAGyX,SAASmC,aAAc,KAAM5Z,EAAGoE,KAAKuV,IAGrDP,IAAfpZ,EAAA4C,QACA5C,EAAGoZ,UAAHA,EAAwBrU,GACxB/E,EAAG0Z,WAAAA,EAAiBI,KAAAA,EAAAA,SAAqBV,aAAzC,cAAApZ,EAAAwZ,UAAAO,aAHF/Z,EAAA0Z,eAKQI,EAAuBrC,EAA1B2B,aAAG,kBAAoBpZ,GAAGyX,WAG7B2B,EAAGA,EAAArU,KAAH/E,EAA2ByX,SAAAuC,eAAA,KAAAha,EAAAoE,KAAAuV,KAET/X,GAAhB5B,EAAGoZ,SACHpZ,EAAG0Z,UAAAA,EAAiBI,GACrB9Z,EAAAoZ,WAAAxX,EAAAmD,KAAA/E,EAAAyX,SAAAuC,eAAA,cAAAha,EAAAwZ,UAAAO,aACF/Z,EAAA0Z,eAAAI,EAAA9Z,EAAAoZ,cAIL,MAAOpZ,GAAGoZ,YAKRnZ,KAAAga,cAAgB5U,WACdrF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAapS,EAC/BhH,GAAAA,EAAGoE,UAAWpE,IAAGwZ,EAAAA,WAAjBxS,GAAA3B,GAKH,MAJGrF,GAAGoB,UAAHpB,EAAAoZ,WAAApS,EAAA,GACAhH,EAAAoE,KAAKqV,IAAAA,EAAAA,UAAqBpU,GAC1BrF,EAAAoB,gBACDnB,KAAAwZ,oBAAA,IAMDxZ,KAAAia,cAAgB7U,WACdrF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAapS,EAC/BhH,GAAAA,EAAGoE,UAAWpE,IAAGwZ,EAAAA,WAAjBxS,GAAA3B,GAKH,MAJGrF,GAAGoB,UAAHpB,EAAAoZ,WAAApS,EAAA,GACAhH,EAAAoE,KAAKqV,IAAAA,EAAAA,UAAqBpU,GAC1BrF,EAAAoB,gBACDnB,KAAAwZ,oBAAA,IAMDxZ,KAAAka,gBAAaf,SAAc/T,GACzBrF,IAAAA,GAAGwZ,GAAAA,EAAAA,EAAAA,EAAHJ,WAAkBA,SAAlBpS,EACAhH,GAAAA,GAAQ2Z,EAARP,WAAiBI,GAAAA,GAKpB,MAJGxZ,GAAGyZ,UAAAA,EAAAA,WAAHzS,GACAhH,EAAGoB,KAAAA,IAAHpB,EAAAwZ,UAAAnU,GACArF,EAAAyZ,oBAAA,MACDzZ,GAAAoB,YAMHnB,KAAAma,iBAAO,WAAP,MAFFna,MAAA4Z,iBAEU7Z,EAAGoZ,YAAcpZ,EAAGoZ,WAAWxW,QAAU,IAAM5C,EAAGwZ,WAAaxZ,EAAGwZ,UAAUnU,IAAMrF,EAAGoZ,WAAW,GAAG/T,IAK3GpF,KAAAoa,gBAAO,WAAP,MAFFpa,MAAA4Z,iBAEU7Z,EAAGoZ,YAAcpZ,EAAGoZ,WAAWxW,QAAU,IAAM5C,EAAGwZ,WAAaxZ,EAAGwZ,UAAUnU,IAAMrF,EAAGoZ,WAAWpZ,EAAGoZ,WAAWxW,OAAO,GAAGyC,SAuC9HjE,UAAAA,6BAAU,WAFM,OAIlBhC,OAAAA,EACAiC,kBACAlC,KAAAA,QARFiC,SAAA,aAMEhC,WAAY,wBACZiC,aAAc,WACdlC,YAAa;YC1IjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,aAIE,SAAA8B,EAAAM,EAAAJ,GAcE,QAAO8Y,KACR,MAAA,4BAAAta,EAAAoE,KAAAmW,YAAAva,EAAAoE,KAAAoW,IAAA,UA+BD,QAASjB,GAAekB,IA3CxB,GAAavE,MAAbjW,KAAGmE,MACD,UAAAnE,KAAAmE,KAAA8R,WAAA,CAIAjW,KAAKmE,KAAKkH,iBACXrL,KAAAmE,KAAAkH,eAAA,EAED,IAAItL,GAAKC,IAOPA,MAAAya,WAAcJ,WACd1Y,GAAAA,GAAa+Y,GAA4CrZ,GAAAA,KAASqZ,EAAA,KAAWpB,EAAA,WAAAjY,EAAA,WAC3EtB,EAAAA,UAAA4B,EAAeA,KAAQmD,EAAR,aAAA/E,EAAoCA,KAAGoE,SAI1DnE,KAAKyY,gBAAkB,WAAlBA,KAAAA,WAAkBzY,KAAAmE,KAAAkH,eAAWrL,KAAA2a,UAAAhY,SAChC3C,KAAGmE,KAAKwW,iBACN5a,EAAAoB,aAKJnB,KAAK4a,gBAAkB,WAAvB,MAAKA,MAAAA,WAAkB5a,KAAAmE,MAAWnE,KAAAmE,KAAAkH,gBAAArL,KAAA2a,UAAAhY,QAIlC3C,KAAK0Y,gBAAkB,WAAlBA,KAAAA,KAAAA,eAAkB,EACrB1Y,KAAGmE,KAAKA,iBAINnE,KAAKmE,KAAKkH,eAAiB,EAG7BtL,EAAGoB,YAOLQ,EAAQ6O,KAAK6J,IAAc,KAAM,KAAMta,EAAG0a,gBAKxCpY,UAAO,yBADF,WAELC,OACE6B,OAAAA,EACAhD,kBAJGgD,KAAA,QAMLhF,SAAY,aAEZD,WAAAA,oBARFkC,aAAA,WA1DFlC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,UAAQO,cAAgBJ,QAAAA,oBAItB,SAAAwC,EAAAL,EAAAf,EAAAqJ,GAwEE,QAAIiR,KACJ,GAAG9a,IAAkB,CAUtB,OATGf,GAAAA,KAAQuH,QAAWuU,GACjB9b,QAAG+b,QAAAhb,EAAYA,OAAQib,SAASD,EAAAtU,GAC9BoU,GAAAA,EAAAA,IAAAA,EAAAA,KAAiBpU,QAElB,YADCoU,EAAApU,KAMPoU,EAjFD,GAAI9a,GAAKC,IAGN,OAAHA,KAAGmE,OACD,cAAgB5D,MAAM4D,OACvBnE,KAAAwX,SAAAjX,EAAAP,KAAAmE,KAAA8R,aAGClW,EAAAyX,UAAAzX,EAAAyX,SAAAyD,WAIAtZ,EAAAA,SAAa5B,UACd4B,EAAA6O,KAAAzQ,EAAAyX,SAAAyD,SAAArR,EAAAqR,SAAA,KAAAlb,EAAAmb,WAEDlb,KAAK8a,OAAS,KAGZ9a,KAAAmb,UAAYC,WACZ3U,GAAAA,GAAAA,MACAA,GACE1G,EAAA+a,OAAAnY,SACD8D,EAAA,EAED1G,IAAGoE,GAAK6W,EAARF,OAAkBC,EAClBhb,GAAGoE,KAAKkD,QAAR0T,EAAqBzZ,GACrBvB,EAAGoB,KAAAA,WAAHG,EAAA8W,SAAA2C,GATFhb,EAAAoB,YAaEnB,KAAAqb,aAAO,WADT,MAAA,OAAAtb,EAAA+a,QAAAM,KAAArb,EAAA+a,OAAAnY,OAAA,GAKE3C,KAAAsb,aAAOF,WADT,MAAA,IAAAA,KAKEpb,KAAAub,UAAYH,WACZ3U,GAAAA,GAAAA,MACAA,EACU1G,IACT0G,EAAA1G,EAAA+a,OAAAnY,OAAA,EAED5C,IAAGoE,GAAK6W,EAARF,OAAkBC,EAClBhb,GAAGoE,KAAKkD,QAAR0T,EAAqBzZ,GACrBvB,EAAGoB,KAAAA,WAAHG,EAAA8W,SAAA2C,GATFhb,EAAAoB,YAaEpB,KAAGoE,YAAH,WACApE,EAAGoE,KAAKkD,QAAR,KACAtH,EAAGoB,KAAAA,WAAH,KAHFpB,EAAAoB,YAOEnB,KAAAkb,UAAc,WACd,GAAG,MAAHnb,EAAGA,MAAmB,MAAtBA,EAAsByX,SAAA,MAAA,KACpB,IAAarT,MAAbpE,EAAIyb,OAAc5M,CAClB,GAAG4M,GAAKzb,EAAAoE,KAAAyK,WACN4M,IACEzb,EAAA+T,SAAYnS,EAAQmD,SAAQ0S,YAC7BzX,EAAA+a,OAAAnZ,EAAAmD,KAAA/E,EAAAyX,SAAAyD,SAAA,cAAAO,IAPP,MAAAzb,GAAA+a,aAkCEzY,UAAO,yBADF,WAELC,OACE6B,OAAAA,EACAhD,kBAJGgD,KAAA,QAMLhF,SAAY,aAEZD,WAAAA,oBARFkC,aAAA,WA9FFlC,YAAA;YCAAF,SAAQO,OAAO,SAASJ,WAAW,wBAAnCH,WAKK,MAAHgB,KAAGmE,MACA,QAAHnE,KAAGmE,KAAA8R,aAIHjW,KAAK6L,YAAc,SAAA4P,GACjB,GAAGA,GAAHA,EACEzb,KAAKmE,KAAKkH,eAAiB,KAC3BrL,KAAKmE,KAAKiD,wBAGV,CAAApH,KAAKmE,KAAKkH,eAAiBoQ,CAG3Bzc,IAAAA,KACEgN,SAAAA,QAAWtF,KAAMtB,KAAI8G,MAASE,SAAKF,EAAAzF,GADrCuF,EAAAtF,MAAAtB,GAAA8G,EAAA9G,GAAAgH,IAAAF,EAAAE,KAAAqP,EAAA,SAKDzb,KAAAmE,KAAAiD,iBAAA4E,EAdHhM,KAAAmB,gBAsBEmB,UAAAA,4BAAkB,WAChB6B,OACAhD,OAAAA,EAFgBmB,kBAIlBnD,KAAAA,QACAiC,SAAAA,aAPFjC,WAAA,uBA9BFiC,aAAA,WAsCIlC,YAAa;YCtCjBF,SAAQO,OAAO,SAASJ,WAAW,gBAAnCH,cAIE,SAAAsC,GAEA,GAAIvB,GAAKC,IAGPD,GAAAoE,OAIApE,EAAAA,aAAA,WADFA,EAAA2b,kBAQEpZ,UAAAA,oBAAkB,WAChB6B,OACAhD,OAAAA,EACAua,kBALGvX,KAAA,QAOLhF,SAAY,YACZiC,WAAc,eARhBjC,WAAA,eAlBFiC,aAAA,OA2BIlC,YAAa;YC3BjBF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,UAAR,cAIE,SAAA8B,EAAAM,EAAA0V,GAGA,GAAasE,MAAb3b,KAAGmE,KAAH,CACE1B,GAAY,IAAZA,KAAAA,KAAAkZ,QAA6CA,GAAjC3b,KAAAmE,KAAuBwX,QAAnC,KAAA3b,KAAAmE,KAAAwX,QAAA,KAAA3b,KAAAmE,KAAAwX,QAAA,KAAA3b,KAAAmE,KAAAwX,OAED,WADClZ,SAAAgD,IAAA,qBAAAzF,KAAAmE,KAAAwX,OAGF,IAkDKpZ,GAlDDxC,EAAKC,KAEL4b,GAsBJ,uBACA,6BACA,kCApBE,4BAsBF,gCACA,iCACErZ,gCADF,oCAIEA,6BACD,4BArBC,+BAuBF,gCACEZ,4BACEN,mCACEtB,gCACD,2BACF,sCACF,kCArBC,iCAuBF,6BAOG,KAAAC,KAAAmE,KAAAwX,QAAA,KAAA3b,KAAAmE,KAAAwX,QAAA,KAAA3b,KAAAmE,KAAAwX,QAAA,KAAA3b,KAAAmE,KAAAwX,OArBDpZ,GANoB,mBAuBRwE,wBACWxE,gCAMF,GAAlB4P,KAAMxP,KAANgZ,SACDpZ,GA/BkB,oBA+BlB0M,OAAA2M,GAIA,KAAA,GAAG7b,GAAAA,EAAGoE,EAAAA,EAAKwX,SAAR5U,EACDhH,EAAG8b,KAAAA,EAAAA,GAAgBC,KAAAA,aAAnB,WACDza,EACI,WACHtB,EAAGgc,qBAMT/b,MAAK+b,gBAAgB,WAGlB,IAAA,GAAAhV,GAAA,EAAAA,EAAAxE,EAAAI,SAAAoE,EAHH,IAAApF,EAAAmS,SAAAvR,EAAAwE,IApBM,MA6BJ,IAAGiV,GAAAA,EAAAlX,KAAH9E,KAAAmE,KAEKnB,SAAA,UAAA,KAAAhD,KAAAmE,KAAAiB,GACH,IAAA+M,EAAI8J,OAAOD,EAAAA,CA1BX,GAAInM,GAAIsC,EAAM,EA4BdpS,GAAAQ,SAGgByb,IAAdjc,EAAImc,KAAAA,QAAmC5P,KAAzBvM,EAAaoE,KAAAwX,QAA3B,KAAA5b,EAAAoE,KAAAwX,QAAA,KAAA5b,EAAAoE,KAAAwX,OACA5b,EAAA8b,cAAgBG,EAAAA,YAEhB,GAAAjc,EAAAoE,KAAAwX,QACA5b,EAAAgc,cAAclM,EAAAiM,cAOV9b,KAAA+b,cAAUpZ,SAASwZ,GACjB,IAAA,GAAAC,GAAA,EAAAA,EAAIC,EAAYhF,SAAY2B,EAC5BjZ,EAAAuc,sBAAAH,EAAAP,EAAAQ,KAIEH,KAAAA,sBAFY,SAAAE,EAAAI,GAAA,GAAAP,GAAdra,EAAAmD,KAAAyX,EAAA,KAAAJ,EAKD,IAAA,GAAAH,EAAArZ,YAEJ,CACF,GAzBDsZ,GAyBQO,EAzBR,GAAAC,QATJnQ,EAAA,CASI,GAAG,CA6BFuP,GACCa,IAAAA,GAAcC,EAAAA,GAAAA,UAAgBC,GAC9BJ,EAAUE,EAAAA,GAAW/Z,OAAzB2J,EAAqC,SA3B7BuQ,EAAiBb,EAAU,GAAG,OAAS1P,EAAY,OA8BzD,IAAAkQ,EA3BI,GAAGN,EA6BHnc,EAAI+c,cAAMC,EAAUpa,OAEhBqa,CAEJ,GAAGC,GAAGC,EAAWpY,KApGH,mBAoGG,KAAA0X,EACf,IAAAW,EAAKtB,OAAcoB,EAAGG,CADxB,GAGKf,GAAAhF,EAAA2B,gBAAAmE,EAAA,GAGDpd,GAAGQ,MAAMmG,MACP2W,MAAOJ,EACPhB,KAAMgB,EACN9Y,KAAMkT,YAKfmF,KAMLxc,KAAA6b,cAAO,SAAAM,GAEL7Z,IAAAA,GADAD,IAlGY0E,wBACWxE,gCAkGvBD,EAAAA,EAAAA,EAAAA,EAAkBK,SAAAoE,EAKlB7H,IAAAA,GAPK6d,GAAApb,EAAA2b,QAAAZ,EAAA3V,IAOL7H,EAAAA,EAAa4d,EAAAC,EAAApa,SAAAma,EAAA,CAPf,GAAAG,GAAAF,EAAAD,EA5JF,IAAAG,EAAAD,UAAAb,GAAAc,EAAAM,KAwIU,GAAGN,EAAGC,UACJld,KAAK6b,cAAcoB,EAAGG,YAEnB,CACH,GAAID,GAASxb,EAAQmD,KAxGT,mBAwG+B,KAAMmY,EAAGG,OACjDD,GAAOxa,OAAS,GACjB5C,EAAGQ,MAAMmG,MACP2W,MAAOJ,EAAGO,MACVvB,KAAMgB,EAAGQ,KACTtZ,KAAMkT,EAAY2B,gBAAgBmE,EAAO,aAUxDrc,UAAU,uBAAwB,WACjC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAERhF,WAAY,kBACZiC,aAAc,OACdlC,YAAa;YCnKjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA8B,EAAAM,EAAA0V,EAAA/V,EAAAI,GAEA,GAAgB,MAAb1B,KAAKmE,KAAR,CAGApE,GAAG2d,GAAH1d,IAAAD,GAAG2d,SAaH,KAAI,GAXAC,IAQJ,2BANE,kCAQF,iCACA,iCACEhc,mCACEN,gCAIHkB,EAAAob,EAAA1O,QAJG,qBAFIlI,EAAE,EAAEA,EAAExE,EAAMI,SAASoE,EAQ7BpF,EAAKic,KAALrb,EAAkBwE,GAAA,KAAW,aAAA,WAC3B1F,EAAQ0F,WACNhH,EAAI4B,gBAKN5B,MAAG2d,WAAH,WACA,IAAA,GAAI3W,GAAIA,EAAAA,EAARxE,EAAcob,SAAOhb,EACnB5C,IAAG8d,EAAH/J,SAAavR,EAAbwE,IACD,MAIChH,GAAA2d,SACA,KAAA,GAAI3W,GAAA,EAAI+W,EAAAA,EAAIA,SAAEC,EACZhe,EAAA8d,UAAMH,EAAUzB,GAKV,KAAA,GADF8B,MACEhX,EAAA,EAAGhH,EAAAA,EAAG2d,OAAH/a,SAAAoE,EAAsB5C,CAGxB,IAAA,GADGgT,IAAAA,EACH2G,EAAA,EAAAA,EAAAC,EAAApb,SAAAmb,EACF,GAAA/d,EAAA2d,OAAA3W,GAAAkV,MAAA8B,EAAAD,GAAA7B,MACJlc,EAAA2d,OAAA3W,GAAAxG,MAAAoC,QAAAob,EAAAD,GAAAvd,MAAAoC,OAAA,CAPGwU,GAAQ,CAUVA,KAAJ,GAAW6G,GAAA,EAAAA,EAAAje,EAAA2d,OAAA3W,GAAAxG,MAAAoC,SAAAqb,EACTD,EAAUrX,OAAQgX,GAAAA,MAAlBM,GAAA7Z,KAAAiB,IAAA2Y,EAAAD,GAAAvd,MAAAyd,GAAA7Z,KAAAiB,IACDrF,EAAA2d,OAAA3W,GAAAxG,MAAAyd,GAAAtS,KAAAqS,EAAAD,GAAAvd,MAAAyd,GAAAtS,MACFyL,GAAA,GAMG8G,GARAF,EAAUrX,KAAK3G,EAAG2d,OAAO3W,IAa3BhH,EAAA2d,OAAIQ,GAGFjC,KAAAA,UAAQkC,SAAFnb,GANV,IAAI,GAOAzC,GAAOoB,EAAAmD,KAAA9B,EAAA,iBAAAjD,EAAAoE,KAAAiB,IAPH2B,EAAE,EAAEA,EAAEkX,EAAQtb,SAASoE,EAAG,CAoB9B,IAVF,GAAI+W,GAAEG,EAANlX,GAEE+W,GACA1Y,GAAIgZ,EAAAA,GACJpb,SAAIqb,EAAapb,QAAA,UAAjB,IACAgZ,KAAKmC,EAAAA,KAAAA,IAAAA,IACH7d,UAGFud,EAAIvd,IACDA,CACD2d,GACE/Z,IAAAA,GAAMkT,OAAY2B,EAAAA,KAClBtN,EAAO2S,OAAFP,EAAA,KAFU,MAAjBM,IAAAtB,IAID,KAGH/c,IAAG2d,GAAH/b,EAAAmD,KA1EA,mBA0EA,KAAAgY,EAAAsB,GACD7d,GAAAoC,OAAA,GAhCHub,EAAA3d,MAAAmG,MAoCD5F,KAAUuW,EAAA2B,gBAA0BzY,EAAW,IACvCmL,IAAAoR,EAAAuB,KAKLlf,EAAAA,OAAYuH,KAAAwX,SANfpd,UAAU,yBAA0B,WACnC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAERhF,WAAY,oBACZiC,aAAc,OACdlC,YAAa;YC/GjBF,SAAQO,OAAO,SAASJ,WAAW,0BAAnCH,WAAQO,UAAR,cAAmC,QAIjC,SAAA8B,EAAAM,EAAA0V,EAAA9W,GAEA,GAAgB,MAAbP,KAAKmE,KAAR,CASExC,IAAAA,GAPE5B,GAAKC,KAMTuC,GAHsB,gCAAA,oBAIpBZ,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClBhH,EAAGue,WADLve,EAAAue,iBAOFte,MAAAse,YAAYvX,WACV,IAAA,GAAIpF,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAIH,IAAI8I,GACDA,EAAAA,EAAO0O,YAAmBxe,EAAAoE,KAC3Bqa,IAAAA,EAAAA,cAAaD,IACdC,EAAA3O,EAAA0O,cAED,IAAI/G,GAAWjX,EAAMR,EAAGoE,KAAK8R,WAG3B,IAAAuB,GAAID,EAAAA,UAEF,IAAA,GADFA,GAAYxQ,EAAEwQ,KAAAA,EAAoBI,WAAK,YAAA9H,EAAA4O,WAClClH,EAAAA,EAAAA,EAAAA,EAAgBE,SAAhB1Q,EACDyX,GAAAA,EAAWjH,GAAAA,cAAgBmH,EAAAA,KAA3BrT,eAAA,CACAmT,EAAAjH,EAAAxQ,GAAA2X,YACD,OAKL3e,EAAAQ,SACER,GACDA,EAAA4e,SAAAH,IAIDxe,KAAA4e,QAAQvH,WACR,GAAAxH,GAAOqH,EAAS2H,YAAT7e,KAAAmE,KAFT,OAAA+S,QAAArH,EAAAgP,gBAAA,IAAA,KAME7e,KAAA2e,SAAA,SAAAH,GAGA,GAAGxC,GAAUrZ,EAAUmC,KAnDH,gCAqDf,KAAA0Z,EACH,IAAqB,GAArBxC,EAAWA,YAMT,KAHF,GAAAC,GAAMD,EAAS1P,GAAAA,QAEbA,EAAIkQ,EACAK,OAAAA,EAAiBb,SAAaA,GAAS1P,IAAAA,CAC3C,GAAA4P,GAAAF,EAAA,GAAA,UAAA1P,GACGkQ,EAAWR,EAAA,GAAA,OAAA1P,EAAA,SACZuQ,EAAYb,EAAA,GAAA,OAAA1P,EAAA,OAEX,IAFDkQ,EAIE,GAAAN,EACAnc,EAAA4e,SAAUhc,OAFP,CAKD5C,GAAAA,GAAS2G,EAAK5B,KAvEJ,mBAuEI,KAAA0X,EACZa,GAAAA,OAAOR,GADK9c,EAAdQ,MAAAmG,MAKD2W,MAAAR,EACFZ,KAAAA,EACF9X,KAAAkT,EAAA2B,gBAAAmE,EAAA,MAORrc,UAMG3B,UAAAA,8BALK,WAMLiC,OACAlC,OAAAA,EAPFoD,kBAjGF6B,KAAA,SAsGIhF,WAAY,yBACZiC,aAAc,OACdlC,YAAa;YCxGjBF,SAAQO,OAAO,SAASJ,WAAW,qBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA8B,EAAAM,EAAA0V,GA+BE,QAAInM,KAEF,IAAA,GADFA,GAAQ4T,EAAIA,KAAE5T,EAAc4T,SAAG/e,EAAAoE,KAAAiB,IACzB2Z,EAAAA,EAAM7T,EAAAA,EAAVvI,SAAAmc,EAGEnT,IAFF,GAAIA,GAAIT,EAAR4T,GACAnT,EAAA,IACEA,CACAA,GACA,IAAGsF,GAAEA,qBAAiBtF,CACpB,MAAAsF,IAAA8N,IACD,KAGD,IAAGC,GAASrc,EAAZmC,KAAwBma,EAAA,KAAAF,EAAA9N,GACtBlR,GAAS2G,OAAK2Q,GACftX,EAAAQ,MAAAmG,KAAA2Q,EAAA2B,gBAAAgG,EAAA,MA3CP,GAAgB,MAAbhf,KAAKmE,KAAR,CAGApE,GAAGQ,GAAHP,IAAAD,GAAGQ,QAODoB,KAAAA,GAJEsd,GAAAA,oBAAAA,EAAkB,mBAGtBC,GAAYnY,EAAEmY,GACZvd,EAAQ6O,EAAAA,EAAR0O,EAAaA,SAAbnY,EACE1F,EAAAA,KAAS6d,EAAAnY,GAAW,KAAA,aAAA,WAClBhH,EAAGof,WADLpf,EAAAof,cAOFnf,MAAAmf,SAAA,WACE,IAAA,GAAIxd,GAAAA,EAAAA,EAAAA,EAAAgB,SAAiBuc,EACnB,IAAAvd,EAAAmS,SAAAoL,EAAAnY,IACD,MAIHqY,GAAAA,SARFA,SAmCE9c,UAAAA,yBAAkB,WAChB6B,OADgB9B,OAFb,EAKLlD,kBACAiC,KAAAA,SANFjC,WAAA,oBAxDFiC,aAAA,OA+DIlC,YAAa;YC/DjBF,SAAQO,OAAO,SAASJ,WAAW,mBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA8B,EAAAM,EAAA0V,GA0DA,QAASgI,GAAYrc,GAEnB,IAAI,GADAkI,GAAOvJ,EAAQmD,KAAK9B,EAAU,YAAajD,EAAGoE,KAAKmb,OAC/CR,EAAE,EAAEA,EAAE5T,EAAKvI,SAASmc,EAAG,CAC7B,GAAIE,GAAWrd,EAAQmD,KAAKma,EAAiB,KAAM/T,EAAK4T,GAAG1Z,GACxD4Z,GAASrc,OAAS,GACnB5C,EAAGQ,MAAMmG,KAAK2Q,EAAY2B,gBAAgBgG,EAAS,MA7DzD,GAAgB,MAAbhf,KAAKmE,KAAR,CAGApE,GAAGQ,GAAHP,IAAAD,GAAGQ,QA0DGR,KAAAA,GAxDFwC,IA2BJ,4BAzBA,iCA2BA,uCACA,uCACEZ,+BACEN,+BACEtB,sCACD,0BACF,0BACF,gCAzBD,mCA2BA,iCACE,6BACE,kCACE,wCACD,wCACF,gCAzBH,gCA2BEA,uCACA,2BACEsf,2BACD,iCACF,qCAICJ,EAAc/T,mBAEZgU,EAAGF,EAASrc,QAAYsc,IACtBlf,EAAGQ,EAAAA,EAAH2e,EAAc7H,SAAY2B,EAC3BrX,EAAA6O,KAAA0O,EAAAnY,GAAA,KAAA,aAAA,WACF1F,EAAA,WACFtB,EAAAof,cAOGhb,MAAAA,SAAM,WADU,IAFb,GAAA4C,GAAA,EAAAA,EAAAmY,EAAAvc,SAAAoE,EAKL5H,IAAAA,EAAY2U,SAAAoL,EALPnY,IAML3F,MAxBArB,GAAGQ,QACH,KAAI,GAAIwG,GAAE,EAAEA,EAAExE,EAAMI,SAASoE,EAC3BsY,EAAY9c,EAAMwE,SAevBjG,UAAU,uBAAwB,WACjC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAERhF,WAAY,kBACZiC,aAAc,OACdlC,YAAa;YCjFjBF,SAAQO,OAAO,SAASJ,WAAW,oBAAnCH,WAAQO,UAAR,cAAmC,cAAA,eAIjC,SAAA8B,EAAAM,EAAA0V,EAAA/V,EAAAI,GA0GI,QAAI6d,GAAiBza,GAGrB,IAAA,GAFA0a,GAAIC,EAAS9d,KAAQmD,EAAKma,YAAiBlf,EAAMwU,KAAEmL,IAE/CC,EAAAA,EAAAA,EAAAA,EAAWhd,SAAAoE,EAAA,CACb6Y,GAAAA,GAAAA,EAAYC,GAEZ5D,EAHata,EAAAmD,KAAAma,EAAA,KAAA1K,EAAAuL,eAIbC,EAAAA,EAJajb,KAAAma,EAAA,KAAA1K,EAAAmL,eAMb5b,GACAC,SAAOsT,EAAAA,OACP2I,QAAAA,EARaC,UAAA1L,EAAA2L,WASbC,KAAAA,EATFJ,gBAAA,EAKEK,aAAc,EAOhBtc,MAAG6b,EAAA3G,gBAAiCqH,EAAAA,IAClCV,MAAAA,EAAA3G,gBAAgCqH,EAAUV,IAC3CK,SAAA,EALCG,SAAU,EAOZR,GAGQpL,WAAE+L,GAAoBD,YAC5BV,EAASS,SAAAA,EAAkBG,UAAAA,EAA3BX,WAKG,GAHArL,EAAA+L,cAIHX,EAASK,MAATzL,EAAAgM,mBAPyB,GAAnBhM,EAAE+L,cAUVX,EAAKa,cAAoBjM,EAAAgM,mBAGjB,GAAHhM,EAAA+L,cACHX,EAASS,iBAAkBK,EAAAA,mBAExBd,EAGAK,SAAAzL,EAAAgM,mBATiB,GAAnBhM,EAAEiM,cAaLb,EAAS1D,MAAO0D,EAAAA,mBAEhB,GAAGe,EAAAA,cACJf,EAAAS,cAAA7L,EAAAkM,mBAIM,GAAAlM,EAAAiM,cACTb,EAAOI,iBAAAxL,EAAAkM,mBAGHtc,EAAMgc,SAAA5L,EAAAkM,mBAGRrf,EAAAA,KAAcue,EANT1D,KAAA,IAAA,IAAPlc,EAAA2gB,UAAAha,KAAAiZ,IA7JA,GAAgB,MAAb3f,KAAKmE,KAAR,CAGApE,GAAG2gB,GAAAA,IAAH3gB,GAAG2gB,YAUD/e,KAAAA,GAJEsd,GAAkB,mBAGtB1c,GAJA,gCADIoe,kCADAC,2BAM4B3B,GAC9Btd,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClBhH,EAAG8gB,WADL9gB,EAAA8gB,eAOF7gB,MAAA6gB,UAAA,WACE,IAAA,GAAIlf,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAIH+Z,GAAAA,aACAA,EAvBEF,4BAwBFE,EAvBEH,mCAwBFG,EAvBF,gCA2BI,KAAA,GADFC,MACM5J,EAAAA,EAAAA,EAAQpX,EAAA2gB,UAAZ/d,SAAAoE,EAAA,CAEE,IAAA,GADFoQ,IAAQ2G,EACH/d,EAAG2gB,EAAAA,EAAAA,EAAaM,SAAWD,EAM1B5J,GAAAA,EAAAA,UAAApQ,GAAAia,SAAAD,EAAAjD,GAAAkD,SACAjhB,EAAA2gB,UAAA3Z,GAAAkV,MAAA8E,EAAAjD,GAAA7B,MACHlc,EAAA2gB,UAAA3Z,GAAAjD,MAAAsB,IAAA2b,EAAAjD,GAAAha,MAAAsB,IACFrF,EAAA2gB,UAAA3Z,GAAAiZ,SAAA5a,IAAA2b,EAAAjD,GAAAkC,SAAA5a,IALGrF,EAAG2gB,UAAU3Z,GAAGhD,MAAMqB,IAAM2b,EAAajD,GAAG/Z,MAAMqB,IAOnDrF,EAACoX,UAAOpQ,GAAAoZ,SAAA/a,IAAA2b,EAAAjD,GAAAqC,SAAA/a,GAAA,CACT2b,GAAAA,CACD,OA9BL5J,GA6BM4J,EAAara,KAAK3G,EAAG2gB,UAAU3Z,IAInChH,EAAG2gB,UAAYK,OAuGlBjgB,UAAU,wBAAyB,WAClC,OACEuB,OAAO,EACPC,kBACE6B,KAAM,SAERhF,WAAY,mBACZiC,aAAc,OACdlC,YAAa;YC1KjBF,SAAQO,OAAO,SAASJ,WAAW,wBAAnCH,WAAQO,UAAR,cAAmC,cAIjC,SAAA8B,EAAAM,EAAA0V,EAAA/V,GAEA,GAAgB,MAAbtB,KAAKmE,KAAR,CAGApE,GAAGkhB,GAAAA,IAAHlhB,GAAGkhB,oBAQDtf,KAAAA,GADFY,IAJsB,8BAClB2e,mBAAwB,mCAI1Bvf,EAAQ6O,EAAAA,EAARjO,EAAaA,SAAbwE,EACE1F,EAAAA,KAASkB,EAAAwE,GAAW,KAAA,aAAA,WAClBhH,EAAGohB,WADLphB,EAAAohB,mBAOFnhB,MAAAmhB,cAAYpa,WACV,IAAA,GAAIpF,GAAAA,EAAAA,EAAAA,EAAQmS,SAASvR,EACnB,IAAAZ,EAAAmS,SAAAvR,EAAAwE,IACD,MAEHhH,GAAGkhB,oBAGH,IAAGG,GAAAA,EAAgBA,KApBO,kCAoBkB,SAAArhB,EAAAoE,KAAAiB,GAC1C,IAAAgc,GAAgBzf,EAAa0f,OAAAA,EAG3B,IAAA,GAHEC,GAAY3f,EAAQmD,KAtBN,8BAsB6B,eAAgB/E,EAAGoE,KAAKkH,gBAGjEkW,EAAID,EAAAA,EAAAA,EAAR3e,SAAAoE,EAAA,CACA,GAAGwa,GAAEC,EAAWrd,EAAhB,IAAGod,EAAEC,MAAQzhB,EAAGoE,KAAKsd,KAAKrc,IAAMmc,EAAEG,YAAc3hB,EAAGoE,KAAKwd,WAAY,CAGlE,GAAIlC,GAAS9d,EAAQmD,KA5BzBoc,mBA4B+C,KAAMK,EAAEK,aAA/CnC,EAAS9d,EAAQmD,KA5BzBoc,mBA4B+C,KAAMK,EAAEK,YAGjDC,GAAAA,kBAASC,MACTzW,MAAAA,EAAAA,YACA4Q,eAAMsF,EAAAQ,mBACNN,KAAMngB,EAAAA,SAAAA,IAAY0gB,IAClBhC,KAAAA,EAAYiC,UALYV,EAAAW,YAMxBpe,SAAOuT,EAAAA,eACP8I,MAAAA,EAAYgC,gBAPY5C,EAAA,IAQxBxb,SAAOsT,EAAAA,eARTtT,MAAAsT,EAAA2B,gBAAAyG,EAAA,aAmBNnd,UAAAA,4BAAkB,WAChB6B,OADgB9B,OAFb,EAKLlD,kBACAiC,KAAAA,SANFjC,WAAA,uBA5DFiC,aAAA,OAmEIlC,YAAa;YCnEjBF,SAAQO,OAAO,SAASJ,WAAW,YAClC,SAAS,UAAU,UAAU,cAAc,QAAQ,OAAO,mBAAmB,eAAe,eAAe,YAAY,SAAS,cAAc,WAAW,aAAa,aADvKH,SAAQO,EAAO2I,EAAS/I,EAAAA,EAAWoB,EAClCoJ,EAAA7J,EAAmBiI,EAAUrG,EAAc9B,EAAQ0P,EAAO+H,EAAAhW,EAAmBE,EAA9E1B,GAkNM,QAAI8B,KACFA,GAAAA,GAAQ6O,EAAKxN,YACbof,SAAAA,QAAYC,EAAZ,SAAA3S,EAAAjJ,GACDiJ,EAAAtK,IAAA2O,EAAA5P,KAAAme,eAJHvO,EAAA7D,QAAAR,EAAA/L,QAuBF,QAASmQ,KAkBL9M,GAAAA,IAAAA,CAOK,OANLkB,SAAAA,QAAQzI,EAAiBmT,YAAiBmB,EAAO5P,aAAjD,SAAA2O,EAAA9P,GACG+Q,EAAO5P,SAAK8R,KAhBbsM,GAAe,MAmBbA,GAGK7gB,EAAAoS,YAAAnK,EAAAmK,WAGN,QAPDF,KASE,GAAAE,IAAGC,CAEF,GADCyO,EAAAA,KAAAA,EAAAA,WAAAA,EAAAA,aACD,MAAAzO,EAAA5P,KACF,MAGF6C,KAlBDkB,EAAQzI,SAAS0I,MAAQ,eAAiB4L,EAAO5P,KAAKR,KAoBtD8e,UAAAA,EAAAA,KAAAA,aAEH,UAAA1O,EAAA5P,KAAAiC,SAlBW2N,EAAO5P,KAAKoW,KAA0B,OAAnBxG,EAAO5P,KAAKoW,IAuBvCxG,EAAO2O,KAAPnI,IAAA,MAHKkI,EAAAA,KAAYlI,IAAA,MAOVoI,EAAAA,KAAPL,aAAA,GACDE,IAIAI,KAGC7O,KAIAA,QAAAA,KACAA,GAAAA,GAAAsD,EAAgBwL,YAAhB9O,EAAA5P,KAFF6a,GAIQjL,cAAY3N,IAClB2N,EAAO+O,YAAP,IAIgB,GAAhB/O,EAAOgP,MAAP,GAAgB/D,EAAhBgE,OAAAjP,EAAA5P,KAAAkH,eAAA,IADG0I,EAGA4O,aAAUA,GAIb5O,EAAOgP,KAAPzD,QADGvL,EAGAkP,SAAA,GAGN,GAAAlP,EAAA5P,KAAAwX,SAvBG5H,EAAOmP,SAAU,GA2BFjN,IAAflC,EAAGA,KAAO5P,QAAkC4P,GAAzCA,EAAA5P,KAAmC5D,QAAuC,KAAjCwT,EAAYkC,KAAlB0F,QAAuC,KAAA5H,EAAA5P,KAAAwX,QAAA,KAAA5H,EAAA5P,KAAAwX,QAC3E5H,EAAAA,aAAY/Q,EACb+Q,EAAAgP,OAAA,YAEJ,MAAAhP,EAAA5P,KAAAiC,UAvBG2N,EAAO+O,QAAS,EAyBpB/O,EAAS/M,OAAAA,OAEA7C,EAAK8C,WAvBV8M,EAAOgP,OAAS,UA0BhBhP,EAAY9M,YACb8M,EAAAgP,OAAA,WAEEhP,EAAAmP,QACDnP,EAAO5P,OAAK8C,QArBZ8M,EAAOgP,OAAS,QA4BnB,QAAAH,KAvBK7O,EAAO5P,KAAKnB,UAyBlB+Q,EAASoP,KAATlN,aAAqB1V,IAAAA,EAAAwT,EAAA5P,KAAA8R,YAAAmN,UACftb,EAAAA,KAASjI,SAAW6H,EAAAA,EAAxBvD,KAAA8R,YAAAmN,QAAAngB,QAAA,UAAA,IAAAA,QAAA,QAAA,IAAAA,QAAA,aAAA,KAnBF,QAAS+D,KAEP+M,EAAO5P,KAAK8C,UAAY8M,EAAO5P,KAAK+C,MAED,MAAhC6M,EAAO5P,KAAKiD,kBAA4B2M,EAAO5P,KAAKiD,iBAAiBzE,OAAS,IAC/EoR,EAAO5P,KAAK8C,UAAY3F,EAAY6F,WAAW4M,EAAO5P,KAAKiD,iBAAkB2M,EAAO5P,KAAK8C,YAG9D,MAA1B8M,EAAO5P,KAAKkD,YAAsB0M,EAAO5P,KAAKkD,WAAW1E,OAAS,IACnEoR,EAAO5P,KAAK8C,UAAY3F,EAAY6F,WAAW4M,EAAO5P,KAAKkD,WAAY0M,EAAO5P,KAAK8C,YAIvF,QAASqS,GAAekB,IAKxB,QAAS2I,KACP,GAAIrb,GAASjI,EAAW6H,eACxBqM,GAAOjM,OAASA,EAnVlBwH,EAAO6E,kBAAkBpM,EAAauH,QAEtCpH,EAAQiC,SAAS,EAAG,GAEpB4J,EAAO7D,QAAU,KAEjB6D,EAAO5P,KAAOrE,EAAiB2U,WAAW1M,EAAahB,GACvD,cAAGgN,GAAgBA,OACjBA,EAAOyD,SAAWjX,EAAMwT,EAAO5P,KAAK8R,aAGtClC,EAAO5P,KAAKkf,SAAW,KACvBtP,EAAO5P,KAAKmb,MAAQ,KACpBvL,EAAOgP,OAAS,KAEhBhP,EAAOuP,eAAiB,WACtB,GAAAvP,EAAGA,KAAAwP,YACD,MAAOxP,GAAO5P,KAAKof,WAEhB,IAAGxP,EAAOyD,UAKU1S,SAAvBiP,EAAIiL,SAAWrd,MACfD,EAAGsd,YACDrd,EAAAmS,SAAOpS,EAAaue,SAAUjB,SAAA,CAP7B,GAAAA,GAUGjL,EAAY/Q,KAAAA,EAClBrB,SAAQmS,QAASC,KAAO5P,EAAKnB,KAAZoC,GALjB,IAAG4Z,GAAYA,EAASrc,OAAS,GAAKqc,EAAS,GAAGwE,cAAgB,EAOlE,MAAIxE,GAAWrd,UAAaoS,EAAY/Q,GAAAA,cAAWgc,EAAiBjL,GAAAA,wBAGnE,IAAAA,EAAA5P,KAAAnB,UACFrB,EAAAmS,SAAAC,EAAA5P,KAAAnB,SAAA,WAAA,CArBH,GAAAgc,GAAArd,EAAAmD,KAAAiP,EAAA5P,KAAAnB,SAAA,UAAA,KAAA+Q,EAAA5P,KAAAiB,GAkBI,IAAG4Z,GAAYA,EAASrc,OAAS,GAAKqc,EAAS,GAAGwE,cAAgB,EAOtEzP,MAAO0P,GAAkBxD,UAAAjB,EAAW,GAAAwE,cAAAxE,EAAA,GAAA0E,oBAGlC,MAAGhiB,IAHLqS,EAAO0P,gBAAkB,WAWrB,GAAA/hB,EAAGmD,YACDlD,EAAAmS,SAFF,oBAGEC,EAAA5P,KAAOzC,aAAaue,EAAAA,CAb1B,GAAApb,GAAAlD,EAAAmD,KAUI,kBAVJ,eAAAiP,EAAA5P,KAAAH,aAmBA+P,IAAO4P,GAAY9e,EAAAlC,OAAiB,GAAAkC,EAAA,GAAA+e,OAAA,EAApC,MAAAliB,GAAAue,UAAApb,EAAA,GAAA+e,QAAAC,cAHE,MAAO,IAWL9P,EAAA4P,UAAOpiB,SAAWuiB,GACnB/P,EAAAgP,OAAAA,GAGFhP,EARDgQ,YAAA,WAUAhQ,GAAAA,GAAOiQ,EAAeA,cACpB,OAAA9jB,IAAgBL,EAAAA,MAAWyK,EAAAA,KAAXgV,MACbvL,EAAe+P,kBAAA/P,EAAAjM,OAAA5H,GAAAK,MAAAwT,EAAA5P,KAAAmb,OAGd,GAGDvL,EAAAiQ,aAAA,WACF,GAAA9jB,GAAAL,EAAAyK,iBAPD,IAAGyJ,EAAOjM,UASV5H,GAAAA,IAAA6T,GAAAjM,QAAA,CAXF,GAAAmc,GAAArc,OAAAC,KAAAkM,EAAAjM,OAKSmc,GAActhB,SAShBuhB,EAAAA,EAAmB,IAKtB,MAAGlF,IAGAjL,EAFDmQ,iBAGiBC,WACfzf,GAAAA,GAAS2S,EAAAwL,YAAT9O,EAAA5P,MACDO,EAAA,EAyBH,OAvBAsa,IAAGA,UAAYA,IAAyB,GAAVA,EAAUoF,SACtCpF,GAAUrc,gBAAQqc,KAChB,GAAAta,EAAUyf,aACXzf,EAAA,qBAE2B,GAAzBsa,EAASqF,eACV3f,EAAAA,qBAIDsa,GAAA,aAAAA,KACFta,EAAA/B,SACF+B,GAAA,MAP4B,GAAtBsa,EAASqF,UAWXC,GAAP,WAEE,GAAIC,EAAJF,YATM3f,GAAU,mBAcXsa,GAPPjL,EAAOuQ,YAAc,WAWb,GAAAE,GAAIC,EACJF,EAAGE,CAED,IAAA1Q,EAAA2Q,iBAAc,CACd,GAAA1F,GAAGjL,EAAY1I,YAAgB0I,EAAA5P,KAE9B,IAAA6a,GAAA,UAAAA,IAAA,GAAAA,EAAAoF,QATL,GAAGpF,GAAY,UAAYA,IAAY,aAAeA,GAAU,CAW5DwF,EAAGvT,EAAWwT,SAEb,IAAAA,GAAA9iB,EAAAmD,KAAA,wBAAA,QAAAka,EAAA2F,OACF,IAAAF,GAAAA,EAAA9hB,OAAA,GAAA,GAAA8hB,EAAA,GAAAG,MAAA,CAfL,GAkBK3T,GAAG+N,QACHA,GAASqF,KAAAA,iBACPrF,EAAS6F,QAAAA,EAAgB1gB,KAAAkH,gBAI1B4F,IAAOwT,GAAA,KACRF,EAAAE,EAAA,GAAAxT,UAOF,IAAA+N,GAAA,UAAAA,IAAA,kBAAAA,IAAA,aAAAA,IAAA,gBAAAA,GACF,MAAA,IAAAA,EAAAqF,UACFrF,EAAA6F,eAbc,qBAAuB7F,EAAS6F,eAkB1C,mBA9CP7F,EAAAmF,aAmCe,qBAgBf,eAKA,MAAAK,IAAAD,EAZW,aAAeC,EAAY,gBAAkBD,EAAY,WAmB/DxQ,IAKDA,EAAAA,eAAc/U,WACf,MAAA2C,GAAAmS,SAAAC,EAAA5P,KAAAnB,SAAA,YACDmgB,EAAAA,SAAAA,0BAGFpP,EAAA+Q,aAAsB,WACpBnjB,EAAI0gB,KAAAA,EAAe0C,KAAAA,SAAnB,UAAA,KAAA1jB,GACArC,EAAQuH,KAAAA,wBAAiB,KAAcE,IAGpCsN,EAAAjO,aAAA,WAEJ,UAAAiO,EAAA5P,KAAA8R,WAhBGrW,EAAU2I,OAAO,IAAKzI,EAAiBklB,WAAWjR,EAAO5P,QAoB3D4P,IACAA,EAAO5P,KAAOnF,QAAdimB,KAAAlR,EAAA5P,OAEAgf,KAYC,WAhBDA,IAkBApP,EAAIpK,YAAJoK,EAAqB5P,KACnBwF,EAAK6G,KAAK8I,IAEX,IAAA8I,IAAA,CAEDpjB,SAAIojB,QAAWtiB,EAAA8S,YAAAmB,EAAAmR,aAAA,SAAApS,EAAA9P,GACb4Q,EAAAA,SAAAA,KACDjS,EAAA6O,KAAAxN,EAAA8P,EAAAwG,EAAA1F,GACFwO,GAAA,KAIKG,EAAAA,aACJvjB,EAAAwR,KAAgB1Q,EAAiB8S,GAC/BwP,GAAIzgB,GADNgI,EAAAmK,aAZEnK,EAAK6G,KAAK8I,EAAgB1F,GAkB5BwO,GAAQG,GAGVH,GACExO;YCrPJ5U,SAAQO,OAAO,SAASJ,WAAW,cAChC,SAAS,UAAU,aADtBH,SAAQO,EAAO2I,EAAS/I,GAKtBM,SAASC,KAAKC,UAAY,eAC1BuI,EAAQzI,SAAS0I,MAAQ,oBAEzB,IAAIgd,GAAetlB,EAAW6H,eAC9BqM,GAAOqR,WAAapjB,KAAKC,UAAUkjB,EAAc,KAAM,GAEvDpR,EAAO1G,KAAO,WACZI,aAAa4X,QAAQ,aAAcC,SAASC,gBAAgBxR,EAAOqR;YCZvEpmB,SAAQO,OAAO,SAASJ,WAAW,cAAnCH,eAAA8B,UAAA,kBAAA,WAOE,OACE5B,YAAa;YCRjBF,SAAQO,OAAO,SAASJ,WAAW,WAChC,SAAS,YAAY,eAAe,SAAS,eAAe,aAD/DH,SAAQO,EAAOK,EAAST,EAAWmQ,EAChC9N,EAAS3B,GAIR,IACE,GAAI2lB,MACAC,IACDxlB,KAAM,SAAU0D,KAAK,SAAU+hB,KAAM,mBAIpCC,KAAAA,SAAe1lB,KAAM,SAAS0D,KAAK,WAAnCgiB,GAAe1lB,KAAM,QAAS0D,KAAK,SAEnCiiB,IAQJ7R,KAAO8R,SAAWliB,KAAA,SAAW+hB,KAAA,mBAC3BzlB,KAAOL,SAAUK,KAAO8V,SAAQ2P,KAAA,UADlCC,EAKErW,GAAO5N,OALTqS,EAAO8R,SAAW,WAYlB9R,MAA6B,IAAtB+R,EAAW7lB,OAAA8V,QAAW,YAR7BhC,EAAOY,UAAY,WAYnBZ,MAAOgS,GAAaC,iBACXC,EAASC,YADlB,MAAA5W,EAAA6W,WARgC,IAAxB7W,EAAO6W,UAAU7d,MAYlB8d,EAAPN,YARA/R,EAAO+R,SAAW,WAYd,MAAmBjmB,OAAfwmB,EAAAA,aAGAtS,EAAAgS,WAAA,WACAhS,MAAoBlU,UAApBkU,SAAOtM,UAAP,aAA+BC,SAAX4e,UAGtBvS,EAAAqS,WAAKC,WACHA,IACD,GAAAE,GAAA,KATCF,EAAexmB,EAAWyK,iBAY3BgF,KACDiX,EAAOf,YAAPa,IAAAtS,GAAAtM,aAGA8e,EAAOf,WAAP3lB,EAAA6H,iBAIAie,IAAmB5R,GAAWsS,aAC9BV,EAAmBU,OAKb,MARH/W,EAQG1P,aAA4C4mB,IAAxBlX,EAAAkX,YAAiBlX,IAC3CiX,EAAOd,EAGP,MAAOA,EAAAA,WAAP,IAAAnW,EAAA6W,UAAA7d,IACDie,EAAAf,EAEGvlB,GAAJ,QAAAomB,GACArnB,EAAQuH,EACNof,EAAac,KAAb,SAAAJ,EACAV,EAAW1lB,KAAK0C,EACd0jB,IAAc1jB,GAAd8E,aACEyG,EAAMuY,MAAW1S,EAAjBtM,WAAA4e,KAKAnY,GADC,eAAAA,EAAAjO,QAAkCqP,EAAWkX,YAC9CtY,EAOR,IAAAjO,GAAUL,EAAAK,IAFR,OAGA8T,SAAO2S,QAAWC,EAAGC,SAArB1Y,EAAA0C,SACQiW,GAARJ,SACDxmB,GAAA,GAAAA,EAAA0C,OAzDH,GAAAuL,EAAAjO,KAAA0C,SA4DQuL,EAAAuY,SAAA,UAGTvY,EAAAjO,MAAAiO,EAAAjO,KAAA0C,OAAA,GAAA,GAAA1C,EAAA8V,QAAA,IAAA7H,EAAAjO,QAGsB,UAAhBiO,EAAAjO,MAA2B,WAAAA,IAC7BiO,EAAAuY,SAAA,aAfQF,EAET,MAAMI,GACJ5S,EAAO2S,SAAWC,EAAGC,QACrBnkB,QAAQokB,MAAMF,KAIpB,MAAMA,GACJ5S,EAAO2S,SAAWC,EAAGC,QACrBnkB,QAAQokB,MAAMF,OAInB7lB,UAAU,eAAgB,WACzB,OACE5B,YAAa;YC9GjBF,SAAQO,OAAO,SAASJ,WAAW,aAChC,SAAS,UAAU,SAAS,WAAW,eAAe,UAAU,WAAW,SAD9EH,SAAQO,EAAO2I,EAAS/I,EAAWkC,EAAnCK,EACYolB,EAAUllB,EAAS0N,GAkE3ByX,QAAAA,KACAhT,EAAmB,2CAAnBrS,EAAAue,UAAA,KAAA,KAAAve,EAAAue,UAAA,KAAA,QAAAve,EAAAue,UAAA,MACDlM,EAAAY,WAAA,EAGCtT,QAAAA,GACEmZ,GACEnZ,EACE0S,WACD,MAAAA,EAAAiT,aAJLjT,EAAAiT,YAAAtgB,KAAA8T,KAWI,QAAGzG,GAAOkT,GACRlT,EACD,WAJL,MAAAA,EAAAkT,oBAMDlT,EAAAkT,mBAAAvgB,KAAA8T,KAlFD/a,SAASC,KAAKC,UAAY,eAC1BuI,EAAQzI,SAAS0I,MAAQ,oBAEzB4L,EAAOmT,eAAgB,EACvBnT,EAAOY,UAAYjT,EAAaskB,iBAAmBtkB,EAAaoS,WAChEC,EAAOkT,sBACPlT,EAAOoT,YAAc7X,EAAO6X,WAE5B,IACIC,GAAkB9X,EAAO+X,iBAAiB/e,GAC3C8e,OAAHA,IACEA,EAHe,IAMjBrT,EAAOkS,SAAWmB,EAND,IAOjBrT,EAAGA,SACDA,EAAOiT,aAAe,mBAIvBjT,EAAAiT,aAAA,kBAAAjT,EAAAkS,UAGClS,EAAAA,YAAkBzL,SAAlBA,GACAyL,EAAOY,SAAPrM,EACAyL,EAAOuT,WAAP,EACA1lB,EAAAA,eAAAA,IAGAmS,EAAIwT,qBACJ,IAAGA,GAAAA,aAAwBA,QAAAA,iBACVlhB,OAAfrF,GAAAumB,EAAAxR,QAAAzN,KAAA,GACDtH,eAAAqF,WAAA,aAED3E,EAAaukB,QACbvkB,EAAa8O,SAAKuW,EAbpBrlB,EAAA8O,KAAAuW,EAAAS,IAiBEzT,EAAAA,iBAAsB,WACtBzE,EAAO6W,aAAY,uCACnB7W,EAAOkX,UAAP,KACA9kB,EAAAA,YAAA,KACAV,EAAAA,QACAyM,eAAaga,QACbha,aAAK6Z,QACLjmB,KAAAA,eACE4kB,EAAAA,WACAA,SAASyB,KAAO,GAFlBzB,SAAAyB,QAAA,MAOA3T,EAAAA,aAAOkT,WACPjmB,EAAAA,sBACAY,eAAAA,WAAAA,aACAF,IACAA,EAAaukB,QACbvkB,EAAa8O,SAAKuW,EAAAA,UAAsBS,IAN1C9lB,EAAA8O,KAAAuW,EAAAS,IAmCIlY,EAAAA,aAAOqY,WAFT/lB,IA7Ee,IAiFb0N,EAAOkB,WACPlB,EAAGA,aAAO+X,EAAPpB,UAEDvkB,EAAAA,OACD4N,EAAA+X,iBAAA/X,QAAAA,EAAA6W,UAAA7W,SACDyE,EAAOiT,QAGRtlB,EAAA8O,KAAAuW,EAAAS,IAHCzT,EAAOiT,aAMXjT,iBACKA,kBAAmB6T,EAAAA,YAMlBd,EAAAA,aAAA,WAnGW,IAkGb/S,EAAAkS,WAGDlS,EAAAiT,aATH,kBAAAjT,EAAAkS,SAzGF,oCA+GMvkB,EAAa8O,KAAKmD,EAAU,WAC1BmT,EAAQnT;cChHhB,WAIA,QAASkU,GAAY9f,EAAanI,EAAUyB,EAASymB,EAAcne,GAmEhE,QAxCDoe,KA2CKhoB,EAAG2P,KADRoY,EAASC,eAAiBhoB,EAAA2P,KAAAsY,KAAA,SAAAlgB,GAGpB/H,EAAAkoB,UAFDloB,EAEY+H,OAxEnB,GAAA/H,GAAS8nB,IAKP9nB,GAAGmoB,WAAa,GAFhBnoB,EAAAooB,gBAAA,EAEApoB,EAAGmoB,KAAAA,KAAH,WACGC,EAAAA,QAICpoB,EAAG2P,IAAM/F,EAAKuK,QAAQnM,EAAaqgB,OAFvCze,OAIG3J,KAAAqoB,OAAA,WACFhnB,EALD,WASIzB,EAAU2I,OAAO,QAASxI,EAAG2P,IAAItK,OAClCpF,KAFDsoB,gBAAA,SAAAC,GAGDxoB,EAJDmoB,WAAAnoB,EAAAooB,gBAAAI,EAQExoB,EAAGooB,gBAAkB,GAArBpoB,EAAAA,WAAGooB,KACJpoB,EAHDyoB,kBAAA,WAMAzoB,GAAA,MAAGyoB,EAAAA,WAAoB,CAInBzoB,EAAG0oB,aAFL,KAAA,GAAAC,KAAA3oB,GAAAkoB,UACA,IAAGloB,GAAG0oB,KAAc1oB,GAApBkoB,UAA0BS,GACxB3oB,EAAG0oB,WAAa/hB,MAChBgiB,IAAQA,EACN/kB,KAAIzD,EACFH,KAAG0oB,EAAAA,UAAgBC,GAAAxoB,KAOxB,IAAA,GADEyoB,MACF5hB,EAAA,EAAAA,EAAAhH,EAAA0oB,WAAA9lB,SAAAoE,EAAA,CAED,GAAI4hB,GAAAA,EAAJF,WAAA1hB,EACA,IAAAhH,EAAImE,QAAQ6C,EAAAA,OAAK0hB,OAAW9lB,EAAAA,CAIxB,GAAIyZ,GAAIrc,EAAGmE,OAAO0kB,aAFpB,IAAAC,EAAIA,KAAS9oB,cAAbgW,QAAAqG,KAAA,KACGrc,EAAAwL,KAAaxL,OACd8oB,EAAQ9oB,KAAGmE,MAAO0kB,cAAlB7S,QAAAqG,KAAA,GAEE,SAQJuM,GAFCA,EAAAjiB,KAAAmiB,GAEDF,EAAQjiB,QAAR3G,EAAAmoB,WAGE,MAKJ,MAHCnoB,GAAAooB,gBAAAQ,EAAAhmB,OAGMgmB,GAtEX3pB,QAACO,OAAY,SAAAJ,WAAA,mBAAA,eAAA,YAAA,WAAA,gBAAA,OAAA0oB;cCAb,WAIA,QAASiB,GAAQlpB,EAAWmI,EAAc+f,EAAejoB,GAAzD,GAAAE,GAAS+oB,IACP/oB,GAAA2oB,IAAA3gB,EAAA2gB,IAKAK,WACAC,EAAAA,cAAAA,EAAAA,KAAAA,KAAAA,SAAAA,GAEAjpB,EAAAkpB,aAEOnhB,EAFEihB,UASR,WAGCjB,EAAckB,WAAWjpB,EAAG2oB,KAAKV,KAAK,SAASc,GAA/ChB,EAAAA,QADFgB,EACgBE,UAUhBhpB,KAAKkpB,KAAO,SAAShpB,EAAWI,GAE9B,GAAIF,GAAeP,EAAWQ,YAAYH,EAAWI,EAAMC,MAE3DV,GAAWW,UAAXX,EAEEO,EAGFL,GAEAH,EAAAA,OAAUK,EAAKyH,gBAElB9H,EAAAK,KAAA,UAAAG,IAhDDpB,QAACO,OAAY,SAAAJ,WAAA,eAAA,YAAA,eAAA,gBAAA2pB;cCAb,WAIA,QAASK,GAAQvpB,EAAWC,EAAYioB,EAAe/f,EAAcuH,GAWjEvP,QAAG+H,KACJ,GALDshB,GAAArpB,EAAAspB,SASKD,IAFLtB,EAASiB,cAAiBK,EAAAV,KAAAV,KAAA,SAAAlgB,GAErBshB,EAAAA,aADCA,EACKthB,OAUV,QAAAkhB,KAGC,GAAII,GAAOrpB,EAAGspB,SADhBD,IACEtB,EAAcuB,WAAdD,EAAAV,KAAAV,KAAA,SAAAc,GAEEhB,EAAAA,QADCsB,EACaJ,OA+ClB,QAASM,GAAYC,GAArB9mB,QAAAgD,IAAS6jB,GA9EX,GAAAvpB,GAASopB,IAKPppB,GAAGypB,KAAOzhB,EAAayhB,KAEvB1B,EAAc2B,QAAQzB,KAAK,SAASoB,GAFpCrpB,IAIEipB,IADAD,EAAAA,OAAAA,EAAAA,kBAkCF/oB,KAAK0pB,YAAc,WAAnB5B,EAAK4B,YAAc3pB,EAAA+oB,SAAWd,KAAAgB,GAAAW,MAAAL,IAI9BtpB,KAAKqpB,QAAU,WAAf,MAAKA,GAAUA,WAIfrpB,KAAKqN,KAAO,SAASnN,EAAWI,GAAhCA,EAAK+M,YAAO,GAASnN,OAAT0pB,UACVtpB,EAAM4I,UAAchJ,EAAY0pB,GAAhC5B,KAAAe,GAAAY,MAAAL,GACAxB,EAAAA,aAActnB,MAIhBR,KAAK6pB,aAAe,SAAS3pB,GAA7BA,IAAK2pB,GAALZ,eACK/oB,EAAAA,OAAAA,GAAgB+oB,SACjBlpB,EAAA+H,OAAOA,GAAO5H,OAAWoP,EAAzB2Z,aAAiC/oB,GAAAoP,QAI7BvP,EAAG+H,OAAO5H,GAAW4pB,QAAzB/pB,EAAA+H,OAAOA,GAAO5H,MAAW4pB,EAAzBb,aAAgC/oB,GAAA4pB,OAI5B/pB,EAAG+H,OAAO5H,GAAW6pB,QAAzBhqB,EAAA+H,OAAOA,GAAO5H,MAAW6pB,EAAzBd,aAAgC/oB,GAAA6pB,QAK9BhqB,EAAG+H,OAAO5H,GAAWoP,SAAzBvP,EAAA+H,OAAOA,GAAO5H,OAAWoP,EAAQkX,YAAAlX,QAIjCvP,EAAGiqB,aAAe9pB,GAOpBF,KAAKiqB,cAAgB,WAArBnC,EAAKmC,cAAgBlqB,EAAAkpB,eAIrBjpB,KAAKkqB,cAAgB,WAArB,MAAAnqB,GAAKmqB,SAAAA,EAALpB,QAAqBqB,UACbrB,EAAAA,QAAW/oB,UAIf,IAIJC,KAAAoqB,mBAAA,WACE,MAAAnmB,GAAOA,KAAEomB,EAAKtqB,eAGhBC,KAAAsqB,aAAA,WACE,MAAArmB,GAAOA,KAAEomB,EAAKtqB,SAGhBC,KAAAkpB,KAAA,SAAYhpB,EAASA,GAEnB,GAAAE,GAAIA,EAAeP,YAAWQ,EAAXC,EAAkCA,MAErDT,GAAAA,UACEO,EAIFL,EATFO,GAYAP,EAAA+H,OAAAjI,EAAe6H,iBAAf1H,KAAKuqB,QAAU,WAIfxqB,EAAAwqB,WAAAxqB,EAAGyqB,YAAc,SAAStqB,GAI1BH,EAAG0qB,cAAHvqB,GAGCH,EAHD0qB,iBAAA,WACE,GAAIC,GAAUzmB,EAAE4D,KAAK9H,EAAG+H,QAAQmH,OAAOhL,EAAE4D,KAAK9H,EAAGkpB,cAInDlpB,OAAG4qB,GAAAA,KAAAA,EAAH9mB,QAAuB,IAGrB9D,EAAAA,kBAAYF,SAAW6H,GACxB7H,EAJDmG,kBAAA9F,MAEEH,EAAG6qB,cAAgB,KAIrB7qB,EAAG8qB,OAAAA,EAAenjB,iBAAlB3H,EAAG8qB,aAAe,SAAS3qB,GAI3BH,EAAG+qB,eAAAA,GAGF/qB,EAHD+qB,mBAAA,SAAA5qB,GAKD4nB,EAAA1Y,YAAAlP,EAAAH,EAAAkpB,aAAA/oB,IAAA8nB,KAAAe,GAnJDhpB,EAAAgrB,eAAA,MAAA/rB,QAACO,OAAY,SAAAJ,WAAA,eAAA,YAAA,aAAA,gBAAA,eAAA,SAAAgqB;cCAb,WAIA,QAAS6B,GAAUlD,EAAeloB,EAAWmI,EAAclI,EAAY0B,GAAvE,GAAAxB,GAASirB,IACPjrB,GAAA2oB,IAAA3gB,EAAA2gB,IAIA3oB,EAAGG,UAAY6H,EAAa7H,UA4B1B4nB,WACEA,EAAApd,SAAU3K,EAAA2oB,IAAA3oB,EAAAG,WAAA8nB,KAAA,SAAA1nB,GACRP,GACAA,EAAAA,MAAAO,EACDP,EAHDmH,MAIK3F,EAAAgM,cAAAjN,IALPP,EAAAO,cAZF,WACEwnB,EAAAA,WAAckB,EAAWjpB,KAAzBioB,KAAiCA,SAAKc,GAElC/oB,EAAAA,QADF+oB,EACEA,UAjBNpe,EAAAA,YAAAA,WACAse,GAAAA,GAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,MAAAA,MAEAjpB,GAAGmD,UACD9C,EAIEA,EAFFP,EAAAA,OAKAD,EAAAA,KAAUK,UAAKG,IAtBnBpB,QAACO,OAAY,SAAAJ,WAAA,iBAAA,gBAAA,YAAA,eAAA,aAAA,aAAA6rB;YCAbhsB,SAAQO,OAAO,SAASJ,WAAW,cAChC,WAAW,SAAS,eAAe,YAAY,eAAe,SAAS,QAD1EH,SAAQO,EAAO0rB,EAAS9rB,EAAWS,EAChC8B,EAAW4N,EAAZ4b,GAyBI,QAAM5b,KAEFvP,EAAGorB,OAAOA,aAAUprB,EAAAuP,OAAAkX,YAAAle,KAClB4iB,EAAIE,IAAAA,EAAAA,OAAAA,YAA0BlV,IAAM,gBAApC8R,KAAA,SAAAmD,GACA,GAAAA,GAAGC,EAAAA,KAAezoB,CAChB,GAAI0oB,GAAeD,EAAAA,KAAAA,MAAA,OACnB,IAAAA,EAAgBzoB,OAAS,CACvB5C,GAAGurB,GAAaF,EAAMC,GAAtBnV,MAAA,IACDmV,GAAA1oB,OAAA,IACF5C,EAAAurB,WAAA,IAAAD,EAAA,QA9BT,GAAItrB,GAAKC,IAETD,GAAGwrB,SAAWjc,EAAOkc,cACrBlc,EAAOkB,OACP9O,EAAa8O,KAET,SAAAgK,KAFJ,WAKInZ,MAKJtB,EAAG0rB,OAAAA,EACH1rB,EAAG2rB,eAAelF,EAAPL,UACXpmB,EAAGurB,cAAHhc,EAAAkX,YACAmF,EAAAA,KAAAA,MAAAA,EAAAA,YADA5rB,EAAGurB,WAAa,GAGhBK,IAiBA5rB,EAAA6rB,eAAA,WAGGC,MAAAA,GAAerF,aAAlBzmB,EAAA8rB,aAAA,WACE,MAAOvc,GAAO6W,WAKdpmB,EAAA+rB,eAAc3E,WAAd,MAAO7X,GAAO6X,aAKZpnB,EAAAgsB,aAAOrqB,WADT,MAAAA,GAGKoS,WACHpS,EAAAue,UAAA,OAAO,IAIXlgB,EAAAisB,aAAA,SAAA/F,GACE3W,EAAO0c,aAAa/F,GAInBgG,EAAAA,MAAH,GAGGlsB,EAAAksB,YAAA,SAAAhG,GAFGlmB,EAAGwrB,UAIJxjB,EAAAA,aAAauH,MAGd2b,EAAA3b,QAHFvH,EAKKuH,OAAA2W,EAAA3W,OACHA,EAAO2c,aAAYhG,GACpBgF,EAAAvD,UAZHpY,EAAA2c,YAAAhG,GAiBGiG,EAAAA,MAAH,EACE5c,KADFvP,EAAAmsB,YAAA,SAAAhe,GAOHpN,EA3FDorB,YA2FWhe,GACTnO,EAAOwrB,SAAArd,EACLhP,EAAAA,KAAAA,MAFH4B,UAAU,kBAAmB,WAC5B,OACE5B,YAAa,wBACbkC,aAAc;cC9FlB,WAcA,QAAS+qB,GAAejkB,EAAQrI,EAAWD,EAAU0B,EAAYE,EAAaH,GAK5ErB,KAAKosB,YAAc9qB,EAAY8qB,YAE/BpsB,KAAKkoB,WAAa,GAAlBloB,KAAAqsB,eAAA,EAGsB,MAAnBrsB,KAAKssB,aAARtsB,KAAGssB,WAAKA,IAIRtsB,KAAKusB,WAAa,WAAlB,MAAKA,MAAAA,aAILvsB,KAAKwsB,eAAiB,WAAtB,MAAsB,IAAtBxsB,KAAKwsB,YAA4B,MAAXxsB,KAAAssB,WACjB,sBAIDtsB,KAAOssB,YAIXtsB,KAAAysB,iBAAA,WACK,IAAHzsB,KAAGssB,YAAyB,MAAzBtsB,KAAyBssB,aAC1BtsB,KAAAssB,WAAAtsB,KAAkBwsB,kBAEpB5sB,EAAAA,KAAUK,kBAAKD,KAAoBssB,aA5CvCttB,QAAAO,OAAA,SAAAuB,UAAA,uBAAA,WAGE,OADF9B,SACEsD,oBAEEA,YAAAA,UAFK,aAAA,YAAA,cAAA,eAAA,WAAA6pB,GAILhtB,aAAY,cACZiC,YAAAA;cCTJ,WAcC,QAXDsrB,GAAAxkB,EAAA7G,EAAA0G,EAAAnI,EAAA0B,EAAAgO,EAAA5N,EAAAC,GAaA,GAAA5B,GAAS2sB,IAEP3sB,GAAA4sB,WAAA,KAGA5sB,EAAGmoB,WAAa,GADhBnoB,EAAAA,eAAgB,EAChBA,EAAAA,QAAGmoB,KACHnoB,EAAAA,SAAGssB,EACHtsB,EAAAA,SAAA,GACAA,EAAAA,QAAA,MACAA,EAAAA,UAAAA,EAAA6sB,QAEA7sB,IAAAA,GAAAmX,OAAkB0V,aAAlB3rB,QAAA,YAGG8G,GAAa8kB,WADhBA,EAAIA,OAAW3V,EAAOzJ,WAEpBof,EAAAA,GAAW3V,EAAOnP,MAEnBhI,EAAA8sB,SAAAA,GACC9sB,EAAAA,aAAc8sB,CAEhB9sB,IAAAA,GAAG+sB,OAAeD,aAAlB5rB,QAAA,YAGG8G,GAAaglB,WADhBA,EAAIA,OAAW7V,EAAOzJ,WAEpBsf,EAAAA,GAAW7V,EAAOnP,MAEnBhI,EAAAgtB,SAAAA,GACChtB,EAAAA,aAAcgtB,EAEhBhtB,EAAGitB,aAGDjtB,EAAGusB,WAAa7e,aAAaxM,QAAQ,cADvC8G,EAAOukB,OACLvsB,EAAGusB,WAAa7e,EAAaxM,MAEX8G,MAAhBhI,EAAAA,aAEDA,EAAAusB,WAAA,KAIFpkB,EAAAzI,SAAA0I,MAAA,8BACDD,EAAAA,eAAiBC,WAGf,GAAGxG,EAAQmS,SAAS9Q,IAAatB,EAAaoS,aAAe/T,EAAG4sB,WAAY,CAD9E5sB,EAAGktB,aAKC,KAAA,GAHAltB,MAGIoS,EAAQxQ,EAAQ2b,QAAQta,GAAxBmP,EAAAA,EAAAA,EAAQxQ,EAAAA,SAAAoF,EAAgB/D,CAE5B,GAAAuI,GAAA4G,EAAApL,EAAA,IAAAwE,EAAIqY,OAAQ7c,EAAEoL,CACZ,GAAI5G,IACJnG,GAAGmG,EAAKqY,GACNjgB,KAAIQ,EAAO8b,UAAA1U,EAAAqY,OAAArY,EAAA2hB,aACT9nB,KAAImG,EADKyW,UAAAzW,EAAAiW,MAET7d,KAAAA,EAAMjC,eACN+f,WAAMngB,EAAAA,WACNokB,SAAMna,EAAK4hB,SACXxL,QAAAA,EAAYpW,QAEZqhB,GAAAA,WAASrhB,KAAKqhB,GAEhB7sB,EAAG4sB,UAGDS,EAAW7hB,EAAKqhB,UAAW,IAIhC,IAAA,GAAAA,KAAAQ,GAECrtB,EAAGstB,SAAS3mB,KAAKkmB,EAElB7sB,GAAA4sB,WAAA1oB,EAAAqpB,OAAAvtB,EAAA4sB,WAAA,QACD5sB,EAAG4sB,WAGD5sB,EAAGuoB,sBAIRvoB,EAtCDwsB,WAAA,WA2CG,GAHmB,MAAjBxsB,EAAG4sB,YADR5sB,EAAGwsB,iBAIA,MAAAxsB,EAAA4sB,WAEC,QAIF,KAAA,GAFCY,MAEGC,EAAgBztB,EAAG4sB,WAAWhqB,OADlC8qB,EAAIF,EACAC,EAAAA,EAAAA,EAAAA,GAAmBb,EAAvB5sB,EAAAmoB,aAAAnhB,EAAA,CACA,GAAI0mB,GAAAA,EAAAA,WAAJ1mB,EAEE,MAAA/B,EAAA2c,WAAWgL,EAAAA,UAAX3nB,EAAA2c,WAAA5hB,EAAAgtB,WAAA/nB,EAAA2c,aAKC,OAAA5hB,EAAA6sB,SAAA7sB,EAAA6sB,SAAA5nB,EAAA4nB,SAAA,CAIA,GAAA,IAAA7sB,EAAAusB,WAAA,CAEC,GAAIoB,GAAe3tB,EAAGusB,WAAWpW,MAAM,IADjB,IAAxBwX,EAAMpB,SACJoB,GAAIA,EAAe3tB,YAIlB,KAAA,GAFC2tB,IAAAA,EAEDC,EAAA,EAAAA,EAAAD,EAAA/qB,SAAAgrB,EAAD,GAAA3oB,EAAI4oB,MAAAA,EAAWjqB,KAAfkqB,WAAAjF,cAAA7S,QAAA2X,EAAAC,GAAA/E,iBAAA,EAAA,CACAgF,GAAQD,CACN,OAKD,IAAAC,EAEC,SAGHL,EAAA7mB,KAAA1B,GAEDyoB,KAIF,MAFC1tB,GAAAooB,gBAAAoF,EAAA5qB,OAEM4qB,GAERxtB,EAhDD+tB,aAAA,WAkDK/tB,EAAG8sB,UAAY9sB,EAAG+sB,eADvB/sB,aAAAslB,QAAkB,WAAWtlB,EAAA8sB,UAC3BjtB,EAAMitB,OAAH,WAAkBC,EAAAA,UACnBrf,EAAAA,aAAa4X,EAAAA,UAIdtlB,EAAAgtB,UAAAhtB,EAAAitB,eAECvf,aAAa4X,QAAQ,WAAYtlB,EAAGgtB,UADtCntB,EAAMmtB,OAAH,WAAkBC,EAAAA,UACnBvf,EAAAA,aAAa4X,EAAAA,UAId5X,aAAA4X,QAAA,aAAAtlB,EAAAusB,YAED1sB,EAAU2I,OAAO,OAAQxI,EAAGusB,YAA5B1sB,EAAAA,WAAU2I,GAGVxI,EAAG4oB,QAAU5oB,EAAGwsB,cAEjBxsB,EAnBDuoB,gBAAA,WAqBEjnB,EAAS,WAATA,EAAAA,YAAS,GAEPtB,EAAA4oB,QAAA5oB,EAAAwsB,eAIH,IAPDvpB,GAAA,kBASArB,GAAQ6O,KAAKxN,EAAU,KAAM,aAAe,WAD5CjD,EAAAktB,mBAICvrB,EAHD8O,KAAA,KAAAzQ,EAAAktB,gBA/KFP,EAAA/lB,SAAA,UAAA,WAAA,eAAA,YAAA,cAAA,SAAA,eAAA,WAAA3H,QAAAO,OAAA,SAAAuB,UAAA,4BAAA,WAGE,OADF4rB,SAAA1tB,kBACEstB,WAAO,eAELhqB,WAAAA,EACEgqB,aAAAA,QADgBptB,YAFb;cCJT,WA2BEa,QAAGyB,GACHuS,EAAIhU,EAAGyB,EAAcH,EAAAzB,EAAAqrB,EAClBvpB,EACAF,EACEusB,EACDzsB,EAZJ+V,EAcGtX,EACAF,GAuIH,QAAS2Q,KAmBL7G,EAAA6G,KAAIwd,EAAgB9W,GAGnB,QAAAoC,GAAAkB,IAIKza,QAAAA,KAED,GAAA2B,EAAAoS,YAAAnK,EAAAmK,WAAA,CAfL,GAAIrD,GAAU9G,EAAKskB,cAoBpBxd,GAAAyd,OAAA,EAAA,EAAAnuB,EAAA4J,KAAA,IACF5J,EAAA4J,KAAA8G,EAjBG1Q,EAAGsiB,QAAU1Y,EAAKob,YAElB,IAAIiJ,GAAgB9W,OAAOzJ,aAAaxM,QAAQ,aAmBjD6sB,GAAepe,KAAA3H,EAAW2H,MAC3B3P,EAAAmX,OAAAnP,EAAA2H,MADF,MAAAse,GAdMhvB,QAAQuH,QAAQkK,EAAS,SAASvC,EAAO0C,GAmB/C,GAASud,EAAAA,IAATH,EAEKrF,YADAT,EAAAA,IAAHha,KAMA1M,EAAG6M,KAAYtO,EAAfyB,aAAqBmC,KAAAwqB,IAWpB,QAAAA,KAjBDpuB,EAAGmoB,WAAa,GAmBhBnoB,EAAA4oB,QAAIyF,IAGH,QAAA7B,KAjBD,GAAIle,GAAW7M,EAAamd,SAAS5e,EAAGyB,aAAamC,KAmBrD,IAAI0qB,MAAJhgB,EACA,MAAIkf,KAGJlf,GAAQtH,EAAIA,KAAEunB,SAAFxqB,EAAe2pB,GACzB,MAAQpf,GAAAA,WAARvK,EAAA6d,YAGE,IAAA4M,IAAO/sB,CACL,OAAAzB,GAAK4hB,OACH4M,EAAAxuB,EAAAmM,KAAAsiB,GAfR,IAAIJ,IAAa,CAmBb,YAAO5sB,GAAAA,OACL4sB,EAAK3M,EAAAA,KAAQgN,QAOX,KAAA,GAJHJ,MAjBDd,KAmBAe,EAAO9sB,EAAAA,OACLisB,EAAM/d,EACJ3I,EAAA,EAAAA,EAAGunB,IAAQI,EAAapM,EAAAA,YAAeviB,EAAAmM,KAAA9G,IAAA,KAAA2B,EAAA,CACrC,GAAA/B,GAAAqJ,EAAAtH,EACD,IAAA/B,EAAA,CAEJ,IAAAjF,EAAAyB,aAAAmtB,YAjBI3pB,EAAE2c,WAAa5hB,EAAG8sB,UAAY7nB,EAAE2c,WAAa5hB,EAAGgtB,UAmBrD1V,QAIA,KAAAtX,EAAAyB,aAAAotB,UAjBK5pB,EAAEyc,OAAS1hB,EAAG8uB,YAAY7pB,EAAEyc,KAAKrc,IAmBtC,QAIIsoB,KAAAA,EAAAA,aAAAA,SACD3tB,EAAA2P,KAAA3P,EAAA2P,IAAAtK,IAAA,IACGwoB,EAAAA,IAAAA,WAAJ5oB,EAAAsd,cACA,QAZF,IAiBGjL,EAAAyX,SAAA9pB,GAjBAA,EAAEoB,UAAYrG,EAAGyB,aAAamC,KAmB/B,QAdF,IAAoB,IAAjB5D,EAAGusB,WAAkB,CAoBtB,GAAAoB,GAAgB3tB,EAAAusB,WAAhBpW,MAAA,IAjBIwX,GAAa/qB,SAmBjB+qB,GAAA3tB,EAAAusB,YAGE,KAAA,GADAsB,IAAW5oB,EACRkH,EAAAA,EAAK9G,EAALsoB,EAAH/qB,SAA0BgrB,EACxBoB,GAAAA,EAAAA,KAAAA,cAAAhZ,QAAA2X,EAAAC,GAAA/E,iBAAA,EAAA,CACAoG,GAAA,CACAA,OAKAA,IAAAA,EACAA,SAKAA,GAAAA,EAAAA,KAAAA,IAAA,EAAY9X,CAIhB,IAAA,GAHG6X,IAAA,EAlBCC,KAqBAD,EAAAA,EAAAA,EAAAA,EAAJ7nB,MAAevE,SAAA4R,EAAA,CACb,GAAArI,GAAAlH,EAAAkC,MAAAqN,EACD,IAFDrI,EAGK9G,IAAArF,EAAAmM,KAAA9G,GAAA,CACHipB,GAAS3nB,EACVsoB,EAAAjoB,EAAA0mB,EACFuB,EAAAza,EAAA2C,OAAAhL,EAAAE,IApBK,OAuBNqhB,EAAAA,IAAAA,GACDsB,GAAA,EACFC,EAAAjoB,EAAA0mB,EApBSuB,EAAQza,EAAI2C,OAAOhL,EAAKE,MAElBF,EAAK9G,IAAMgpB,IAsBrB/B,GAAAA,EApBI2C,EAAQjoB,EAAI0mB,EAsBpBY,EAAWA,EAAAA,OAAcniB,EAAAE,MAIzB,IAAI6iB,EACJ,QAGA1B,GAAa0B,KAAAA,GAjBX1B,EAAW7mB,KAAK1B,GAsBpByoB,KAIApsB,GAAAA,EAAAA,KAAS+D,IAAA,EAAA,CAEPrF,GAAAA,GAAawsB,KAAAA,IAAbkB,EAAA1tB,EAAAmoB,WAHJmG,GAAAA,EAAAxqB,KAAA,SAAAqrB,EAAAC,GAfM,MAAOA,GAAO5a,EAAI2a,EAAO3a,GA7UjC,KAAA,GAqWC0a,MArWDloB,EAAA,EAAAA,EAAAslB,IAAAtlB,EAkVQkoB,EAAYvoB,KAAK6mB,EAAWc,EAAStnB,GAAGA,GAE1CwmB,GAAa0B,EAKf,MAFAlvB,GAAGooB,gBAAkBoF,EAAW5qB,OAEzB4qB,EAnTL,GAAAxtB,GAAAC,IAGCJ,IADAG,EAAAyB,aAAAA,EAAA4tB,OAAArnB,EAAAgH,MACAnP,EAAAA,aAAU2I,CACV0iB,GAAAA,GAAOvD,aAAPzmB,QAAA,uBAgBLlB,OAfIguB,KACDA,EAAA,UAIH7lB,EAAAA,aAAiBC,EAAQwF,OAAAogB,GAblBhuB,EAAGyB,eAAgBzB,EAAGyB,aAAa6tB,eAevC3f,EAAOtK,SACPuE,EAAAA,aAAHnI,EAAAmM,OAAA,gBAEGkf,EAAAA,eAEA3E,EAAH3f,OAAA,MAAAxI,EAAAyB,aAAAvB,MACGkoB,EAAAA,WAMHnpB,EAAAA,SAAAmJ,MAAgB7G,sBAA4B4K,EAAT1K,aAAuBmC,KAAAilB,cAEtD7oB,EAAAA,KAAGmH,IAAMR,EAAAA,KAAT,IACD3G,EAAA4J,MAAA5J,EAAA2P,KACF3P,EAJDsiB,WATAtiB,EAAG8sB,SAAW,EAed9sB,EAAAgtB,SAAIF,GACJ9sB,EAAAmoB,WAAGngB,GACD8kB,EAAAA,gBAAW3V,EACZnX,EAAAuvB,OAAAhuB,EAAA0gB,UACDjiB,EAAAmM,MAAG2gB,IAAAA,EAAAlpB,KAAgBkpB,IACjB9sB,EAAAA,OAAG8sB,EAAH3gB,MACDnM,EAAA4oB,QAAA,KAZD3pB,QAAQuH,QAAQjF,EAAY4F,MAAO,SAASgF,EAAMG,GAelDH,EAAI6gB,YACJhtB,EAAGgI,MAAAA,KAAAA,IAIDhI,IAAAA,GAAAmX,OAAc6V,aAAd9rB,QAAA,YACD8G,GAAA8kB,WACD9sB,EAAGitB,OAAeD,EAAlBF,WAEA9sB,EAAGusB,GAAa7e,EAAAA,MAChB1N,EAAA8sB,SAAG9kB,GAEFhI,EAAA+sB,aAAAD,CAEC9sB,IAAAA,GAAGusB,OAAH7e,aAAAxM,QAAA,YACD8G,GAAAglB,WAbCA,EAAW7V,OAAOnP,EAAaglB,WAgBjCA,EAAGhlB,GAAamE,EAAM,MACpBnM,EAAAA,SAAGwvB,GAELxvB,EAAAitB,aAAMuC,EAELxvB,EAAAusB,WAAA7e,aAAAxM,QAAA,cAbE8G,EAAapE,OAehB5D,EAAGyvB,WAAWznB,EAAWpE,MAEvB5D,EAAAusB,aACEvsB,EAAAA,WAAGyB,IAGD5B,EAAAA,sBAAiB6N,aAAUjM,QAAavB,cACxCF,EAAAmM,OACA+e,EAAAA,sBAAAljB,EAAAmE,MAEHnM,EAAAwvB,uBAAA,GAAAxvB,EAAAwvB,wBAAAjuB,GAAA4F,QACFnH,EAXDmM,KAAA5K,EAAA4F,MAAAnH,EAAAwvB,wBAcExvB,EAAAyvB,SAAOhuB,WACL,GAAAusB,GAAMlB,aAAeC,QAAAA,uBACnBrf,KACA7N,EAAAA,aAAU2I,EAAVoF,OAAgCkf,GAChC9sB,EAAAA,eAZAH,EAAU2I,OAAO,MAAOxI,EAAGyB,aAAavB,MAe1CF,EAAAsN,OACEI,EAAAA,YAMF7N,EAAAA,KAAAA,WACAA,EAAAA,aAAA+uB,WAeC/uB,EAAA2I,OAAA,WAAA,MACF3I,EACI2I,OAAA,WAAA,QAhBJxI,EAAA8sB,UAAA9sB,EAAA+sB,eAdGrf,aAAa4X,QAAQ,WAAYtlB,EAAG8sB,UAgBxCjtB,EAAO4B,OAAAA,WAAsBzB,EAAA8sB,UAC3B9sB,EAAA+sB,aAAA/sB,EAAmB8sB,UAGf9sB,EAAAgtB,UAAU3nB,EAAP4nB,eACDptB,aAAAA,QAAU2I,WAAiBmH,EAAHqd,UACzBntB,EAFD2I,OAGK,WAAAxI,EAAAgtB,UACHntB,EAAAA,aAAU2I,EAAAA,WARdxI,EAAGyB,aAAaiuB,QAiCpB7vB,EAAU2I,OAAO,MAAjB,MAfY,MAAZxI,EAAGA,KACDA,EAAGA,eAAGwvB,EAAAA,IAAHnqB,KACDqI,aAAa4X,QAAQ,YAArBtlB,EAAmCA,IAAGmM,IACtCnM,EAAGA,IAAGmM,IAAH,EACDtM,EAAU2I,OAAO,MAAjBxI,EAAyBA,IAAGmM,IAI7BtM,EAAA2I,OAAA,MAAA,MAEDxI,EAAGwvB,cAAAA,EAAAA,IAAHnqB,IAQNrF,EAAAmM,MACEvC,EAAK6G,uBAAqBkf,EAA1BxjB,KAAA9G,KACDqI,aAAA4X,QAAA,aAAAtlB,EAAAmM,KAAA9G,IAjBQrF,EAAGmM,KAAK9G,IAAM,EAmBvBxF,EAAS0Z,OAAT,OAA6BvZ,EAAAmM,KAAA9G,IAfrBxF,EAAU2I,OAAO,OAAQ,MAqB/BxI,EAAG2B,sBAAA3B,EAA2B4J,KAAKmK,IAdnCrG,aAAa4X,QAAQ,aAActlB,EAAGusB,YAmBpC7b,EAAAA,OAAQyd,OAAanuB,EAAG4J,aAuC1B0E,EAAAA,YAAWA,EAAcshB,YAEtB5vB,EAAA+tB,aAFH,WAfA/tB,EAAGsN,OAmBH8gB,KAwHFpuB,EAAGuoB,gBAAkB,WACnBjnB,EAAS,WACPtB,EAAGmoB,YAAc,GACjBnoB,EAAG4oB,QAAU4D,OAIjBjd,EAAOkB,OACP9O,EAAa8O,KAAK8I,EAAgB9I,GAnWpC,GAAAof,IAAA,SAAA,UAAA,eAAA,WAAA,YAAA,SAGA,eADA,eAGA,OAMA5wB,cAJA,cAMA,SASE,aAAA6wB,EAEA7wB,SAAIe,OAAK,SAATZ,WAAA,iBAAAywB;cCzBF,WAcC,QAXDE,GAAA5nB,EAAA7G,EAAAxB,EAAAyP,EAAA3F,EAAAjI,EAAAC,EAAAL,EAAAE,EAAA5B,GAgEI,QAAAmwB,GAAAC,GAKA,MAAoB,OAAjBA,EAFID,uBAATC,EAAmCnM,cAAA,UAG/B,KAKH,QAAAoM,KAED,GAAAlwB,EAAAmwB,aAAqBnwB,EAAA2P,IAAAtK,GACnB,MAAArF,GAAAowB,MAME,IAAIC,KAAJ,IAAArwB,EAAIqwB,IAAAA,IAAAA,EAAAA,CACJ,GAAGrwB,GAAA4J,EAAgB0mB,eAAAtwB,EAAA2P,IACjB0gB,GAAIE,KAAW3mB,GAIjB3K,QAAQuH,QAAQ6pB,EAAc,SAASE,EAAU7pB,GAAjDzH,GAAAA,GAAQuH,EAAQ6pB,EACdG,KACGA,EAAHzc,SAAYyc,GAGuEC,EAAAA,EAAYJ,EAAAA,KAD3FzuB,EAAA6O,KAAA+f,EAAA,KAAAjX,EAAA,WAAAjY,EAAA,WAAAmvB,EAAAJ,EAAArwB,EAAA2P,YAOL,QAXD8gB,GAAAJ,EAAA1gB,GAaH3P,EAAAowB,SAKC,IAAIM,IAAW,CAHjBzxB,SAAAuH,QAASiqB,EAAYJ,SAArBE,EAAwC7pB,GAKpC,GAAI8pB,GAAUR,EAAWO,EAHxBH,GAASrc,SAAZyc,KACAE,GAAIA,KAIAA,IACDzxB,QAAAuH,QAAA6pB,EAAA,SAAAE,EAAA7pB,GAKC,IAAA,GATJ8pB,GAAAR,EAAAO,GAOGG,EAAU9uB,EAAA2b,QAAAiT,GACXvxB,EAAgBoxB,EAAAA,OACVG,EAAAA,EAAAA,EAAAA,IAAUR,EAKZ,GAAuB,GAApBI,EAAO5b,GAAGqP,SAAbuM,EAAGA,GAAO5b,aAAV,GACE4b,EAAA5b,GAAAmc,aAAA,GACDP,EAAA5b,GAAAoc,aAAA,GAKER,EAAO5b,GAAGqc,aAAe,GAH5BT,EAAGA,GAAO5b,aAAP,GAKA4b,EAAO5b,GAAGsc,aAAe,GAAG,CAE7B,GAAIhe,IAAWhD,EAAGsgB,EAAO5b,GAGzB1B,GAAAA,GAAQzM,EAARmO,GAAmBnP,GACnByN,EAAAA,SAAQoD,SACRpD,EAAAA,WAAenR,SACfmR,EAAAA,KAAQyP,EAAe6N,UAAUW,EAAjCvc,GAAAqP,OAAAuM,EAAA5b,GAAA2Y,aACAra,EAAAA,aAAevR,EAAY0gB,GAAAA,QAC3BnP,EAAAA,KAAQyH,EAAcgW,UAASzM,GAC/BhR,EAAAA,YAAesd,EAAUhD,cAAzBta,EAAQ6S,KAAOyK,EAAO5b,GAAG4Y,eAG1BptB,EAAAowB,OAAAzpB,KAAAmM,MAKN9S,EAAAmwB,YAAAxgB,EAAAtK,IAiDD,QAAAkU,GAAAkB,IAIA,QAAG9Y,KACD,GAAAA,EAAI+O,YAAewd,EAALna,WAAd,CAAA,GAAIrD,GAAU9G,EAAKskB,cAGjBxd,GAAAA,MAAQyd,EAAAA,KAAUvrB,QACnB8N,EAAAyd,OAAA,EAAA,EAAAnuB,EAAA4J,KAAA,IAED5J,EAAAA,KAAGsiB,EAAHtiB,EAAGsiB,QAAU1Y,EAAKob,YAGlB,IAAAiJ,GAAA9W,OAAAzJ,aAAAxM,QAAA,aAEkBwP,OAAhBzR,GACEA,QAAGkP,QAAAuC,EAAYud,SAAf9f,EAA8B0C,GAC5B7Q,GAAAA,EAAG2P,IAAMxB,EAGV,YAFCnO,EAAA2P,IAAAxB,KAOPnO,EAAAwsB,cAID,QAAA/b,KAEEnP,EAAAA,WACDA,EACIquB,GAC6C/lB,EAAhD6G,KAAA8I,EAAA,WAAAjY,EAAAquB,KA9NN,GAAA3vB,GAAS+vB,IAEP/vB,GAAAsiB,WAGAtiB,EAAGwwB,QAAU,GADbxwB,EAAAA,UACAA,EAAAA,aAAA,EAEAA,EAAAA,aAAAyB,EAAAmM,OAAA,UAEA5N,EAAAA,WAAGyB,aAAeA,QAAamM,cAG3B5N,EAAGusB,aADPvsB,EAAGusB,WAAa7e,IAGf6B,EAAAkB,OAGE9O,EAAaoS,WADhBxE,IAGC5N,EACI8O,KAAA8I,EAAA,WAAAjY,EAAAmP,KACqDzQ,EAAAyvB,SAAxD,WACDnuB,EAAA,WAIMtB,EAAGyB,cAFPguB,EAAWvvB,KAAAF,EAAAyB,aAAWvB,SAKtBF,EAAA4U,UAJD,WASA,IAAIjT,EAAaoS,WAGbpS,MADEA,GAAaskB,gBAFnBtkB,EAAIA,KAAaoS,EAAY,eAGzBpS,CAGF,IAAA4uB,GAAA3mB,EAAA0mB,eAAAtwB,EAAA2P,KACD6gB,EAAAR,EAAAO,EAID,UAAGC,GAFCD,EAAAA,SAAgBD,KAkGtBtwB,EAAGwsB,WAAa,WAGd,GAAA4D,GAAGA,GACD,IAAA,MAAAA,EACD,QAGC1iB,GAAAA,KAAAA,EAAAA,IAAa4X,IAAQ,GACtB5X,aAAA4X,QAAA,YAAAtlB,EAAA2P,IAAAtK,IACDqI,aAAa4X,QAAQ,aAActlB,EAAGusB,WAMpC,KAAA,GAHFiB,MACAwD,EAAItD,EAAJ9qB,OAEMqC,EAAAA,EAAImrB,EAAAA,IAARppB,EAAA,CAAA,GAAI/B,GAAImrB,EAAOppB,EAGb,IAAI2mB,IAAJ3tB,EAAAusB,WAAmBvsB,CACnB,GAAA2tB,GAAIA,EAAa/qB,WAAQuT,MAAA,IACvBwX,GAAAA,SACDA,GAAA3tB,EAAAusB,YAGC,KAAA,GADFsB,IAAQD,EACH3oB,EAAErB,EAAAA,EAAF+pB,EAAiBG,SAAWjF,EAC7BgF,GAAAA,EAAAA,MAAAA,EAAWjqB,KAAXkqB,WAAAjF,cAAA7S,QAAA2X,EAAAC,GAAA/E,iBAAA,EAAA,CACAgF,GAAA,CACD,OAID,IAAAA,EACD,SAID7tB,EAAA2P,IAAAtK,IAAA,IAAArF,EAAA2P,IAAAgf,WAAA1pB,EAAAsd,eAIHiL,EAAA7mB,KAAA1B,GAEF,MA3CDuoB,IA5JFvuB,QAAAO,OAAA,SAAAuB,UAAA,uBAAA,WAGE,OADF9B,SACEsD,kBACED,IAAAA,OACAC,KAAAA,SAEEqH,YAAM,UAAA,WAAA,aAAA,SAAA,OAAA,eAAA,UAAA,cAAA,eAAA,YAAAmmB,GAFU1uB,aAFb,cAMLjC,YAAAA;cCVJ,WAGAH,QAAAA,KAGE,OADFgyB,SAASC,IACP5uB,SACE2uB,kBACA3uB,IAAAA,OACAC,SAAAA,aAEE4uB,YAAAA,+BAFgB9vB,aAHb,OAOLlC,YACAkC,UAAAA,YARK,eAAA,WAAA,aAAA,UAAA,OAAA,cAAA,oBAAA,YASLjC,IAMJ,QAAAgyB,GAASA,EAAsBjpB,EAAQtI,EAAUmI,EAAa1G,EAASxB,EAAW8B,EAAAA,EAAaL,EAAYsI,GAmCvG,QAAA0P,GAAAkB,IAlCFxa,KAAAiuB,aAAA,WAGE,IAAA,GAFA5L,GAAIA,EAAU1Y,eACdynB,KACItT,EAAA,EAAIA,EAAAA,EAAMuE,SAAQ1f,EACpBgH,EAAGA,eAAK0mB,EAAehO,KAApBriB,KAAmCqxB,MACpCD,EAAAA,KAAU1qB,EAAK2b,GAGnB,OAAA+O,IAGFpxB,KAAAsxB,YAAA,WACE,MAAA3nB,GAAOA,eAGT3J,KAAAwiB,WAAA,SAAkB+O,GAEhB,IAAA,GADAlP,GAAIA,EAAU1Y,aACVmU,EAAA,EAAIA,EAAAA,EAAMuE,SAAQ1f,EACpB,GAAA0f,EAAGA,GAAQvE,EAAR3N,aAAAohB,EACD,MAAAlP,GAAOA,GAAA1e,MAKb3D,KAAAqoB,OAAA,SAAc3Y,GACZ1P,KAAA0P,IAAAA,EACAA,GACE1P,KAAAkxB,YAMJvnB,EAAA6G,KAAA8I,EAAwBkB,GAtD1Bxb,QAAAO,OAAA,SAAAuB,UAAA,mBAAAmwB;cCDA,WAGAO,QAAAA,KAAAxyB,OAIIgyB,SAAU,IAFd3uB,SACEC,kBACE0uB,SAAU,YACV3uB,IAAAA,OACAC,YAAAA,eACEmvB,SAAAA,aAEAC,YAAAA,uCACAvwB,WAAAA,EAJgBC,aAHb,QAAA,QAAPowB,GAAAhwB,EAAA0G,EAAAxG,GAiBA,GAAI3B,GAAKC,IAETD,GAAGiO,WAAaxM,EAAawM,WAF7BjO,EAAA4xB,WAAA,EAEA5xB,EAAAA,WAAA,SAAgByB,GAChBzB,MAAG4xB,GAAAA,aAISC,EAAOlkB,aAAfkkB,EAAQA,cAMX7xB,EARD4U,UAAA,WAUE,OAAQjT,EAAamwB,QAEtB9xB,EAHD+xB,YAAA,SAAAF,GAIGE,EAAAA,WAED/xB,EAAA4xB,WAAA5xB,EAAgB4xB,UAEdzpB,EAAAiC,SAAA,EAAA,IAKCpK,EAAGgP,KAAO6iB,IAAb7xB,EAAAgP,IAAA6iB,EAAAnkB,aAAG4X,QAAH,uBAAqBuM,EAAAjuB,MAEnB8J,EAAAA,UAGE1N,EAAGoB,aAIRpB,EAlBDgyB,QAAA,SAAAH,GAoBE,MAAGA,GAAOI,IADTD,EAAU9R,UAAiB2R,EAAAI,KAAAnO,cAIvB+N,EAAAjuB,MA/DT6tB,EAAA7qB,SAAA,eAAA,UAAA,gBAAA3H,QAAAO,OAAA,SAAAuB,UAAA,qBAAAmxB;cCDA,WAGAjzB,QAAAA,GAAec,EAAmBF,EAAA0P,GAGhC,OADF0hB,SAASkB,IACP7vB,OACE2uB,KAAAA,SAEE7sB,YAAM,kCADDguB,KAFF,SAAApe,EAAAjH,EAAAslB,GAMLD,EAAM3c,OAAA,OAASzB,SAAQjH,EAASslB,GAGxBpb,IADNjD,EAAOyB,UAAPzB,EAAsBse,aAIrBte,EAJDse,QAAA,WAOE,GAAGte,EAAO5P,MAAQ4P,EAAO5P,KAAKuhB,KAAO,EAAG,CAD1C3R,GAEIue,GAFJve,EAAiB9J,KAAAsoB,MAAWxe,EAAA5P,KAAAuhB,KAAA,IAAA,EAYxB,OARA4M,GAC2B,UAAxBve,EAAO5P,KAAKiC,SADXksB,YAIC,WAIFE,EAAY,EAAZA,EAAYA,EAAG,OAIhBF,EAAOA,IAAAE,EAAA,OAGX,MAAA,OAGFze,EAAAA,UAAAA,EAAmBA,UAEnBA,EAAAA,gBAAA,WACE,MAAAA,GAAGA,MAAAA,EAAeA,KAAO5P,KAAP,EACP4P,EAAO5P,KAAKuhB,KAAO,GAAM,GAAlC,EAEF,GAGF3R,EAAAA,gBAAA,WACE,MAAAA,GAAGA,MAAAA,EAAeA,KAAO5P,KAAP,EACoC,GAApD8F,KAAQA,MAAY8J,EAAO5P,KAAKuhB,KAAO,IAAO,IAA9C,EAEF,KAtDR1mB,QAAAO,OAAA,SAAAuB,UAAA,iBAAA,mBAAA,YAAA,SAAAoxB;cCDA,WAGAlzB,QAAAA,GAAec,EAAmBF,EAAA0P,GAGhC,OADF0hB,SAASyB,IACPpwB,OACE2uB,KAAAA,QACA3uB,QAAO,YAELqwB,YAAS,kCAFJP,KAFF,SAAApe,EAAAjH,EAAAslB,GAMLlzB,EAAAA,SAAa,gBAAAoQ,EAAAkX,YANRlX,OAAA,MAAAxP,EAAAklB,WAAAjR,EAAA5P,MASH4P,EAAAyB,OAAA,OAAA,SAAAwB,EAAAC,GAGMD,IADNjD,EAAOyB,SAAP,gBAA+BwB,EAAUC,YAAU3H,OAAA,MAAAxP,EAAAklB,WAAAjR,EAAA5P,WAhBzDnF,QAAAO,OAAA,SAAAuB,UAAA,iBAAA,mBAAA,YAAA,SAAA2xB;cCDA,WAGAzzB,QAAAA,KAGE,OADFgyB,SAAS2B,IACPtwB,SACE2uB,kBACA3uB,KAAAA,QACAC,MAAAA,UAEEswB,YAAO,iCAFSzzB,WAHb0zB,EAOL3zB,aAAAA,QAIH,QAAA2zB,KAED7yB,KAAA4yB,OAGI5yB,KAAK8yB,UAAY,cADnB9yB,KAAG+yB,SAAY,GACb/yB,KAAAgzB,WAAA,IAGDhzB,KAJD8yB,UAKK,cACH9yB,KAAA+yB,SAAA,GACA/yB,KAAAgzB,WAAgB,GAIlBhzB,KAAKizB,gBAAkB,WAAvB,MAAAjzB,MAAKizB,MAAAA,KAAL9uB,KAAuB0L,GAAA7P,KAAWmE,KAAA0L,EAAAqjB,QAAA,EACxB/uB,KAALA,KAAa0L,EAAAqjB,QAAb,EAA4BlzB,KAAA+yB,SAAA/yB,KAAyBgzB,WAEvD,GAIHhzB,KAAKmzB,gBAAkB,WAAvB,MAAAnzB,MAAKmzB,MAAAA,KAALhvB,KAAuB0L,GAAA7P,KAAWmE,KAAA0L,EAAAqjB,QAAA,EAC7BjpB,KAAAsoB,MAAavyB,KAAKmE,KAAlB0L,EAAAqjB,QAA4B,GAAYA,KAAZH,SAAyB/yB,KAAAgzB,WAEvD,GAzCLh0B,QAAAO,OAAA,SAAAuB,UAAA,gBAAA6xB;cCDA,WAGA3zB,QAAAA,GAAe2C,EAASb,EAAUO,EAAiBiO,GAEnD,OACE0hB,SAAA,IAGEoC,YAAY,EAFd/wB,OACE2uB,YADK,gBAGL3uB,YAAO,gCACLgxB,KAAAA,SAAAA,EAAavmB,EAAAslB,GADRre,EAHFuf,IAAA,yBAAA,WAMLp0B,EAAAA,iBAGI6U,EAAAA,IAAOwf,qBAAP,WACDxf,EAFDwf,iBAKExf,EAAAA,IAAOwf,qBAAP,WACDlyB,EAFD,WAMI0S,EAAOyf,WAAY,MACpBzf,EAFDuf,IAAA,yBAAA,WAGDjyB,EAJD,WAQI0S,EAAOyf,WAAY,MACpBzf,EAFD0f,WAAA,EAGD1f,EAJDwf,aAAA,WAQExf,EAAO+R,UAAYxW,EAAOkX,WAD5BzS,IAAAA,GAAOwf,EAAAA,YACLxf,GAAAD,YAEA4f,KAOK3f,EAAO0f,WAAaC,IAAM3f,EAAO4f,eADtC5f,EAAA4f,YAAAD,GAEI3f,EAAAA,WAAA2f,EAEF3f,KAGHA,EAhBDyf,WAAA,EAmBAzf,EAAOwf,iBAtDbv0B,QAAAO,OAAA,SAAAuB,UAAA,gBAAA,UAAA,eAAA,WAAA,SAAA8yB;cCDA,WAGA50B,QAAAA,KAEA,OACEgyB,SAAA,IAGEmB,KAAM,SAAS9vB,EAAOyK,EAASslB,GAFjC,GAAAyB,IAAO,CACL7C,GAAAA,GAAU,QADL,SAAA8C,GAEL3B,IAAM0B,EACJ,IAEE7zB,KAAK6zB,eAAgB,EACnB7zB,KAAI+zB,aAAA/zB,KAAAkO,MAAAvL,OAAA,EACFkxB,GAAA,EACA,MAAKG,GAELH,KAAAA,SACDA,GAAa,KAKf/mB,EAAAmnB,GAAA,OAAA,SAAAH,GACFD,GAbD,MAVN70B,QAAAO,OAAA,SAAAuB,UAAA,yBAAAozB;cCDA,WAGAl1B,QAAAA,GAAesC,GAGb,OADF0vB,SAASmD,IACP9xB,OACE2uB,MAAAA,SACA3uB,MAAO,SACL6E,SAAO,YACP5G,UAAO,aACP8zB,OAAAA,UACAC,SAAAA,aAEAC,KAAAA,SAAUvgB,EAAAjH,EAAAslB,GAeV,QAASmC,KAcP,QAASC,GAAOC,GAAhB,GAAAC,GAAgBD,EAAME,OACpBD,GAAIA,IAAAA,UAAa5nB,GACjB4nB,EAAAA,KAAAD,GAGAG,EAAYC,MAAMH,GAAlBE,EAAYC,EACZD,EAAAA,KAAcF,GApBlB5nB,EAAAgoB,IAASP,UAAY,OACnBznB,IAAAA,GAAQgoB,EAAI5tB,KACZA,KACAA,EAAIA,EAAOktB,UAIXp1B,QAAQuH,QAAQwuB,EAAe,SAAS7mB,EAAO0C,GAA/C5R,EAAAA,UAIA,IAAIg2B,IAAQ,EAAZJ,EAAA9nB,EAaAmoB,IACAj2B,SAAIi2B,QAAAA,EAAAA,SAAJ/oB,EAAA0E,GACA5R,GAAAA,GAAQuH,EAARW,MAAuBgF,EAASA,GAC9BgpB,IAAIA,EAAM5zB,aACV2zB,EAAcE,EAAAA,YAAYjpB,KAK5BlN,QAAQuH,QAAQW,EAAO,SAASgF,EAAM0E,GAAtC5R,GAAAA,GAAQuH,EAKN,IAAG2F,EAAK9G,KAAM9D,GAAY4F,MAAO,CAE/B,GAAIguB,GAAM5zB,EAAY4F,MAAMgF,EAAK9G,GAAjC,KAAA2O,EAAImhB,QAAM5zB,QAAkB4K,IAA5BgpB,EAAA7b,KACA,MAIA,IAAGtF,EAAO7P,SAAWgxB,EAAInhB,EAAO7P,QAAhC,MAIA,IAAGgxB,EAAIC,WAAP,MAmBA,IAdIH,IAAJI,GAAAC,GAECL,GAAA,EAGE,cAAgB9oB,KAAnBA,EAAGopB,YAAgBppB,EAAMooB,WACvBc,GAAQE,KAEPF,GAAAlpB,EAAAopB,WAAA,UAIHF,GAAU,WAEPrhB,EAAOzT,MAAV,GAAiB,WAAjB40B,EAAGnhB,QAAc,CACf,GAAGmhB,GAAIpoB,CACLiH,GAAIhH,MAAJD,UACAC,EAAGgH,EAAOzT,MAAMwM,QAAS1H,IAExBgwB,GAAA9zB,EAAA0L,SAAAD,GAAApJ,KAAA,aAJH,IAOYmJ,aAPZooB,EAOKpoB,QAAkB,CACrB,GAAAC,GAAIA,CACJgH,GAAGA,MAAOzT,mBACRyM,EAAAA,EAAQgH,MAAOzT,iBAAM6M,IAEvBioB,GAAAA,EAAU9zB,SAAY0L,GAAZrJ,KAAA,SAed,GAXAyxB,GAAAA,EAAUF,KAAIvxB,mBAAKuxB,EAATK,QAAgCA,GAC1CL,EAAGA,YAAA,GACDl2B,QAAAA,QAAQuH,EAAR,SAAuBivB,EAASA,GAC9BA,EAAGA,IAAAN,EAAYA,aACbM,EAAGA,KAAAtpB,EAAaA,MACdkpB,GAAAA,IAAUF,EAAMA,QAAIK,MAM5BrpB,EAAGA,KAAA+oB,GAAWA,CACZ,GAAAQ,GAAIA,EAAQR,EAAgB/oB,GAE5BkpB,IAAAA,oBADIM,EAAOp0B,MAAY4F,EAAMuuB,IACGC,QAAKH,GACrCH,GAAAA,aAODJ,KACDA,GAAQK,GAERL,GAAG,EAEF,cAAA9oB,KADCkpB,GAAUlpB,EAAKopB,WAAa,oBAG9BF,GAAUlpB,EAAK9G,GAAG,UAAU8G,EAAKE,GAKtCooB,GAAAY,KApIHjD,GAAAA,EAKGkD,GAFGthB,EAAOsgB,UAAX,SAGKtgB,EAAAsgB,UAAA,IAJDgB,EAQJ,IAAIN,MAAJY,EAAoB7oB,EAApBgoB,IAAA,UA8HIP,GAAAA,OAAAA,QAAAA,SAAAA,EAAAA,GACDvd,GAHHud,MAQIA,EAAAA,OAAAA,WAAAA,SAAAA,EAAAA,GACDvd,GAHHud,MAQIA,EAAAA,OAAAA,WAAAA,SAAAA,EAAAA,GACDvd,GAAA,GAHHud,QAjKNv1B,QAAAO,OAAA,SAAAuB,UAAA,cAAA,cAAAqzB;cCDA,WAGAn1B,QAAAA,KAGE,OADF42B,QAASC,UACP1D,KAAA,SAAO9vB,EAAAyK,EAAAslB,EAAA0D,GACLF,EAAAA,SAASlvB,KADJ,SAAAwH,GAELikB,MAAM,GAAAjkB,IAEF4nB,EAAAC,YAAY7nB,KAAZ,SAAAA,GACD,MAFD8nB,YAAA9nB,EAAA,QARNlP,QAAAO,OAAA,SAAAuB,UAAA,sBAAA+0B;cCDA,WAGA72B,QAAAA,KAGE,OADF42B,QAASC,UACP1D,KAAA,SAAO9vB,EAAAyK,EAAAslB,EAAA0D,GACLF,EAAAA,SAASlvB,KADJ,SAAAwH,GAELikB,MAAM,GAAAjkB,EAAS7L,MAEXyzB,EAAAC,YAAa7nB,KAAM,SAAnBA,GACD,MAFD,KAAA8nB,WAAA9nB,EAAA,QARNlP,QAAAO,OAAA,SAAAuB,UAAA,uBAAA+0B;cCDA,WAIA,QAASI,GAAmBC,GAExB,OAFJlF,SAAA,IAIMmB,KAAM,SAAUpe,EAAQjH,EAASslB,GAK/B,GAAA+D,GAAAD,EAAA9D,EAAA,YAOIgE,EAAU,SAAUpxB,GADxB+O,EAAAsiB,OAAA,WAKIF,EAAApiB,GAAA+f,OAAA9uB,EAAAzC,MAAAyC,EAAAxC,OAAAD,UAKHuK,GAAA,GAAAwpB,iBATD,SAAAF,GAAA,KApBRp3B,QAACO,OAAY,SAAAuB,UAAA,cAAA,SAAAm1B;cCAb,WAIA,QAASpsB,GAAUlI,EAAQiI,EAAkBD,EAAKrI,GAMhD,QAAIi1B,GAAa/b,IAPnBxb,GAAAA,GAAe,iCACfw3B,EAAS3sB,gCAIH4sB,EAAe,kCADnBF,EAAe,uBAQb,QACD/lB,KAAA,SAAAkmB,GAGG/sB,EAAK6G,KAAK8I,EAAgBod,GAF9B/0B,EAAO6O,KAAAmmB,EAAA/sB,EAAAgtB,wBAAAtd,EAAAod,GACLlmB,EAAMA,KAAAgmB,EAASE,EAAUG,kBAAAvd,EAAAod,GACvB/sB,EAAK6G,KAAK8I,EAAV1P,EAAAktB,sBAAAxd,EAAAod,GACA/0B,EAAAA,KAAQ6O,EAAKmmB,KAAgB/sB,EAAAA,GAC7BjI,EAAAA,KAbe,kCAaQiI,KAAAA,EAAkBitB,IAGzCl1B,aAAQ6O,SAAKumB,GAEd,GATIxnB,KAYH,IAAGmB,EAAY,EAAG,CAFpBc,GAAAA,GAAc7P,EAAAq1B,SAAAT,EAAS7lB,KAAWA,EAChC,IAAA,GAAAjK,EAAI8I,OAAJ,CACA,GAAGmB,GAAAA,EAAHumB,OAAkBV,EAAA9vB,EAAA,GAChB,IAAA6N,EAAI7N,CACJ,GAAGA,GAAM9D,EAAaq0B,SAvBT,kCAuBS,cAAA1iB,EAAA4iB,mBACpB,IAAgBD,GAAhBE,EAAQx1B,OAAe40B,CACvB,GAAAliB,GAAM1S,EAAAs1B,OAzBK,kCAyBLE,EAAA,GACJ9iB,KACA9E,EAAU5M,EAAayV,SAAA/D,OAOxB,MAAA9E,IAELuB,YAAOvB,SAAPsS,GAED,GA7BIA,EAAA,EAAA,CAgCD,GAAIpb,GAAQ9E,EAAQq1B,SAASR,EAAU,KAAM3U,EAFjD/Q,IAAa,GAAbA,EAAAA,OACE,MAAG+Q,GAAWoV,OAAAT,EAAA/vB,EAAA,IAKX,UAEH0K,eAAA,SAAAiX,GAED,GAxCIA,EAAA,EAAA,CA2CD,GAAI3hB,GAAQ9E,EAAQq1B,SAASL,EAAgB,KAAMvO,EAFvDjX,IAAgB,GAAhBA,EAAAA,OACE,MAAGiX,GAAW6O,OAAAN,EAAAlwB,EAAA,IAKX,UAEH4K,aAAA,SAAAwQ,EAAAuG,GAED,GAnDIvG,EAAA,GAAAuG,EAAA,EAAA,CAsDD,GAAI3hB,GAAQ9E,EAAQq1B,SAASP,EAAc,KAAuB,IAAhBvf,OAAOkR,GAAgBlR,OAAO2K,GAAS,IAF7FxQ,IAAc,GAAdA,EAAAA,OACE,MAAGwQ,GAAauG,OAAAA,EAAW3hB,EAAA,IAKxB,WA1EToD,EAAAlD,SAAA,UAAA,oBAAA,OAAA,eAAA3H,QAAAO,OAAA,SAAA63B,QAAA,YAAAvtB;cCDA,WAIA,QAASD,KADT5K,OACAokB,SACEQ,QAAO,EAAAJ,eAAA,EAAA0J,aAAA,EAAAxJ,oBAAA,EACLN,MAAAA,EAAStH,YAAA,EAAAub,YAAA,EAAAC,YAAA,EAAA5V,YAAA,EAAA6V,cAAA,EAAA/V,MAAA,EACPoC,QAAAA,EADO4T,aACOhU,EAAeiU,YAAMvK,EACnClK,QAAM,EAAKlH,aAAY,EAAKub,YAAY,EACxCK,QAAAA,EAHOC,aAGOH,EAHPI,YAG0BH,EACjCI,QAAAA,EAJOC,aAIOC,EAJPC,YAI0BC,EACjCC,QAAAA,EALOC,aAKOR,EALPS,YAK0BR,EACjCS,QAAAA,EANOC,aAMOR,EANPS,YAM0BP,EACjCQ,QAAAA,EAPOC,aAOON,EAPPO,YAO0BN,EACjCO,QAAAA,EAROC,aAQON,EARPO,YAQ0BN,EACjCO,QAAAA,EATOC,aASON,EATPO,YAS0BN,EACjCO,SAAAA,EAVOC,cAUON,EAVPO,aAU0BN,EACjCO,WAAQ,EACRC,SAAAA,EACA5a,iBAbO,EAAA0F,cAAA,EAAAmV,cAAA,EAAAnM,gBAAA,EAAA/I,QAAA,EAAA7F,eAAA,EAAAM,gBAAA,GAeP0a,UAfOC,WADJ,GAmBHA,YADQ/a,WAlBL,EAAAhH,cAAA,EAAAgiB,cAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAvhB,UAAA,EAqBLV,cAAY,EACV8G,aAAW,EADDwD,gBACoB,EAAKwX,aAAAA,EADzBtX,gBACwD,EAAKwX,aAD7D,EAC2EC,gBAAcvhB,EAAUwhB,aADnG,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAEVvb,QAAAA,EAAAA,aAFU,EAAAmZ,QAAA,EAAAqC,aAAA,EAAAhC,QAAA,EAAAiC,aAAA,EAAA9B,QAAA,EAAA+B,aAAA,EAAA5B,QAAA,EAAA6B,aAAA,EAAA1B,QAAA,EAAA2B,aAAA,EAAAxB,QAAA,EAAAyB,aAAA,EAAAtB,QAAA,EAAAuB,aAAA,EAAApB,QAAA,EAAAqB,aAAA,EAAApB,SAAA,EAAAqB,cAAA,GAIVhD,cAJU5d,aArBP,EAAA6gB,aAAA,EAAAC,gBAAA,EA2BLjhB,QAAAA,EAAAA,aAAe,EACbG,QAAAA,EAAAA,aAAmB6gB,EACnBjD,QAAAA,EAAQyC,aAAKU,EACbhD,QAAAA,EAAQuC,aAAKF,EACbhC,QAAAA,EAAQmC,aAAKF,EACb9B,QAAAA,EAAQiC,aAAKF,EACb5B,QAAAA,EAAQ+B,aAAKF,EACb1B,QAAAA,EAAQ6B,aAAKF,EACbxB,QAAAA,EAAQ2B,aAAKF,EACbtB,SAAAA,EATayB,cASAF,EACbpB,SAAAA,EAVa0B,cAUAL,EACbpB,SAAAA,EAAS0B,cAAKL,EACdM,SAAAA,EAASC,cAAKH,EACdI,SAAAA,EAASC,cAAKJ,EACdK,SAAAA,EAASC,cAAKJ,EACdK,SAAAA,EAASC,cAAKJ,GAEdK,QAjBaxY,MA3BV,GA+CHA,OAAAA,KADM/H,SA9CH,KAiDLwgB,SACAxgB,SAAAA,EAlDKygB,WAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAzrB,aAAA,EAAA+iB,SAAA,GAoDH2I,uBADOC,UAnDJ,EAAAC,SAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,QAAA,GAuDHL,mBADqBM,OAtDlB,EAyDLvF,UAAAA,EACEuF,WAAO,EACPC,cAAU,EACVC,iBAHiB,GAKjBC,yBALiBC,IAzDd,EAAAC,gBAAA,EAAAC,eAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,oBAAA,EAAAC,OAAA,EAAAC,iBAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,mBAAA,EAAAC,WAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,sCAAA,IAJT3+B,QAAAO,OAAA,SAAA63B,QAAA,qBAAAxtB;cCDA,WAGA5K,QAAAA,GAAe4+B,EAASxG,GAExB,QAASz1B,GAAQi8B,EAAWv8B,EAAUw8B,GAgGlC,OA3FEj7B,OAAQ,GAAIk7B,WAAZl7B,QAAAA,EAGAojB,gBAAgB,EAAhBA,KAAAA,EAEA+X,YANWvX,EASXwX,iBAAkB,KADlBxX,qBAEAyX,KAAAA,SAAAA,EAVWvH,EAAAwH,GAYX1tB,GAAAA,KAAMqhB,OAGC6E,GADLA,QAWE,IAPD12B,KAJDg+B,iBAKKrqB,EACH+iB,GACA12B,KAAG02B,kBAAUhwB,KAAAgwB,IAIT12B,KAAKgmB,eAAgB,CAAzBhmB,KAAIgmB,gBAAKA,CACP,IAAAzE,GAAKyE,IAGLhmB,MAAK4C,OAAOi7B,WAAaA,EAEtB79B,KAAKwmB,aAARxmB,KAAGwmB,YAAKA,KAENxmB,KAAKwmB,YAAYle,IAAI3F,SAErBi7B,EAAWO,WAAW,sBAGpB5c,EAAE3e,WAGE2e,EAAA3e,OAAG2e,sBACDA,EAAAA,YAAEyc,IAAAA,IAAFD,EACD,SAAAvjB,GAEH+G,EAAAyc,kBACEzc,EAAAyc,iBAAAxjB,IAGAxb,SAAAA,EAAAgE,GAEIkL,EAAAA,QAAAA,EAEHlP,QAJDuH,QAAAgb,EAAA0c,kBAAA,SAAA/vB,EAAA0C,GAKEqtB,GACFL,MAIArc,EAAA0c,qBACE1c,EAAA4c,WAAA,uBAEAn/B,SAAAA,GACEuiB,EAAA6c,QAAGlwB,EACDA,GACDqT,EAAAsQ,QAAA,EACFpvB,QAJDgD,IAAA,mEAKA8b,QAAE0c,QAAAA,EAAAA,kBAAF,SAAA/vB,EAAA0C,GACAgtB,GATF1vB,MAcE0vB,EAAAA,qBACDA,EAAAO,WAAA,wBAIJ5c,EAAAyE,gBAAA,EACHzE,EAAAsQ,QAAA,EACD+L,EAAAO,WAAA,8BAYT/qB,MAAOirB,WACRr+B,KAAA4C,OAAA,GAAAk7B,WANK99B,KAAK6xB,QAAS,EAQpB7xB,KAAOgmB,gBAAA,IAOH,OACAhnB,WACEs/B,eACEpwB,YAAMsY,KAEPyF,YAAA,SAAAhG,GACFjmB,KALDwmB,YAAAP,CAMD,IAdI1E,GAAAvhB,IAQHhB,SAAQuH,QAAQvG,KAAKu+B,QAAS,SAASrwB,EAAO0C,GAQhDJ,EAAOgW,aAAUxjB,IACfkL,EAAIyF,YAAUsS,EACZtS,EAAAA,MAAAA,OAKCnD,KAAA,SAAAxN,EAAA66B,EAAAlqB,EAAA+iB,EAAAwH,GACFvqB,IACDA,EAAK4qB,cAEPjhB,IAAUtd,MAAAu+B,SACRv7B,EAAQ8Q,OAAS9Q,IACfhD,KAAI4C,QAASI,GAAAw7B,EAAuB57B,KAApC4jB,YAAAxjB,EAAA66B,IAGEn5B,KAAAA,QAAOqC,GAAKnE,KAAOq0B,EAAnBP,EAAAwH,IALN5gB,QAAU,SAAUta,GAQhB,GAAAhD,KAAA8T,SAAA9Q,GAAA,CAID,IAAA,GAXDJ,GASK5C,KAAAu+B,QAAAv7B,GAAAJ,OACH8B,EAAA,GAAA+5B,OAAA77B,EAAA87B,SACD33B,EAAA,EAAAA,EAAAnE,EAAA87B,UAAA33B,EAvCErC,EAAAqC,GAAAnE,EAAAq0B,OAAAlwB,EA2CH,OAAIrC,GAGFA,UAGFI,KAAA,SAAOJ,EAAPi6B,EAAAzwB,GAIA,IAAA,GArDGya,GAAA3oB,KAAAg3B,SAAAh0B,EAAA27B,EAAAzwB,GAmDL8oB,KAPM4H,EAAajW,EAAQhmB,OAStBoE,EAAA,EAAK+M,EAAAA,IAAS9Q,EACf0B,EAAGgC,KAAE1D,KAAAA,OAAYA,EAAKs7B,EAAav3B,IALrC,OAAOrC,IAULsyB,SAAI6H,SAAAA,EAAkBC,EAAAA,GAEtB,GAAA9+B,KAAI++B,SAAAA,GAAiBT,CAPhBt7B,IAAYhD,MAAKs+B,cAStBt+B,KAAGs+B,YAAYS,MALf,IAAIn8B,GAAS5C,KAAKu+B,QAAQv7B,GAAUJ,OASlCi8B,EAAIlW,EAAJmW,cAAAH,GAEAI,EAAWn8B,KAAAA,YAAXI,EAEA,MAAA27B,IAAQ7f,IAAR,CACE,GAAArY,KACAs4B,GAAIC,GAAQH,CAOX,KAAA,GAHAtzB,GACI3I,EAAA2I,KACH9E,EAAAA,EAAA9D,OACDmc,EAAA,EAAAA,EAAA1R,IAAA0R,EAAA,CACF,GAAAjP,GAAAtE,EAAAuT,GACFkgB,EAAAnvB,EAAAgvB,EAEE3wB,KAAS6wB,GAKXt4B,EAAAu4B,GAAAt4B,KAAAoY,GAJCrY,EAAOs4B,IAAAA,IASbjrB,MAAAA,KAAWirB,GAAAJ,GACF37B,EAAY27B,GAAKJ,MAOzB,UAECzqB,SAAG9Q,SAAYA,GACb,MAAAA,KAAaA,MAAAA,SAAbhD,KAAAu+B,QAAAv7B,GAAA6uB,QAEAoN,UAAA,SAAYX,GACb,MAAAt7B,KAAAhD,MAAAu+B,SAAAv+B,KAAAu+B,QAAAv7B,GAAAo7B,QAEHc,kBAAW,SAAAl8B,GACT,MAAIue,MAAIzN,SAAR9Q,IAAAA,IAAAhD,MAAAu+B,SAAAv+B,KAAAu+B,QAAAv7B,GAAAgjB,gBAEEzE,MAAEnO,SAAFpQ,GADFA,IAAAhD,MAAAu+B,UAhHGv+B,KAAAu+B,QAAAv7B,GAAAoQ,cAoHLa,MAAasqB,QAAAv7B,SACPue,MAAJ+c,YAAAt7B,KAGEk8B,SAAIhxB,WACFiJ,GAAAA,GAAAA,IACDnY,SAAAuH,QAAAvG,KAAAu+B,QAAA,SAAArwB,EAAA0C,GACF2Q,EAJDnO,MAAAxC,MAODqD,WA9HI,WA+HLkrB,GACEhoB,GAAQrD,CAQR,OAPE9U,SAAAuH,QAAYg4B,KAAAA,QAAQv7B,SAAUJ,EAAO87B,IADvCxwB,EAGK2jB,QAAA3jB,EAAA8X,gBACH7O,MAICA,GAEFgoB,WACI,SAAAn8B,GACH,MAAAhD,MAAA8T,SAAA9Q,GACDhD,KAAAu+B,QAAAv7B,GAAAJ,OAAA87B,QAGE,GAIDzH,OAAA,SAAAj0B,EAAAyD,GACD,MAAAzG,MAAA8T,SAAA9Q,GArJEhD,KAAAu+B,QAAAv7B,GAAAJ,OAAAq0B,OAAAxwB,OA6JF24B,YAAA,SAAAp8B,EAAAuI,EAAA8zB,GACF,MA9JIr/B,MAAA8T,SAAA9Q,GA+JLs8B,EAAWt/B,KAAAu+B,QAAAv7B,GAAAJ,OAAA28B,YAAAF,IAIJ,MAGNG,YAAA,SAAAx8B,EAAAuI,GAtKH,MAAAvL,MAAA8T,SAAA9Q,GAwKDhD,KAAAu+B,QAAAv7B,GAAAJ,OAAA48B,YAAAj0B,GAZc,MAGX+zB,SAAW,SAASt8B,EAAUyD,EAAO44B,GACnC,MAAGr/B,MAAK8T,SAAS9Q,GACRhD,KAAKu+B,QAAQv7B,GAAUJ,OAAO08B,SAAS74B,EAAO44B,GAG9C,OA3QfrgC,QAAAO,OAAA,SAAA63B,QAAA,WAAA,aAAA,WAAAz1B;cCDA,WAIA,QAASmlB,GAAQvmB,EAAMoJ,EAAKhI,EAAQ0V,GADpCrY,MAAAA,UAAe2U,GA2BV,QAlBD8rB,GAAAh5B,GAoBAA,EAASg5B,EAAYh5B,OAGjBi5B,EAAaj5B,GAAO+J,KAAKmD,EAAU,WADlClN,EAAQi5B,GAAa/8B,aACtB+8B,YAAAA,GAAyB/rB,IACvBA,EAAG+rB,eAAoB5rB,EAAYrN,GAAAzD,UAE/B2Q,EAAAA,EAAS,MAKhBA,EACI,4BAvCTA,EAAO,gBAELA,IAAAA,IAAShK,EAKT3K,SAAQuH,QAAQhG,EAAO,SAAS4D,EAAMyM,GADlC+B,OAAJ/B,GACA5R,QAAQuH,QAAQhG,EAAO,SAAS4D,EAAMyM,GACpC,GAAGA,EAAAA,QAAc,QAAA+uB,EAAAh9B,OAAA,EAAA,CACf3D,GAAAA,IACEwR,KAAGmvB,SAAahsB,EAAUgsB,GACxBh+B,EAAIi+B,KAAAA,EAAa,KAAAjsB,EAAA+iB,IAEb/0B,SAAAA,WACD,MAHcA,GAAAmS,SAAA5F,IAKblL,SAAAkL,EALawxB,GAAjBh5B,KAAAk5B,QAiCRH,EAAY,IAhDhBzgC,QAAAO,OAAA,SAAA63B,QAAA,WAAA,QAAA,OAAA,UAAA,cAAAtQ;cCDA,WAIA,QAASllB,GAASrB,EAAOoJ,EAAMhI,GAD/B3C,MAAAA,YAEEA,QAAOuH,QAAAhG,EAAW,SAAAs/B,EAAAl8B,GAGdk8B,EAAOzsB,UACRzJ,EAFDyJ,QAKAzR,EAAQu9B,YAXZlgC,QAAAO,OAAA,SAAA63B,QAAA,YAAA,QAAA,OAAA,UAAAx1B;cCDA,WAIA,QAAS6G,KAIO,QAAdq3B,GAAA5zB,GAsBA,MAEY6K,GAAQ7K,EAAK9G,KAFzB,UAGE,QAAA26B,GAAAf,GACD,MAAA,KAAAA,EAOiB,QAAlBgB,GAAA9zB,GASI,GAAI+zB,GAAOC,EAAYh0B,EAAK9G,GAFhC,OAAA66B,GACSD,EAAAA,EAAW9zB,KAEZ+zB,EAAM7zB,IA3Cd,GAAI2K,IADJopB,EAAA,UAGIC,EAAG,UAFPC,EAAItpB,UACAupB,EAAG,UACHC,EAAG,cACHC,EAAG,cACHC,EAAG,cACHC,EAAG,cACHC,EAAG,WACHC,EAAG,WACHC,GAAG,WACHC,GAAG,WACHC,GAAG,UACHC,GAAI,YACJC,GAAI,WACJC,GAAI,SACJC,GAAI,WACJC,GAAI,SACJC,IAAI,eAcPnB,GAIGY,GAAIf,EAFRgB,GAAAhB,EACAiB,GAAId,EACAe,GAAIlB,EAYJ,QACHp3B,aAAA,SAAArI,EAAAJ,EAAAohC,GAIK,GAAIC,IAFHC,cAAAthC,EACHyI,OAAc,0BACR44B,QAAMjhC,EAAAoP,IAAAtK,GACNo8B,cAAethC,EAAAA,UAEfuhC,KAAAA,GAAAA,KAASnhC,GAHH,CAINohC,GAAAA,GAAAA,EAAephC,EAJnBihC,GAAAzB,EAAA6B,IAAA3B,EAAA2B,GAOI,MAAIA,IAEPC,cAAA,6CAnET5iC,QAAAO,OAAA,SAAA63B,QAAA,mBAAA3uB;cCDA,WAIA,QAAS3I,GAAiBorB,EAAM3qB,EAAMoB,EAAQ0V,EAAY/V,EAAYsI,EAAkBrI,EAAWG,EAAaF,EAAa8N,GAD7HtQ,OAKIgmB,WAAY,SAAS7gB,EAAMyuB,GAF7B,GAAAzuB,EAAO,CAID,GAAIqQ,EAqDL,OAtDQ,UAATrQ,EAAAiC,UACEoO,EAAIA,UAIFxV,QAAQuH,QAAQpC,EAAK+C,MAAO,SAASgF,EAAMzF,GAD3C+N,GADCrQ,EAAKiC,EACO,IAGToO,KAGAA,GAAAA,EAAcpP,GAAdyoB,SAAA,IAAA,IAAA3hB,EAAAE,OALJjI,EAAAiB,KAUDoP,EAAOrQ,IAAHA,EAAYiB,GAAAyoB,SAAA,IAAA,KACfrZ,cAAarQ,GACbqQ,GAAGrQ,EAAA8R,WAAH,gBAGQ9R,GAENqQ,GAAAA,EAAcrQ,aAGdqQ,EAAAA,WAEDA,GAAA,KAAArQ,EAAAnB,WAECwR,EAAAA,gBAAyCqZ,GAApB1pB,EAAKkH,kBAE3BmJ,GAAA,KAAArQ,EAAAkH,eAAAwiB,SAAA,KACCrZ,EAAAA,IAAAA,IAEDA,GAAA,KAAArQ,EAAAuV,IAAAmU,SAAA,KAICrZ,EAAAA,QAAc,IAEfA,GAAA,KAAArQ,EAAA6W,QAAA6S,SAAA,KACe,UAAdrZ,EAAAA,WAEDA,GAAA,KAAArQ,EAAAmW,aACC9F,EAAAA,MAEDA,GAAA,KAAArQ,EAAAoW,MAGD/F,EAAAA,OAAAA,IAEDA,GAAA,KAAArQ,EAAAR,KAAAV,QAAA,KAAA,KAAAA,QAAA,MAAA,MAGFuR,EAGF,MA5DI,IA8DHC,WAAItQ,SAAJuQ,GAAA,GAAIvQ,KAiEJnF,OA9DEA,IACEA,QAAG6iC,QAAQC,EAAR5rB,MAAqB,KAAK,SAAA2rB,EAAAE,GAC3B59B,GAAmB09B,KAAnB19B,EAAA29B,OAAUE,GAEX79B,EAHDiB,GAGK48B,SAAWF,EAARG,OAAqB,GAAK,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd39B,EAAAA,eAAoB09B,SAAQI,EAAjBA,OAAX,GAAA,QAGA99B,IAAsB09B,KAAtB19B,EAAA29B,OAAaE,GAEd79B,EAHIuV,IAGGmoB,SAAQC,EAARG,OAAH,GAA6B,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd39B,EAAAA,MAAKmW,SAAcunB,EAAQI,OAAR,GAAnB,QAGA99B,IAAW,KAAXA,EAAW09B,OAAQI,GAEpB99B,EAHI6W,QAGG6mB,SAAQC,EAAaG,OAAK,GAAA,QAA7B,IAGG,KAHHJ,EAGGA,OAAQC,GACd39B,EAAAA,YAAY09B,EAAQI,OAAUh/B,OAG9BkB,IAAA,KAAAA,EAAA29B,OAAA,GACA39B,EAAAoW,IAAI2nB,EAAaL,OAAAA,OAEf,IAAgBM,KAAhBN,EAAIO,OAAYD,GAChBh+B,EAAAA,WAAWuC,EAAKu7B,OAAA,OAEd71B,IAAYg2B,KAAZh2B,EAAK8K,OAAOkrB,GAFEj+B,EAAhBR,KAAAk+B,EAAAI,OAAA,GAAAh/B,QAAA,IAAA,SALC,IAWG,KAXH4+B,EAWGA,OAAQC,GAAa,CAV3B39B,EAAK+C,QAYL/C,IAAAA,GAAA09B,EAAgBA,OAAA,EAChB7iC,SAAAA,QAAQuH,EAAe2P,MAAA,KAASD,SAAYrF,EAAKyxB,GAC/C,GAAAD,GAAGnsB,EAAAC,MAAsBD,IACvB9R,GAAAA,MAAK8R,MAEN7Q,GAAA48B,SAAAI,EAAA,GAAA,IAJHh2B,IAAA8K,OAAAkrB,EAAA,YAH2B,KAArBP,EAAQC,OAAO,KAxGxB39B,EAAAnB,SAAA6+B,EAAAI,OAAA,GA2GGjjC,QAAQuH,QAAQhG,EAAO,SAAS0V,EAAYrF,GAYpDhQ,EAAiBwiB,SAA2B,GAA3BnN,EAAS5L,QAAT0L,QAA2B5R,EAAAnB,SAAA,OACtCs/B,EAAAA,WAAJ1xB,QAOA5R,GAGIsjC,gBAAAA,SAAiB9tB,EAAjBrL,GAED,GAAAm5B,MALHC,EAAAviC,IAOA,IAAI0E,MAAJyE,EACA,MAAGmG,EARHtQ,SAAQuH,QAAQ4C,EAAM5I,MAAO,SAAS4D,EAAMyM,GAY5C,GAAGzH,GAAMkH,EAAY2U,WAAA7gB,GAAA,EACnBO,IAAU8P,EAAcnE,QAEzBiyB,EAAA57B,KAAA8N,IAGD,IAAA9P,GAASgM,oBA2BVwa,OA1BGxmB,GAAAA,aAAkByE,EAAMuH,YAAxBpB,SAED5K,GAAA4K,EAAAkX,YAAAlX,QAGAnG,EAAAkH,aAAD3L,GAASkL,MAAAA,EAAczG,YAGtBA,EAAAmH,cAAD5L,GAASoI,MAAN3D,EAAiBA,aAGnBA,EAAAuH,YAADhM,GAASyI,MAAAA,EAAAA,WAGRhE,EAAAuG,KAAAvG,EAAAuG,IAAAtK,KAADV,GAAU,MAAQ89B,EAAAA,IAAUn4B,IAhKzBlB,EAAAyG,YAAAzG,EAAAyG,WAAAxK,KAwJDV,GAAU,MAAQyE,EAAMyG,WAAWxK,IAElC+D,EAAM2D,SAAW3D,EAAM2D,QAAQ1H,KAYlCV,GAAIzE,MAAYW,EAAAA,QAAgByJ,IAEhClB,EAAIjI,kBAAiB+kB,EAASwc,iBAAhBr9B,KACdV,GAAI6G,MAASrK,EAASA,iBAAtBkE,IATAV,GAAU,MAAQ89B,UAAUn4B,GAAa,MAAQi4B,EAAYI,KAAK,MAkB9D/hC,eAAK,SAAS4K,EAATpC,GAGL,GAAAlJ,GAAAD,KAAAY,gBAAAyJ,EAAAlB,GACAw5B,EAAA3jC,QAAA8N,QAAArN,SAAAmjC,cAAA,SAAAC,KAAA,QACA3hC,EAAA6H,OAAAkd,SAAAwc,KAAAvsB,MAAAysB,GAAA,GAAAA,EAAA1iC,EAXLsL,GAAArK,QAAAA,EAaAuB,SAzLIgD,IAAA,yBAAAvE,GA0LLgS,EAAAA,KAbG,6FAA8F3H,GAAMu3B,QAerG,SAAG3+B,EAAQ4+B,EAAMC,EAAAxjC,GAEf2J,EAAApI,SAAAwK,EAAAnG,GAAApE,eAAAqkB,QAAAplB,EAAAsL,EAAAnG,MAZCyhB,MAAM,SAAStb,EAAKw3B,EAAOC,EAAQxjC,OAsBpC2E,WAAK8R,SAAL9R,GAGD,GAAA,MAAAA,EAAA,CAgBC,GAzBC,gBAAkBA,KAASA,EAAK8R,aAgBjC9R,EAAA8R,WAAS5K,EAAAA,cAIM,UAAflH,EAAI8+B,aACJ9+B,EAAA8R,WAAA,QAIIitB,UAAJ/+B,EAAI++B,YAAgB,UAAA/+B,EAAAiC,SAEpB,MAhBAjC,GAAKiC,SAAW,SAgBZuU,CAEFlY,IAAY,UAAZA,EAAAA,YAA2CwgC,UAA/B9+B,EAAAiC,SAAZ,CAEFjC,EAAIg/B,iBAdFh/B,EAAKkH,eAAiB,EAkBtB,IAAA43B,GAASG,uBAAyBl1B,EAAMm1B,YAAcl/B,UACpDm/B,EAAAA,KACA,QAAAn/B,EAAAoW,MAEDgpB,EAAA,MAdH,IAAIL,GAAgB,4BAA8B/+B,EAAKmW,YAAcipB,EAAK,UAiBxEn+B,EADYzD,EAAAmD,KAAAm+B,EAAA,KAAA9+B,EAAAiB,IAAA,EAEZ6Q,IACA7P,QAAAA,IAAUjC,8BAHE8+B,EAKZ3oB,IAAAA,GAAkBA,EAAAA,QALN4oB,GAOZ73B,IACA1H,SAAAA,QAAMjC,EAAuBiZ,SAAAA,EAAvBlU,GACN8c,GAAAA,EAAAA,YAAa7hB,EAAaue,IAAAA,EAAUqjB,YAAeE,EAAAA,eAEnDjpB,YADAmL,EAAgByH,IAKlB,IAAAta,IA1CGzN,GAAAjB,EA4CGA,GAfJ8R,WAAY9R,EAAK8R,WAiBnB7P,SAAIoR,EAAWjX,WACf+hB,aAAS3gB,EAAQq1B,QACjB1c,YAAO3X,EAAQ2X,YACb7X,KAAAA,EAAYuf,UAAU7d,GAEvBkH,eAAIlH,EAAAkH,eACH1H,KAAI8/B,EAASxjB,UAAbtF,EAAAiJ,OAAAjJ,EAAAuS,aACA3J,YAAImgB,EAAa/hC,UAAiB6V,EAAS4L,mBAAiBkgB,EAA5DK,yBAhBAje,KAAM/K,EAAUwS,eAkBhB5S,IAAApW,EAAQoW,IAINqpB,OADF/wB,GAAG3L,MAAIvE,EAAQkhC,cAAAhxB,EAAA8H,EAAAwoB,GACbS,EAfD,GAAGz/B,EAAK8R,aAAc1V,GAAO,CAmB5BqjC,GAAAA,GAAKjiC,EAAQmD,EAAK0S,YAClBssB,EAAAniC,EAAOgB,SAAQ6U,EAAA4L,QAAA,KAAAjf,EAAAiB,GACbw+B,IAAAA,EAAAA,OAdD,CAkBH,GAAAH,GAAM9gC,EAAH,GACD0R,EAAA1S,EAAA29B,SAAA9nB,EAAA4L,QAAAqgB,EAAA,cAEApvB,EAAGA,KAGDuvB,EAAAjiC,EAAAmD,KAAA0S,EAAAmC,aAAA,KAAAxV,EAAAuV,IAAArF,GAAAA,SACA5R,EAAAA,EAAQgD,KAAI+R,EAAAmC,aAAZ,cAAA+pB,IAdAE,EAAGjhC,SAkBPihC,EAAI/wB,EAAAA,KAAUwE,EAAY0sB,eAAWvsB,KAAUisB,EAAjC/pB,KACdrC,EAAAA,SACA7V,EAAAA,EAAawiC,KAAAA,EAAgBnxB,eAA7B,cAAA6wB,KAIAE,EAAG/wB,OAAQzM,IACT69B,EAAAA,EAAAA,GAGAA,EAAAA,aAAaP,IAGfrvB,EAAG4vB,KACDxhC,QAAGd,IAAQmS,kBAIPjB,IAAAA,GAAAA,EAAgBqxB,WAAS1K,EAAzBiK,EAAApvB,EACAgD,GAAI8sB,SAAOxiC,GACXH,EAAG2iC,gBAAiBtxB,EAAAhD,GAClBgD,EAAAA,QAAQwQ,EAAAA,OAGX,IAAA4gB,GAAA,IAOH,KALDA,EADE,WAAApxB,EAAAzM,UAAA,GAAAyM,EAAA8I,OACF,WAEOtQ,cAOJ1J,EAAIqK,SAAAA,EAAJi4B,KAAAtiC,EAAAmS,SAAA0D,EAAAikB,QAAA,CACAz8B,EAAAA,WACEgN,IAAAA,GAAAA,EAAgBlH,KAACM,EAAD6+B,GAAwB73B,KAAOyG,EAAAA,GAEhD,IAHDqxB,EAAAvhC,OAAA,EAAA,CAlBEkQ,EAAQyM,MAAQ4kB,EAAM,GAAG1K,SAsB3B3mB,IAAAA,GAAQzL,EAAAA,KAARoQ,EAA2BxL,OAA3B,KAAAk4B,EAAA,GAAA1K,UACA3mB,GAAQ5L,OAAR,IAPG4L,EASG2E,SAASG,EAAYS,SAAA+rB,EAAA,MAQxB,GAFCtxB,EAAA5L,UAAA4L,EAAA3L,MAED/C,EAAAkH,gBAAA,EAGH,GAFCwH,EAPDxH,eAAAlH,EAAAkH,eASmB1J,UAAnBkR,EAAI0E,cAGA1E,IAAQzL,YAARyL,EAAQzL,SAAmB9F,CAC3BuR,GAAAA,KAED7T,SAAAuH,QAAAsM,EAAA3L,MAAA,SAAAgF,EAAAzF,GACFuF,EANDtF,MAAAtB,GAAA8G,EAAA9G,GAAAgH,IAAAF,EAAAE,KAAAyG,EAAAxH,eAAA,SAfAwH,EAAQzL,iBAAmB4E,EAwB/B6G,EAAQmI,UAAa1Z,EAAA6F,WAAA0L,EAAAzL,iBAAAyL,EAAA3L,WAEnB,IAAI4T,EAASnZ,WAAa6V,CAC1B,GAAGsD,GAAAnZ,EAAmBmD,KAAA0S,EAAAG,WAAA,YAAA9E,EAAA6E,cACpB7E,SAAAA,QAAQxL,EAAa/F,SAAY8W,EAAS3R,GAC1CoM,GAAAA,EAAQ5L,cAAY3F,EAAY6F,eAIlC0L,MAFCA,GAAAzL,iBAAA9F,EAAA8W,SAAAL,QAPHlF,EAQQA,UAAQ0mB,EAAiBpyB,WAAA0L,EAAAzL,iBAAAyL,EAAA3L,cAK7B,IAAG8X,EAASnH,YAAGusB,CACf,GAAA7sB,GAAe8sB,EAAAA,KAAAA,EAAuBxxB,YAAQxO,iBAARwO,EAAA6E,cACtC1Y,SAAGggB,QAAAzH,EAAY+sB,SAAfvsB,EAA8C1T,GAC9C0T,EAAGwsB,UAAYC,EAAZn5B,iBAvBCwH,EAAQzL,iBAAmB9F,EAAY8W,SAASL,GAyBpDlF,EAAGmM,UAAYolB,EAAZj9B,WAAmC0L,EAAQzO,iBAARyO,EAAA3L,UAlB1C,GAAG/C,EAAK6W,QAAU,EAAG,CAyBrBnI,EAAOA,QAAP1O,EAAA6W,OAED,IAAAF,GAAAnZ,EAAAmD,KAAA0S,EAAAyD,SAAA,KAAA9W,EAAA6W,QACFF,GAAAnY,OAAA,IAxBOkQ,EAAQxL,WAAa/F,EAAY8W,SAAS0C,EAAO,IAyBtD3W,EAAKnB,UAAU1B,EAAA6F,WAAA0L,EAAA5L,UAAA4L,EAAAxL,iBAGd,IAAI0X,EAAM5M,gBAAV,CACAU,EAAQlR,kBAAoBqB,EAC5B6P,EAAAA,mBAAsBmG,CACtBnG,IAAAA,GAAckM,EAAdja,KAAA,8BAAA,gBAAA+N,EAAA0mB,gBACA1mB,IAAQyP,EAAezS,OAAE0nB,IACzB,GAAA1kB,EAAQ7O,GAAAA,kBAAR6O,EAAAxO,oBACA,GAAAwO,EAAQ7P,GAARqhC,kBAAAxxB,EAAAxO,oBACA,GAAAwO,EAAQhM,GAARy9B,kBAAAzxB,EAAAxO,oBACmC4b,GAAnCpN,EAAQ0Q,GAAAA,kBAA2BtD,EAAYuD,oBAE/C,GAAAxE,EAAA,GAAAolB,kBAAAvxB,EAAAzO,qBAEG,GAAA4a,EAAA,GAAAqlB,kBAAAxxB,EAAAzO,qBACH,GAAA4a,EAAQrb,GAAM2gC,kBAAdzxB,EAAAzO,qBAED,GAAA4a,EAAA,GAAAwlB,kBAAA3xB,EAAAzO,sBA/YA,MAAAyO,GAmRIpQ,QAAAgD,IAAA,QAAAtB,EAAAiB,GAAA,iBAAAoS,EAAA4L,SAoIP,GAAAjf,EAAIwO,SAAW,CAzBb,GAAIR,GAAQxQ,EAAQq1B,SAAS7yB,EAAKnB,SAAW,UAAW,KAAMmB,EAAKiB,GA2BrE,IAAA+M,EAAGhO,OAAc,EAAjB,CAGE,GAAG4a,GAAM9I,EAAAA,GACP9R,EAAK8R,EAAAA,OAAa9R,EAAKsgC,SAAvB,UAAA1lB,EAnBA,OAqBDlM,GAAAwE,EAAA2B,gBAAAnJ,GA5BCgD,EAAQkM,IAAMA,EA6BhBlM,EAAG1O,aAAmB0L,EAAA0nB,aACpBpzB,EAAK8R,aAAapG,EAAAypB,aAEnBzmB,EAAA7P,SAAAmB,EAAAnB,SA5BC6P,EAAQhM,QAAU1C,EAAK0C,QA6BzBgM,EAAG1O,YAAAzC,EAA0Bue,UAAApQ,EAAA2T,cAAA3T,EAAA6T,oBAC3BrM,EAAIG,SAAWjX,GA3BRsS,EAGP,OAAQlP,KAAM,gBAgCR,OAAAA,KAAA,wBAAAQ,EAAA8R,cAKHrD,YAAA,SAAAzO,GAEJ,GAAAwO,KACD,IAAGxO,MAAHA,OAEIwO,CAWH,IAVGxO,EAAI++B,YAAAA,EAAgBuB,eAAAlkC,KACpBoS,EAAAA,WAASuwB,EAAAA,cAIZ,UAAA/+B,EAAA8R,aA5BC9R,EAAK8R,WAAa,QAiCnB9R,EAAA8R,aAAA1V,GAAA,CACF,GAAAiX,GAAAjX,EAAA4D,EAAA8R,WACDtD,GAAOA,mBAAP,KAEDA,EAAA6E,EAAA4L,SAAAxZ,EAAAwZ,OAEJ,KAAA,GAAAshB,KAAAltB,GA9cD,GAAAktB,EAAA3uB,QAAA,OAAA,EAAA,CAkbc,GAAe,cAAZ2uB,IAA6BvgC,EAAKkH,eACnC,QAGFsH,GAAS6E,EAASktB,IAAa96B,EAAkB86B,IAKvD,GAAsB,UAAnBvgC,EAAK8R,YAA2C,UAAjB9R,EAAKiC,SAAsB,CAEzDuM,EADe,uBAAyBxO,EAAKmW,YAAc,WACtC,IACrB,IAAI4oB,GAAgB,4BAA8B/+B,EAAKmW,YAAc,YACrE3H,GAASuwB,GAAiB,KAC1BA,EAAgB,4BAA8B/+B,EAAKmW,YAAc,aACjE3H,EAASuwB,GAAiB,KAI3B/+B,EAAKnB,WACN2P,EAASxO,EAAKnB,SAAW,WAAa,MAI1C,MAAO2P,KAzcb7S,EAAA6G,SAAA,QAAA,QAAA,UAAA,cAAA,cAAA,oBAAA,aAAA,eAAA,eAAA,UAAA3H,QAAAO,OAAA,SAAA63B,QAAA,mBAAAt3B;cCDA,WAIA,QAAS2B,GAAY3B,GACnB,OAGEW,YAAa,SAAS4J,EAAWlB,GADnC,GAAAsD,KAQK,OAPHhM,SAAAA,QAAa0I,EAAA5I,MAAA,SAAS8J,EAATuG,GACX,GAAInE,GAAAA,EAAJyG,WAAA/O,EACAnF,IACEyN,EAAIoG,KAAU/S,KADhB2M,GAQDmG,YAXI,SAAAzJ,GAaLyJ,GAAAA,KAUG,OAPD5T,SAAQuH,QAAQ4C,EAAM5I,MAAO,SAAS4D,EAAMwgC,GAA5C3lC,GAAAA,GAAAc,EAA6B8S,YAAAzO,EAE3BnF,SAAI2T,QAAAA,EAAW7S,SAAiB8S,EAAAA,GAG9BgyB,EAAYh0B,GAAO1C,MALvB02B,IAtBN5lC,QAAAO,OAAA,SAAA63B,QAAA,eAAA,mBAAA31B;cCDA,WAGAzC,QAAAA,GAAeqY,EAAiB9W,EAAAoB,GAI9B,OAAAqM,aACEA,KAAAA,aACSrK,KAAA,aAAcA,WAAK,aAAckhC,aAAxC,IACC5kC,KAAM,SAAU0D,KAAK,SAAUmhC,WAAY,SAAUlW,UAAU,EAAMa,SAAS,EAAMd,WAAW,EAAM3f,YAAa,IAAK/I,OAAQ,IAkBlI0H,KAAAA,UAAQhK,KAAA,UAAemhC,WAAA,YAAA91B,YAAA,IAAAwH,YAAA,EAAAvQ,OAAA,EAAA8+B,eAAA,EAAA,KACrB9kC,KAAIyE,SAASf,KAAb,SAAAmhC,WAAA,YAAA91B,YAAA,IAAAwH,YAAA,EAAAvQ,OAAA,EAAA8+B,eAAA,EAAA,EAAA,EAAA,EAAA,KACA/lC,KAAAA,cAAgB2E,KAAKqK,cAAY82B,WAAA,YAA0BrV,SAAA,EAAAxpB,OAAA,EAAAuQ,YAAA,EAAAuuB,eAAA,EAAA,EAAA,IAAA/S,IAAA,OACzD/xB,KAAA,QAAGsD,KAAA,QAAHuhC,WAA0B,QAAA7+B,OAAA,EAAAuQ,YAAA,EAAAuuB,eAAA,EAAA,EAAA,IAAAtV,SAAA,IACxB/qB,KAAAA,iBAAAf,KAAA,iBAAAmhC,WAAA,OAAArV,SAAA,EAAAxpB,OAAA,EAAAuQ,YAAA,EAAAuuB,eAAA,MACD9kC,KAAA,kBAAA0D,KAAA,kBAAAmhC,WAAA,OAAArV,SAAA,EAAAxpB,OAAA,GAAAuQ,YAAA,GAAAuuB,eAAA,MACF9kC,KAJD,qBAAA0D,KAAA,qBAAAmhC,WAAA,SAAArV,SAAA,EAAAzgB,YAAA,MAAA/I,OAAA,GAAAuQ,YAAA,GAAAuuB,eAAA,MAZC9kC,KAAM,oBAAqB0D,KAAK,oBAAqBmhC,WAAY,SAAUlW,UAAU,EAAMa,SAAS,EAAMzgB,YAAa,IAAK/I,OAAQ,EAAGuQ,YAAa,GAAIuuB,eAAgB,MAkBzK9kC,KAAA,WAAA0D,KAAA,WAAAmhC,WAAA,WAAArV,SAAA,EAAAzgB,YAAA,MAAA/I,OAAA,GAAAuQ,YAAA,GAAAuuB,eAAA,GAAA,IAAA/S,IAAA,aA7BG/xB,KAAA,UAAA0D,KAAA,UAAAmhC,WAAA,OAAA91B,YAAA,IAAA/I,OAAA,EAAAuQ,YAAA,EAAAmY,WAAA,EAAAoW,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA/S,IAAA,OAcF/xB,KAAM,UAAW0D,KAAK,UAAWmhC,WAAY,UAAW91B,YAAa,IAAK/I,OAAQ,EAAG0oB,WAAW,EAAMc,SAAS,EAAMuC,IAAK,aAkB7H5C,KAAAA,OAAQzrB,KAAA,OAAAmhC,WAAe,OAAA91B,YAAA,IAAA/I,OAAA,EAAAuQ,YAAA,EAAAiZ,SAAA,EAAAd,WAAA,EAAAoW,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA/S,IAAA,OACrB/xB,KAAIyE,SAASf,KAAb,SAAAmhC,WAAA,QAAAC,eAAA,IAAAtV,SAAA,EAAAd,WAAA,IACA3vB,KAAAA,SAAA2E,KAAgB,SAAKqK,WAAY,WAC/B/N,KAAA,SAAYA,KAAT,SAAuB4kC,WAAA,SAAAxV,cAAA,IAG3B1hB,OAJD,SAAAhK,GAZA,GAAIe,GAAS,IAwBX,OANF1F,SAAAuH,QAAAvG,KAAAgO,WAAA,SAAAzK,EAAAkD,GAxCGlD,EAAAI,MAAAA,IAyBCe,EAASnB,KAqBXmB,GAGI0qB,OAAA,SAAIyQ,GACFxoB,GAAAA,GAAAA,IAQD,OAPArY,SAAAuH,QAAAvG,KAAAgO,WAAA,SAAAzK,EAAAkD,GAhBFlD,EAAStD,MAAQ0D,IAkBhBe,EAAGm7B,KAKFn7B,GAfTia,SAAU,SAAShb,GAmBf,GAAAoL,GAAIi2B,KAAAA,OAAJrhC,EACA,IAAAoL,GAAGrK,cAAQqK,GAAA,CACT,GAAArK,KACA1F,SAAAA,QAAQuH,EAAQ7B,SAAQm7B,EAAS17B,GAC/B07B,EAAG17B,MAAKiC,EAAL0+B,YAAuBpgC,IACxBsgC,EAAAA,OAAc7gC,EAAd8gC,SACD5tB,EACOtX,UAAGwE,GAJbG,EAOGm7B,EAAAt/B,MAPHmE,EAAAuK,OAAA4wB,EAAAt/B,OAWKykC,OAdP,IAAIA,KAqBRzgC,IAAAA,EAAAA,CAnBM,GAAIxE,GAAKC,IAqBbhB,SAAQiX,QAAAA,EAAc1V,SAASA,EAAM4D,GACnCA,EAAOiC,UAAPzC,EACDqhC,EAAAt+B,KAAAvC,GAEOqT,EAAAA,aAAgB7T,EAAMQ,EAAAA,EAAAoH,QAC5BpH,EAAOiC,SAAPzC,EACDqhC,EAAAt+B,KAAAvC,MAKG,MAAA6gC,GAGI,MAAA,OAKCzgC,aAAA,SAAAwK,EAAA5K,EAAA+gC,GAGD,GAAA/gC,EAAA8R,aAAIkvB,IAAWxjC,EAAAwC,EAAa5D,YAAb2B,MAAqCiC,EAAAA,WACpD,OAAA,CAGI,IAAAA,EAAAqT,UAAAzI,EAAOA,KACR,OAAA,CAKC,IAAAA,EAAAg2B,eAEH,IAAA,GAAAh+B,GAAA,EAAAA,EAAAgI,EAAAg2B,cAAApiC,SAAAoE,EACF,GAAAgI,EAAAg2B,cAAAh+B,IAAA5C,EAAAH,cAAAkhC,GAAAn2B,EAAAg2B,cAAAh+B,IAAAm+B,EAAA5L,aAAA,CAED,GAAA,SAAAn1B,EAAA8R,WACD,MAAA9R,GAAA+gC,SAAA,GAAAA,EAAA1jB,MAAArd,EAAAsd,MAAA,GAAAtd,EAAAsd,KAAArc,GACF,qBAAA2J,EAAApL,KAIF,sBAAAoL,EAAApL,IAhIE,IAAA,OAAAQ,EAAA8R,WAAA,CA2GK,GAAIkvB,GAAWxjC,EAAQmD,KAAKvE,EAAM6kC,IAAIC,OAAQ,KAAMlhC,EAAKiB,GA0B7D,IAAA+/B,EAASxhC,OAAM+yB,EAEhB3nB,MAAH,IAAUo2B,EAAA,GAAAniB,KACeziB,kBAAT0D,EAAEC,KAAhB,GAAAihC,EAAA,GAAAniB,MAtB6B,mBAAZjU,EAAIpL,KAiClB,OALD,OAhBC,IAAGQ,EAAK8R,aAAc1V,GA0B7ByjC,MAAAA,GAAAA,EAAiB/tB,YAAA/T,MAAA6M,EAAU5K,UAGzBnF,QAAAA,GAGGwR,KAAA,SAAA7M,EAAA+yB,GACF,GAJD3nB,GAAA/O,KAAA2N,OAAAhK,EAKD,IAhKIoL,GAAA,cAAAA,GAAA,CAwID,GAAIu2B,GAAUrhC,EAAEC,OAAO3D,EAAO,SAASs/B,GA0B3Cx8B,MAAAA,GAAAA,MAAoB0L,EAAA+1B,aAGhBS,EAAA,CACAvmC,GAAAA,KAAAA,EAAQuH,SAAes5B,GACrBA,EAAG17B,KAAM,aAAA,aACPohC,GACan/B,EAAYzD,QACxB+zB,UAOHsN,gBAAGzgC,SAAAY,EAAiBqhC,GAxBxB,GAAIzlC,GAAKC,IA2BDhB,SAAAuH,QAAGhD,KAAAA,WAAiB,SAApBwL,EAAgCtI,GAxBnC1G,EAAGwE,aAAawK,EAAK5K,EAAM+gC,KA0BtB/gC,EAAAiC,SAAIq/B,EAAO3hC,SAKXT,mBAAGoiC,SAAQC,GACT,GAAAC,KACD,IAAAplC,EAAA,CACF,GAAAilC,KAECxmC,SAAAuH,QAAGzC,EAAM+C,SAAW9C,EAAM8C,GACxB1C,IACEA,EAAAiC,WAAAo/B,KACDA,EAAArhC,EAFDiC,cAKCo/B,EAAArhC,EAAAiC,UAAAM,KAAAvC,MAKFnF,QAAAuH,QAAAvG,KAAAgO,WAAA,SAAAzK,EAAAkD,GAGD,GAAAlD,EAAAI,OAAOG,GAAME,CA3BjB,GAAI4hC,GAASJ,EAAMjiC,EAASI,MAAME,KAAK,SAASC,EAAOC,GA8BrD,GAAkB8hC,YAAlBtiC,EAAOO,KAAW+hC,CAEpBF,GAAAA,GAAQpiC,EAASI,cAEd8hC,KAAAA,EAAA,EACHE,IAAAA,GAAQpiC,EAASI,cA3Bb,IA4BL+hC,IAAAA,EAAA,GA5BQD,GAAQC,EA+BnB,MAAAA,GAAAD,MA3BW,IAAuB,OAApB3hC,EAAMmS,YAA2C,SAApBnS,EAAMmS,WAAuB,CAChE,GAAGnS,EAAM+C,SAAW9C,EAAM8C,QACxB,MAAI/C,GAAM+C,QAiCrB9C,EAAA8C,QAlOL/C,EAAA+C,QAAA9C,EAAA8C,SAmOI,EAjCqB,CAzM3B,IAAA9C,EAAA4d,YAAA7d,EAAA6d,WAiNkB,MAAO5d,GAAM4d,WAAa7d,EAAM6d,eAG/B,IAAG,gBAAkB7d,IAAS,gBAAkBC,GACnD,MAAOD,GAAME,aAAeD,EAAMC,YAGpC,OAAOF,GAAMH,KAAKkiC,cAAc9hC,EAAMJ,OAExCgiC,GAAQpiC,EAASI,MAAQiiC,MAGzBD,GAAQpiC,EAASI,WAavB,MAAOgiC,KAzOb3mC,QAAAO,OAAA,SAAA63B,QAAA,gBAGC,cAAc,QAAQ,UAAU51B;cCJjC,WAGAxC,QAAAA,KAGC,OADD8mC,MACCniC,KAAO,iBACHmiC,IAAK,EACEniC,IAAAA,KAPZ3E,QAAAO,OAAA,SAAA63B,QAAA,iBAAA2O;cCDA,WAGA1uB,QAAAA,GAAA3V,EAAuBC,EAAgBL,EAAWf,GAS9CyY,QAAAA,GAAAA,EAAiBA,EAAAA,GAMjB,OACA+F,IAAAA,EACAxF,UAAAlF,EAAAjP,GAAAzD,EAAO29B,SAAA9nB,EAAA4L,QAAArE,EAAA,MACLA,WADKvH,EAAA7T,KAEL4V,WAAYlF,EAFPirB,SAAA9nB,EAAA4L,QAAArE,EAAA,cAGL3Z,aAAYk6B,EAAS9nB,SAAS4L,EAASrE,QAAnCA,EAHC,gBAIL9I,OAAAA,EAAauB,SAAS7T,EAJjByf,QAAArE,EAAA,QAKL4C,aAAahgB,EAAQ29B,SAAS9nB,EAAS4L,QAASrE,EAAK,gBACrDuD,KAAAA,EAAe3gB,UAAQ29B,EAAS9nB,SAAS4L,EAA1BA,QAAwCrE,EAAA,SACvDpD,IAAAA,KACA3X,KAAAA,KACAyd,MAAOngB,KACPoY,eAVK,KAWL/V,SAAO,KACPuD,QAAQ,MAZH,QAAP8+B,GAAAxuB,GAqBA,QAAI7V,EAAQmS,SAAS0D,EAAS4L,aAC5B1hB,EAAAoS,eAIA,gBAAA0D,KAAA7V,EAAAmS,SAAA0D,EAAAmC,kBAIA,kBAAAnC,KAAA7V,EAAAmS,SAAA0D,EAAAuC,mBAUH,QAAAksB,GAAAzuB,GACD,IAAAwuB,EAASC,GAGL,MAAO,KAER,IAAA5yB,IAAA,GAAAjK,OAAAwgB,SACDpS,GAAInE,QAEJmE,KAAAA,GACIknB,GAAU/8B,EAAQw9B,WAAW3nB,EAAS4L,SAD1C5L,EAAAA,EAASjX,EAAAA,IAATue,EAAA,CACA,GAAI4f,GAAAA,EAAU/8B,SAAQw9B,EAAW3nB,QAAS4L,EAA1C,QAEE8iB,EAAYvkC,EAAQ29B,SAAS9nB,EAAS4L,QAA1BtE,EAAsC,cAG9CqnB,EAAexkC,EAAQ29B,SAAS9nB,EAAS4L,QAAStE,EAAG,eADzDsnB,EAAgBzkC,EAAQ29B,SAAS9nB,EAAS4L,QAAStE,EAAG,aAKtD,IAAGonB,EAAY,GAAKC,EAAe,GAAKC,EAAc,GAAc,IAATC,EAAa,CAAxE,GAAAltB,KAAAitB,GAAG,GAAiBD,gBAAjB3uB,KACD2B,EAAIA,EAAJrU,KAAA0S,EAAAmC,aAAA,cAAAysB,IAEEjtB,EAAaxX,QAAQmD,kBAAc6U,KAGjCR,EAAaxX,EAAQmD,KAAK0S,EAASuC,eAAgB,cAAeqsB,IAGrE,IAAAE,GAAAntB,EAAAxW,MAEG2jC,KADJntB,GAAImtB,MACJA,EAAIA,EAIH,KAAA,GAAAjyB,GAAA,EAAAA,EAAAiyB,IAAAjyB,EAAA,CAECmD,EAAIL,MAAQzQ,KAAZq9B,EAAAvsB,EAAAsH,EAAA3F,EAAA9E,GAAA,MAOL,GAAAkyB,IAAA,GAAAn9B,OAAAwgB,UAEG4c,EAAOD,EAAMlzB,CADjB5Q,SAAI8jC,IAAM,mBAAVC,EAAA,IAAA,SAAAhvB,EAAA7T,MAID,QAAAmrB,GAAA3qB,GACD,GAAAA,EAAA4a,KAAS+P,EAAS3qB,CAGd,GAAI0L,EADN1L,GAAGA,YAAeA,EAAA8R,aAAA1V,GAChBsP,EAAIA,EAAJonB,OAAA12B,EAAA4D,EAAA8R,YAAAmN,QAAAjf,EAAA4a,KAEMpd,EAAAA,WAELkO,EAHDlO,EAGQwC,OAAKnB,EAARA,SAAkB,UAAAmB,EAAA4a,YAGtB5a,GAAA4a,GAED,IAAI1K,GAAIlQ,EAAKoV,SAUb,IARgB,MAAbpV,EAAKR,OAARQ,EAAGA,KAAKR,EAAcsc,UAAApQ,EAAA+T,OAAA/T,EAAAqd,eAIlB/oB,EAAKyK,aAAeiB,EAAEwnB,WAAa,IAAvClzB,EAAIA,YAAKyK,EAANyoB,YAIc,MAAdlzB,EAAK+C,MAAe,CAAvB,GAAG/C,GAAK+C,EAAekR,SAAAvI,EACrB,IAAAwE,EAAInN,CACJ,GAAGmN,GAAG/S,EAAA8W,SAAA/D,EACJnN,GAAIuS,EAAAA,WAAiBnY,EAAY8W,GAInCjU,EAAK+C,MAAQA,EAsBf,GAnBG2I,EAAE42B,UAAYtiC,EAAKuiC,UAAtBviC,EAAG0L,QAAAA,EAAa42B,SAIK,MAAlBtiC,EAAKwiC,YAARxiC,EAAGA,KAAKwiC,EAAAA,eACNxiC,EAAKuhB,MAAL,SAAcyH,EAAAA,aACdhpB,EAAIA,KAAKuhB,QAKR7V,EAAE0pB,iBAAmB,IAAxBp1B,EAAG0L,gBAAAA,EAAqB0pB,iBAIrB1pB,EAAE4O,YAActa,EAAKuT,gBAAxBvT,EAAG0L,cAAgB1L,EAAAA,WAIhB0L,EAAE4O,YAActa,EAAKuT,cAAxBvT,EAAG0L,cAAgB1L,EAAAA,cAAnB,IAGU6e,IAHVnT,EAGKmT,KAAG,CACN7e,EAAAA,WAAA,OACA,IAAAqT,GAAIA,EAAWjX,EAAM4D,WACrB,IAAAqT,EAAGA,CAED,GAAAovB,GAAIA,EAAUjlC,KAAQmD,EAAK0S,OAAb,KAAA3H,EAAoCA,GAClD+2B,IAAGA,EAAWA,SACZziC,EAAAA,cAAAyiC,EAAqBA,GAAAC,iBAK3BxyB,IACElQ,EAAAA,IAAAkQ,EAAWA,UAGblQ,GAAOA,WAIX,QAAA0e,GAASA,GACP,GAAArL,GAAIA,EAAWjX,EAAM4D,WAErB,IAAAA,EAAGA,UAAAxC,EAAiBA,SAAQmS,EAAS3P,SAAA,WAAjB,CAClB,GAAA0kB,GAAIA,EAASie,EAAoB3iC,SAAA,UAApBA,EACb,IAAA0kB,EACE,MAAAA,GAIJ,GAAA1kB,EAAGA,UAAAxC,EAAiBA,SAAQmS,EAAS3P,SAAA,mBAAjB,CAClB,GAAA0kB,GAAIA,EAASie,EAAoB3iC,SAAA,kBAApBA,EACb,IAAA0kB,EACE,MAAAA,GAIJ,GAAArR,GAAGA,EAAY7V,SAAQmS,EAAS0D,SAAjB,CACb,GAAAqR,GAAIA,EAASie,EAAoBtvB,QAApBrT,EACb,IAAA0kB,EACE,MAAAA,GAIJ,SAGF,QAAAie,GAASA,EAAT3iC,GACE,GAAAnB,EAAGA,CACD,GAAAgc,GAAIA,EAAWrd,KAAQmD,EAAR,KAAAX,EAA6BA,GAC5C,IAAA6a,GAAGA,EAAYA,OAAA,EACb,MAAAA,GAAOA,GAIX,MAAA,MAGF,QAAAhG,GAASA,GACP,MAAAnJ,IAIEzK,GAAAA,EAAIyK,GACJlM,KAAAA,EAAMjC,UAAaue,EAAUpQ,OAAvBA,EAAiCA,aACvC4R,KAAAA,EAAMngB,UAAY0gB,EAAUnS,MAC5B6V,KAAAA,EAAM7V,eACN8R,WAAAA,EAAa9R,WACb7M,SAAAA,EAAU6M,SACV8L,OAAAA,EAAQ9L,SAjOZ,OAFFo2B,UAAS5uB,EAILyX,SAAUA,EAFZiV,WAAOA,EACLkC,YAAWA,EACXnX,gBAAUA,GARdzX,EAAA1Q,SAAA,eAAA,UAAA,cAAA,SAAA3H,QAAAO,OAAA,SAAA63B,QAAA,cAAA/f;cCDA,WAGArY,QAAAA,GAAQO,EAAgB63B,EAAQxtB,GAoL5B,QAAS4G,GAAKmD,EAAU+iB,GACtB,GAAIzgB,GAAajW,IACjBiW,GAAWgvB,SAAU,EAErBhvB,EAAGA,MACDygB,KAKEqQ,EAAW9wB,KAAAA,EAAYygB,WADzBqQ,EAAA9wB,EAAAygB,KAIEqQ,EAAAA,KAAW9wB,EAAXmN,QAAAxZ,EAAAwZ,QAAAzP,EAAA,WADFozB,EAEG9wB,EAAWioB,IACdjoB,EAAGioB,cACDv8B,gBAAasU,IACX8wB,EAAAA,KAAW9wB,EAAX0D,aAAA/P,EAAA+P,aAAAhG,EAAA,WADFozB,EAEG9wB,EAAWioB,IACfjoB,EAAAioB,cAECv8B,kBAAasU,IACX8wB,EAAAA,KAAW9wB,EAAX8D,eAAAnQ,EAAA+P,aAAAhG,EAAA,WADFozB,EAEG9wB,EAAWioB,IACfjoB,EAAAioB,cAECv8B,UAAasU,IACX8wB,EAAAA,KAAW9wB,EAAXovB,OAAuB3O,EAAvB2O,OAAA1xB,EAAA,WADFozB,EAEG9wB,EAAWioB,IACfjoB,EAAAioB,cAGF6I,EAAA9wB,EAAAygB,IAID,QAAGh1B,GAAaoS,EAAb4iB,IAMDA,EAAAA,aACAzgB,EAAAA,SAAWgvB,EAAX7hB,UACD,gBAAAnN,KAAAtU,EAAAmS,SAAAmC,EAAA0D,gBAAAhY,EAAAs9B,UAAAhpB,EAAA0D,eACF,kBAAA1D,KAAAtU,EAAAmS,SAAAmC,EAAA8D,kBAAApY,EAAAs9B,UAAAhpB,EAAA8D,iBACF,UAAA9D,KAAAtU,EAAAmS,SAAAmC,EAAAovB,UAAA1jC,EAAAs9B,UAAAhpB,EAAAovB,UAJK3O,IACAzgB,EAAWgvB,SAAU,GA3N3B,GAAI+B,IAEA7+B,OAAAA,QAAQ,kCACNib,KAAAA,SACAlhB,SAAM,EACN2qB,QAAAA,GAIFoa,MAAAA,QAAM,wCACJ7jB,aAAS,gCACTzJ,eAAc,uCACdI,SAAAA,+CACAkB,WAAU,8BACVisB,KAAAA,QACAhlC,SAAM,GACN2qB,QAAAA,GAGFsa,MAAAA,QAAM,oCACJ/jB,KAAAA,WACAlhB,aAAM,6CACNyX,SAAAA,GACAkT,QAAAA,GAGFuY,KAAAA,QAAK,uCACHhiB,aAAS,4CACTzJ,eAAc,uCACdI,WAAAA,0CACApC,OAAAA,kCACA0tB,KAAAA,OACAnjC,SAAM,GACN2qB,QAAAA,GAGFua,OAAAA,QAAO,iCACLhkB,aAAU,sCACVzJ,KAAAA,SACAzX,SAAM,GACN2qB,QAAAA,GAGFtsB,OAAAA,QAAO,2BACL6iB,SAAS,4BACTikB,UAAU,6BACVC,WAAW,8BACX3vB,aAAY,gCACZgC,OAAAA,8BACA8hB,WAAQ,8BACRyL,KAAAA,YACAhlC,SAAM,GACN2qB,QAAAA,GACA0a,IACFC,QAAI,qCACFpkB,SAAS,sCACTikB,UAAU,uCACVC,WAAW,8BACX3vB,aAAY,gCACZgC,SAAAA,+CACAsB,OAAAA,8BACAwgB,WAAQ,8BACRyL,KAAAA,YACAhlC,SAAM,GACN2qB,QAAAA,GACA0a,MACFE,QAAM,kCACJrkB,SAAS,mCACTikB,UAAU,oCACVC,WAAW,qCACX3vB,aAAY,uCACZgC,OAAAA,8BACA8hB,WAAQ,8BACRyL,KAAAA,YACAhlC,SAAM,GACN2qB,QAAAA,GACA0a,OACFG,QAAO,+BACLtkB,SAAS,gCACTikB,UAAU,iCACVC,WAAW,8BACX3vB,OAAAA,8BACA8jB,KAAAA,YACAv5B,WAAM,8BACNglC,SAAAA,GACAra,QAAAA,GAGF8a,QAAAA,QAAQ,qCACNvkB,SAAS,sCACTikB,KAAAA,OACAnlC,SAAM,EACN2qB,cAJM,EAKNqR,QAAAA,GACAqJ,OACFK,QAAO,sCACLxkB,SAAS,uCACTikB,UAAU,wCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,QAAAA,GACA0a,OACFM,QAAO,sCACLzkB,SAAS,uCACTikB,UAAU,wCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,cANK,EAOLqR,QAAAA,GACAqJ,OACFO,QAAO,sCACL1kB,SAAS,uCACTikB,UAAU,wCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,QAAAA,GACA0a,OACFQ,QAAO,sCACL3kB,SAAS,uCACTikB,UAAU,wCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,QAAAA,GACA0a,MACFS,QAAM,gCACJ5kB,SAAS,iCACTikB,UAAU,kCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,QAAAA,GACA0a,OACF7kC,QAAO,iCACL0gB,SAAS,kCACTikB,UAAU,mCACVC,OAAAA,mCACA7L,KAAAA,OACAv5B,SAAM,EACN2qB,QAAAA,GACA0a,OACFU,QAAO,mCACL7kB,SAAS,mCACTikB,OAAAA,mCACA5L,OAAQ,sBACR3jB,YAAQ,uBACRD,KAAAA,QACA3V,SAAM,EACN2qB,QAAAA,GACA0a,SACFW,QAAS,sCACP9kB,KAAAA,UACAlhB,SAAM,EACN2qB,QAAAA,GAiBJ,OAZA7tB,SAAAuH,QAAAygC,EAAA,SAAA/wB,EAAArF,GACA5R,EAAQuH,KAAQygC,EACd/wB,EAAWtS,SAAX,EACAsS,EAAWgvB,MAAX,KACAhvB,EAAW1V,KAAXiQ,EACAyF,EAAWzF,MAAOA,WAClByF,EAAW7C,MAAQ,KACjB6C,EAAW1V,SAAQ,KAKhBymC,EAnLXhoC,QAAAO,OAAA,SAAA63B,QAAA,SAGC,eAAe,UAAU,oBAAoB72B;cCJ9C,WAIA,QAASoJ,GAAKhI,EAASD,EAAckI,GAArC,GAAA5G,GAAcrB,kBAGRk8B,EAAaj0B,EAAkBu+B,OAAnC,QAGEnlC,SAAWA,EADbqf,QAAO,KAELA,SAAU,WAGR,MAAO1gB,GAAQmS,SAAS9Q,IACzBolC,kBANI,WASH,MAAOzmC,GAAQymC,kBAAkBplC,IAClCwN,KAVI,SAAAmD,EAAA+iB,GAaH/0B,EAAQ6O,KAAKxN,EAAU66B,EAAYlqB,EAAU,WAD/CnD,OAIC4C,MAhBI,WAmBHpT,KAAKqiB,QAAU,KADjBjP,EAAQA,MAAApQ,IAGPirB,aArBI,WAwBH,GAAItkB,MADNskB,EAAejuB,KAAA+kB,YACb,IAAAsjB,EAEA,IAAGA,GADCA,GAAUA,EAAKtjB,OAChBsjB,EAAAA,EAAHvpB,EAAY4f,IAAA5f,EACV,GAAAupB,EAAI3J,GAAU2J,EAAAA,WAAdA,EAAAvpB,GAAAjP,EAAAqjB,QAAA,GACAvpB,EAAIjD,KAAIoY,EAAM4f,GAKf,OAAA/0B,IAGF2nB,YApCI,WAuCH,GAAI5sB,MADN4sB,KAEEiR,EAAI+F,IASH,OANDtpC,SAAQuH,QAAQvG,KAAKiuB,eAAgB,SAASve,EAAKkB,GADnD03B,EAAI/F,EAAOlS,eAAX3gB,IAAAA,IAGC1Q,QAFDuH,QAAA+hC,EAAA,SAAA54B,EAAAQ,GAKExL,EAAOgC,KAAKwJ,KADdxL,GAKDqgB,WApDI,WAuDH,GAAmB,MAAhB/kB,KAAKqiB,SAAmBriB,KAAK8T,YAAcpS,EAAaoS,WAAY,CAErE,IAAA,GAHJiR,MACKxZ,EAAK8W,EAAL/E,QAAAta,GACD07B,EAAWnzB,EAAX5I,OACI4I,EAAAA,EAAAA,EAAO5J,IAAQ2b,EACnB3T,EAAI+0B,EAAAA,QAAe/7B,KAAnB4lC,UAAAh9B,EAAAuT,GAGC9e,MAAAqiB,QAAA1Y,EAED,MAAA3J,MAAKqiB,SAGRnO,QAlEI,SAAA9O,GAqEH,GAAImG,GAAOvL,KAAK+kB,YADlB7Q,IAAAA,EAEE,IAAG3I,GADCA,GAAOA,EAAKwZ,OAChBjG,EAAS,EAAAA,EAAA4f,IAAA5f,EACP,GAAAvT,EAAImzB,GAAAA,IAAUnzB,EACd,MAAQuT,GAARA,IAMHypB,UA9EI,SAAA14B,GAiFH,GAAI0R,GAAIvhB,IADVuoC,QACE14B,EAAI0R,EACJnc,GAAOyK,EAAAzK,GACHyK,KADGnO,EAAAue,UAAApQ,EAAAgsB,SAEHz2B,WAFG,SAAA0X,GAGHnZ,MAAOjC,GAAAA,WAAaue,EAAAA,MAKzByO,WA1FI,SAAA7e,EAAAiN,GA6FH,GAAQ,GAALA,EAAQ,OAAO,CADpB4R,IAAAA,EAAAA,IAAAA,EACE,OAAG5R,CAGF,IAAA0rB,GAAA34B,EAAA+rB,SAED,KAAA4M,EAAIA,OAAc5M,CAGlB,IAAG4M,GAAa1rB,EAAG,OAAO,CAA1B,IAAA2rB,GAAAzoC,KAAmBkU,QAAAs0B,EAGnB,SAAGC,GADCA,KAAAA,WAAgBA,EAAaD,EAAAA,IAMlCnY,eA7GI,SAAA3gB,GAgHH,GAAG1P,KAAK8T,WAAY,CADtBuc,GAAAA,GAAiBrwB,KAAA+kB,YACf,IAAAsjB,EAEE,IAAGA,GADCA,GAAUA,EAAKtjB,OAChBsjB,EAAAA,EAAHvpB,EAAY4f,IAAA5f,EACV,GAAAupB,EAAI3J,GAAU2J,IAAAA,EAAQ1lC,EAAAA,UAAtB,GAAA0lC,EAAAvpB,GAAAjP,EAAAM,YACA,MAAQ2O,GAAIA,GAAE4f,EAAAA,YAMjB,MAAA,QAlIP1/B,QAAAO,OAAA,SAAA63B,QAAA,QAAA,UAAA,eAAA,oBAAAztB;oOCDA,WACA,QAAAme,GAAA5f,EAAAwgC,EAAApnC,GAqCMqnC,QAAAA,KAJqB,MAAvBD,GAAA,SAAAE,EAAAC,GAMDC,SAAAC,OAEDC,mBAAiB,SAAA5f,GACL,MAAVA,EAMMlhB,EAAQ+d,SAASwc,KAAO,aAAxBv6B,EAAAA,OAOL,QAbD8gB,GAAAN,GAkBA,MAAOggB,GAAG,SAASE,EAASC,GAF9BC,SAAS9f,WAAWN,IAAK,WAAAA,GAAAugB,KAAA,QAAA,SAAAC,GAEvBN,EADAM,EACUA,EAASN,cAUpB,QAAAl+B,GAAAge,EAAAxoB,GAED,MAAAwoC,GAASh+B,SAASge,EAAKxoB,GACrB4oC,SAAAK,WAAAC,IAAA,UAAA1gB,EAAA,IAAA2gB,EAAAnpC,IAAA+oC,KAAA,QAAA,SAAAC,GAEEJ,EADFI,EACWC,EAAeD,EAAAlK,eAW5B,QAAStV,GAAYZ,GAArB,MAAA4f,GAAShf,SAAAA,EAATmf,GACE,GAAAzf,GAAUkgB,EAAAjgB,SACRD,KACAN,EAAS9pB,QAAAimB,KAAA6D,GACPA,EAAkB7D,GAAK6D,GACvBygB,SAAAA,WAAAA,IAAqBzgB,WAArBM,EAAAV,KAAA8gB,IAAA1gB,GAAAd,KAAA4gB,MAMN,QAASa,GAAc/gB,GACrB,MAAAggB,GAAA,SAAAE,EAAAC,GAEEC,SAAAK,WAAAC,IAAA,UAAA1gB,GAAAugB,KAAA,QAAA,SAAAhgB,GACA6f,GAAAA,EAAA,CACE,GAAG7f,MACD+V,EAAIt6B,EAAJs6B,KACA,KAAA,GAAIA,KAAM/V,GACVvkB,EAAIxE,GAAJwpC,EAA0B1K,EAAA9+B,GAEzB0oC,GAAAlkC,OAIDkkC,WAMR,QAAA7gB,GAASA,GAEP,MAAA2gB,GAAOA,SAAGE,EAASA,GAEjBE,SAAAA,WAAAM,IAAoBA,cAAI15B,EAAgBA,IAAxCu5B,KAAgDA,QAAhD,SAA8DhhB,GAG1D2gB,EADF3gB,EACE2gB,EAAQ3gB,cAShB,QAAS0hB,GAAcrpC,GAGnB2D,EAAEgB,OACAhB,EAAAgB,KAAA3E,EAAO6D,MAAK8C,SAAZ9C,SADFA,GAAA8C,WAMF,IAAA2iC,GAAgBrkB,KAAAA,UAAgBqkB,EACjC,OAAAtkB,UAAAC,gBAAAqkB,GAGC,QAAIA,GAAAA,GACJ,GAAAA,GAAiBC,SAAMD,oBAAvBE,GAAIxpC,EAAQ0B,KAAK6nC,MAAMD,EAiBxB,OAdG3lC,GAAEgB,OACAd,EAAAA,KAAAA,EAAK8C,MAAL,SAAsBC,GAAtB/C,EAAK8C,UAAY9C,EAAK+C,MAGpB/C,EAAAA,kBAAiB7C,EAAY6F,iBAAgBC,SAC9CjD,EAAA8C,UAAA3F,EAAA6F,WAAAhD,EAAAiD,iBAAAjD,EAAA8C,YAGC9C,EAAAA,YAAiB7C,EAAAA,WAAY6F,SAC9BhD,EAAA8C,UAAA3F,EAAA6F,WAAAhD,EAAAkD,WAAAlD,EAAA8C,cAKN3G,EAGC,QAAI8oB,GAAOkgB,EAAAhpC,GACX,GAAA8oB,GAAI2gB,EAAJ1gB,UACA0gB,IACEzpC,IAAAA,IACAipC,EAAAA,QAAAA,KAAAA,GACAA,EAAAjpC,GAAA,GACAypC,EAAQrjC,KAIRoiC,SAAGxoC,WAAaA,IAAMoP,UAAQ0Z,EAAAV,IAAA,IAAA2gB,EAAAnpC,IAAAspC,IAAAG,EAAArpC,KAG5BA,EAAIiL,KAAOjL,EAAXoP,IAAAtK,IAAA,CAGC,GAAAmG,KACDjL,GAAGA,cACDiL,EAAAA,IAAK+D,EAAShP,aAEhBA,EAAGA,SACDiL,EAAAA,OAAAjL,EAAaA,QAEfA,EAAGA,QACDiL,EAAAA,MAAAjL,EAAaA,OADZA,EAAMwpB,QAITyf,EAAAA,MAAAA,EAAAA,OAKDA,EAAAh+B,GAAA,GAEHw+B,EAAUC,KACXlB,SAAAK,WAAAC,IAAA,cAAA9oC,EAAAoP,IAAAtK,GAAA,IAAAgkB,EAAAV,IAAA,IAAA2gB,EAAAnpC,IAAAspC,IAAAj+B,IAIK,MAAAm9B,GAAIuB,IAAAF,GAGAR,QAAAA,GAAqBU,EAArBC,GACH,IAAA,GAAAnjC,KAAAkjC,GACJE,SAAAF,EAAAljC,SACFkjC,GAAAljC,GAJgBmjC,GAA8B,WAAnBE,QAAOH,EAAKljC,KAMxCwiC,EAAmBU,EAAAljC,GAAAmjC,GAKd,QAAE3f,KACDse,GAAAA,GAAAA,SAAAA,MACD,OAJDH,GAAA,SAAAE,EAAAC,GAKDE,EANDxe,UAAAvC,KAAA,WAOD4gB,KAJM,SAAS/hB,GAMhBgiB,QAAA,QAAS5e,GAAcniB,GAMnB,GAAAihC,GAAIsB,SACFvB,OALA1f,EAAOkgB,EAAQjgB,SAUjB,OAAAqf,GAAI,SAAIxoC,EAAa4H,GAEjBwiC,GAAAA,IACDxB,SAAAK,WAAAC,IAAA,UAAAhgB,EAAAV,KAAA6hB,SACFzB,SAAAK,WAAAC,IAAA,WAAAhgB,EAAAV,KAAA6hB,SAPCzB,SAASK,WAAWC,IAAI,WAAahgB,EAAKV,KAAK6hB,UAU/CtlC,IACAolC,KAAAA,GAAAA,KACEvB,GAFJhhC,EAAA5H,GAAAwP,KALI46B,EAAO5jC,KAAKoB,EAAO5H,GAAWwP,IAAItK,GAclCklC,GAAArmC,EAAAumC,KAAAF,GACAvB,EAAAA,KAAAA,EAAKxe,SAAUvC,GACbqiB,EAAA3jC,KACAkiC,SAAAA,WAAAA,IAAAA,cAAAA,EAAAA,IAAAA,EAAAA,KAAAA,YAIHF,EAAAsB,IARDK,GAAAriB,KAAA,WAvBJoB,EAAAqhB,SAAAziB,KAAA,WAyBM+gB,EAAKxe,UAAUvC,KAAK,WAElB4gB,KAWJyB,SAAJxjB,GACIuC,YASH,QAAAha,GAAAlP,EAAAI,GAED,GAAA+pC,MACDjhB,EAAAkgB,EAAAjgB,SADC,OAVGD,KAaLihB,EAAA3jC,KACEoiC,SAAO5oC,WAAU+C,IAAQ,UAAAmmB,EAAlBV,IAAP,IAAA2gB,EAAAnpC,IAAAqqC,UAEHjqC,EAAAoP,KA9RD26B,EAAA3jC,KAoRUoiC,SAASK,WAAWC,IAAI,cAAgB9oC,EAAMoP,IAAItK,GAAK,IAAMgkB,EAAKV,IAAM,IAAM2gB,EAAenpC,IAAYqqC,WAIxG7B,EAAGsB,IAAIK,GAGhB,QAAShB,GAAenpC,GACtB,MAAOA,GAAU+C,QAAQ,eAAgB,IApR3C,GAAIqmC,IAHN7f,MAAS3B,EACPuB,QAAA,WAKI,MAAOyf,UAASC,OAAO2B,aAFzBjhB,QAAOA,EACPJ,cAASY,EAERwf,cAJWA,EAKZlf,YAASA,EACTN,UAAAA,EAKAvf,SAAUA,EAHV++B,eAAAA,EAEAjpC,WAAAA,EACAkK,YAAUA,EAMV2+B,eAAgBA,EAjBJ,OAoBd74B,YAEAs4B,SAAOQ,eAKHqB,OAAQ,0CAHZC,WAAA,4BACEC,YAAA,mCACA/B,cAASgC,6BA1BXxB,EALFtqC,QAAQO,OAAO,SAAS63B,QAAQ,iBAAkB,UAAU,KAAK,cAActP;cCH/E,WAIA,QAASijB,GAAeppC,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,GAI5F0pC,QAAAA,GAAUA,GAKV,IAAI,GAPN7mC,GAAA,KAOU0L,EAAE,EAAEA,EAAEsC,EAAMxP,SAASkN,EAF/BsC,EAASlR,GAAAA,IAAQkR,aACfhO,EAAIA,EAAJ0L,GAAA3B,MAKG,KAAA,GAAA2B,GAAA,EAAAA,EAAAsC,EAAAxP,SAAAkN,EACFsC,EAAAtC,GAAAqlB,IAAA+V,WAGG94B,EAAMtC,GAAGqlB,IAAI+V,UAAU94B,EAAMtC,GAAG3B,MAAM9I,GAAIjB,EAE3C,OAAAA,GAEH,QAAA6mC,GAAAznC,EAAAjD,EAAA6R,EAAA+4B,GAEDA,IAGGA,EAAW,KAOb,KAAA,GAPEA,GAAW1pC,EAAXmd,SAAApb,EAAAI,MAEDe,KAGGoK,EAAWT,EAAS1L,OADxBwoC,EAAa,KACbC,EAAIt8B,KAEAq8B,EAAAA,EAAAA,EAAAA,IAAJpkC,EAAA,CAKE,GAAI5C,GAAOkK,EAAStH,EAEpB,OAAIxD,EAASksB,SAAWnvB,EAAMoP,IAAItK,GAAK,GAAKjB,EAAKme,aAAe,IAAM3Y,EAAK+kB,WAAWpuB,EAAMoP,IAAIG,EAAG1L,EAAKme,cAAxG,CAAAjL,EAAI9T,SAASksB,EAGbpY,KAAAA,GAACg0B,IAAA,EAADh0B,EAAAA,EAAAA,EAAYyX,EAAAA,SAAZjf,EAAA,CAIE,GAAIsC,EAAMtC,GAAGqlB,IAAIoW,cAAen5B,EAAMtC,GAAGqlB,IAAIoW,YAAYn5B,EAAMtC,GAAG3B,MAAM9I,GAAIjB,GAGxEinC,CAEDC,GAAA,CACF,OARCA,YAAJl5B,GAAAtC,GAAAqlB,MACAiW,EAAAh5B,EAAcA,GAAAA,IAAMxP,SAClByoC,EAAUv7B,EAANA,GAAay7B,MAAAA,IAelB,GAJAD,GAEC3mC,EAAOgC,KAAKvC,GAEbO,EAAA/B,QAAAuoC,EAEC,OAeJ,MAZCxmC,GAAA6mC,EAAA7mC,GACDA,EAAAA,EAAS6mC,KAAAA,SAAiB7mC,EAA1BX,GAGE,MAAGonC,GADIzmC,EAAOb,EAAKC,EAASA,GAIvBA,EAAAH,KAAAkiC,cAAA9hC,EAAAJ,QAQT,QAAS4nC,GAAiBhrC,GACxB,IAAA,GADFmE,MACMA,EAAAA,EAAAA,EAAAA,EAAJ/B,SAAAoE,EAAA,CAEI,IAAIoQ,GADJA,IAAJ,EACQA,EAAAA,EAAQ2G,EAAA/W,IAAZ+W,EACA,GAAI0tB,EAAQ1tB,EAAMA,GAAGvd,EAAAud,IAAA,CACd0tB,GAAAA,CACCr0B,OAKJA,GAADzS,EAAHgC,KAAWnG,EAAAwG,IAKf,MAAOrC,GAGT,QAAS8mC,GAAY1nC,EAAOC,GAA5B,MAAAD,GAAS0nC,MAAAA,EAAY1nC,MAArBA,EAAmCoD,MAAAvE,QAAAoB,EAAAmD,MAAAvE,QAAAmB,EAAA2d,MAAA1d,EAAA0d,MAAA3d,EAAA6d,YAAA7d,EAAA6d,YAKxB1d,EAAEwnC,QAAQ3nC,EAAMoD,MAAOnD,EAAMmD,OA3G1ClI,OACAiC,QAAS8pC,EAILC,SAAUA,GAPdD,EAAApkC,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,eAAA3H,QAAAO,OAAA,SAAA63B,QAAA,iBAAA2T;cCDA,WAIA,QAAS/4B,GAASrQ,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,EAAaoqC,EAAeX,GADtH/rC,OACA2sC,eAIMC,QAAS,aAFbC,SAAO,eAAA,YAAA,WAAA,eAAA,cAAA,WAAA,eACLF,QAAAA,eAAe,YAAA,WAAA,eAAA,cAAA,WAAA,eACbC,aAAS,kBADI,YAAA,WAAA,eAAA,cAAA,YAEbC,OAAAA,eAAU,YAAe,WAAY,gBAAW,eAAe,cAAc,YAC7EC,kBAAS,YAAe,cAAY,eAAW,eAAe,cAAc,WAAW,eACvFC,mBAAc,YAAA,cAAD,eAA0C,eAAe,cAAzD,WAAA,eACbC,sBAAQ,YAAe,WAAY,uBAA2B,eAAe,cAAtE,YACPC,qBAAmB,YAAY,uBAAc,eAAe,eAAe,cAAc,YACzFC,UAAA,YAAoB,mBAAY,uBAAb,eAAA,cAAyD,WAAc,uBAC1FC,SAAA,eAAuB,WAAD,eAAwB,YAC9CjE,SAAA,WAAA,eAAqB,eAAa,YAClCgE,MAAAA,kBAAU,WAAa,eAAmB,YAC1CC,QAAAA,eAEAnE,WAAO,SAAAzkC,EAAkBjD,EAAA6R,GACzBi6B,GAAAA,GAAAA,IAda,IADV7oC,EAAAI,OAAA3D,MAAA2rC,cAAA,CAiBLp5B,GAAAA,GAAYvS,KAAAqsC,YAAS9oC,EAAUjD,EAAO6R,QAChCoP,EAAJmqB,EAAAY,GACG/oC,EAAAgpC,EAAiBh6B,WAAKo5B,EAAerrC,EAAA6R,EACtC,IAAAo6B,EAAID,WACJ,MAAIC,EAGF,IAAAA,EAAOC,WADT,GAGKC,GAAA1B,EAAAC,SAAAznC,EAAAjD,EAAA6R,EAAA,GAIF,IAAAu6B,GAAAzoC,EAAAC,OAAAsoC,EAAA,SAAAG,GAEC,GAIApsC,GAJIqsC,EAAYz6B,EAAMlD,QADxBsS,EAAImrB,WAAAA,EAAexoC,EAAOsoC,EAAY7pC,SAMpC,IAAA4pC,EAAGA,WAAQM,CACT,GAAAL,EAAGA,IAAAG,EACD,OAAA,CAIF,IADApsC,EAAAA,EAAQwqC,SAAeC,EAAf1qC,EAAAssC,EAAA,IACRrsC,EAAGA,OAAA,GAAAA,EAAoBA,OAAA,GACrB,MAAAA,GAAOA,OAAAksC,EAAeA,WAMzBlsC,GAAAwqC,EAAAC,SAAAznC,EAAAjD,EAAAssC,EAAA,EAEF,OArBDrsC,GAAAoC,QAuBE,OAAA4pC,GAAOM,YAAAH,EAAP/pC,OAAA4pC,EAAAM,YAEDL,EAAA,IAGFE,EA3DA,UAkEDp5B,WAAIg5B,SAAW/oC,EAAK8oC,EAAY9oC,GAChC,GAAAA,EAAGmoC,OAAAA,MAAcY,cAAUh5B,CACzB,GAAAg5B,GAAOZ,KAAAA,YAAcY,EAAUh5B,EAAW/P,OAE3C,OAHDmoC,GAGKY,GAAAh5B,WACHo4B,EAAOA,GAAAp4B,WAAwBf,EAAxBjS,EAAA6R,GAIFu5B,EAAPY,GAAA/5B,WAAAhP,EAAAjD,EAAA6R,GAAAxP,OAAA,EAIF,OAAO,GAGP+P,kBAAe,SAAK25B,EAAY9oC,GAChC,MAAI2xB,MAAMwW,cAAcY,EAAxB3oC,MAAAhB,OAAAuP,GAEAO,WAAO,SAAAvE,EAAA3K,EAAA2O,GACL46B,GAAAA,GAAMR,KADDD,YAAA9oC,EAAA2O,EAAA,QArFJ46B,KAAAR,EA2FLrrC,MAAS8pC,EACTsB,IALIn+B,EAFKo+B,KArFJrrC,QAAP8pC,EAAA9pC,QAiGDorC,YAAA,SAAA9oC,EAAA2O,GAvGD,MAAAlS,MAAA2rC,cAAApoC,EAAAI,MAAAuO,KACAF,EAAArL,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,cAAA,gBAAA,kBAAA3H,QAAAO,OAAA,SAAA63B,QAAA,WAAAplB;cCDA,WAIA,QAAS05B,GAAc/pC,EAASD,EAAckI,EAAmBpI,EAAa6V,EAAY1N,EAAKrI,EAAaypC,GAD5G/rC,OACA+tC,cAIQppC,KAAM,OAFZ4O,WAAO,SAAAhP,EAAAjD,EAAA6R,GAOC,IAAI,GALA66B,MAKIhoC,EAAE,EAAEA,EAAEzB,EAASwhC,cAAcpiC,SAASqC,EAAG,CAFjD,GAAIgoC,GAAAA,EAAJjI,cAAA//B,GAEIioC,EAAU1pC,CACZ,IAAAjD,EAAI4sC,MAIF,IAAI,GAAInmC,GAAE,EAAEA,EAAEzG,EAAMC,MAAMoC,SAASoE,EAFjCkmC,EAAAA,MAAJlmC,GAAA/C,cAAAkpC,GACG5sC,GAMA,MAAA2sC,GAAA1pC,EAAAiT,aAAA,CAGD,GAAA3R,GAAAlD,EAAAmD,KAAA,kBAAA,eAAAooC,GAEDC,EAAA,EAGEtoC,IAAYA,EAASlC,OAAS,GAAKkC,EAAS,GAAG+e,OAAS,IAF3DupB,EAAItoC,EAAmBC,UAAKD,EAAA,GAAb+e,QAA+BC,eAE9CmpB,EAAGnoC,MAAYA,GAAAA,EAASlC,KAATwqC,EAAuBtoC,iBAGtCmoC,MAAAA,IAKJ1B,YAAa,SAASlmC,EAAIjB,GAFxB,MAAO6oC,GAAAA,cAAP5nC,IAGAgoC,iBAEDzpC,KAAA,OApCA4O,WAAA,SAAAhP,EAAAjD,EAAA6R,GA2CC,IAAI,GALA66B,MAKIhoC,EAAE,EAAEA,EAAEzB,EAASwhC,cAAcpiC,SAASqC,EAAG,CAC/C,IAAIkoC,GAHFF,GAAAA,EAAJjI,cAAA//B,GAEIioC,EAAU1pC,EACR2pC,EAAAA,EAAO3pC,EAAAA,EAASwhC,MAAAA,SAATh+B,EAINzG,EAAMC,MAAMwG,IAAMzG,EAAMC,MAAMwG,GAAG/C,cAAgBkpC,GAFlDD,GAKD,IAAA,IAAAC,GAAA,IAAAA,GACF,GAAAD,GAAA,EAGG,aAED,IAAAA,GAAA,EAJH,QAUC,IAAApoC,GAAAlD,EAAAmD,KAAA,kBAAA,eAAAooC,EAED,IAAGroC,GAAYA,EAASlC,OAAS,GAAKkC,EAAS,GAAG+e,OAAS,EAAG,CAD9D,GAAI/e,GAAWlD,EAAase,UAAApb,EAAkB,GAAA+e,QAAAC,aAE5CmpB,GAAIG,MAASzrC,GAAAA,EAAaue,KAAAA,EAAUpb,iBAKvC,MAAAmoC,IACD1B,YAAO0B,SAAP5nC,EAAAjB,GAnCa,MAAAA,GAAAH,cAAAoB,IAwCdioC,WA7EA1pC,KAAA,QA8EH0pC,WAAW,SAAA9pC,EAAAjD,EAAA6R,GAETI,QAGInN,GAAI,GAAIzB,KAAM,aADhByB,GAAA,GACEA,KAAF,aALOA,GAAA,GAAAzB,KAAA,aAiBT2nC,GAAAA,GAAAA,KAAa,aACXlmC,GAAA,GAAOjB,KAAKwd,aAEbvc,GAAA,GAAAzB,KAAA,aAlGAyB,GAAA,GAAAzB,KAAA,aAmGH2pC,GAAAA,GAAAA,KAAkB,aAChB3pC,GAAM,GADUA,KAAA,aAEhB4O,GAAAA,GAAY5O,KAAA,cAUX2nC,YAZe,SAAAlmC,EAAAjB,GAYhBmnC,MAAAA,GAAa3pB,YAAAvc,IAITkoC,kBAAA3pC,KAAA,OAdJ4O,WAAY,SAAShP,EAAUjD,EAAO6R,GAmBhC,QAED/M,GAHD,EAGKzB,KAAA,SACHyB,GAAA,EAAAzB,KAAOQ,SAERiB,GAAA,IAAAzB,KAAA,uBACFyB,GAAA,EAAAzB,KAAA,UAADyB,GAAA,EAAOzB,KAAP,YAGJ4pC,YAAa,SAAAnoC,EAAAjB,GAEXoO,GADA5O,EADWmrB,SAAA3qB,GAEXoO,EAAAA,KAAY,CAEV,GAAA9L,GACMwD,KAAGtG,IALAQ,EAAAR,KAAAoS,QAAA,WAUXu1B,EAAAA,KAAav1B,QAAA,cAEX,OAAQpS,MAALQ,EACgBiI,IAAb3F,EAMCtC,EAAAsd,MAAAtd,EAAAsd,KAAArc,IAAAA,GAAA,GAAAqB,EAIN,OAAA,IAvBQ8mC,aA0BbC,KAAAA,OACE7pC,WADQ,SAAAJ,EAAAjD,EAAA6R,GAtBN,QA0BA/M,GAAIqoC,EAAAA,KAAJ,cACAroC,GAAI,IAAJzB,KAAcrC,4BACZmsC,GAAAA,EAAO/mC,KAAKpF,UAIfgqC,YAVO,SAAAlmC,EAAAjB,GAWN,GADFmnC,EAAaxc,SAAA3qB,GACXA,EAAOA,KAAKsd,CAEb,GAAAhb,GAAAwD,KAAAmC,IAxKAjI,EAAAR,KAAAoS,QAAA,WAyKH23B,EAAAA,KAAAA,QAAqB,cACnB/pC,OADmB,MACbyB,EACMjB,EAAAsd,MAAmBnhB,GAAnB6D,EAAAsd,KAASle,IAATkD,GAAiC,EAF1BtC,EAAAsd,MAAAtd,EAAAsd,KAAArc,IAAAA,GAAAqB,EAAA,EAclB,OAAA,IAED9C,UACA4O,KAAAA,OACEA,WAAIo7B,SAAY5C,EAAAA,EAAeC,GAE/B,GAAAyC,KACE,KAAA,GAAAroC,KAAOuoC,GAAP3rB,UACEyrB,EAAK/mC,KADPpF,EACO0gB,UAAA5c,GAEL,OAAAqoC,IAEAnC,YAAK,SAAAlmC,EAAAjB,GACL,MAAAA,GAAKsd,MAAAtd,EAAAsd,KAAArc,IAAAA,IAGLsoC,qBAAK/pC,KAAA,OAEL4O,WAAA,SAAAhP,EAAAjD,EAAA6R,GACEy7B,QACAxoC,GAAA,IAAAzB,KAAA,eAbJyB,GAAA,GAAAzB,KAAA,cAgBDyB,GAAA,GAAAzB,KAAA,cA7BCyB,GAAI,EAAGzB,KAAM,cAgCjB2P,UAAAA,SAAYlO,EAAAjB,GACVA,EAAAkH,eAAAjG,IA1BOyoC,WA8BXC,KAAAA,SACEnqC,WAAM,SADKJ,EAAAjD,EAAA6R,GAIT,IAAIhO,GAFNoO,GAAYw4B,EAASxnC,SAAUjD,EAAO6R,EAAOA,EAAA,MA5BvCy7B,KA8BAzpC,EAAAA,EAAO4mC,EAAAA,EAAAA,SAAAhkC,EACX,OAAG5C,EAAauT,GAAAA,IACd,IAAO,MADT,IAoBK,MACH,IAAO,MAER,IAAA,KA5BQ,IAAA,KA6BXuzB,IAAW,MACT9mC,IAAKkH,MAEN,IAAA,MAtPA,IAAA,MAyPDkH,EAAY7L,KAAAinC,EAASpqC,IAzPpB,MAAAqqC,IAgQDjqC,WAAM,SADOJ,EAAAjD,EAAA6R,GAEbI,OAAAA,GAGCw7B,YALY,GAAAD,aAOfE,KAAAA,UACErqC,WAAM,SADOJ,EAAAjD,EAAA6R,GAGX,GAAI5R,GAAAA,EAAQwqC,QAAeC,EA9C3B,OAAG7mC,IAAQA,EAAKuT,gBAkDhBtS,GAAA,GAAAzB,KAAA,mBAAGpD,GAAAA,GAAMoC,KAAN,mBACDyC,GAAA,GAASA,KAAI7E,mBADf6E,GAGK,GAAAzB,KAAA,mBACHyB,GAAA,GAAAzB,KAAA,mBAEDyB,GAAA,GAAAzB,KAAA,mBAbUyB,GAAA,EAAAzB,KAAA,kBAcb2nC,GAAAA,EAAa3nC,KAAA,kBACXyB,GAAOjB,EAAAA,KAAKuiC,kBAEbthC,GAAA,EAAAzB,KAAA,kBAvRAyB,GAAA,EAAAzB,KAAA,kBAwRHsqC,GAAAA,EAActqC,KAAA,kBACNyB,GAAA,EADMzB,KAAA,kBAEZ4O,GAAAA,EAAY5O,KAAA,kBACNpD,GAAAA,EAAAA,KAAQwqC,kBACRmD,GAAAA,EAAAA,KAAY,mBAITvqC,GAAQuqC,EAAAA,KAAV,kBAGC9oC,UAAAA,SADiBA,EAAAjB,GAEjBR,EAAAA,eAAMA,IAIXwqC,UAhDHxqC,KAAM,SAiDJ4O,WAAO67B,SAAAA,EAAP9tC,EAAA6R,GAjBU,MAAA44B,GAAAC,SAAAznC,EAAAjD,EAAA6R,IAoBV47B,YAAO5pC,EAERkqC,UAtBW,GAAAC,eAwBdC,KAAAA,SACE5qC,WADoB,SAAAJ,EAAAjD,EAAA6R,GAEpBI,MAAAA,GAAYy4B,SAASznC,EAAUjD,EAAO6R,IAEpC47B,YAAIG,GA9CRF,eAiDIrqC,KAAA,QACE4O,WAAIpO,SAAa5D,EAAjBD,EAAA6R,GACA+7B,GAAAA,GAAU/pC,EAAa6mC,SAAvBznC,EAAAjD,EAAA6R,EAAA,EAIA,OAAA5R,GAAIoD,OAAOpD,IACNoD,GAAAA,EAAQuqC,GAAAA,QAAYvqC,KAAApD,EAAA,GAAAmmC,cAOxB4E,YAAA,SAAAlmC,EAAAjB,GACF,MAAAA,GAAAuiC,SAAAthC,IAGF6oC,cAAD3C,KAAAA,OACE/4B,WAAOpO,SAAAZ,EAAPjD,EAAA6R,GAIJq8B,IAAAA,GA9BsBjuC,GAAAwqC,EAAAC,SAAAznC,EAAAjD,EAAA6R,GA4BpB47B,KA5UCK,KA8UHI,EAAc,EAAAznC,EAAAxG,EAAAoC,SAAAoE,EAAA,CACZpD,GAAMA,GAAApD,EADMwG,GAAApD,IAEZ4O,KAAY27B,KACN3tC,EAAQwqC,IAAAA,EACR0D,EAAJ/nC,MA/CMtB,GAAIzB,EAiDNA,KAAIoD,KAKFqG,MAAAA,IAGHk+B,YAAA,SAAAlmC,EAAAjB,GAADsqC,MAAAA,GAASrhC,MAAMhI,GA9CnB2oC,YAAY,GAkDVQ,sBACE7pC,KAAAA,OACEU,WAAIqpC,SAASzP,EADH1+B,EAAA6R,GAMdzN,IAAAA,GAJIf,GAAMq7B,EAAAA,SAAAA,EAAAA,EAAAA,GAFRkP,KAKDE,KACD1pC,EAASA,EAAAA,EAAAA,EAAAnE,MAAYoC,SAAAoE,EAAe,CAApCmnC,EACW5tC,EAAS8E,MAAhB2B,GADJpD,OAAA,EAzBU,IAAA,GAAAoD,GAAA,EAAAA,EAAAxG,EAAAoC,SAAAoE,EAAA,CA+BZukC,GAAAA,GAAa/qC,EAAAwG,GAAApD,IACPyJ,KAAJ8gC,KACAA,EAAAvqC,IAAcQ,EACZiqC,EAAW9sC,MACR4K,GAAAA,EACDkB,KAAAA,KApCM,MAAAghC,IA9UX9C,YAAA,SAAAlmC,EAAAjB,GA0XHuqC,MAAAA,GAAc/qC,MAAAyB,GAEZmN,YAAY,GA9Cdi8B,cAiDI7qC,KAAIgrC,YACJp8B,WAAI7N,SAAUiqC,EAAdruC,EAAA6R,GAIE,IAAA,GAHC5R,GAAMoC,EAAYqoC,SAAAznC,EAAAjD,EAAA6R,GACnBs8B,KAEI1nC,EAAA,EAAIA,EAAAA,EAAIA,SAAQpE,EAAAA,CAEhB,IAAA,GADFyK,GAAI,EACElB,EAAAA,EAAAA,EAAAA,EAAO5K,GAAAA,MAAY4F,SAAM3G,EAAA,CAC7B,GAAA2L,GAAGA,EAAa0iC,MAAbruC,EAA4BwG,GAAAG,MAAUgF,GAAAA,GACvC2iC,KAAAA,EAASx1B,MAEVjM,IA9CLqhC,EAASrhC,EAAM,WAAaA,EAmDxBhI,GAAAA,KACAzB,KAAAA,GAAAA,KAAMq7B,GAFIt6B,EAAZgC,MAKDtB,GAAAqpC,EAAAzP,GAhDCr7B,KAAMq7B,GA0DT,OALGt6B,GAAAA,EAASA,KAAOb,SAAKsS,EAAAC,GACjB,MAAAD,GAAOA,GAAAC,EAAOA,MAKtBk1B,YAAO5mC,SAAPU,EAAAjB,GAEFmnC,IAAAA,GAtCYl+B,GAAA,EAsCZk+B,EAAAA,EAAaxtB,EAAA3Z,EAAA+C,MAAAvE,SAAAmb,EAAa3Z,CACxB,GAAGiB,GAAH9D,EAAa4F,MAAA/C,EAAA+C,MAAA4W,GAAA1Y,GACX8G,KAAAA,EAAAmN,MAEDjM,IA9CD,MAAOA,IAAOhI,GAmDZ2oC,YAAI/O,GAEJ0P,cACE/qC,KAAA,YACEmrC,WAAAA,SAAAA,EAAAxuC,EAAA6R,GAED,GAAA5R,GAAIwqC,EAAagE,SAAbxrC,EAAyBjD,EAAA6R,GAG7Bw8B,GAAAvpC,IAAA,EAAAzB,KAAA,OACFe,GAAAiqC,EACF,IAAApuC,EAAAoC,OAAA,EAAA,CA1DS,IAAA,GAQJksC,MARI9nC,EAAA,EAAAA,EAAAxG,EAAAoC,SAAAoE,EA6DZokC,IAAU,GAAArtB,GAAA,EAAAA,EAAAvd,EAAAwG,GAAS3B,MAAItB,SAAbga,EAA2B,CAC/BkxB,GAAAA,GAAJ1tC,EAAA4F,MAAA3G,EAAAwG,GAAAG,MAAA4W,GAAA1Y,KACI6pC,IAAJ/iC,EAAA0iC,WAAA,QAAA1iC,EAAAvI,OAAAkrC,KAjDQA,EAAS,QAAU3iC,EAAKvI,MAAQuI,EAAK9G,IAwD1C,IAAA,GAAA45B,KAAA6P,GACFnqC,EAAAgC,MAAGtB,GAAI0Y,EAAIA,GACP/Z,KAAMmD,GAKXxC,GAACA,EAAA/B,QAAA,GAAaqsC,GAGJtqC,EAAAb,KAAA,SAAAsS,EAAAC,GA1cX,MAAAD,GAAA/Q,GAAAgR,EAAAhR,KA8ZC,MAAOV,IAoDP4mC,YAAI5mC,SAAUiqC,EAAdxqC,GACA,GAAAiB,IAASzC,EACP,OAAIksC,CAMEA,KAAAA,GAHJE,GAAU,EACRD,EAAWxtC,EAETutC,EAAAA,EAAAA,EAAAA,EAAS3nC,MAAAvE,SAAcgB,EAAvB,CAED,GAAAq7B,GAAA76B,EAAA+C,MAAA4W,EACFxc,GAAA4F,MAAA83B,EAAA55B,IACFwpC,YAlDI5P,EAAI55B,IAAMA,EAmDf0pC,GAAeD,EAAAA,IAEPA,EAAAA,IAAAE,IACJprC,EAAMq7B,EAAAA,MAKRt6B,MAAAA,GAASqqC,GAGTrqC,SAAAA,SAASA,EAAOb,EAAKE,GAKxB,IAAA,GAJOirC,GAAA,EAEDC,EAHH,EAKHloC,EAAA,EAAAA,EAAAjD,EAAAoD,MAAAvE,SAAAoE,EAnDC,GAAGjD,EAAMoD,MAAMH,GAAG3B,IAAMA,EAAI,CAoD9B4pC,EAAOtqC,EAAPwC,MAAAH,GAAAqF,GApCS,OAwCP,IAAA,GAAA0R,GAAO,EAAAA,EAAP/Z,EAAAmD,MAAAvE,SAAAmb,EAED,GAAA/Z,EAAAmD,MAAA4W,GAAA1Y,IAAAA,EAAA,CAnDG6pC,EAAOlrC,EAAMmD,MAAM4W,GAAG1R,GAoD1B,OAGE,MAAGF,GAAKgjC,GAEJnB,YAAA,EAEDlB,WAAA,GAEJsC,aAnDHxrC,KAAM,WAoDJ4O,WAAO,SAAPhP,EAAAjD,EAAA6R,GArDS,GAAA5R,GAAAwqC,EAAAC,SAAAznC,EAAAjD,EAAA6R,GAwDL68B,GAAJ5pC,IAAA,EAAAzB,KAAA,OACIsrC,GAAJN,EAlDA,IAAGpuC,EAAMoC,OAAS,EAAG,CAsDjBqsC,IAAAA,GAFAH,MAEAG,EAAOlrC,EAAAA,EAAAA,EAAAnB,SAAPoE,EACA,IAAA,GAAA+W,GAAA,EAAAA,EAAAvd,EAAAwG,GAAAG,MAAAvE,SAAAmb,EAAA,CAED,GAAA5R,GAAA5K,EAAA4F,MAAA3G,EAAAwG,GAAAG,MAAA4W,GAAA1Y,KACF8G,IAAAA,EAAAgjC,YAAA,QAAAhjC,EAAAvI,OAAAkrC,KAAGA,EAAQ/wB,OAAQ5W,EAANvD,MAAduI,EAAA9G,IAMC,IAAA,GAAA45B,KAAA6P,GAADnqC,EAAOuqC,MAvEE7pC,GAAAypC,EAAA7P,GAyEX+O,KAAY/O,GAKZzsB,GADM7N,EADI/B,QAAA,GAEEgsC,GAGAjqC,EAAAb,KAAA,SAAAsS,EAAAC,GALF,MAAAD,GAAA/Q,GAAAgR,EAAAhR,KAxCR,MAAOV,IAET4mC,YAAa,SAASlmC,EAAIjB,GACxB,GAAGiB,IAAO,EACR,OAAO,CAGT,KAAI,GAAI0Y,GAAE,EAAEA,EAAE3Z,EAAK+C,MAAMvE,SAASmb,EAAG,CACnC,GAAIkhB,GAAM76B,EAAK+C,MAAM4W,EAErB,IADWxc,EAAY4F,MAAM83B,EAAI55B,IACzB8pC,YACHlQ,EAAI55B,IAAMA,EACX,OAAO,EAKb,OAAO,GAET+lC,SAAU,SAAS/lC,EAAItB,EAAOC,GAI5B,IAAI,GAHAirC,GAAO,EACPC,EAAO,EAEHloC,EAAE,EAAEA,EAAEjD,EAAMoD,MAAMvE,SAASoE,EACjC,GAAGjD,EAAMoD,MAAMH,GAAG3B,IAAMA,EAAI,CAC1B4pC,EAAOlrC,EAAMoD,MAAMH,GAAGqF,GACtB,OAGJ,IAAI,GAAI0R,GAAE,EAAEA,EAAE/Z,EAAMmD,MAAMvE,SAASmb,EACjC,GAAG/Z,EAAMmD,MAAM4W,GAAG1Y,IAAMA,EAAI,CAC1B6pC,EAAOlrC,EAAMmD,MAAM4W,GAAG1R,GACtB,OAGJ,MAAO6iC,GAAOD,GAEhBjB,YAAY,EACZlB,WAAY,GAEduC,YACEzrC,KAAM,OACN4O,WAAY,SAAShP,EAAUjD,EAAO6R,GACpC,MAAO7Q,GAAY8qB,aAErB2hB,YAAY,IAliBpBrC,EAAA/kC,SAAA,UAAA,eAAA,oBAAA,eAAA,cAAA,OAAA,cAAA,kBAAA3H,QAAAO,OAAA,SAAA63B,QAAA,gBAAAsU;cCDA,WAIA,QAASp8B,GAAO5N,EAAaE,EAASD,EAAQspB,GAA9C,GAAA5D,IAAgB3lB,OAAaE,MAA7B+B,KAAsChC,mCAAgB2G,IAAA,IAGhD6e,IADJ7X,OAAI+X,MAAAA,KAAmB,kBAAgB1jB,IAAM,uCAC7C2L,OAAI6X,KAAAA,KACC7X,gBAAe3L,IAAM,iCAMtB2L,OAAA,KAAA3L,KAAA,SAAA2E,IAAA,oCACCgH,OAAQ,MAAO3L,KAAM,aAAY2E,IAAM,2CAHvCgH,OAAQ,KAAM3L,KAAM,WAAY2E,IAAM,sCAO3CgH,OAAI+/B,KAAAA,KAAAA,YAAoB5hC,IAAaxM,sCAErCqO,OAAG+/B,MAAAA,KAAmB,WAAA/mC,IAAA,qCACpBtJ,OAAQuH,MAAQ4gB,KAAAA,aAAa7e,IAASgnC,qCAGnCD,EAAA5hC,aAAAxM,QAAA,iBACFulB,EAJD,IAKD6oB,IALCrwC,QAAQuH,QAAQ4gB,EAAa,SAASmoB,EAAY7oC,GAOhD8oC,EAAY9hC,QAAAA,IACZ0Y,EAAYmpB,IAKX,IAAAC,GAAA9hC,aAAAxM,QAAA,kBACFklB,EAJD,IAiBAwB,OAZD4nB,IALCvwC,QAAQuH,QAAQ4gB,EAAa,SAASmoB,EAAY7oC,GAOjD0f,EAAAA,QAAmBkB,EAAA/X,QAAAigC,EAAAx5B,QAAAu5B,EAAAhnC,MAAA,IACpB6d,EAAYK,KAKZa,MAAAA,IACAb,EAAAA,IAIEW,YAAAA,EACAE,iBAAKA,EALPb,YAAcA,EAOZL,UAAIqpB,EAEF7nB,aAAG2nB,SAAWhgC,GAEbtP,KAAAqnB,iBAAA/e,IAAAA,CAJH,IAAIknC,KAOJA,SAAAA,QAAcnoB,EAAAA,SAAdioB,EAAA7oC,GACA0gB,EAAcqoB,QAAdnoB,EAAA/X,QACAkgC,EAAKroB,KAALmoB,KAIAE,EAAIC,KAAAA,GALJtoB,EAAcqoB,EAOdxwC,KAAAA,YAAgBmoB,GAGbhT,kBAAA,SAAAu7B,GACF,GAJDD,GAAA,IAMAzwC,SAAKitB,QAAAA,EAAYwjB,SAAjBH,EAAA7oC,GA/BG6oC,EAAAhgC,QAAAogC,IA2BCD,EAAcH,KAUhB1tC,KAAAA,YAAAA,IAGAqpB,YAAOvD,SAAPzB,GACDA,GAAAA,GAAAjmB,KAAAwmB,cALCxmB,KAAKwmB,YAAcP,EAOrBrkB,IACA6L,aAAQ0Y,QAAL,gBAA2BoF,EAAUjc,QACtC1N,IACDqpB,EAAAvD,SAHD,IAAI6D,GAAWvrB,KAAKwrB,aAOpB,OAAAxrB,KAAAmmB,WAAAoF,GAlDGvrB,KAAAgsB,aAAA/F,GAgDHjmB,KAAKwQ,QAWH/C,aAAAA,SAAapH,GAEb3E,GAAAA,GAAAA,KAAa0R,YAEXpT,KAAAmmB,UAAIoF,EACJ7pB,eAAAA,WAAsB6pB,aACtB7pB,aAAAA,WAAaukB,kBACbvkB,IACEupB,EAAOvD,QACRzB,GAFD,CAGD,GAAAsF,GAAAvrB,KAAAwrB,aACF9pB,GAAAkxB,OAAArH,EAtEE7pB,EAAAukB,SAAAjmB,KAAAmmB,UAAA7d,IAkEC5G,EAAa8O,KAAK,aAAe,WAOvCgb,EAAa9D,aAOZ8D,YAhFI,WA0EH,QAAG/d,aAAaxM,QAAQ,cAgBzBirB,YA1FI,SAAAhe,GAmFCA,EAYHT,aACI4X,QAAA,YAAA,KAJP7U,aAAMnK,WAAW,aAMb3E,KAAAA,aAAakxB,KAAbpM,cAGFhW,KAAA,WACE9O,KAAAA,cACDA,EAAAkxB,OAAA,GAvGL5yB,KAAA2vC,UAAA3vC,KAAAwmB,YA2GD9kB,EAAAkxB,OAAA,GANQ5yB,KAAKmmB,YACNzkB,EAAaukB,SAAWjmB,KAAKmmB,UAAU7d,KAEzC3G,EAAQsqB,YAAYjsB,KAAKwmB,eAlJ/BxnB,QAAAO,OAAA,SAAA63B,QAAA,UAAA,eAAA,WAAA,UAAA,SAAA9nB;cCDA,WAIA,QAASzP,GAAW2B,GADpBxC,OACAmU,SAAStT,SAAW2B,EAApB2C,GACE,GAAAyrC,GAAO5vC,KAAA0H,eACLyL,KAAUy8B,IAAAnR,MAASp0B,QAAWlG,EAAMkG,GAAA9J,QAElCqvC,EAAGvlC,GAAaulC,MAAblpC,KAAuB+3B,GAGxBmR,EAAOvlC,GAAWnB,YAAc,GAAIE,OAAQwgB,UAD5CgmB,KAAAA,kBAAkBrvC,EAAW4D,EAA7BkG,GAAA9J,QAGDP,KALDgG,kBAMKqE,GAAAlG,KAKP8D,mBAAqB,SAAS/H,EAAW4H,GAAzCG,KAAAA,gBAAqB/H,GACnB4H,GAAK+nC,IAAgB3vC,IAArB4H,EAAA5H,GAAAwP,KAAA5H,EAAA5H,GAAAwP,IAAAtK,IACAqI,aAAG3F,QAAU5H,YAAV4H,EAAiCA,GAAO5H,IAAWwP,KAKxDrP,YAAa,SAASgK,EAAWylC,GAAjCzvC,GAAAA,GAAAA,KAAaqH,eAGX,OAFA2C,GAAI9J,KAAQwvC,mBAAZ1lC,EAAA9J,GACA8J,KAAAA,kBAAiB0lC,EAAAA,GACZ/pC,GAIP+pC,mBAAoB,SAAS1lC,EAAW2lC,GAAxCD,GAAAA,GAAoB,CAClB,IAAA1lC,EAAI4lC,YAAJ,MAAA5lC,EAAA1H,OAAA,EAAA,CACA,GAAG0H,GAAU6lC,EAAYA,YAAQ7lC,IAC/B,IAAA8lC,EAAIA,EAAa9lC,CACjB,GAAG8lC,GAAaj5B,OAAG7M,EAAA43B,OAAAkO,EAAA,EAAA9lC,EAAA1H,OAAAwtC,EAAA,GACjBC,GAAIA,IACJH,EAAgBG,EAAG,EACjBH,EAAAA,EAAiBG,OAAAA,EAAaD,EAA9B,KAMN,IAAA,GAAIE,GAAehmC,IAAfgmC,CACJ,GAAAhmC,GAAQgmC,CAMN,IALAJ,EAAgBI,IAChBhmC,EAAG4lC,EAAoB,KAAAA,EAAA,OAIpB5lC,IAAa2lC,IAId,KAJFC,KAQF,MAAA5lC,IAGF+E,YAAAA,SAAalP,GACX,GAAA4H,GAAIA,KAASJ,eACbxH,KAAGA,WACQ4H,GAAO5H,GACdF,KAAK6vC,gBAAgB,MACrB7vC,KAAKswC,WAAWxoC,KAItB9B,kBAAAA,SAAmBqE,EAAAylC,GACjB,GAAAvvC,GAAIA,KAAQmH,eACZ2C,KAAGA,IACD9J,EAAAA,GAAAA,MAAAuvC,EACAvvC,EAAAA,GAAA2I,YAAA,GAA+BE,OAAYwgB,WAIzCrpB,EAAA8J,IAAA9J,MAAAuvC,EAAA5mC,YAAA,GAAAE,OAAAwgB,WAIL5pB,KAhFIswC,WAAA/vC,IAmFH+vC,WAAI1G,SAAAA,GACJn8B,GAAAA,GAAAzL,KAAqBC,UAAcqjB,EACpC7X,cArFI4X,QAAA,aAAAC,SAAAC,gBAAAqkB,KAwFHppC,UAAK+vC,SAAL/gC,EAAApP,EAAAE,GAiBDN,KAzGIuwC,YAyFD/gC,EAkBJ+gC,EAhBIjwC,EAAM+P,WAoBR/P,EAAImH,YAlBFnH,EAAMoQ,UAoBRpQ,EAAGF,IACDE,EAAAsP,WACAxP,EAAAA,QACDE,EAHD6M,iBAKE7M,EAAI6I,WACJ1B,EAAAA,UACAnH,EAAAmR,cACDnR,EAAAoR,eAnBCpR,EAAMsR,YAqBRnK,EAAAA,UACAA,EAAAA,YAGAA,YAAAA,SACAA,EAAWrH,EAAc0M,EAAUA,EAAnC4D,EAAAhB,EAAAE,EAAA9C,EAAAK,EAAAiD,EAAAG,EACA9I,EAAWrH,EAAc+M,EAAzBoE,EAA4CpE,GAE5C1F,GAAAA,GAAWrH,KAAAA,eAEXqH,IAAAA,IAAWrH,IAAcsR,GAAiBA,EAE1CjK,EAAWrH,MAlBN,IAAGoP,IAAgB/H,GAAY,CAqBpC,GAAA0B,GAAKmnC,EAAW7oC,EA1IbA,GAAArH,GAAA+I,QAwHM1B,GAAW+H,GAuBlB/H,EAAImiC,GAAAA,WAA2B4G,EAC/B/oC,EAAIA,GAAazF,YAAW4nC,EAC5BniC,EAAOA,GAAPiJ,UAAAA,EACDjJ,EACKkf,GACLjX,IAAAA,EArBDjI,EAAWrH,GAAcwP,WAAaA,EAuBtCnI,EAAArH,GAAA0M,QAAAA,EACDrF,EAvJIrH,GAAA+M,iBAAAA,EAkIH1F,EAAWrH,GAAcgQ,WAAaA,EAuBxCiW,EAAAA,GAzJK9V,UAAAA,EA0JLjG,EAAAA,GAAiBmH,cAAAA,EACfhK,EAAIrH,GAAJsR,eAAuBA,EACrBjK,EAAK4e,GAAe5Y,YAAaxM,EACjCwG,EAAGrH,GAAHmR,UAAsBA,EACpB9J,EAAIA,GAAa8H,UAAK7H,EAEpB+F,KAAAA,WAAAA,IAGH/F,cAAA,WACF,IArBC,GAAIkiC,GAAkBtkB,SAASkrB,oBAAoB/iC,aAAaxM,QAAQ,cA/IvE,OAsKSolB,MAAAA,MAAZujB,GAGFiG,MAAAA,IAGIpiC,UAID4Y,aAAA,KACF/b,gBAAA,WAjLH,IAAAtK,KAAAqmB,eAmLDrmB,KAAAqmB,aAAA5Y,aAAAxM,QAAA,gBAxLDjB,KAAAqmB,cAAA,CAmKU,GAAI5e,GAAazH,KAAK0H,eACjB1H,MAAKqmB,eAAgB5e,KACxBgG,aAAapH,WAAW,gBACxBrG,KAAKqmB,aAAe,MAK1B,MAAOrmB,MAAKqmB,cAGdwpB,gBAAiB,SAAS3vC,GACxBF,KAAKqmB,aAAenmB,EAChBA,EAIFuN,aAAa4X,QAAQ,eAAgBnlB,GAHrCuN,aAAapH,WAAW,eAAgBnG,KAhLhDlB,QAAAO,OAAA,SAAA63B,QAAA,cAAA,eAAAv3B;cCDA,WAIA,QAAS0B,GAAWD,GAApB,OAEEmvC,YAAO,SAAAn6B,GAGH,GAAIpP,MADNupC,IAuBE,OArBAzxC,SAAImlC,QAAJ7tB,EAAA,SAAApI,EAAA0C,GAGe,OAAV1C,GAAoC,MAAlBA,EAAMmV,WAD7BrkB,EAAQuH,QAAQ+P,GACd6tB,EAAGj2B,EAAAA,OAAAY,WAGAq1B,EAFDj2B,EAGKoR,QAAAxQ,SAAA,EAAA5H,MAAAgH,EAAAmV,aAMTrkB,QAAQuH,QAAQ49B,EAAM,SAASj2B,EAAO0C,GAAtC5R,QAAQuH,QAAQ49B,EAAMj9B,MAAA,SAAAgF,EAAqBzF,GACzCzH,EAAQuH,YAAcW,EAAtB4H,UACE5H,EAAGgF,KAAKopB,OAMLh0B,EAAY6F,WAAWD,IAGhC4c,kBAAmB,SAASvjB,EAAO+e,GAAnCwE,GAAAA,GAAAA,CAQE,OAPA9kB,SAAI8P,QAAAA,EAAJ,SAAAZ,EAAA0C,GACA5R,GAAQuH,EAAQhG,OAAO2N,EAASA,OAAO0C,GACrC9B,MAKKA,GAGT4hC,iBAAkB,SAASp6B,GAA3Bo6B,GAAAA,KAeE,OAZA1xC,SAAQuH,QAAQ+P,EAAY,SAASpI,EAAO0C,GAA5C5R,IAGOkP,EAAMjH,UAATC,EAAGgH,EAAMjH,OAAWiH,EAAAjH,WAApBiH,EAGQA,QACNhH,EAAAA,EAAQA,OAAM+H,EAAOf,WAK3B5M,EAAOA,WAAY6F,IAGrBsD,4BAAAA,SAA6BtB,EAAA5I,GAC3B,GAAAowC,GAAIA,KAAaC,cAAKA,GACtBC,EAAIA,KAAgBH,iBAAKA,GACzBrtB,EAAIA,KAAWotB,YAAKA,GACpB5B,EAAIA,EAAW8B,OAAW1hC,GAAXA,OAAiCA,EAMhD,OALG,OAAH9F,EAAGA,WAAAA,EAA2BA,UAAMoG,OAAN,IAC5Bs/B,EAAAA,EAAWA,OAAS5/B,EAAO9F,YAE7B0lC,EAAAA,EAAWvtC,WAAY6F,GAEvBnH,KAAO8wC,mBAAKA,EAALjC,IAGTiC,mBAAAA,SAAoB3nC,EAAA0nC,GAYlB,QAAAE,GAASA,GACP,GAAAC,GAAIA,EAAU1vC,MAAY4F,EAAMgF,GAChC,OAAA+kC,GAAGA,EAAWD,IACZ95B,OAAOA,EAAO+5B,EAAWD,IAAX5kC,KAIf,EAID,QAAI4kC,GAAU1vC,GACd,GAAA0vC,GAAGC,EAAmBC,MAAOhlC,EAAA9G,GAC3B,OAAA6rC,GAAO/5B,EAAO+5B,MAEX/5B,OAAA+5B,EAAAD,EAAAE,MAAA9kC,KAGN,EAMA,QAAA+kC,GAAAjlC,GAHCA,EAAKE,IAAMnC,KAAKsoB,MAKlBrmB,EAAAE,KAASglC,EAAAA,EAAallC,KAAA,EAAAmlC,EAAAnlC,KAInB,QAFDklC,GAGKhsC,GACH,GAAA8G,GAAO+kC,EAAS7kC,EACjB,OAAAF,IACF9G,GAAAA,EAAAgH,IAAA8K,OAAAhL,EAAAE,KAAAoiB,GAAAtiB,EAAAsiB,KAGItiB,GAAA9G,EAAHgH,IAAiB,EAAAoiB,GAAA,GADnB,QAAS8iB,GAAQplC,GAMjBA,EAAIkE,IAAJ,GACA1L,EAAKgC,KAAAwF,GAyLH,QAAAqlC,GAAAnsC,EAAAosC,EAAAplC,GAEA,GAAAqlC,IAAGD,EAAiBroC,GAAM2D,CAExB2kC,IAAGC,GAAaC,EAAA,GAAAF,GAAA,EAAArhC,GAEfqhC,GAAA,EAAAG,EAAAxlC,GAGH,IAAAylC,GAAIC,CACJ,IAAA3oC,EAAI4oC,SAAAA,EAAJjlC,QAAA1H,GAAA,EAAA,CACA,GAAG+D,GAAH8nC,EAAkB3vC,EAAA0L,SAAA7D,EAAA2D,QAAA1H,IAAA4sC,QAChBD,KADFF,EAGKA,GAAA,EAAA36B,OAAAw6B,EAAAtlC,OAAA,EAAA8K,OAAA3G,KAGL+gC,GAAGnoC,GAAMgE,EAAAA,IAAAA,GACP2kC,IAAAA,GAAe3oC,EADjB4oC,EAGK,CAeJ,IAbAA,EADCD,EAAAA,QACD3oC,EAAA2D,QAAA1H,GAGI0sC,GAGCA,EADF3oC,EAAAgE,iBACM8kC,EAAAA,iBAA4B7sC,GAI/B,IAGN2sC,EACF,GAAAD,EAAA,EAAA,CAVK,GAAII,GAAuBjB,EAAW3vC,EAAY0L,SAAS7D,EAAMgE,iBAAiB/H,IAAI4sC,QAY5F,IAAAE,EAAA,CACI/oC,GAAAA,GAADsoC,GAA2B7hC,EAAAA,OAANsiC,EAAkCtiC,OAA1D,EAA8EsH,OAAA3G,GAC5EghC,IAAAA,GAAiBnsC,EAAjB,IAAuB+sC,IAAQ/lC,SAI/BmlC,IAAAA,GAAAA,EAAiB,IAAMa,IAAQhmC,IA1RjC,GAAA1H,MACAusC,IACA,KAAA9nC,EAAIA,cAADA,EAAuBA,gBAAvBA,EAA+CA,eAChD,QAGFnK,SAAAA,QAAQuH,EAAR,SAA+B2F,EAASA,GACtC+kC,EAAAA,EAAW/kC,IAAXA,GAmDD,IAAAkE,EAKAA,GAVI,cAAgBjH,GAWhBA,EAAAiH,WAAA,IAJL,EAAA,IAAIG,EAKFA,GAGF,aAAApH,GAHcA,EAAMoH,UAAY,IAItB6gC,CAAV,IAAIv7B,GAAMu7B,EAAS,EAQnBD,GAAIkB,GACJlB,EAAAA,EALA,IAAImB,GAAMlB,EAAS,EAQnBD,GAAIoB,GACJpB,EAAAA,EALA,IAAIkB,GAAMjB,EAAS,EAQnBD,GAAAkB,GACAf,EAAIkB,EAEJrB,IAAAA,GAAQqB,EAAR,EACAlB,GAAAA,GANAA,EAAQiB,EAURrd,IAAAA,GAAAkc,EAAgBhlC,GAChB+kC,GAAAA,KAAQjc,EAAR9oB,IAAA8K,OAAA/N,EAAAyI,YAAA4qB,IACA8U,EAAAA,GANAA,EAAQkB,EAURC,IAAAA,GAAMrmC,EAAWolC,EACjBF,GAAAA,KAAQmB,EAARrmC,IAAA8K,OAAA/N,EAAAyI,YAAAgrB,iBANAuU,EAAQjc,GAQRoc,EAAIoB,EAEJvB,IAAAA,GAAQuB,EAAR,KALAD,GAAMrmC,IAAMnC,KAAKunC,IAAI,IAAKtc,EAAI9oB,IAAI8K,OAAO/N,EAAMsI,cAAc4qB,WAQ7DiV,EAAIqB,EAEJA,IAAAA,GAAOvmC,EAAWolC,EAClBF,GAAAA,KAAQqB,EAARvmC,IAAA8K,OAAA/N,EAAAyI,YAAAirB,cANAsU,EAAQuB,GAQRpB,EAAAoB,EAEA,IAAAC,GAAAvB,EAAA,KALAuB,GAAOvmC,IAAMnC,KAAKunC,IAAI,IAAKkB,EAAKtmC,IAAI8K,OAAO/N,EAAMsI,cAAc4qB,WAQ/DiV,EAAIa,EAKF,IAAAS,GAAIC,EAAYzB,KAEhBe,EAAIW,EAAQ1B,GANV2B,EAAU3B,EAAS,EAUrB,KAAAjoC,EAAI6pC,YAAJ,GAAgB5B,EAASxhC,WAAzBxK,GAAA,CANA,GAAIytC,GAAYzB,EAAS,IAQzBe,EAAeU,EAAUzmC,KACzB+lC,EAAQ/lC,EAAOnC,MAGfkoC,EAAcloC,EAAKsoB,OACnB4f,EAAcloC,EAAKsoB,OAEnB4f,GAAAA,KAAAU,EAAoBtgB,IACpB+e,EAAAA,KAAQa,KAAR5f,MAAA1c,EAAAzJ,IAAA8K,OAAA/N,EAAAyI,YAAA6qB,iBANA0V,EAAQ/lC,KAAOnC,KAAKsoB,MAAM+f,EAAIlmC,IAAI8K,OAAO/N,EAAMyI,YAAY8qB,gBAS3DqW,EAAAA,IAAA9oC,KAAeA,MAAKsoB,EAAUnmB,KAAI8K,GAAAA,EAAO/N,GAAMyI,EAAY6qB,OAC3DsW,EAAAA,IAAA9oC,KAAeA,MAAKsoB,EAAUnmB,KAAI8K,EAAAA,EAAO/N,IAAMyI,EAAAA,MAN/CugC,EAAQ/lC,KAAOnC,KAAKsoB,MAAM0gB,EAAU7mC,IAAMimC,EAAIjmC,KAQ9C2mC,EAAAA,KAAA9oC,KAAcA,MAAA+oC,EAAmB5mC,IAAK8oB,EAAA9oB,KACtC2mC,EAAAA,GAEAA,EAAAA,KAAAF,EAAoBtgB,IACpB+e,EAAAA,KAAQyB,KAARxgB,MAAA1c,EAAAzJ,IAAA8K,OAAA/N,EAAAyI,YAAA6qB,iBACDsW,EAAA3mC,KAAAnC,KAAAsoB,MAAA+f,EAAAlmC,IAAA8K,OAAA/N,EAAAyI,YAAA8qB,gBAEDqW,EAAIX,IAAUhB,KAAAA,MAAd2B,EAAA3mC,KAAA,GAAA2kC,EAAAgC,GAAAG,EAAA9mC,OACA2mC,EAAII,IAAU/B,KAAAA,MAAd2B,EAAA3mC,KAAA,EAAAwmC,EAAAxmC,IAAA0mC,EAAA1mC,MANE2mC,EAAQ3mC,KAAOnC,KAAKsoB,MAAM0gB,EAAU7mC,IAAMimC,EAAIjmC,KAQhD2mC,EAAA3mC,KAAAnC,KAAAsoB,MAAAygB,EAAA5mC,IAAA8oB,EAAA9oB,KACAklC,EAAInoC,GAGF,GAAAipC,GAAIgB,EAAQhC,GANV+B,EAAU/B,EAAS,EAUrB,KAAAjoC,EAAIkqC,YAAJ,GAAgBjC,EAASxhC,WAAzBxK,GAAA,CANA,GAAIkuC,GAAYlC,EAAS,IAQzBgB,EAAekB,EAAUlnC,KACzBgmC,EAAQhmC,EAAOnC,MAGfmoC,EAAcA,EAAQhmC,OACtBgmC,EAAAhB,EAAoB7e,MAEpB+e,GAAAA,KAAQc,EAARhmC,IANAgmC,EAAQhmC,KAAOnC,KAAKsoB,MAAM8f,EAAIjmC,IAAI8K,OAAO/N,EAAMyI,YAAY+qB,qBAS3DwW,EAAAA,IAAAlpC,KAAgBooC,MAAAD,EAAQl7B,KAAO/N,GAAMyI,EAAAA,GAAY+qB,EAAjDvwB,OANAgmC,EAAQhmC,IAAMgmC,EAAQhmC,KAAO,EAAEwmC,EAAKxmC,IAAIgnC,EAAMhnC,KAQ9C+mC,EAAAA,KAAAlpC,KAAcA,MAAAspC,EAAmBnnC,IAAKyJ,EAAAzJ,KACtC+mC,EAAAA,KAAAlpC,KAAckpC,MAAQ/mC,EAASwmC,IAAKxmC,EAAIgnC,KACxCD,EAAAA,GAEA7B,EAAAA,KAAQ6B,EAAR/mC,IACD+mC,EAAA/mC,KAAAimC,EAAAjmC,IAAA8K,OAAA/N,EAAAyI,YAAA+qB,oBAGDwW,EAAA/mC,IAAAnC,KAAAsoB,MAAA4gB,EAAA/mC,KAAA,GAAA2kC,EAAAoC,GAAAK,EAAApnC,OACA+mC,EAAIM,IAAOrC,EAAAhlC,KAAX,EAAAwmC,EAAAxmC,IAAAgnC,EAAAhnC,KACAqnC,EAAArnC,KAAakmC,KAAA/f,MAAQrb,EAAatF,IAAAA,EAANxF,KAC5B+kC,EAAQsC,KAARxpC,KAAAsoB,MAAA8gB,EAAAjnC,IAAAimC,EAAAjmC,KAPEklC,EAAQ6B,GAKV,GAAIM,GAAOrC,EAAS,GASpBqC,GAAArnC,KAAIsnC,EAAAA,IAAazpC,OAASd,EAAOsqC,YAAWv8B,UAC5CxS,EAAAA,EAEA,IAAAivC,GAAAvC,EAAA,KACAqC,GAAArnC,KAAIwnC,EAAOxC,IACXwC,EAAKxnC,EACL+kC,IAAAA,GAAAC,EAAA,MANIsC,EAAazpC,KAAKunC,IAAI,IAAOiC,EAAKrnC,IAAM8K,OAAO/N,EAAMsI,cAAc6qB,WAAcuX,EAASznC,IAS9F1H,GAAIovC,MAAAA,GAAAA,KAAc1C,IAAAA,GALlB,IAAIwC,GAAOxC,EAAS,IASpBwC,GAAAxnC,MAAAyJ,EAAAzJ,IAAAimC,EAAAjmC,KAAA8K,OAAA/N,EAAAyI,YAAA+rB,sCACAwT,EAAI4C,GACJzC,EAAAA,EANA,IAAIwC,GAAc1C,EAAS,MAS3BO,EAAWP,KAASI,IAApB,EAAAoC,EAAAxnC,IAAAjD,EAAAuI,eAAA6qB,gBAAAuX,EAAA1nC,IACAwlC,IAAKxlC,GAAL,KAAiBolC,IAAIvnC,EAAciN,GAGnC,IAAA68B,GAAA3C,EAAA,GACAE,GAAI0C,EACJ1C,IAAAA,GAAQ0C,OAAR7qC,EAAAsI,cAAAwiC,cAEArC,EAAIsC,EAAQ9C,KACZE,GAAAA,KAAQ4C,KAAR1C,IAAAvnC,KAAAmC,IAAA,IAAA8K,OAAA68B,EAAA3nC,KAAA+nC,EAAAlqC,KAAAmqC,IAAAl9B,OAAA68B,EAAA3nC,KAAA+nC,EAAA,MAAA,GAPA7C,EAAQM,GAYRN,EATaF,EAAS,KAYtBE,EATYF,EAAS,KAYnBE,EATYF,EAAS,KAYrBE,EADAG,EAAiBiC,KA2CfvqC,EAAMyG,YAAqC,GAAvBzG,EAAMyG,WAAWxK,IAAkC,GAAvB+D,EAAMyG,WAAWxK,IAYrEmsC,EAAA,KAAAY,EAAA/lC,IAAA2mC,EAAA3mC,KARIjD,EAAMyG,YAAqC,GAAvBzG,EAAMyG,WAAWxK,IAAkC,GAAvB+D,EAAMyG,WAAWxK,IAYrEmsC,EAAeH,KAAAA,EAAfhlC,IAAA+mC,EAAA/mC,KAGAjD,EAAIkrC,YAAJ,GAAoBlrC,EAApByG,WAAAxK,IACAivC,EAAYC,KAASloC,EAAMmoC,IAAAA,EAAgBnoC,IAA3C+mC,EAAA/mC,IAAA2mC,EAAA3mC,IAID,IArXIkoC,GAAAlD,EAAA,KA2WHkD,GAASloC,IAAMomC,EAAGpmC,KAAO,EAAEqmC,EAAMrmC,IAEjC,IAAImoC,GAAWnD,EAAS,KAYxBmD,GACEprC,IAAMoI,EAAAA,KACNpI,EAAAA,EAAMoI,IAEN,IAAA8iC,GAAOjD,EACL,KASL,OAJEiD,GAVDjoC,KAWKkoC,EAAAloC,IAAAmoC,EAAAnoC,KAAA,EACHklC,EAAA+C,GArYC3vC,GAuXLksC,cAAe,SAASznC,GAqBtBnK,MACEmK,GAAG+E,WACDo1B,EAAAA,UAAAA,SAAA,IAFJl+B,GAAA,EAAAgH,IAAAjD,EAAAoI,UAAAuqB,WAbK12B,GAAG,EAAGgH,IAAIjD,EAAMoI,UAAUwqB,UAoB/B32B,GAAIk+B,EAAAA,IAAAA,EAAJ/xB,UAAoByqB,eAClB52B,GAAA,EAAOgH,IAAPjD,EAAAoI,UAAA0qB,cAQA4H,cAAI5yB,SAAU9M,EAAAoH,EAAgB9E,GAE9B,GAAA68B,GAAWryB,IAQP,IAPFjS,QAAAuH,QAAQ0K,EAAR,SAAsB/C,EAAAzH,GAlBxB,GAAGyH,EAAMk1B,YAAcj/B,EAAKiB,IAAM8I,EAAMm1B,YAAcl/B,EAAKkH,eAEzD,YAkBEi4B,EAAUA,MAKVA,EACE,MAAA,KAQEj3B,KALD,GAAA5F,GAAA,EACF+tC,KAECC,GAAIpoC,EAEFA,GAAAA,CACD,GAAA4E,GAFD,cAGKxK,EACH4F,EAAAA,mBAAA5F,CACD,IAAA8E,GAAA0F,IAAA1F,IAAAmpC,IAAApR,IApBL,GAAG/3B,EAAK0F,GAAW,EAAG,CAuBhBujC,GAAAA,GAAAA,EAAmBnoC,GAIjBsoC,EAAIC,EAAO5V,GACX6V,EAAAvzC,EAAQqB,mBAAwBgyC,EAC9BH,IAAAA,GAAAA,EAAAA,QAEH,IAAA,GADEI,GAAAC,EAAAC,QAAA9V,GACFj4B,EAAA,EAAAA,EAAA6tC,EAAAjyC,SAAAoE,EACFytC,EAAA9tC,KAAAkuC,EAAA7tC,QAIF,CACH0tC,GAAAA,EAfI,IANEpoC,EAsBPwoC,GAAAA,EAAAE,MAtBgBF,EAAIE,MAGJ,IAAQJ,EAGhB3V,EAAM,EAwBnBzxB,EAAe7G,MAAAtB,GAAAiH,EAAA2oC,OAAgBL,EAAAvoC,IAAA4yB,QAGvB6R,IAAAA,EAAAA,WAAgB96B,QAAK26B,KAAAA,EAAiBpwC,CACtC+iB,GAANuxB,GAAiB5V,EAAKyR,MAAAA,IAChB5B,GAAW3nC,OAAMypC,GAAAA,EAAW1hC,GAAO/H,GAChCqI,EAAN7I,MAAmBpG,GAAMiP,EAAU5M,OAAQgyC,EAAAvoC,IAAAwoC,EAAA,YAQ/CH,IAAA,CAjeLhuC,KAgdM,MAAO+tC,IAGTjnC,cAAe,SAASjN,GACtB,GAAI4G,KAYJ,OAXAA,GAAMypC,WAAa3wC,KAAK4wC,cAActwC,GACtC4G,EAAM2pC,cAAgB7wC,KAAK0wC,iBAAiBpwC,EAAMC,OAClD2G,EAAMmc,SAAWrjB,KAAKywC,YAAYnwC,EAAMC,OACxC2G,EAAM2nC,SAAW3nC,EAAMypC,WAAW1hC,OAAO/H,EAAM2pC,eAAe5hC,OAAO/H,EAAMmc,UACxE/iB,EAAMiP,WAAajP,EAAMiP,UAAU5M,SACpCuE,EAAMqI,UAAYjP,EAAMiP,UACxBrI,EAAM2nC,SAAW3nC,EAAM2nC,SAAS5/B,OAAO3O,EAAMiP,YAE/CrI,EAAM2nC,SAAWvtC,EAAY6F,WAAWD,EAAM2nC,UAE9C3nC,EAAM0B,gBAAkB5I,KAAK8wC,mBAAmBxwC,EAAO4G,EAAM2nC,UACtD3nC,IA/dblI,QAAAO,OAAA,SAAA63B,QAAA,cAAA,cAAA71B;cCDA,WAIA,QAASG,GAAaqG,EAAc61B,GAApC,GAAAqX,GAAA,GAAsBltC,gBAIpBmtC,KAGIlX,IAAJ,QAEA5qB,MAAO,WAGH6hC,EAAiB,GAAIE,gBADvB/hC,EAAQgiC,UAAW,IACjBH,KAAAA,QAAAA,EACAA,KAAAA,gBAAeG,EACfF,KACAlX,MAGDqX,YATI,WAYH,MAAGr1C,MAAK4yB,MAlBI,4BADZqiB,mBA6BFpjB,QAAS,EAATA,gBAtBK,EAuBL7L,OAAAA,EAGAC,SAAW,KAEXzV,KAAO,SAASmD,EAAU+iB,GAExB,GAAG12B,KAAK8T,WAAR4iB,QAYE,IARAsH,KACArqB,GACEqqB,EAAAA,KAAiBt3B,GAEnBgwB,GACEwe,EAAAA,KAAiBxuC,IAGnB1G,KAAIgmB,eAAKA,CACPhmB,KAAAgmB,gBAAA,CACA,IAAAzE,GAAIA,KAEJve,EAAIA,IACJhD,MAAGimB,UAAiB,IAAjBjmB,KAAiBimB,WAClBjjB,EAAAA,KAAWijB,SAAA,IAAAjmB,KAAsBq1C,gBAE9BryC,aAAYyK,QAAaxM,oBAC1BD,eAAAA,WAAeqF,aACfoH,aAAAA,WAAapH,mBAIjBu3B,EAAAA,WAAWO,0BACX8W,EAAAA,gBAGIj2C,EAAyDkP,SAAAA,GAAMlP,QAA/DuH,QAAAy3B,EAAA,SAAA9vB,EAAA0C,GAAA1C,EAAAsM,MAGA+G,WACAviB,EAAAA,QAAQuH,EAAiD2H,QAAAA,QAAAA,EAAAA,SAAAA,EAAAA,GAAAA,MAAAgnC,KACzDA,EAAAA,WAAA,2BAED,SACD16B,GACExb,QAAQuH,QAAQy3B,EAAkB,SAAA9vB,EAAA0C,GAAqB1C,EAAAsM,KAAEtM,EAAAiwB,WAAA,0BAAM5c,EAA/DyE,gBAAA,EACA4X,EAAAA,QAAWO,MASrBrqB,SAAW,WAAXA,IAAAA,KAAAA,OAAW,CACA+d,KAAQ5L,SAAA,IAAAjmB,KAAAq1C,eAGA5nC,aAAaxM,QAAQ,oBAApCD,eAAGgC,WAAYyK,aACbzM,aAAAA,WAAeqF,mBAIjBrG,KAAK6xB,OAASojB,EAAeK,kBAA7Bt1C,KAAK6xB,SACL7xB,KAAGgmB,gBAAa,GAGjB,MAAAhmB,MAAA6xB,QAIH5R,UAAY,SAAS7a,EAAGmwC,GAAxBt1B,GAAAA,KAAAA,OACE,IACE,GAAItc,EACF,KAAAyB,EACA,MAAA,EAME,IAAG,iBAFHzB,EAAAA,EAAOsxC,UAAeh1B,IAGpB,MAAA,IAAOtc,CAIX,IAAA4xC,GAAGA,EAED,GAAG,gBAAAA,GAED,IAAA,GADAC,GAAIA,EAASD,MAAQr/B,KACjB7B,EAAA,EAAIA,EAAAA,EAAIA,SAAS1R,EAAAA,CACnB,GAAA+W,GAAIA,EAAM87B,EACP,IAAH97B,EAAGA,QAAI3D,OACL2D,EAAAA,EAAM87B,GAAAvyC,QAAUA,SAAQ,IACxByW,EAAAA,EAAMu7B,UAAeh1B,IAGvBtc,EAAAA,EAAOA,QAAKV,IAAQoR,EAAA,IAAbqF,OAKV/V,GAAAA,EAAAV,QAAA,MAAAsyC,EAIJ,OACD5xC,GAEC,MAAAgjB,GACFlkB,QAAAgD,IAAA,sBAAAL,EAAAmwC,EAAA5uB,GAvIL,MAAA,IAAAvhB,IAZFpG,QAAAO,OAAA,SAAA63B,QAAA,gBAAA,eAAA,aAAA11B;cCDA,WAIA,QAASJ,KAGL,QAAAm0C,GAAYvrC,GACb,MAAAD,MAAAsoB,MAAArmB,EAAAE,KAEC,QAAAspC,GAAOxpC,GACR,GAAA8yB,GAAA9nB,OAAAhL,EAAAE,IACD,OAAA4yB,GAAS0W,IACH1W,EAEFA,EAAA,IAEG/0B,KAAG+0B,MAAMA,EAAA,KAAQ,GAAA,IAAjBA,EAGGA,IACN/0B,KAAOA,MAAKC,EAAM80B,KAAX,IAGPA,EAAO/0B,IAEJA,KAAAC,MAAA80B,EAAA,KAAA,IAAA,IAGN/0B,KAAAC,MAAA80B,EAAA,KAAA,IAGA,QAAA2W,GAAAzpC,GADC,MAAQjC,MAAKC,MAAe,IAATgC,EAAKE,KAAW,IAAO,IAKxC,OACAlF,OACAi5B,GAAK/6B,GAACA,EAADzB,KAAQA,MAAR4xB,QAAqBA,EAArBqgB,KAAuCA,EAAvCpnB,GAAkDA,GAAlD0iB,KAA0DA,KAA1DhC,YAAsEA,EAAtEN,WAAwFA,GAC7FxO,GAAKh7B,GAACA,EAADzB,KAAQA,MAAR4xB,QAAqBA,EAArBqgB,KAAuC1gB,EAAvC1G,GAAkDA,GAAlD0iB,KAA0DA,KAA1DhC,YAAsEA,EAAtEN,WAAwFA,GAC7FvO,GAAKj7B,GAACA,EAADzB,KAAQA,MAAR4xB,QAAsBA,EAAtBqgB,KAAwCC,EAAAA,GAAa,GAAGD,KAAK,KAAMpnB,YAAQ0gB,EAAYN,WAAMngB,GAClG6R,GAAKl7B,GAACA,EAADzB,KAAQA,MAAM4xB,QAAWA,EAASkgB,KAASp8B,EAAMmV,GAAjD,GAAuDA,KANtD,KAAA0gB,YAAA,EAAAN,WAAA,GAONrO,GAAKn7B,GAACA,EAADzB,KAAQA,OAAR4xB,QAAsBA,EAAtBsgB,YAAwCA,EAAxCD,KAAwDA,EAAxDpnB,GAAmEA,GAAnE0gB,YAA2EA,EAA3EzgB,QAA6FA,GAA7FmgB,WAA0GA,GAC/GpO,GAAKp7B,GAACA,EAADzB,KAAQA,UAAR4xB,QAAyBA,EAAzBlc,MAA2CA,EAA3CmV,GAAuDA,IAC5DiS,GAAKr7B,GAACA,EAADzB,KAAQA,OAAR4xB,QAAsBA,EAASmgB,YAAkB,EAAMlnB,KAAI,EAAI0gB,GAAAA,GAAAA,YAT9D,EAAAzgB,QAAA,GAAAmgB,WAAA,GAUNlO,GAAKt7B,GAACA,EAADzB,KAAQA,UAAc4xB,QAASmgB,EAA/Br8B,MAA4C6b,EAA5C1G,GAAuDA,IAC5DmS,GAAKv7B,GAACA,EAAIzB,KAAIA,OAAM4xB,QAAQA,EAASmgB,KAAalnB,EAAQsnB,GAAAA,GAAAA,YAXpD,GAYNlV,GAAKx7B,GAACA,EAAIzB,KAAIA,OAAM4xB,QAAfmgB,EAAuCA,KAAAA,EAAalnB,GAAI,GAAIsnB,YAAU,GAC3EC,IAAK3wC,GAACA,GAADzB,KAASA,OAAT4xB,QAAuBA,EAAvB/G,GAA6ConB,GAAKE,UAAU,GACjEE,IAAK5wC,GAACA,GAADzB,KAASA,cAAT4xB,QAA8BA,EAA9B/G,GAAoDA,GAApDsnB,UAA4DA,GACjEjV,IAAKz7B,GAACA,GAADzB,KAASA,OAAT4xB,QAAuBA,EAAvBqgB,KAA6CpnB,EAAQsnB,GAAAA,GAAAA,YAfpD,GAgBNG,IAAK7wC,GAACA,GAADzB,KAASA,cAAT4xB,QAA8BA,EAA9B/G,GAAoDA,GAApDsnB,UAA4DA,GACjEI,IAAK9wC,GAACA,GAADzB,KAASA,OAAM4xB,QAASA,EAAxB/G,GAA4ConB,GAAKE,UAAM5G,GAC5DiH,IAAK/wC,GAACA,GAADzB,KAASA,cAAc4xB,QAASogB,EAAgBnnB,GAAM0gB,GAAAA,UAAY,GACvEpO,IAAK17B,GAACA,GAADzB,KAASA,QAAM4xB,QAAUA,EAASogB,KAAWC,EAAK1G,YAAMA,GAC7DnO,IAAK37B,GAACA,GAADzB,KAASA,OAAM4xB,QAASA,EAASogB,KAAWC,EAAK1G,YAAMA,GAC5DlO,IAAK57B,GAACA,GAADzB,KAASA,SAAM4xB,QAAYA,EAASogB,KAAWzgB,EAAKga,YAAMA,GAC/DjO,IAAK77B,GAACA,GAADzB,KAASA,QAAM4xB,QAAWA,EAASogB,KAAWzgB,EAAKga,YAAMA,GAC9DkH,IAAKhxC,GAACA,GAADzB,KAASA,WAAM4xB,QAAaA,EAASogB,KAAWzgB,EAAKga,YAAMA,GAChEmH,IAAKjxC,GAACA,GAADzB,KAASA,UAAM4xB,QAAYA,EAASogB,KAAWzgB,EAAKga,YAAMA,GAC/DoH,IAAKlxC,GAACA,GAADzB,KAASA,YAAY4xB,QAASmgB,EAAaxgB,KAAK,EAAM1G,YAAc,GACzE+nB,IAAKnxC,GAACA,GAADzB,KAASA,WAAY4xB,QAASmgB,EAAaxgB,KAAK,EAAM1G,YAAc,GACzE0S,IAAK97B,GAACA,GAADzB,KAASA,KAAT4xB,QAAqBA,EAAkBqgB,KAAK,EAAM1G,GAAAA,GAAAA,KAAlD,KA3BCA,YAAA,GA0BN/N,IAAM/7B,GAAI,GAAIzB,KAAM,KAAM4xB,QAASmgB,EAAaxgB,KAAK,EAAM1G,GAAI,GAAI0iB,KAAM,MAGzE9P,IAAAh8B,GAAA,GAAAzB,KAAA,KAAA4xB,QAAAkgB,EAAAG,KAAA,EAAA1G,YAAA,GAEAsH,IAAMpxC,GAAI,GAAIzB,KAAM,OAAQ4xB,QAASkgB,EAASG,KAAK,EAAMpnB,GAAI,GAAIogB,WAAW,GAG5E6H,IAAKrxC,GAACA,GAADzB,KAASA,OAAT4xB,QAAuBA,EAASogB,KAAWC,EAAKpnB,GAlC/C,GAAAogB,WAAA,GAoCN8H,IAAKtxC,GAACA,GAADzB,KAASA,OAAT4xB,QAAuBA,EAAvBqgB,KAA2CA,GAChDe,IAAKvxC,GAACA,GAADzB,KAASA,OAAT4xB,QAAuBA,EAAvBqgB,KAA2C1gB,GAChD0hB,IAAKxxC,GAACA,GAADzB,KAASA,OAAM4xB,QAASA,EAASogB,KAAWE,GACjDgB,IAAKzxC,GAACA,GAADzB,KAASA,OAAM4xB,QAAYA,EAASogB,KAApC,GACLmB,IAAK1xC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBsgB,YAA4CA,GAA5CD,KAA6DA,GAClEmB,IAAK3xC,GAACA,GAADzB,KAASA,WAAT4xB,QAA2BA,EAA3Blc,MAA+CA,GACpD29B,IAAK5xC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBsgB,YA1CC,GAAAD,KAAA,GA2CNqB,IAAK7xC,GAACA,GAADzB,KAASA,WAAe4xB,QAASogB,EAAWzgB,MAAK,GACtDgiB,IAAK9xC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBL,KAA4C4gB,GACjDqB,IAAK/xC,GAACA,GAADzB,KAASA,QAAM4xB,QAAgBA,EAASogB,KAAAA,GAC7CyB,IAAKhyC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBugB,UAAiD,EA9ChD5gB,KAAA,GA+CNmiB,IAAKjyC,GAACA,GAADzB,KAASA,eAAT4xB,QAA+BA,EAA/BugB,UAAwD,EA/CvD5gB,KAAA,GAgDNoiB,IAAKlyC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBqgB,KAA4CE,GACjDyB,IAAKnyC,GAACA,GAADzB,KAASA,eAAT4xB,QAA+BA,EAA/BL,KAAmD4gB,GACxD0B,IAAKpyC,GAACA,GAADzB,KAASA,QAAT4xB,QAAwBA,EAAxBugB,UAA4CA,EAA5C5gB,KAA4DA,GACjEuiB,IAAKryC,GAACA,GAADzB,KAASA,eAAa4xB,QAASogB,EAAgBG,UAnD9C,EAAA5gB,KAAA,GAoDNwiB,IAAKtyC,GAACA,GAADzB,KAASA,QAAa4xB,QAASogB,EAAWzgB,UAA1C,EApDCA,KAAA,GAqDNyiB,IAAKvyC,GAACA,GAADzB,KAASA,MAAM4xB,QAAfogB,EAAuCA,KAAAA,GAC5CiC,IAAKxyC,GAACA,GAADzB,KAASA,MAAM4xB,QAAcA,EAASogB,KAAAA,GAD3CkC,IAAMzyC,GAAI,GAAIzB,KAAM,cAAe4xB,QAASogB,EAAWzgB,KAAK,GAG5D4iB,IAAA1yC,GAAA,GAAAzB,KAAA,aAAA4xB,QAAAogB,EAAAG,UAAA,EAAA5gB,KAAA,GAEA6iB,KAAO3yC,GAAI,IAAKzB,KAAM,QAAS4xB,QAASogB,EAAWG,UAAU,EAAMF,KAAK,EAAMhH,WAAW,GAGzFoJ,KAAK5yC,GAACA,IAADzB,KAAUA,QAAV4xB,QAAwBA,EAASmgB,UAAkB,EAAMlnB,KAAzD,EAAkE0gB,WAAY,GAEnF7N,KAAAj8B,GAAMA,IAAIzB,KAAKA,OAAM4xB,QAAWA,EAASmgB,KAApC,EAAiDI,GAAAA,IAAjD5G,YAAA,GACL+I,KAAA7yC,GAAMA,IAAIzB,KAAKA,YAAV4xB,QAA2BA,EAASmgB,UAAaI,EAAUF,KAAM1gB,GACtEgjB,KAAA9yC,GAAMA,IAAIzB,KAAKA,UAAa4xB,QAASkgB,EAASK,UAAzC,EAAyDz8B,KAAzD,GADL8+B,KAAM/yC,GAAI,IAAKzB,KAAM,UAAW4xB,QAASmgB,EAAaI,UAAU,EAAM5gB,KAAK,GAG3EkjB,KAAAhzC,GAAA,IAAAzB,KAAA,MAAA4xB,QAAAkgB,EAAAK,UAAA,EAAAz8B,MAAA,EAAA6b,KAAA,GAGAmjB,MAAAjzC,GAAOA,KAAIzB,KAAMA,MAAM4xB,QAAQA,EAASmgB,gBAAazqC,EAAgB6B,QAAMA,UAASgpC,UAAWA,EAAUz8B,MAAMA,GAD/Gi/B,MAAOlzC,GAAI,KAAMzB,KAAM,OAAQ4xB,QAASmgB,EAAazqC,gBAAgB,EAAM6B,QAAS,UAAWgpC,UAAU,EAAMz8B,MAAM,GAGrHk/B,MAAAnzC,GAAOA,KAAIzB,KAAMA,OAAM4xB,QAAQA,EAAzBtqB,gBAAA,EAA6DkqB,QAA7D,UAxEA2gB,UAAA,EAAAz8B,MAAA,GAwENm/B,MAAOpzC,GAAI,KAAMzB,KAAM,OAAQ4xB,QAASogB,EAAWG,UAAU,EAAM3gB,WAAY,GAG/EsjB,MAAArzC,GAAOA,KAAIzB,KAAMA,OAAM4xB,QAAjBogB,EAAyCA,UAAWG,EAAAA,WAAgBF,GAE1E8C,MAAAtzC,GAAOA,KAAIzB,KAAMA,cAAkB4xB,QAASogB,EAAWG,UAAU,EAAMF,KAAK,EAAMzgB,WAAY,IAD9FwjB,MAAOvzC,GAAI,KAAMzB,KAAM,KAAM4xB,QAASogB,EAAWG,UAAU,EAAMF,KAAK,EAAMzgB,WAAY,IAGxFyjB,MAAAxzC,GAAOA,KAAIzB,KAAMA,WAAa4xB,QAASmgB,EAAazqC,UAAAA,EAAgB2qC,KAA9D,EAAoE9oC,WAAS,KAEnF+rC,MAAAzzC,GAAOA,KAAIzB,KAAMA,MAAM4xB,QAAQA,EAASmgB,gBAAazqC,EAAgB6B,QAAMA,YAASgpC,UAAaA,EAAUz8B,MAAMA,GADjHy/B,MAAO1zC,GAAI,KAAMzB,KAAM,OAAQ4xB,QAASmgB,EAAazqC,gBAAgB,EAAM6B,QAAS,YAAagpC,UAAU,EAAMz8B,MAAM,GAGvH0/B,MAAA3zC,GAAOA,KAAIzB,KAAMA,OAAM4xB,QAAaA,EAASmgB,gBAAaI,EAApDhpC,QAnFA,YAAAgpC,UAAA,EAAAz8B,MAAA,GAmFN2/B,MAAO5zC,GAAI,KAAMzB,KAAM,YAAa4xB,QAASmgB,EAAaI,UAAU,GAGpEmD,MAAA7zC,GAAOA,KAAIzB,KAAMA,YAAgB4xB,QAASogB,EAAWC,UAtF/C,GAwFNsD,KAAA9zC,GAAOA,IAAIzB,KAAMA,SAAM4xB,QAAWA,EAASogB,KAAWC,GADtDuD,MAAO/zC,GAAI,KAAMzB,KAAM,UAAW4xB,QAASogB,EAAWC,KAAK,GAG3DwD,MAAAh0C,GAAOA,KAAIzB,KAAMA,UAAc4xB,QAASmgB,EAAlCE,KAA+C3qC,GAErDouC,MAAAj0C,GAAOA,KAAIzB,KAAMA,OAAM4xB,QAAUA,EAASmgB,gBA5FpC,EAAAI,UAAA,EAAAz8B,MAAA,GA8FNigC,MAAAl0C,GAAOA,KAAIzB,KAAMA,SAAM4xB,QAAUA,EAA3BqgB,KAA+CA,GACrD2D,MAAAn0C,GAAOA,KAAIzB,KAAMA,SAAM4xB,QAAUA,EAASogB,KAAWC,GACrD4D,MAAAp0C,GAAOA,KAAIzB,KAAMA,SAAM4xB,QAAUA,EAASogB,KAAWzgB,GACrDukB,MAAAr0C,GAAOA,KAAIzB,KAAMA,SAAX4xB,QAA0BA,EAA1BqgB,KAA8C1gB,GACpDwkB,MAAAt0C,GAAOA,KAAIzB,KAAMA,SAAX4xB,QAA0BA,EAA1BL,KAA8CA,GADpDykB,MAAOv0C,GAAI,KAAMzB,KAAM,QAAS4xB,QAASogB,EAAWzgB,KAAK,GAGzD0kB,MAAAx0C,GAAA,KAAAzB,KAAA,QAAA4xB,QAAAogB,EAAAzgB,KAAA,GAGA2kB,OAAAz0C,GAAQA,MAAIzB,KAAOA,YAAM4xB,QAAaA,EAASogB,UAAWG,EAAUF,KAAMA,GAC3EkE,OAAA10C,GAASA,MAAIzB,KAAQA,YAAM4xB,QAAaA,EAASogB,UAAWG,EAAUF,KAAMA,GAxGrEmE,OADH30C,GAAA,MAAAzB,KAAA,YAAA4xB,QAAAogB,EAAAG,UAAA,EAAAF,KAAA,GAyGJoE,QAAS50C,GAAI,OAAQzB,KAAM,YAAa4xB,QAASogB,EAAWG,UAAU,EAAMF,KAAK,IAOhF5zB,WACAme,GAAI/6B,GAAEA,EAAFzB,KAAgB,UACpBy8B,GAAIh7B,GAAEA,EAAFzB,KAAgB,SACpB08B,GAAIj7B,GAAEA,EAAFzB,KAAgB,QANV28B,GA7GPl7B,GAAA,EAAAzB,KAAA,QAkHH48B,GAAMn7B,GAAI,EAAGzB,KAAO,UAKtB0c,GAAAA,GAAAA,EAAY1c,KAAA,cAIV0c,WACA45B,MAAA,SAAOC,MALG,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,MAAA,SAMVC,MAAA,OAAQC,MANE,OAMWC,MAAQ,OAAaC,MAAQ,OAAAC,MAAa,OAAQC,MAAA,OAAaC,MAAQ,OAAAC,MAAa,OAAQC,MAAA,OACjHC,KAAI,QAAAC,KAAc,QAAIC,KAAA,QAAkBC,KAAA,QAAcC,KAAI,QAAAC,KAAc,QAAIC,KAPlE,QAOoFC,KAAA,QAAcC,KAAI,QAChHC,KAAA,SAAOC,KAAA,SARGC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SASVC,MAAA,eACAC,MAAA,YAVUC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAAAC,MAAA,YAWV1G,GAAA,aAXUC,GAAA,aAAAC,GAAA,aAAAyG,GAAA,aAAA9b,GAAA,aAAAC,GAAA,aAAA8b,GAAA,aAAAC,GAAA,aAAA9b,GAAA,aAYV+b,MAAA,eACAC,MAAA,cAAOC,MAAmB,cAAOC,MAAA,cAA0BC,MAAA,cAA0BC,MAAA,cAAmBC,MAAO,cAAmBC,MAAO,cAAAC,MAAmB,cAAOC,MAbzJ,cAcVC,MAAA,UACAC,MAAA,QACAC,MAAA,QAhBUC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAAAC,MAAA,QAiBVC,MAAA,kBAAQC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAAAC,MAAA,kBAjBEC,MAvHP,kBAAAC,MAAA,kBAAAC,MAAA,kBAsIHC,MAAO,QAKTxvB,MAAAA,OACEyvB,OAAI,SAGJzvB,aACAwQ,GAAA,EACAC,GAAA,EANYC,GA3IT,EA+IHC,GAAI,EAKN+e,GAAAA,EACE7e,GAAA,GAGA6e,WACAlf,EAAA,UACAC,EAAA,YACAI,EAAA,SACAG,EAAA,QARU2e,GApJP,SA0JHC,GAAK,YAKPvyC,IAAAA,WACEwyC,IAAI,QAGJxyC,UACAmzB,GAAI/6B,GAAEA,EAAFzB,KAASA,WALJy8B,GA/JNh7B,GAAA,EAAAzB,KAAA,OAAAquC,QAAA,IAkKH3R,GAAMj7B,GAAI,EAAGzB,KAAM,MAAOquC,QAAS,IAKrCviC,GAAAA,GAAAA,EAAc9L,KAAA,QAAAquC,QAAA,IACZzR,GAAIn7B,GAAEA,EAAFzB,KAASA,OAAMquC,QAAf,KAGJviC,aAJY0wB,GAvKT/6B,GAAA,EAAAzB,KAAA,iBAyKHy8B,GAAMh7B,GAAI,EAAGzB,KAAM,YAKrB08B,GAAAj7B,GAAA,EAAAzB,KAAA,WACA87C,GAAAA,GAAAA,EAAAA,KAAAA,kBAIEA,oBACApf,GAAKj7B,GAAEA,EAAIzB,KAAIA,yBALIoxC,MAAA,MAMnBkB,IAAK7wC,GAAEA,GAAFzB,KAAUA,KAAMoxC,MAASA,IAC9B7T,IAAK97B,GAAEA,GAAFzB,KAAUA,gBACfy9B,IAAKh8B,GAAEA,GAAFzB,KAAUA,qBARIoxC,MAAA,MASnByB,IAAKpxC,GAAEA,GAAFzB,KAAUA,SAAMoxC,MAAYA,IACjC0B,IAAKrxC,GAAEA,GAAFzB,KAAUA,QAAMoxC,MAAWA,IAChC2K,IAAKt6C,GAAEA,GAAFzB,KAAUA,UAAMoxC,MAAaA,IAClC4K,IAAKv6C,GAAEA,GAAFzB,KAAUA,SAAMoxC,MAAYA,IACjC6K,IAAKx6C,GAAEA,GAAFzB,KAAUA,WAAaoxC,MAAvB,IACL8K,IAAKz6C,GAAEA,GAAFzB,KAAUA,UAAaoxC,MAAO,IACnCuK,IAAKl6C,GAAEA,GAAFzB,KAAUA,YAfIoxC,MAAA,IAgBnB+K,IAAK16C,GAAEA,GAAFzB,KAAUA,WAAMoxC,MAAkBA,IACvCmC,IAAK9xC,GAAEA,GAAFzB,KAAUA,MAAVoxC,MAAwBA,MAC7BoC,IAAK/xC,GAAEA,GAAFzB,KAAUA,MAAVoxC,MAAwBA,MAC7B0C,IAAKryC,GAAEA,GAAFzB,KAAUA,SACfi0C,IAAKxyC,GAAEA,GAAFzB,KAAUA,iBAAqBoxC,MApBjB,IAqBnBgL,IAAA36C,GAAA,GAAAzB,KAAA,OAAAoxC,MAAA,MACAiL,IAAA56C,GAAA,GAAAzB,KAAA,OAAAoxC,MAAA,MACAkL,IAAM76C,GAAEA,GAAIzB,KAAKA,OAAMoxC,MAAA,MACvBwK,IAAMn6C,GAAEA,GAAIzB,KAAKA,OAAMoxC,MAAA,MAGvBmL,KAAK96C,GAAA,IAAAzB,KAAA,oBAAAoxC,MAAA,KACH3vC,KAAIA,GADD,IAAAzB,KAAA,mBAAAoxC,MAAA,MAEHpxC,KAAAA,GAAM,IAAAA,KAFH,YAAAoxC,MAAA,OAGHD,KAAAA,GAAAA,IAASnxC,KAAA,YAAcoxC,MAAA,OACrBoL,KACE/6C,GAAA,IACAzB,KAAA,WAIDmxC,QAND,SAOK9V,GACH,GAAAA,EAAAjpB,QAAS3Q,KAAQ4vC,EAAAA,CAClB,GAAAJ,GAAA5V,EAAA9oB,MAAA,IACF,SAzCgB9Q,GAAA,GAAA4vC,OAAA,IAAA5oC,IAAA8K,OAAA09B,EAAA,IAAA,MA2CdxvC,GAAA,KAAA4vC,OAAA,IAAA5oC,IAAA8K,OAAA09B,EAAA,MAID,QAAO7+B,GAAAA,GAAQi/B,OAAf,IAAyB5oC,IAAA8K,OAAA8nB,GAAA,QAItBohB,KAECh7C,GAAA,IACDzB,KAAA,iBACFmxC,QAAA,SAAA9V,GACD,GAAAA,EAAAjpB,QAAA,KAAA,EAAA,CACD,GAAA6+B,GAAA5V,EAAA9oB,MAAA,IAzDgB,IAAA,GAAA0+B,EAAAjyC,QAAA,GAAAiyC,EAAA,IAAA,GAAAA,EAAA,GAkDX,QAAUxvC,GAAI,MAAOzB,KAAM,YAAayI,IAAK8K,OAAO09B,EAAK,KAY1DxvC,IAAe,GAAXwvC,EAAKjxC,QAA0BoxC,GAApBH,EAAA,IAAjB,GAAqCG,EAArC,GA7OF,QAAA3vC,GAAA,OAAAzB,KAAA,YAAAyI,IAAA8K,OAAA09B,EAAA,MAuOC,WA6BJyL,KAAIC,GAAAA,IAAO38C,KAAX,SAAAoxC,MAAA,MACAwL,KAAIC,GAAAA,IAAAA,KAAa,mBAAjBzL,MAAA,OAGAhwC,eACEu7C,GAAAA,EAAAA,SAAA,EAAA38C,KAAA,WACDyB,GAFD,EAAAP,SAGK,EAAAlB,KAAA,oBACHg8B,GAAAA,EAAAA,SAAO,EAAAh8B,KAAP,aACAyB,GAAA,EAAGu6B,SAAQp0B,EAAX5H,KAAiB,eACf68C,GAAAA,EAAAA,SAAAA,EAAe78C,KAAf,cACDyB,GAAA,EAAAP,SAAA,EAAAlB,KAAA,WACFyB,GAAA,EAAAP,SAAA,EAAAlB,KAAA,UAxBAyB,GAAI,IAAKP,SAAU,EAAGlB,KAAM,aA0B7ByB,GAAA,IAAIq7C,SAAAA,EAAJ98C,KAAA,aACAyB,GAAA,IAAIipB,SAAJ,GAAA1qB,KAAA,SAtBFyoB,cA2BIhnB,GAAA,EAAAgB,SAAKs6C,SAAan1C,KAAO,aAAArE,QAAA9B,GAAA,KAAAgH,IAAA,QAtB7BgM,SAAW,SAAS7M,GA2BhB,GAAA+0C,IAAGK,EACDH,GAAA,EACDI,GAAA,EAxBCjhB,EAAO,YA0BTA,KAAGghB,GACDL,GAAA,GAIA3gB,EAAA,gBAzBSp0B,KA2BTi1C,GAAA,EAOE7gB,KAHAkhB,GAAAA,GAAAA,EACDxyB,OAECsR,CACAkhB,GAGAlhB,IAAAA,GAAO,QAAA8gB,CACPI,MAAAA,IAAYz0C,IACb,KAGC,IAAAu0C,GAAGC,EAAAA,EACDjhB,IAAAA,IAAO,EACP,KAGG,IAAA,KAAAghB,OAIDC,CAEH,GAEDvyB,GAFCwyB,GAAAz7C,GAAAu7C,EAiBP,IAbGL,GACF3gB,EAAA,QAAA8gB,EAAA,OA5BKI,EAAYz0C,IAAMb,EAAKo0B,IA5S1B6gB,GA+SG7gB,EAAO,QAAU8gB,EAAe,QA8BxCK,EAAY10C,IAAAb,EAAAo0B,KA1BJA,EAAO,aAAe8gB,EA8B9Bt5C,EAAaiF,IAAA8K,OAAA3L,EAASw1C,KAGhBxe,EAAJn2B,IAAA,GAAAy0C,EAAAz0C,IAAA,EAAA,CACA,GAAAw0C,EAEMnlC,IA9BEkkB,EAAO,aAAe8gB,IA8BfvpC,GAAOhJ,CACjBq0B,GAAA,GAAKr7B,EAALy4B,GACDlkB,KA3BMolC,GAAYvrB,WAAa/pB,EAAKo0B,OA8BtCihB,IAGK,CA1BDvyB,GAAS3nB,KAAKm6C,KAmCnB,MAJDxyB,IAOErvB,UAAAA,SAAAkN,EAAgB80C,GACd90C,EAAA9G,GAAG8I,OAAO9I,IAGX+B,WAJD,SAAA45C,EAAAC,GAtBF,QAASC,GAAI/yC,GAgCX,GAAAuN,GAAWvE,OAAQH,EAAAA,IACnBpK,GAAAA,MAASjG,EAATtB,KAAA,MAAAm9B,GAAAr7B,MAAAgH,EAAA9I,MACDqW,EAAAxR,KAAAsoB,MAAA9W,IAGFvN,EAAA9I,KAAA2R,GA1XHA,EAAA7I,EAAA9I,KAAAqW,EAgWQ1E,EAAQ7I,EAAM9I,IAAMqW,EAgBvB,GAAA1E,MAEDwrB,EAAI51B,IAdJ3N,SAAQuH,QAAQw6C,EAAQ,SAAS7yC,EAAO0C,GACnC1C,GACD+yC,EAAI/yC,KAIL8yC,GACDhiD,QAAQuH,QAAQy6C,EAAQ,SAAS9yC,EAAO0C,GACnC1C,GACD+yC,EAAI/yC,IAKV,IAAIvB,KAEJ,KAAI,GAAIiE,KAAOmG,GAAS,CACtB,GAAI7K,IAASE,IAAM2K,EAAQnG,GAAMxL,GAAI8R,OAAOtG,GAC5CjE,GAASjG,KAAKwF,GAGhB,MAAOS,KA1Zb3N,QAAAO,OAAA,SAAA63B,QAAA,eAAA91B","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:buildName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:buildName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build/:name*', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:cat?', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid?', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build/' + vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build/' + vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    dntData.init(fileName, columns, function() {}, function() {\r\n      vm.tryToSetItem(dntFiles);\r\n    });\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          retVal = 'not transferable';\r\n        }\r\n      }\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can sell';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not sellable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'shops';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build/' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  });\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return action.name;\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    if(t.progressCallback) {\r\n                      t.progressCallback(msg);\r\n                    }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      var longUrl = window.location.href.split(basePath)[0] + basePath + path;\r\n      var data = { longUrl: longUrl };\r\n      console.log('getting short url for ', longUrl);\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(!ds.length) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var rowNum = ds[0];\r\n          var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n        \r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n          }\r\n          \r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(!ps.length) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != typeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n              console.log('bad potential');\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n          newItem.gemSlot = item.gemSlot;\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else if(itemType.enchantDnt) {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n            else if(itemType.petLevelDnt) {\r\n              var enchantments = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(newItem.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          \r\n          for(var fileType in itemType) {\r\n            if(fileType.indexOf('Dnt') > 0) {\r\n              if(fileType == 'enchantDnt' && !item.enchantmentNum) {\r\n                continue;\r\n              }\r\n              \r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        \r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true,},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : dntData.getValue(itemType.mainDnt, row, 'LevelLimit'),\r\n      needJobClass : dntData.getValue(itemType.mainDnt, row, 'NeedJobClass'),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json', \r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        var defToPdmg = dupeStat(110373);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        minPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        maxPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n     110373: {id: 110373, name: 'defToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n            else if(vals.length == 3 && vals[0] == 5 && vals[2] == 7) {\r\n              return [{ id: 110373, name: 'defToPdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}