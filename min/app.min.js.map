{"version":3,"sources":["routes.js","about/about.js","filters/filters.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","nav/export.js","nav/nav.js","nav/setup.js","region/region.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$anchorScroll","$routeParams","currentGroup","localStorage","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","saveBuildSelection","anyItems","createGroup","handleChange","console","log","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","indexOf","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","translate","NameID","NameIDParam","material","icon","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","msg","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","dntLocation","encodeItem","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","_","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","noLocationMenu","normalMenu","isSearch","startedLoading","tlocation","noRegion","fireAction","action","getActions","menu","extraCss","$route","dntInit","translationsStatus","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItems","currentResults","nameSearch","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","savedSearchStatId","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","link","attrs","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","copy","deleteNullProperties","set","compressBuild","each","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/saved', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/saved/:groupName*', {\r\n      redirectTo: '/builds/:groupName'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/builds/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item-search', {\r\n      redirectTo: '/search'\r\n    }).\r\n    when('/item-search/:itemType', {\r\n      redirectTo: '/search/:itemType'\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    when('/search/custom', {\r\n      templateUrl: 'ui/search/custom-items.html',\r\n      controller: 'CustomItemCtrl as customItems'\r\n    }).\r\n    when('/search/skills', {\r\n      templateUrl: 'ui/search/skill-search.html',\r\n      controller: 'SkillSearchCtrl as skillSearch'\r\n    }).\r\n    when('/search/:itemType*', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:itemString*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$anchorScroll','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$anchorScroll,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.currentGroup = localStorage.getItem('currentGroup');\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/builds/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/builds/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n    \r\n    $timeout(function() {\r\n      $anchorScroll('/builds/' + vm.currentGroup);\r\n    });\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/builds/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n\r\n  this.toggleGroup = function() {\r\n    localStorage.setItem('currentGroup', null);\r\n    $location.url('/builds');\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/builds/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/builds/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    this.addAffectAmount = null;\r\n    this.replaceAffectAmount = {};\r\n\r\n    this.groupItems = null;\r\n    this.groupCalcStats = null\r\n  }\r\n  this.clearGroup();\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.stat = {id:-1, name:''};\r\n  this.newStatVal = 0;\r\n\r\n  this.dropdownStats = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(!hCodeValues.stats[id].noCustom) {\r\n      this.dropdownStats.push(hCodeValues.stats[id]);\r\n    }\r\n  }\r\n  this.dropdownStats.sort()\r\n\r\n  this.getStats = function() {\r\n    return this.dropdownStats;\r\n  }\r\n  \r\n  this.newStat = function() {\r\n    return {id:this.stat.id,max:this.newStatVal};\r\n  }\r\n  \r\n  this.addStat = function() {\r\n    if(this.stat.id > -1) {\r\n      if(!this.item.stats) {\r\n        this.item.stats = [];\r\n      }\r\n       \r\n      this.item.stats.push(this.newStat());\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.removeStat = function(stat) {\r\n    var i = this.item.stats.indexOf(stat);\r\n    if(i != -1) {\r\n    \tthis.item.stats.splice(i, 1);\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    return this.getStatName(this.newStat());\r\n  }\r\n  \r\n  this.getNewStatDisplayValue = function() {\r\n    return this.getStatDisplayValue(this.newStat());\r\n  }\r\n  \r\n  this.getStatName = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].name;\r\n    }\r\n  }\r\n  \r\n  this.getStatDisplayValue = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].display(stat);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    $location.replace();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/builds/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/builds/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory',\r\n  function($scope,$location,translations,region,itemCategory) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      var menu = null;\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          value.extraCss = 'active';\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","angular.module('dnsim').controller('CustomItemCtrl',\r\n\r\n['$window','saveHelper','$location','hCodeValues',\r\nfunction($window,saveHelper,$location,hCodeValues) {\r\n  'use strict';\r\n  \r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     var cat = itemCategory.byName(catName);\r\n     if(cat) {\r\n       $location.path(cat.path);\r\n     }\r\n     return;\r\n  }\r\n\r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.type) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        \r\n        if($scope.nameSearch != '') {\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","angular.module('dnsim').controller('SkillSearchCtrl',\r\n\r\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues',\r\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues) {\r\n  'use strict';\r\n  \r\n  $window.document.title = 'DN Gear Sim | SKILLS';\r\n  \r\n  var vm = this;\r\n  document.body.className = 'search-back';\r\n  \r\n  this.job = {id: -1, d:{}, name: ''};\r\n  this.jobs = [this.job];\r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    if(!jobs.isLoaded()) {\r\n      // console.log('jobs not loaded');\r\n      if(!jobs.hasStartedLoading()) {\r\n        init();\r\n      }\r\n      return true;      \r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}]);","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.categories = itemCategory.categories;\r\n      \r\n      $scope.setCategory = function(action) {\r\n        localStorage.setItem('selectedItemCategory', action.name);\r\n        $location.path('/' + action.path);\r\n      }\r\n\r\n      angular.forEach($scope.categories, function(value, key) {\r\n        if($location.path() == '/' + value.path) {\r\n          value.extraCss = 'active';\r\n        }\r\n        else {\r\n          value.extraCss = 'search-default';\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    link: function($scope, element, attrs) {\r\n\r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if('hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills'},\r\n      {path: 'search/custom', name:'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      // {region: 'ina', name: 'indonesian files from gemscool', url : 'https://dnina.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      console.log('saving selection');\r\n      localStorage.setItem('currentGroup', buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        console.log('also job');\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      \r\n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, type: 'dps', pc: 50, skPc: 4050 },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, type: 'dps', pc: 51, skPc: 4051 },\r\n      2  : {id: 2, name: 'int', display: toNoDec, type: 'dps', pc: 52, skPc: 4052 },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, type: 'def', pc: 53, skPc: 4053 },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, type: 'dps', pc: 54 },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, type: 'dps', pc: 56 },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'def', display: inThousands, type: 'def', pc: 58 },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, type: 'def', pc: 59 },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, type: 'dps', pc: 62 },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, type: 'dps' },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, type: 'dps' },\r\n      18 : {id: 18, name: 'light%', display: toPercent, type: 'dps' },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, type: 'dps' },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, type: 'def' },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, type: 'def' },\r\n      22 : {id: 22, name: 'light def', display: toPercent, type: 'def' },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, type: 'def' },\r\n      25 : {id: 25, name: 'hp', display: inThousands, type: 'def', pc: 75, skPc: 4075 },\r\n      26 : {id: 26, name: 'mp', display: inThousands, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, type: 'dps' },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, type: 'dps', pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, type: 'dps', pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent },\r\n      51 : {id: 51, name: 'agi%', display: toPercent },\r\n      52 : {id: 52, name: 'int%', display: toPercent },\r\n      53 : {id: 53, name: 'vit%', display: toPercent },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55 },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57 },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'def%', display: toPercent },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent },\r\n      76 : {id: 76, name: 'mp%', display: toPercent },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, type: 'dps', pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\r\n      \r\n      1008: {id: 1008, name: 'calc pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'calc mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd calc', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      134 : { id: 134, name: 'physicial defense%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}