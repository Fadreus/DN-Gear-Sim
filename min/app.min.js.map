{"version":3,"sources":["routes.js","about/about.js","filters/filters.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","nav/export.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$routeParams","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","currentGroup","saveBuildSelection","anyItems","createGroup","handleChange","console","log","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","localStorage","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","icon","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","indexOf","startedLoading","tlocation","noRegion","dntLocation","fireAction","action","getActions","menu","currentBuild","extraCss","$route","dntInit","translationsStatus","progressTranslations","translate","msg","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","f","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","_","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","NameID","NameIDParam","material","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","encodeItem","customItems","currentResults","nameSearch","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","searchable","savedSearchStatId","navigate","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","link","attrs","collapsed","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","copy","deleteNullProperties","set","compressBuild","each","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item-search', {\r\n      redirectTo: '/search'\r\n    }).\r\n    when('/item-search/:itemType', {\r\n      redirectTo: '/search/:itemType'\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    when('/search/custom', {\r\n      templateUrl: 'ui/search/custom-items.html',\r\n      controller: 'CustomItemCtrl as customItems'\r\n    }).\r\n    when('/search/skills', {\r\n      templateUrl: 'ui/search/skill-search.html',\r\n      controller: 'SkillSearchCtrl as skillSearch'\r\n    }).\r\n    when('/search/:itemType*', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:itemString*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n\r\n  this.toggleGroup = function() {\r\n    localStorage.setItem('currentGroup', null);\r\n    $location.url('/builds');\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/build/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n    \r\n    var buildAction = {path: 'build', name:'build', icon: 'wrench'};\r\n    \r\n    var withBuildMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      buildAction,\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      var menu = null;\r\n      \r\n      var currentBuild = localStorage.getItem('currentGroup');\r\n      if(currentBuild) {\r\n        var savedItems = saveHelper.getSavedItems();\r\n        if(!(currentBuild in savedItems)) {\r\n          currentBuild = null;\r\n        }\r\n      }\r\n\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(currentBuild && currentBuild != 'null') {\r\n        menu = withBuildMenu;\r\n        buildAction.path = 'build/' + currentBuild;\r\n        buildAction.name = currentBuild;\r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n\r\n      console.log('path:', $location.path());\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          if(value.path != 'builds' || $location.path() == '/builds') {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/build/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    this.addAffectAmount = null;\r\n    this.replaceAffectAmount = {};\r\n\r\n    this.groupItems = null;\r\n    this.groupCalcStats = null\r\n  }\r\n  this.clearGroup();\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.stat = {id:-1, name:''};\r\n  this.newStatVal = 0;\r\n\r\n  this.dropdownStats = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(!hCodeValues.stats[id].noCustom) {\r\n      this.dropdownStats.push(hCodeValues.stats[id]);\r\n    }\r\n  }\r\n  this.dropdownStats.sort()\r\n\r\n  this.getStats = function() {\r\n    return this.dropdownStats;\r\n  }\r\n  \r\n  this.newStat = function() {\r\n    return {id:this.stat.id,max:this.newStatVal};\r\n  }\r\n  \r\n  this.addStat = function() {\r\n    if(this.stat.id > -1) {\r\n      if(!this.item.stats) {\r\n        this.item.stats = [];\r\n      }\r\n       \r\n      this.item.stats.push(this.newStat());\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.removeStat = function(stat) {\r\n    var i = this.item.stats.indexOf(stat);\r\n    if(i != -1) {\r\n    \tthis.item.stats.splice(i, 1);\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    return this.getStatName(this.newStat());\r\n  }\r\n  \r\n  this.getNewStatDisplayValue = function() {\r\n    return this.getStatDisplayValue(this.newStat());\r\n  }\r\n  \r\n  this.getStatName = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].name;\r\n    }\r\n  }\r\n  \r\n  this.getStatDisplayValue = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].display(stat);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    $location.replace();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","angular.module('dnsim').controller('CustomItemCtrl',\r\n\r\n['$window','saveHelper','$location','hCodeValues',\r\nfunction($window,saveHelper,$location,hCodeValues) {\r\n  'use strict';\r\n  \r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     $scope.itemCategory = itemCategory.byName(catName);\r\n     if($scope.itemCategory) {\r\n       $location.path($scope.itemCategory.path);\r\n     }\r\n     return;\r\n  }\r\n\r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.navigate = function() {\r\n    $timeout(function() {\r\n      if($scope.itemCategory) {\r\n        $location.path($scope.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        \r\n        if($scope.nameSearch != '') {\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","angular.module('dnsim').controller('SkillSearchCtrl',\r\n\r\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues',\r\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues) {\r\n  'use strict';\r\n  \r\n  $window.document.title = 'DN Gear Sim | SKILLS';\r\n  \r\n  var vm = this;\r\n  document.body.className = 'search-back';\r\n  \r\n  this.job = {id: -1, d:{}, name: ''};\r\n  this.jobs = [this.job];\r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    if(!jobs.isLoaded()) {\r\n      // console.log('jobs not loaded');\r\n      if(!jobs.hasStartedLoading()) {\r\n        init();\r\n      }\r\n      return true;      \r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}]);","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.categories = itemCategory.categories;\r\n      $scope.collapsed = true;\r\n      \r\n      $scope.setCategory = function(action) {\r\n        $scope.cat = action;\r\n        localStorage.setItem('selectedItemCategory', action.name);\r\n        \r\n        if($scope.collapse) {\r\n          $scope.collapsed = !$scope.collapsed;\r\n        }\r\n\r\n        if($scope.onChange) {\r\n          $scope.onChange();\r\n        }\r\n      }\r\n\r\n      angular.forEach($scope.categories, function(value, key) {\r\n        if($location.path() == '/' + value.path) {\r\n          value.extraCss = 'active';\r\n        }\r\n        else {\r\n          value.extraCss = 'search-default';\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    link: function($scope, element, attrs) {\r\n\r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills'},\r\n      {path: 'search/custom', name:'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      // {region: 'ina', name: 'indonesian files from gemscool', url : 'https://dnina.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      console.log('saving selection');\r\n      localStorage.setItem('currentGroup', buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        console.log('also job');\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      \r\n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      134 : { id: 134, name: 'physicial defense%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}