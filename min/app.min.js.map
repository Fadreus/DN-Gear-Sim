{"version":3,"sources":["routes.js","filters/filters.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","nav/export.js","nav/nav.js","nav/setup.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","about/about.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$window","$routeParams","document","body","className","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","currentGroup","saveBuildSelection","title","anyItems","createGroup","handleChange","console","log","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","localStorage","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","icon","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","indexOf","startedLoading","tlocation","noRegion","dntLocation","fireAction","action","getActions","menu","currentBuild","extraCss","$route","dntInit","translationsStatus","progressTranslations","translate","msg","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","NameID","NameIDParam","material","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","encodeItem","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","_","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItems","currentResults","nameSearch","navigate","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","searchable","savedSearchStatId","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","link","attrs","collapsed","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","copy","deleteNullProperties","set","compressBuild","each","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item-search', {\r\n      redirectTo: '/search'\r\n    }).\r\n    when('/item-search/:itemType', {\r\n      redirectTo: '/search/:itemType'\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    when('/search/custom', {\r\n      templateUrl: 'ui/search/custom-items.html',\r\n      controller: 'CustomItemCtrl as customItems'\r\n    }).\r\n    when('/search/skills', {\r\n      templateUrl: 'ui/search/skill-search.html',\r\n      controller: 'SkillSearchCtrl as skillSearch'\r\n    }).\r\n    when('/search/:itemType*', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:itemString*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n\r\n  this.toggleGroup = function() {\r\n    localStorage.setItem('currentGroup', null);\r\n    $location.url('/builds');\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/build/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n    \r\n    var buildAction = {path: 'build', name:'build', icon: 'wrench'};\r\n    \r\n    var withBuildMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      buildAction,\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      var menu = null;\r\n      \r\n      var currentBuild = localStorage.getItem('currentGroup');\r\n      if(currentBuild) {\r\n        var savedItems = saveHelper.getSavedItems();\r\n        if(!(currentBuild in savedItems)) {\r\n          currentBuild = null;\r\n        }\r\n      }\r\n\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(currentBuild && currentBuild != 'null') {\r\n        menu = withBuildMenu;\r\n        buildAction.path = 'build/' + currentBuild;\r\n        buildAction.name = currentBuild;\r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n\r\n      console.log('path:', $location.path());\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          if(value.path != 'builds' || $location.path() == '/builds') {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = localStorage.getItem('currentGroup');\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    this.addAffectAmount = null;\r\n    this.replaceAffectAmount = {};\r\n\r\n    this.groupItems = null;\r\n    this.groupCalcStats = null\r\n  }\r\n  this.clearGroup();\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.stat = {id:-1, name:''};\r\n  this.newStatVal = 0;\r\n\r\n  this.dropdownStats = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(!hCodeValues.stats[id].noCustom) {\r\n      this.dropdownStats.push(hCodeValues.stats[id]);\r\n    }\r\n  }\r\n  this.dropdownStats.sort()\r\n\r\n  this.getStats = function() {\r\n    return this.dropdownStats;\r\n  }\r\n  \r\n  this.newStat = function() {\r\n    return {id:this.stat.id,max:this.newStatVal};\r\n  }\r\n  \r\n  this.addStat = function() {\r\n    if(this.stat.id > -1) {\r\n      if(!this.item.stats) {\r\n        this.item.stats = [];\r\n      }\r\n       \r\n      this.item.stats.push(this.newStat());\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.removeStat = function(stat) {\r\n    var i = this.item.stats.indexOf(stat);\r\n    if(i != -1) {\r\n    \tthis.item.stats.splice(i, 1);\r\n      this.onChange();\r\n    }\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    return this.getStatName(this.newStat());\r\n  }\r\n  \r\n  this.getNewStatDisplayValue = function() {\r\n    return this.getStatDisplayValue(this.newStat());\r\n  }\r\n  \r\n  this.getStatName = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].name;\r\n    }\r\n  }\r\n  \r\n  this.getStatDisplayValue = function(stat) {\r\n    if(stat.id in hCodeValues.stats) {\r\n      return hCodeValues.stats[stat.id].display(stat);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    $location.replace();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/build/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('CustomItemCtrl',\r\n\r\n['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout',\r\nfunction($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  this.itemCategory = itemCategory.byName('custom');\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  this.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     $scope.itemCategory = itemCategory.byName(catName);\r\n     if($scope.itemCategory) {\r\n       $location.path($scope.itemCategory.path);\r\n     }\r\n     return;\r\n  }\r\n\r\n  document.body.className = 'search-back';\r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.navigate = function() {\r\n    $timeout(function() {\r\n      if($scope.itemCategory) {\r\n        $location.path($scope.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        \r\n        if($scope.nameSearch != '') {\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","angular.module('dnsim').controller('SkillSearchCtrl',\r\n\r\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location',\r\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n  'use strict';\r\n  \r\n  $window.document.title = 'DN Gear Sim | SKILLS';\r\n  \r\n  var vm = this;\r\n  document.body.className = 'search-back';\r\n  \r\n  this.job = {id: -1, d:{}, name: ''};\r\n  this.jobs = [this.job];\r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.itemCategory = itemCategory.byName('skills');\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  this.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    if(!jobs.isLoaded()) {\r\n      // console.log('jobs not loaded');\r\n      if(!jobs.hasStartedLoading()) {\r\n        init();\r\n      }\r\n      return true;      \r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}]);","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.categories = itemCategory.categories;\r\n      $scope.collapsed = true;\r\n      \r\n      $scope.setCategory = function(action) {\r\n        $scope.cat = action;\r\n        localStorage.setItem('selectedItemCategory', action.name);\r\n        \r\n        if($scope.collapse) {\r\n          $scope.collapsed = !$scope.collapsed;\r\n        }\r\n\r\n        if($scope.onChange) {\r\n          $scope.onChange();\r\n        }\r\n      }\r\n\r\n      angular.forEach($scope.categories, function(value, key) {\r\n        if($location.path() == '/' + value.path) {\r\n          value.extraCss = 'active';\r\n        }\r\n        else {\r\n          value.extraCss = 'search-default';\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    link: function($scope, element, attrs) {\r\n\r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\r\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills'},\r\n      {path: 'search/custom', name:'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesian files from gemscool', url : 'https://inafiles-da491.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      console.log('saving selection');\r\n      localStorage.setItem('currentGroup', buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        console.log('also job');\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      \r\n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      134 : { id: 134, name: 'physicial defense%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}