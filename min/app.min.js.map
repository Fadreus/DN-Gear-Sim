{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","$location","saveHelper","exportLinkHelper","vm","this","path","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloadGroup","reloaded","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","search","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","updateRows","newVal","origVal","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","calcStatPercent","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","setSelectionRange","getElementById","focus","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","progress","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","$watch","initAddAffects","getAddAffectAmount","getGroupItems","itemSplit","str","matches","indexOf","existing","itemSource","split","a","b","numMatches","groupItems","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","addToGroup","compact","statMap","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","typeId","pouchFileNames","getCharmItems","TypeParam1","getPouchItems","pouchData","gold","isGroup","boxType","f","basicItem","getPouchItemsFromFile","pouchFileName","pouchItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","c","charmData","CharmNum","cd","CharmType","itemds","ItemID","count","getData","Look","Count","Gold","crafts","cFiles","initCrafts","initCraft","j","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","numItem1","translate","TabNameID","numItem2","ladderPoints","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","canUse","detail","Type","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","dntLocation","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","collapsed","action","loaded","setCategory","getName","tId","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","floor","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","text","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","$translate","instant","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","dragonjeweltype","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","file","progressCallback","completeCallbacks","ignoreErrors","$broadcast","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasFailed","resetAll","getNumRows","lookupValue","columnName","getValue","columnNames","convertData","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","classId","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","join","itemTypeName","pv","skillDnt","skillLevelVals","skillLevelDnt","SkillLevel","ds","SkillExplanationID","SkillExplanationIDParam","rowNum","getSkillStats","skillLevelDatas","ps","typeParam1","usePartDnt","createItem","parts","sets","PetLevel","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","fileType","key1","allDntFiles","searchType","sourceType","limitExchange","catItems","loading","rawData","gemTypes","gem","gemDnt","setItemCategory","sources","numComplete","types","enh1","enh2","itemMap","sorted","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","SkillID","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","partsDnt","weaponDnt","minRank","eq","rbeq","pvpeq","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","hasStartedLoading","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","titleStep","enhanceStep","isItemStep","techSkillStep","itemNameStep","itemNames","itemStep","itemNamesList","hideName","namedItemStep","distinctItemNameStep","numStatsStep","numStats","highStatStep","allItem","quickHigh","allStats","selectedVal","largestVal","val1","val2","searchable","hasStatStep","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","defToPdmg","intToPdmg","extraPdmgMod","maxMdmg","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","uiTranslationLookup","regionData","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","kdn","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","110373","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","100004","typeNames","38","90","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","222","372","389","useMax","404","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:buildName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:buildName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build/:name*', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:cat?', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid?', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build/' + vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build/' + vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    dntData.init(fileName, columns, function() {}, function() {\r\n      vm.tryToSetItem(dntFiles);\r\n    });\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          retVal = 'not transferable';\r\n        }\r\n      }\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can sell';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not sellable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'shops';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build/' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  });\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return action.name;\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    if(t.progressCallback) {\r\n                      t.progressCallback(msg);\r\n                    }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(!ds.length) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var rowNum = ds[0];\r\n          var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n        \r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n          }\r\n          \r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(!ps.length) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != typeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n              console.log('bad potential');\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n          newItem.gemSlot = item.gemSlot;\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else if(itemType.enchantDnt) {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n            else if(itemType.petLevelDnt) {\r\n              var enchantments = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(newItem.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          \r\n          for(var fileType in itemType) {\r\n            if(fileType.indexOf('Dnt') > 0) {\r\n              if(fileType == 'enchantDnt' && !item.enchantmentNum) {\r\n                continue;\r\n              }\r\n              \r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        \r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true,},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : dntData.getValue(itemType.mainDnt, row, 'LevelLimit'),\r\n      needJobClass : dntData.getValue(itemType.mainDnt, row, 'NeedJobClass'),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json', \r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        var defToPdmg = dupeStat(110373);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        minPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        maxPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json方案文件导入',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    kdn: {\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n     110373: {id: 110373, name: 'defToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n            else if(vals.length == 3 && vals[0] == 5 && vals[2] == 7) {\r\n              return [{ id: 110373, name: 'defToPdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}