{"version":3,"sources":["routes.js","about/about.js","filters/escape.filter.js","filters/percentage.filter.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","filter","input","window","encodeURIComponent","escapeFilter","Math","round","percentageFilter","$stateful","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","rawSavedData","exportData","setItem","LZString","compressToUTF16","doClose","isClosed","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","indexOf","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","dntLocation","extraCss","simError","ex","message","error","dntInit","progressTranslations","translate","msg","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","titleStep","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","newFdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","paPwr","maxMdmg","extraPdmgMod","intToPdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","fdPc","Cfinaldamage","maxFd","pow","dmgStat","lightPc","firePc","darkPc","icePc","mdefEqHp","eqHp","pdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","skillEffectMapping","getVals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1029","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","effect","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + encodeURIComponent(buildName));\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER' || jobName == 'RANDGRID') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA' || jobName == 'AVALANCHE') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.json', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + encodeURIComponent(newBuildName));\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n\r\n    var noticeId = 'notice1';\r\n    var vm = this;\r\n\r\n    vm.doClose = function() {\r\n      localStorage.setItem(noticeId, true)\r\n      vm.isClosed = true;\r\n    }\r\n    \r\n    vm.isClosed = localStorage.getItem(noticeId) != null;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n    controller: 'HeaderCtrl',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + encodeURIComponent(currentBuild);\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.json';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.json';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.json',\r\n    'itemgaintable_dragonjewel.json',\r\n    'itemgaintable_enchant.json',\r\n    'itemgaintable_etc.json',\r\n    'itemgaintable_reboot.json',\r\n    'itemgaintable_talisman.json'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.json',\r\n    'itemdroptable_abyss.json',\r\n    'itemdroptable_apprentice.json',\r\n    'itemdroptable_cook.json',\r\n    'itemdroptable_darklair.json',\r\n    'itemdroptable_dimension.json',\r\n    'itemdroptable_disjoint.json',\r\n    'itemdroptable_dnexpedition.json',\r\n    'itemdroptable_event.json',\r\n    'itemdroptable_farm.json',\r\n    'itemdroptable_fishing.json',\r\n    'itemdroptable_guildwar.json',\r\n    'itemdroptable_item.json',\r\n    'itemdroptable_monsteritem.json',\r\n    'itemdroptable_propdrop.json',\r\n    'itemdroptable_pvp.json',\r\n    'itemdroptable_randomcompound.json',\r\n    'itemdroptable_stageclear.json',\r\n    'itemdroptable_themepark.json',\r\n    'itemdroptable_union.json']\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var charmItemtable = 'charmitemtable.json';\r\n  var commonCharmItemtable = 'charmitemtable_common.json';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.json', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.json',\r\n    'itemcompoundtable_custom.json',\r\n    'itemcompoundtable_glyph.json',\r\n    'itemcompoundtable_glyph95.json',\r\n    'itemcompoundtable_jewel.json',\r\n    'itemcompoundtable_renewal.json',\r\n    'itemcompoundtable_set.json'];\r\n  \r\n  var dropFile = 'itemdroptable.json';\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.json', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.json',\r\n  'partstable_commoncash.json',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.json',\r\n  'partstable_guild.json',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.json',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.json',\r\n  'weapontable_commoncash.json',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.json',\r\n  'weapontable_guild.json',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.json'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.json';\r\n  var cSysShopFileName = 'combinedshoptable_system.json';\r\n  var cCashShopFileName = 'combinedshoptable_cash.json';\r\n  // var shopFileName = 'shoptable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  var transferItemsFileName = 'enchanttransferitemtable.json';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var changeFileName = 'itemchangetable.json';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.json')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.json', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.json';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.json', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.json') &&\r\n      dntData.isLoaded('sealcounttable.json');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.json', null, $timeout);\r\n    dntData.init('sealcounttable.json', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.json', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.json';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.json';\r\n  var statCaps = 'playercommonleveltable.json';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.json';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.json';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper(items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.json';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.json', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.json', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.json', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.json'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.json'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.json', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.json', \r\n        potentialDnt: 'potentialtable_glyph95.json',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.json',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.json', \r\n        partsDnt: 'partstable_commoncash.json', \r\n        weaponDnt: 'weapontable_commoncash.json', \r\n        setDnt: 'setitemtable_cash.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.json',\r\n        petLevelDnt: 'petleveltable.json', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: [],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemFactory, hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              case 2252: // Teardrop\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\n  function statHelper(hCodeValues) {\r\n  \r\n    return {\r\n      \r\n      getSetStats: function(groupItems) {\r\n        var stats = [];\r\n        var sets = {};\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value !== null && value.setStats != null) {\r\n            if(value.setId in sets) {\r\n              sets[value.setId].numItems++;\r\n            }\r\n            else {\r\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n            }\r\n          }\r\n        });\r\n        \r\n        angular.forEach(sets, function(value, key) {\r\n          angular.forEach(value.stats, function(stat, index) {\r\n            if(stat.needSetNum <= value.numItems) {\r\n              stats.push(stat);\r\n            }\r\n          });\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getNumItemsForSet: function(items, setId) {\r\n        var numItems = 0;\r\n        angular.forEach(items, function(value, key) {\r\n          if(value && value.setId && value.setId == setId) {\r\n            numItems++;\r\n          }\r\n        });\r\n        \r\n        return numItems;\r\n      },\r\n      \r\n      getCombinedStats: function(groupItems) {\r\n        var stats = [];\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value) {\r\n            \r\n            if(value.fullStats) {\r\n              stats = stats.concat(value.fullStats);\r\n            }\r\n            else if(value.stats) {\r\n              stats = stats.concat(value.stats);\r\n            }\r\n          }\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getCalculatedStatsFromItems: function(group, items) {\r\n        var nakedStats = this.getNakedStats(group);\r\n        var combinedStats = this.getCombinedStats(items);\r\n        var setStats = this.getSetStats(items);\r\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n        if(group.heroStats != null && group.heroStats.length > 0) {\r\n          allStats = allStats.concat(group.heroStats);\r\n        }\r\n        allStats = hCodeValues.mergeStats(allStats);\r\n        \r\n        return this.getCalculatedStats(group, allStats);\r\n      },\r\n      \r\n      getCalculatedStats: function(group, combinedStats) {\r\n        \r\n        var retVal = [];\r\n        var statLookup = {};\r\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n          return [];\r\n        }\r\n        \r\n        angular.forEach(combinedStats, function(stat, index) {\r\n          statLookup[stat.id] = stat;\r\n        });\r\n        \r\n        function getPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.pc]) {\r\n            return Number(statLookup[statDef.pc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function getSkillPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.skPc]) {\r\n            return Number(statLookup[statDef.skPc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function applyPc(stat) {\r\n          stat.max = Math.floor(\r\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n            );\r\n        }\r\n        \r\n        function dupeStat(id) {\r\n          var stat = statLookup[id];\r\n          if(stat) {\r\n            return {id: id, max: Number(stat.max), pc: stat.pc};\r\n          }\r\n          else {\r\n            return {id: id, max: 0, pc: 0};\r\n          }\r\n        }\r\n        \r\n        function addStat(stat) {\r\n          if(stat.max > 0) {\r\n            retVal.push(stat);\r\n          }\r\n        }\r\n  \r\n        var critResist;\r\n        if(!('critResist' in group)) {\r\n          critResist = 0.20;\r\n        }\r\n        else {\r\n          critResist = group.critResist / 100.0;\r\n        }\r\n  \r\n        var eleResist;\r\n        if(!('eleResist' in group)) {\r\n          eleResist = 0;\r\n        }\r\n        else {\r\n          eleResist = group.eleResist / 100.0;\r\n        }\r\n        \r\n        // base stats\r\n        var str = dupeStat(0);\r\n        applyPc(str);\r\n        \r\n        var agi = dupeStat(1);\r\n        applyPc(agi);\r\n        \r\n        var int = dupeStat(2);\r\n        applyPc(int);\r\n  \r\n        var vit = dupeStat(3);\r\n        applyPc(vit);\r\n  \r\n        // add vit to hp\r\n        var hp = dupeStat(25);\r\n        hp.max += (vit.max * Number(group.conversions.HP));\r\n        applyPc(hp);\r\n        \r\n        // defs\r\n        var def = dupeStat(8);\r\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n        applyPc(def);\r\n        \r\n        var defpc = dupeStat(1008);\r\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(defpc);\r\n        \r\n        var mdef = dupeStat(9);\r\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n        applyPc(mdef);\r\n        \r\n        var mdefpc = dupeStat(1009);\r\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(mdefpc);\r\n        \r\n        // attack power - like fd but for bufs\r\n        // this shows as blue damage\r\n        // i think there are magic and phis variants of this but doesnt matter\r\n        var aPwr = dupeStat(3000);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        var maxPdmg = dupeStat(5);\r\n  \r\n        // physical damage\r\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\r\n          var extraPdmg = dupeStat(32);\r\n          var extraPdmgMod= dupeStat(101);\r\n          var paPwr = dupeStat(3001);\r\n          \r\n          // special stats for zeal\r\n          var intToPdmg = dupeStat(10164);\r\n          \r\n          minPdmg.max += extraPdmg.max;\r\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(minPdmg);\r\n    \r\n          maxPdmg.max += extraPdmg.max;\r\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          addStat(maxPdmg);\r\n        }\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        var maxMdmg = dupeStat(7);\r\n        \r\n        // magic damage\r\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\r\n          var extraMdmg = dupeStat(33);\r\n          var extraMdmgMod = dupeStat(102);\r\n          var maPwr = dupeStat(3002);\r\n          \r\n          // special stats for zeal\r\n          var strToMdmg = dupeStat(10165);\r\n          var intToMdmg = dupeStat(10372);\r\n          \r\n          minMdmg.max += extraMdmg.max;\r\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n  \r\n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(minMdmg);\r\n          \r\n          maxMdmg.max += extraMdmg.max;\r\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n          \r\n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(maxMdmg);\r\n        }\r\n        \r\n        \r\n        // crit chance %\r\n        var crit = dupeStat(12);\r\n        crit.max += (agi.max*Number(group.conversions.Critical));\r\n        applyPc(crit);\r\n        \r\n        var skCrit = dupeStat(4012);\r\n        crit.max += skCrit.max;\r\n        addStat(crit);\r\n        var itemCrit = dupeStat(1012);\r\n        \r\n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n        retVal.push({id: 1012, max: critChance});\r\n  \r\n        // crit damage %\r\n        var cDmg = dupeStat(103);\r\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n        applyPc(cDmg);\r\n        addStat(cDmg);\r\n  \r\n        var itemCtriDmg = dupeStat(1103);\r\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n        addStat({id: 1103, max: critDamagePc + 2});\r\n  \r\n        // fd\r\n        var fd = dupeStat(29);\r\n        addStat(fd);\r\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n        \r\n        var fdPc = dupeStat(1029);\r\n        var newFdPc = dupeStat(1030);\r\n        newFdPc.max += fdPc.max + Math.min(1, (fd.max / maxFd));\r\n        addStat(newFdPc);\r\n        \r\n        fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n        addStat(fdPc);\r\n        \r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        // elements\r\n        var firePc = dupeStat(16);\r\n        if(firePc.id == priElementId || firePc.id == secElementId) {\r\n          addStat(firePc);\r\n        }\r\n        \r\n        var icePc = dupeStat(17);\r\n        if(icePc.id == priElementId || icePc.id == secElementId) {\r\n          addStat(icePc);\r\n        }\r\n        \r\n        var lightPc = dupeStat(18);\r\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\r\n          addStat(lightPc);\r\n        }\r\n        \r\n        var darkPc = dupeStat(19);\r\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\r\n          addStat(darkPc);\r\n        }\r\n        \r\n        // average damage\r\n        function addAvgDamageStat(id, min, max) {\r\n          \r\n          var nonEleDamage = (min+max)/2;\r\n          // add crit\r\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n          // apply fd\r\n          nonEleDamage = nonEleDamage * (1 + newFdPc.max);\r\n          \r\n          // apply element(s)\r\n          var avgDmg = nonEleDamage;\r\n          if(priElementId > 0) {\r\n            var elementStat = statLookup[priElementId];\r\n            if(elementStat) {\r\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n            }\r\n          }\r\n          addStat({id: id, max: avgDmg});\r\n          \r\n          if(secElementId != priElementId) {\r\n            if(secElementId > 0) {\r\n              var secondaryElementStat = statLookup[secElementId];\r\n              if(secondaryElementStat) {\r\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n                addStat({id: id + 1000, max: secAvgDmg});\r\n              }\r\n            }\r\n            else {\r\n              addStat({id: id + 1000, max: nonEleDamage});\r\n            }\r\n          }\r\n        }\r\n        \r\n        // average damages\r\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\r\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n        }\r\n  \r\n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\r\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n        }\r\n        \r\n        if(!group.damageType || group.damageType.id == 3) {\r\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 4) {\r\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 5) {\r\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\r\n        }\r\n        \r\n        // Equivalent HP\r\n        var pdefEqHp = dupeStat(2008);\r\n        pdefEqHp.max = hp.max / (1-defpc.max);\r\n        \r\n        var mdefEqHp = dupeStat(2009);\r\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n        \r\n        var eqHp = dupeStat(3008);\r\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n        addStat(eqHp);\r\n\r\n        addStat(str);\r\n        addStat(agi);\r\n        addStat(int);\r\n        addStat(vit);\r\n        addStat(hp);\r\n        addStat(def);\r\n        addStat(mdef);\r\n        \r\n        return retVal;\r\n      },\r\n      \r\n      getNakedStats: function(group) {\r\n        \r\n        if(\r\n          group.baseStats && \r\n          group.baseStats.Strength > 0) {\r\n  \r\n          return [\r\n            {id:0, max:group.baseStats.Strength},\r\n            {id:1, max:group.baseStats.Agility},\r\n            {id:2, max:group.baseStats.Intelligence},\r\n            {id:3, max:group.baseStats.Stamina}\r\n            ];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      getSkillStats : function (item, data, skillData) {\r\n  \r\n        var skillLevelVals = null;\r\n        angular.forEach(skillData, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        if(!skillLevelVals) {\r\n          return null;\r\n        }\r\n        \r\n        var index = 1;\r\n        var effects = [];\r\n        var stillCols = true;\r\n        \r\n        while(stillCols) {\r\n          var colName = 'EffectClass' + index;\r\n          var valColName = 'EffectClassValue' + index;\r\n          if(data && colName in data && valColName in skillLevelVals) {\r\n            if(data[colName] > 0) {\r\n              \r\n              var val = skillLevelVals[valColName];\r\n              \r\n              // for now add 10k\r\n              var effectId = data[colName];\r\n              var map = hCodeValues.skillEffectMapping[effectId];\r\n              if(map && map.getVals) {\r\n                var vals = map.getVals(val);\r\n                for(var i=0;i<vals.length;++i) {\r\n                  effects.push(vals[i]);\r\n                }\r\n              }\r\n              else {\r\n                var statId;\r\n                if(map && map.mapTo) {\r\n                  statId = map.mapTo;\r\n                }\r\n                else {\r\n                  statId = 10000 + effectId;\r\n                }\r\n                \r\n                if(val > 0) {\r\n                  effects.push({ id: statId, effect: effectId, max: val });\r\n                }\r\n                else {\r\n                  if(val.toString().indexOf(';') > 0) {\r\n                    var vals = val.split(';');\r\n                    if(vals.length > 0 && vals[0] > 0) {\r\n                      effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stillCols = false;\r\n          }\r\n          \r\n          index++;\r\n        }\r\n        \r\n        return effects;\r\n      },\r\n  \r\n      getBuildStats: function(build) {\r\n        var stats = {};\r\n        stats.nakedStats = this.getNakedStats(build);\r\n        stats.combinedStats = this.getCombinedStats(build.items);\r\n        stats.setStats = this.getSetStats(build.items);\r\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n        if(build.heroStats && build.heroStats.length) {\r\n          stats.heroStats = build.heroStats;\r\n          stats.allStats = stats.allStats.concat(build.heroStats);\r\n        }\r\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n        \r\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n        return stats;\r\n      }\r\n    };\r\n  }\r\n  \r\n  })();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\n  function hCodeValues() {\r\n  \r\n    function toOneDec(stat) {\r\n      return Math.round(stat.max*10)/10;\r\n    }\r\n    function toNoDec(stat) {\r\n      return Math.floor(stat.max);\r\n    }\r\n    function inThousands(stat) {\r\n      var val = Number(stat.max);\r\n      if(val < 100) {\r\n        return val;\r\n      }\r\n      else if(val < 100000) {\r\n        return Math.round(val/100)/10 + 'k';\r\n      }\r\n      else if(val < 1000000) {\r\n        return Math.round(val/1000) + 'k';\r\n      }\r\n      else if(val < 100000000) {\r\n        return Math.round(val/10000)/100 + 'm';\r\n      }\r\n      else {\r\n        return Math.round(val/1000000) + 'm';\r\n      }\r\n    }\r\n    function toPercent(stat) {\r\n      return (Math.round(stat.max*10000)/100) + '%';\r\n    }\r\n    \r\n    return {\r\n      stats : {\r\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1030, searchable: true },\r\n        \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n        \r\n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n  \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n  \r\n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n        \r\n        // stats below here are ones I made up\r\n        1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1005: {id: 1005, name: 'pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n        \r\n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n        1029: {id: 1029, name: 'old fd', display: toPercent, noCustom: true, dps: true },\r\n        1030: {id: 1030, name: 'future fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n        \r\n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        \r\n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n        \r\n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n        \r\n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n        \r\n        // special cases for skills\r\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        // items over 10000 are unknown skill effects\r\n      },\r\n    \r\n      rankNames : {\r\n        0 : { id: 0, name : 'normal' },\r\n        1 : { id: 1, name : 'magic' },\r\n        2 : { id: 2, name : 'rare' },\r\n        3 : { id: 3, name : 'epic' },\r\n        4 : { id: 4, name : 'unique' },\r\n        5 : { id: 5, name : 'legend' },\r\n        6 : { id: 6, name : 'divine' },\r\n        7 : { id: 7, name : 'ancient' },\r\n      },\r\n      \r\n      shopNames : {\r\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n        59001: 'garden bunny',\r\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n        89001: 'guild master',\r\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n        66001: 'erosion',\r\n        35006: 'plate',\r\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n        91001: 'wrath',\r\n        45001: 'farm',\r\n        100004: 'event',\r\n        89000: 'nightmare'\r\n      },\r\n      \r\n      checkedRank : {\r\n        0 : true,\r\n        1 : true,\r\n        2 : true,\r\n        3 : true,\r\n        4 : true,\r\n        5 : true,\r\n        6 : true,\r\n        7 : true,\r\n      },\r\n      \r\n      typeNames : {\r\n        0 : 'weapons',\r\n        1 : 'equipment',\r\n        5 : 'plates',\r\n        8 : 'pouch',\r\n        38 : 'plates',\r\n        90 : 'welspring',\r\n        132 : 'talisman',\r\n        139 : 'gems',\r\n      },\r\n      \r\n      elements : {\r\n        0 : { id: 0, name: 'non-ele' },\r\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n        3 : { id: 3, name: 'light', dmgStat: 18 },\r\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n      },\r\n      \r\n      damageTypes : {\r\n        0 : { id: 0, name: 'both separate' },\r\n        1 : { id: 1, name: 'physical' },\r\n        2 : { id: 2, name: 'magical' },\r\n        3 : { id: 3, name: 'both combined' },\r\n        4 : { id: 4, name: 'physical healing' },\r\n        5 : { id: 5, name: 'magical healing' },\r\n      },\r\n      \r\n      // note: skills shown on-screen have 1k added to their id\r\n      skillEffectMapping : {\r\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n        13 : { id: 13, name: 'mp', mapTo: 26 },\r\n        25 : { id: 25, name: 'action speed' },\r\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n        34 : { id: 34, name: 'light %', mapTo: 18 },\r\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n        38 : { id: 38, name: 'light def', mapTo: 22 },\r\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n        65 : { id: 65, name: 'range' },\r\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n        // 134 : { id: 134, name: 'p dmg reduction%' },\r\n        // 135 : { id: 135, name: 'm dmg reduction%' },\r\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n        222: {\r\n          id: 222, \r\n          name: 'hellfire', \r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              return [\r\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n                {id: 4012, effect: 222, max: Number(vals[1])},\r\n                ];\r\n            }\r\n            else {\r\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n            }\r\n          }\r\n        },\r\n        372: {\r\n          id: 372,\r\n          name: 'statConversion',\r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n              }\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n        \r\n        \r\n        389: { id: 389, name: 'fd buf', mapTo: 1030 },\r\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n      },\r\n      \r\n      gemExchanges: [\r\n        {id: 2, exchange: 1, name: 'Weapon'},\r\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n        {id: 4, exchange: 3, name: 'Headgear'},\r\n        {id: 5, exchange: 4, name: 'Body Armor'},\r\n        {id: 6, exchange: 5, name: 'Leg Armor'},\r\n        {id: 7, exchange: 6, name: 'Gloves'},\r\n        {id: 8, exchange: 7, name: 'Shoes'},\r\n        {id: 101, exchange: 8, name: 'Necklace'},\r\n        {id: 102, exchange: 9, name: 'Earrings'},\r\n        {id: 103, exchange: 10, name: 'Ring'},\r\n      ],\r\n      \r\n      customItems: \r\n      [\r\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n      ],\r\n    \r\n      getStats : function(data) {\r\n  \r\n        var useMax=false;\r\n        var useStateXVal=false;\r\n        var mightHaveSets=true;\r\n        var prop = 'State1_Max';\r\n        if(prop in data) {\r\n          useMax = true;\r\n        }\r\n        else {\r\n          prop = 'State1Value';\r\n          if(prop in data) {\r\n            useStateXVal = true;\r\n          }\r\n        }\r\n        \r\n        var currentState = 0;\r\n        var statVals = [];\r\n        for(;;) {\r\n          currentState++;\r\n          \r\n          var stateProp = 'State' + currentState;\r\n          if(!(stateProp in data)) {\r\n            break;\r\n          }\r\n  \r\n          var stateId = data[stateProp];\r\n          if(stateId == -1) {\r\n            break;\r\n          }\r\n          \r\n          if(stateId == 107) {\r\n            // is this mp?\r\n          }\r\n          else {\r\n            \r\n            var currentData = { id: stateId };\r\n            \r\n            var prop;\r\n          \r\n            if(useMax) {\r\n              prop = 'State' + currentState + '_Max';\r\n              currentData.max = data[prop];\r\n            }\r\n            else if(useStateXVal) {\r\n              prop = 'State' + currentState + 'Value';\r\n              currentData.max = data[prop];\r\n            }\r\n            else {\r\n              prop = 'StateValue' + currentState;\r\n              currentData.max = Number(data[prop]);\r\n            }\r\n            \r\n            if(currentData.max > 0 || currentData.max < 0) {\r\n              if(mightHaveSets) {\r\n                prop = 'NeedSetNum' + currentState;\r\n                if(prop in data) {\r\n                  if(data[prop] == 0) {\r\n                    break;\r\n                  }\r\n                  currentData.needSetNum = data[prop];\r\n                }\r\n                else {\r\n                  mightHaveSets = false;\r\n                }\r\n              }\r\n            \r\n              statVals.push(currentData);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return statVals;\r\n      },\r\n      \r\n      setupStat : function(stat, id) {\r\n        stat.id = Number(id);\r\n      },\r\n      \r\n      mergeStats : function(stats1, stats2) {\r\n        var statMap = {};\r\n        \r\n        var self = this;\r\n        function add(value) {\r\n          \r\n          var amount = Number(value.max);\r\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n            amount = Math.floor(amount);\r\n          }\r\n          \r\n          if(value.id in statMap) {\r\n            statMap[value.id] += amount;\r\n          }\r\n          else {\r\n            statMap[value.id] = amount;\r\n          }\r\n        }\r\n        \r\n        angular.forEach(stats1, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n        \r\n        if(stats2) {\r\n          angular.forEach(stats2, function(value, key) {\r\n            if(value) {\r\n              add(value);\r\n            }\r\n          });\r\n        }\r\n        \r\n        var newStats = [];\r\n        \r\n        for(var key in statMap) {\r\n          var stat = { max : statMap[key], id: Number(key) };\r\n          newStats.push(stat);\r\n        }\r\n          \r\n        return newStats;\r\n      }\r\n    }\r\n  }\r\n  \r\n  })();"]}