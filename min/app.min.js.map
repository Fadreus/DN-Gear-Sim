{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","path","buildName","copyGroup","newGroupName","importGroup","build","items","renameSavedGroup","enemyLevel","reloaded","playerLevel","reloadGroup","damageType","element","progress","enemyStatCaps","createShortUrl","baseStats","heroStats","controllerAs","createGroupLink","shortUrl","sessionStorage","getItem","longUrl","setShortUrl","directive","scope","bindToController","onChange","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","heroLevel","job","secondaryElement","playerStatCaps","conversions","item","gemSlot","gemSlots","name","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","cancelEdit","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","push","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","handleChange","toggleGroup","url","search","itemsByCategory","getItemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","updateRows","newVal","origVal","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","index","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","id","summaryDisplay","rows","pcIndex","rowIndex","typeName","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","move","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","forEach","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","item2","fullStats2","newItems","fullStats1","gItem","newStats","origStats","calcStatPercent","eleId","retVal","elements","getStat","getStatName","len","save","updatedSavedItems","getBuildStats","selectedCategory","category","hideInBuild","byName","getCategoryItems","itemsByCat","getCategories","categories","localStorage","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","numOffensiveGems","offensiveGemSlots","numOffensiveSlots","totalIncreasingGems","numIncreasingGems","numIncreasingSlots","sparkTypeId","gemType","allItems","increasingGemSlots","number","numItems","cat","numItemText","newCustom","canEdit","newItemList","removeItem","server","newGroup","deleteBuild","oldGroupName","damageTypes","newJobs","getFinalJobs","setHeroStats","key","getConversions","getJobBaseStat","colName","getBaseStats","useLevel","getJobConversion","invalidGroupName","ok","getStatCaps","getHeroStats","input","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","init","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","region","setLocationByName","g","e","p","h","d","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","filter","window","encodeURIComponent","escapeFilter","percentageFilter","$stateful","addAffectAmount","clearGroup","getAddAffectAmount","initAddAffects","concat","getGroupItems","numMatches","str","itemSplit","indexOf","groupItems","exchangeType","itemSource","split","a","hasMaxExchangable","maxExchange","uptoItem","nextGroup","saveGroup","prevGroup","foundGroup","addToGroup","replaceItem","statMap","_","$watch","newValue","oldValue","each","Number","found","anyChange","getEnchantLevel","enchantments","PetLevel","setPetLevel","EnchantLevel","enchantmentId","itemType","enchantDnt","getEnchantments","petLevelDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","NeedCoin","getStats","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","prevEnchantment","getOption","setEnchantment","find","showMaterials","itemId","itemCount","materials","translate","NameID","icon","IconImageIndex","rank","material","NameIDParam","Rank","levelLimit","LevelLimit","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","itemFactory","typeId","log","pouchFileNames","getCharmItems","TypeParam1","getPouchItems","pouchData","gold","isGroup","boxType","f","basicItem","createBasicItem","getPouchItemsFromFile","pouchFileName","pouchItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","c","charmData","CharmNum","cd","CharmType","itemds","ItemID","count","getData","Look","Count","Gold","crafts","cFiles","initCrafts","initCraft","j","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","item1","numItem1","TabNameID","numItem2","ladderPoints","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","getJobName","allJobs","anyToLoad","jobName","preInitItem","setFileName","Type","needJobClass","getItemData","isPlate","canExtract","hasContents","detail","isInSet","canTransfer","mainDnt","getBuilds","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","exchange","setDetail","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","encodeItem","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","saveBuild","startPublish","about","guild","dntLocation","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","deleteServer","reallyDeleteServer","reallyDeleteLocal","serverToDelete","published","rawSavedData","exportData","LZString","compressToUTF16","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","menu","simError","ex","message","error","extraCss","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","boxes","initBoxes","box","sortBy","newResults","numBoxes","curDisplay","nameSearches","allMatch","ns","changeSearch","everythingParams","catName","jobInit","loadResults","origJobNumber","lastJobNumber","splice","getAllJobs","rankChecked","checkedRank","pcStatId","altStatId","numEquip","altStat","statVals","hideJob","hideLevel","minLevel","maxLevel","hideRank","initItem","statVal","statFound","statResults","min","value1","value2","byPath","searchable","origMinLevel","origSavedSearchStatId","origMaxLevel","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","navigate","numSkills","toString","isClassJob","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","dnsimCategoryLinksController","collapsed","action","setCategory","dnsimItemIcon","link","attrs","getIcon","prefix","floor","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","text","newElement","clone","lastElement","after","css","addedElements","first","def","output","sep","needSetNum","display","stat2","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevelPotentials","jobConversions","statCaps","heroLevels","jobBaseStats","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1_GenProb","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","dragonjeweltype","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","file","progressCallback","completeCallbacks","ignoreErrors","loaded","$broadcast","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasFailed","resetAll","getNumRows","lookupValue","columnName","getValue","columnNames","convertData","initFactory","allFactories","prop","newFactory","source","itemTypeName","itemBit","charAt","bitIndex","parseInt","substr","statString","splitStat","statBit","statBitIndex","itemStrings","self","encodeURI","href","join","basePath","querySelector","attr","post","success","status","headers","pv","skillDnt","SkillIndex","SkillLevel","skillLevelVals","ds","rowNum","typeParam1","totalRatio","SkillExplanationID","SkillExplanationIDParam","ps","getSkillStats","skillLevelDatas","createItem","usePartDnt","parts","setItemCategory","sets","DragonJewelSlot4","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","fileType","skillLevelDnt","key1","allDntFiles","searchType","sourceType","limitExchange","catItems","loading","isItemForCat","rawData","gemTypes","gem","gemDnt","itemMap","types","sourceName","enh1","enh2","sorted","localeCompare","typeError","potentialRatio","loadItems","dType","dLevelLimit","dRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","minRank","jobClass","numPotentials","q","potentialsMatch","state2Col","state1Col","end","p1","time","p2","val2Col","val1Col","iconIndex","petData","PetLevelTypeID","skillId","SkillID","getItemDataFromFile","getPotentialRatio","ratio","doComplete","itemSources","tech","gemSlotDnt","tman","plate","partsDnt","weaponDnt","eq","rbeq","pvpeq","cClone","c2016","c2015","c2014","cash","xtras","petDnt","imprint","jobsDnt","hasStartedLoading","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","once","storedProfile","database","ref","stripBuildName","service","copy","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","talismanRankStep","techRankStep","gemRankStep","otherRankStep","enhanceTalismanStep","titleStep","usefulTitles","enhanceStep","itemStep","allTitles","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","techSkillStep","numStatsStep","numStats","highStatStep","allStats","selected","b","customStep","titles","weapons","armour","accessories","talisman","costume","quickHigh","allItem","stepName","step","getStepName","largest","categorySteps","offensive gems","increasing gems","enhancement plates","expedition plates","techs","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","pc","addStat","nonEleDamage","critDamagePc","avgDmg","secElementId","dmgStat","elementStat","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","minPdmg","extraPdmg","maxPdmg","extraPdmgMod","intToPdmg","paPwr","defToPdmg","minMdmg","maxMdmg","extraMdmg","extraMdmgMod","strToMdmg","maPwr","intToMdmg","crit","itemCrit","skCrit","cDmg","critChance","Cfinaldamage","itemCtriDmg","fd","maxFd","firePc","fdPc","pow","icePc","lightPc","darkPc","addAvgDamageStat","pdefEqHp","mdefEqHp","eqHp","valColName","effects","stillCols","map","effectId","skillEffectMapping","vals","mapTo","effect","calculatedStats","dnTranslations","completeCallback","DnTranslations","sizeLimit","getFileName","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","combineWith","3","4","5","6","7","8","noCustom","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","110373","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","typeNames","38","90","132","34","35","36","37","39","87","88","89","185","251","getVals","372","gemExchanges","389","404","useMax","useStateXVal","currentState","stateProp","stateId","mightHaveSets","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:buildName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:buildName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build/:name*', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:cat?', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid?', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build/' + vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}]);","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        $location.path('/builds/');\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category || this.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  this.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  this.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      this.groupName = $routeParams.buildName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 93;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/build/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build/' + vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory','$scope',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory,$scope) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'tman') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      groupName: '=groupName',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          retVal = 'not transferable';\r\n        }\r\n      }\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can sell';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not sellable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build/' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if($location.path().length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || $location.path() == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nvar everythingParams = ['$window','$timeout','$routeParams','$location','hCodeValues','region','translations','dntData',everythingSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemsCtrl',everythingParams);\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingParams,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n  \r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.boxes = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    $timeout(function() {\r\n      vm.initBoxes();\r\n    });\r\n  });\r\n  \r\n  vm.initBoxes = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n      vm.boxes = [];\r\n      \r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' boxes');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var box = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n          }\r\n          vm.boxes.push(box);\r\n        }\r\n      }\r\n      \r\n      vm.boxes = _.sortBy(vm.boxes, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.boxes == null) {\r\n      vm.initBoxes();\r\n    }\r\n    \r\n    if(vm.boxes == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numBoxes = vm.boxes.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.boxes[i];\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    console.log('saving search name');\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init(vm.itemCategory.name, loadResults);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      vm.origJobNumber != lastJobNumber;\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    $timeout(function() {\r\n      vm.maxDisplay = 24;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  function getResults() {\r\n    // console.log('getting items');\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      // console.log('no items');\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: ['itemCategory','$window', dnsimCategoryLinksController],\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    if(t.progressCallback) {\r\n                      t.progressCallback(msg);\r\n                    }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=' + region.dntLocation.region;\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      var longUrl = window.location.href.split(basePath)[0] + basePath + path;\r\n      var data = { longUrl: longUrl };\r\n      console.log('getting short url for ', longUrl);\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(!ds.length) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var rowNum = ds[0];\r\n          var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n          }\r\n          \r\n          if(!ps.length) {\r\n            ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(!ps.length) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != typeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n              console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType, rowNum, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else if(itemType.enchantDnt) {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n            else if(itemType.petLevelDnt) {\r\n              var enchantments = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(newItem.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass,\r\n          newItem.exchangeType = d.ExchangeType,\r\n          newItem.fileName = item.fileName,\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          \r\n          for(var fileType in itemType) {\r\n            if(fileType.indexOf('Dnt') > 0) {\r\n              if(fileType == 'enchantDnt' && !item.enchantmentNum) {\r\n                continue;\r\n              }\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        \r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true,},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n\r\n      return false;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      totalRatio: totalRatio,\r\n      itemSource : itemType.name,\r\n      levelLimit : dntData.getValue(itemType.mainDnt, row, 'LevelLimit'),\r\n      needJobClass : dntData.getValue(itemType.mainDnt, row, 'NeedJobClass'),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 9 &&\r\n        dType != 11 &&\r\n        dType != 12 &&\r\n        dType != 13 &&\r\n        dType != 18 &&\r\n        dType != 19 &&\r\n        dType != 20 &&\r\n        dType != 21 &&\r\n        dType != 24 &&\r\n        dType != 29 &&\r\n        dType != 46 &&\r\n        dType != 51 &&\r\n        dType != 74 &&\r\n        dType != 75 &&\r\n        dType != 76 &&\r\n        dType != 78 &&\r\n        dType != 79 &&\r\n        dType != 84 &&\r\n        dType != 100 &&\r\n        dType != 112 &&\r\n        dType != 114 &&\r\n        dType != 115 &&\r\n        dType != 116 &&\r\n        dType != 122 &&\r\n        dType != 142 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 182 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var jobClass = dntData.getValue(itemType.mainDnt, r, 'NeedJobClass');\r\n            var levelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n            \r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == jobClass &&\r\n                itemType.items[i].levelLimit == levelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(!potentials.length && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(!numPotentials) {\r\n            itemType.items.push(createItem(itemType, r, null, 0));\r\n          }\r\n          else {\r\n            var totalRatio = 0;\r\n            for(var p=0;p<numPotentials;++p) {\r\n              totalRatio += potentials[p].PotentialRatio;\r\n            }\r\n            \r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(createItem(itemType, r, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio === null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.lzjson',\r\n        partsDnt: 'partstable_cashclone.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.lzjson', \r\n        partsDnt: 'partstable_common2016.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2016.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.lzjson',\r\n        partsDnt: 'vehiclepartstable.lzjson',\r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.lzjson',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var allStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && stat.quickHigh) {\r\n                allStats['high ' + stat.name] = stat.id;\r\n              }\r\n            }\r\n          }\r\n          \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          for(var val in allStats) {\r\n            retVal.push({\r\n              id: allStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          if(retVal.length <= 2) {\r\n            retVal = [allItem];\r\n          }\r\n          else {\r\n            retVal = retVal.sort(function(a, b) {\r\n                return a.id - b.id;\r\n              });\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largest = 0;\r\n          var selected = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat && stat.quickHigh) {\r\n              \r\n              if(val.id == id) {\r\n                selected = val.max;\r\n              }\r\n              else if(val.max > largest) {\r\n                largest = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selected >= largest;\r\n        },\r\n        isItemStep: false,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','highStatStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      // custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'na', name: 'north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesia ', url : 'https://inafiles-da491.firebaseapp.com'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.init(function() {}, function() { $route.reload(); });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        var defToPdmg = dupeStat(110373);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        minPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        maxPdmg.max += Math.floor(defToPdmg.max * def.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n     110373: {id: 110373, name: 'defToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n            else if(vals.length == 3 && vals[0] == 5 && vals[2] == 7) {\r\n              return [{ id: 110373, name: 'defToPdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, name: 'Weapon'},\r\n      {id: 3, name: 'Off-Hand Weapon'},\r\n      {id: 4, name: 'Headgear'},\r\n      {id: 5, name: 'Body Armor'},\r\n      {id: 6, name: 'Leg Armor'},\r\n      {id: 7, name: 'Gloves'},\r\n      {id: 8, name: 'Shoes'},\r\n      {id: 101, name: 'Necklace'},\r\n      {id: 102, name: 'Earrings'},\r\n      {id: 103, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}