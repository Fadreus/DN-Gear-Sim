{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","filters/filters.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","nav/export.js","nav/nav.js","nav/setup.js","region/region.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","removeItem","item","newItemList","gItem","index","push","$anchorScroll","$routeParams","currentGroup","localStorage","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","name","groupName","saveBuildSelection","anyItems","createGroup","handleChange","console","log","toggleGroup","url","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","Math","round","scrollTo","groupNames","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","category","byName","getCategoryItems","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","getBaseJobs","getJobName","englishName","getAllJobs","d","EnglishName","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","input","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","filter","$stateful","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","indexOf","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","translate","NameID","NameIDParam","material","icon","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","msg","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","needJobClass","jobName","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","dntLocation","encodeItem","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","noLocationMenu","normalMenu","isSearch","startedLoading","tlocation","noRegion","fireAction","action","getActions","menu","extraCss","$route","dntInit","translationsStatus","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItems","maxDisplay","currentResults","nameSearch","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","toUpperCase","minLevel","maxLevel","totalNumResults","grades","savedSearchStatId","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","getTime","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","showMoreResults","extra","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","dnsimCategoryLinks","restrict","link","attrs","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","err","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","jobId","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","result","loaders","findIndexes","Array","numRows","column","results","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","stringifiedData","decompressFromUTF16","parse","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n'use strict';\n\nangular.module('dnsim').config(['$routeProvider', config]);\n\nfunction config($routeProvider) {\n\n  $routeProvider.\n  \n    when('/about', {\n      templateUrl: 'ui/about/about.html',\n      controller: 'AboutCtrl as about'\n    }).\n    \n    when('/setup', {\n      templateUrl: 'ui/nav/setup.html',\n      controller: 'SetupCtrl'\n    }).\n    when('/test', {\n      templateUrl: 'ui/nav/test.html',\n      controller: 'TestCtrl'\n    }).\n    \n    when('/items/', {\n      templateUrl: 'ui/secrets/items.html',\n      controller: 'ItemsCtrl as items'\n    }).\n    \n    when('/', {\n      redirectTo: '/builds'\n    }).\n    when('/saved', {\n      redirectTo: '/builds'\n    }).\n    when('/saved/:groupName*', {\n      redirectTo: '/builds/:groupName'\n    }).\n    when('/builds', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/builds/:groupName*', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/view-group/:region?', {\n      templateUrl: 'ui/builds/view-group.html',\n      controller: 'ViewGroupCtrl'\n    }).\n    when('/edit-build/:groupName*', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      reloadOnSearch: false,\n    }).\n    when('/new-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      reloadOnSearch: false,\n    }).\n    when('/delete-build/:name*', {\n      templateUrl: 'ui/builds/delete-build.html',\n      controller: 'DeleteBuildCtrl as deleteBuild',\n      reloadOnSearch: false,\n    }).\n    \n    when('/item-search', {\n      redirectTo: '/search'\n    }).\n    when('/item-search/:itemType', {\n      redirectTo: '/search/:itemType'\n    }).\n    \n    when('/search', {\n      templateUrl: 'ui/search/item-search.html',\n      controller: 'ItemSearchCtrl'\n    }).\n    when('/search/custom', {\n      templateUrl: 'ui/search/custom-items.html',\n      controller: 'CustomItemCtrl as customItems'\n    }).\n    when('/search/skills', {\n      templateUrl: 'ui/search/skill-search.html',\n      controller: 'SkillSearchCtrl as skillSearch'\n    }).\n    when('/search/:itemType*', {\n      templateUrl: 'ui/search/item-search.html',\n      controller: 'ItemSearchCtrl'\n    }).\n    \n    when('/item/:region?/:itemString*', {\n      templateUrl: 'ui/item/item.html',\n      controller: 'ItemCtrl',\n      reloadOnSearch: false,\n    }).\n    \n    when('/export', {\n      templateUrl: 'ui/nav/export.html',\n      controller: 'ExportCtrl',\n    }).\n    \n    when('/talismans', {\n      templateUrl: 'ui/builds/build-talismans.html',\n      controller: 'BuildTalismansCtrl as ctrl',\n    }).\n    \n    otherwise({\n      redirectTo: '/builds'\n    });\n}\n\n})();","(function () {\n'use strict';\nangular.module('dnsim')\n.controller('AboutCtrl', \n  ['$window',\n  function($window) {\n    'use strict';\n    document.body.className = 'default-back';\n    $window.document.title = 'DN Gear Sim';\n  }]\n);\n})();","angular.module('dnsim').controller('buildActionsCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.deleteGroup = function() {\n    $location.path('/delete-build/' + vm.buildName);\n  }\n  \n  this.editGroup = function() {\n    $location.path('/edit-build/' + vm.buildName)\n  }\n  \n  this.copyGroup = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      vm.build.enemyLevel,\n      vm.build.playerLevel,\n      vm.build.heroLevel,\n      vm.build.job,\n      vm.build.damageType,\n      vm.build.element,\n      vm.build.secondaryElement,\n      vm.build.enemyStatCaps, \n      vm.build.playerStatCaps, \n      vm.build.conversions, \n      vm.build.baseStats, \n      vm.build.heroStats);\n    \n    $location.path('/builds/' + newGroupName);\n  }\n  \n  this.reloaded = false;\n  this.reloadGroup = function() {\n    dntReset();\n    vm.reloaded = false;\n    \n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n    \n    vm.onChange();\n  }\n\n  function tryInit() {\n    if(vm.reloaded) {\n      return;\n    }\n    \n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n    \n    if(allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\n      vm.build.items = newItems;\n      \n      vm.reloaded = true;\n      $timeout(vm.onChange);\n    }\n  }\n  \n  function progress() {\n  }\n  \n  this.createShortUrl = function() {\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\n  }\n    \n  this.setShortUrl = function() {\n    if(vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  }\n  \n  this.setShortUrl();\n}])\n.directive('dngearsimBuildActions', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    templateUrl: 'ui/builds/build-actions.html'\n  };\n});","angular.module('dnsim').controller('buildItemCtrl',\n\n['$timeout','statHelper','saveHelper',\nfunction($timeout,statHelper,saveHelper) {\n  'use strict';\n  \n  var vm = this;\n    \n  this.removeItem = function() {\n    vm.item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function(gItem, index) {\n      if(gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.onChange();\n  }\n  \n}])\n.directive('dngearsimBuildItem', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-item.html'\n  };\n});","angular.module('dnsim').controller('BuildListCtrl', \n  [ '$window','$location','$anchorScroll','$routeParams','$timeout','saveHelper',\n  function($window,$location,$anchorScroll,$routeParams,$timeout,saveHelper) {\n    'use strict';\n    \n    var vm = this;\n    document.body.className = 'saved-back';\n    this.currentGroup = localStorage.getItem('currentGroup');\n    this.setupBuilds = function() {\n      vm.savedItems = saveHelper.getSavedItems();\n      vm.buildNames = Object.keys(vm.savedItems).sort();\n      vm.builds = [];\n      for(var i=0;i<vm.buildNames.length;++i) {\n        vm.builds.push({\n          name: vm.buildNames[i],\n          build: vm.savedItems[vm.buildNames[i]],\n        });\n      }\n    }\n    this.setupBuilds();\n    \n    if('groupName' in $routeParams) {\n      if($routeParams.groupName != this.currentGroup) {\n        this.currentGroup = $routeParams.groupName;\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n      }\n    }\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\n      $location.path('/builds/' + this.currentGroup);\n    }\n    else {\n      this.currentGroup = null;\n    }\n    \n    if(this.currentGroup) {\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\n    }\n    else {\n      $window.document.title = 'DN Gear Sim | BUILDS';\n    }\n\n    this.anyItems = function() {\n      return Object.keys(this.savedItems).length > 0;\n    }\n\n    this.createGroup = function() {\n      $location.path('/new-build');\n    }\n    \n    this.handleChange = function() {\n      vm.setupBuilds();\n      $timeout();\n      console.log('change');\n    }\n  \n    this.toggleGroup = function(buildName) {\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\n      $location.url('/builds/' + buildName);\n    }\n    \n    $timeout(function() {\n      $anchorScroll('/builds/' + vm.currentGroup);\n    });\n  }]\n);\n","angular.module('dnsim').controller('buildStatsCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n}])\n.directive('dngearsimBuildStats', function() {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n    },\n    controller: 'buildStatsCtrl',\n    controllerAs: 'statsCtrl',\n    templateUrl: 'ui/builds/build-stats.html'\n  };\n});","angular.module('dnsim').controller('buildSummaryCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.getBuildSummary = function(group) {\n    var summary = '';\n    \n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\n      if(itemsByType.length > 0) {\n        if(summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n    \n    return summary;\n  }\n}])\n.directive('dngearsimBuildSummary', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-summary.html'\n  };\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | TALISMANS';\n  $window.scrollTo(0, 0);\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = localStorage.getItem('currentGroup');\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    console.log('cannot find build');\n    return;\n  }\n  \n  this.getGroupCalcStats = function() {\n    if(this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.pickup = function(index) {\n    vm.selectedIndex = index;\n    \n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    vm.groupCalcStats = null;\n    saveGroup();\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.updateRows();\n  }\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    vm.groupCalcStats = null;\n    saveGroup();\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.updateRows();\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n  this.headers = [\n    '+100%',\n    '+75%',\n    '+25%',\n    '+0%',\n    ];\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n  \n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n  \n  this.selectedIndex = -1;\n  \n  this.rows = [];\n  \n  this.updateRows = function() {\n    vm.rows = [];\n        \n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n      if(item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if(!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n        \n        var rowIndex = 0;\n        for(;;) {\n          if(!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n          \n          if(vm.rows[rowIndex][pcIndex].index < 0) {\n            if(!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n            \n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          }\n          else {\n            rowIndex++;\n          }\n        }\n      }\n      \n    });\n    \n    if(vm.rows.length < 3) {\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\n    }\n  }\n  \n  this.makeFakeCells = function(num) {\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\n  }\n  \n  this.makeCell = function(item, index) {\n    return { item: item, index: index };\n  }\n  \n  this.click = function(col) {\n    if(vm.selectedIndex == -1) {\n      if(col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    }\n    else {\n      vm.move(col);\n    }\n  }\n  \n  this.move = function(col) {\n    \n    var items = vm.savedItems[vm.groupName].items;\n    if(col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n      \n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    }\n    else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  }\n  \n  this.setTalisman = function(item, newEnhancementNum) {\n    var extraStats = [];\n    angular.forEach(item.stats, function(stat, index) {\n      if(newEnhancementNum) {\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\n      }\n    });\n    \n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n    \n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  }\n  \n    \n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if(this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n    \n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n    \n    var extraStats = [];\n    var fullStats1 = [];\n    if(item.stats) {\n      angular.forEach(item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n    \n    extraStats = [];\n    angular.forEach(item2.stats, function(stat, index) {\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.save = function() {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/builds/' + vm.groupName);\n  }\n  \n  this.updateRows();\n  \n}]); ","angular.module('dnsim').controller('buildCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  \n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  this.category = itemCategory.byName(selectedCategory);\n  if(!this.category) {\n    selectedCategory = 'titles';\n    this.category = itemCategory.byName('titles');\n  }\n  \n  this.getCategoryItems = function() {\n    return itemCategory.getItemsByCategory(this.build.items)[vm.category.name];\n  }\n  \n  this.getCategories = function() {\n    return itemCategory.categories;\n  }\n    \n  this.setSelectedCategory = function(value) {\n    this.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  }\n\n  this.toggleGroup = function() {\n    localStorage.setItem('currentGroup', null);\n    $location.url('/builds');\n  }\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.allowMoreItems = function() {\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  this.getItemCount = function() {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n    \n    if(vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        }\n        else if(item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n      \n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    }\n    else if(vm.category.name == 'increasing gems') {\n      \n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if(!gemType) {\n            gemType = 0;\n          }\n          \n          if(!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        }\n        else if(item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n      \n      itemCountText = ''\n      angular.forEach(numIncreasingGems, function(number, gemType) {\n        if(itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n      \n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    }\n    else {\n      var numItems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n      \n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if(cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n    \n    return itemCountText + ' ' + vm.category.name;\n  }\n  \n  this.handleChange = function() {\n    vm.onChange();\n  }\n  \n}])\n.directive('dngearsimBuild', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build.html'\n  };\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\n\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  this.newGroup = true;\n  if('name' in $routeParams) {\n      this.name = $routeParams.name;\n  }\n  \n  this.delete = function() {\n    saveHelper.updatedSavedItems(this.name, []);\n    $location.path('/builds/');\n  }\n    \n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  this.savedItems = saveHelper.getSavedItems();\n  this.group = {};\n  this.newGroup = true;\n  if('groupName' in $routeParams) {\n      this.groupName = $routeParams.groupName;\n      if(this.groupName in this.savedItems) {\n        this.group = this.savedItems[this.groupName];\n        this.newGroup = false;\n      }\n  }\n  else {\n    this.groupName = '';\n  }\n  this.oldGroupName = this.groupName;\n  this.heroStats = [];\n  this.elements = hCodeValues.elements;\n  this.damageTypes = hCodeValues.damageTypes;\n  \n  if(this.group.damageType) {\n    this.damageType = this.group.damageType;\n  }\n  else {\n    this.damageType = hCodeValues.damageTypes[0];\n  }\n    \n  if(this.group.element) {\n    this.element = this.group.element;\n  }\n  else {\n    this.element = hCodeValues.elements[0];\n  }\n    \n  if(this.group.secondaryElement) {\n    this.secondaryElement = this.group.secondaryElement;\n  }\n  else {\n    this.secondaryElement = hCodeValues.elements[0];\n  }\n\n  if(this.group.enemyLevel) {\n    this.enemyLevel = this.group.enemyLevel;\n  }\n  else {\n    this.enemyLevel = 90;\n  }\n  \n  if(this.group.playerLevel) {\n    this.playerLevel = this.group.playerLevel;\n  }\n  else {\n    this.playerLevel = 90;\n  }\n  \n  if(this.group.heroLevel && this.group.heroLevel > 0) {\n    this.heroLevel = this.group.heroLevel;\n  }\n  else {\n    this.heroLevel = 1;\n  }\n  \n  this.getFinalJobs = function() {\n    var allJobs = jobs.getFinalJobs();\n    var finalJobs = [];\n    for(var j=0;j<allJobs.length;++j) {\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n        finalJobs.push(allJobs[j]);\n      }\n    }\n    return finalJobs;\n  }\n  \n  this.getBaseJobs = function() {\n    return jobs.getBaseJobs();\n  }\n  \n  this.getJobName = function(englishName) {\n    var allJobs = jobs.getAllJobs();\n    for(var j=0;j<allJobs.length;++j) {\n      if(allJobs[j].d.EnglishName == englishName) {\n        return allJobs[j].name;\n      }\n    }\n  }\n  \n  this.init = function(vm) {\n    var newJobs = jobs.getFinalJobs();\n    if(newJobs.length > 0) {\n      $timeout( function() {\n        \n        if('job' in vm.group) {\n          angular.forEach(newJobs, function(value, key) {\n            if(value.id == vm.group.job.id) {\n              vm.job = value;\n            }\n          });\n        }\n        \n        vm.setHeroStats();\n      });\n    }\n  }\n  \n  this.setJob = function(job) {\n    this.job = job;\n    $window.scrollTo(0, 0);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  character.init(function() { vm.init(vm) });\n  \n  this.getStatCap = function(colName, useLevel) {\n    return character.getStatCaps(useLevel)[colName];\n  }\n  this.getJobConversion = function(colName) {\n    return character.getConversions(this.job.id)[colName];\n  }\n  this.getJobBaseStat = function(colName) {\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\n  }\n  \n  this.invalidGroupName = function() {\n    if(!this.groupName) {\n      return true;\n    }\n    \n    if(this.groupName in this.savedItems) {\n      if(this.newGroup || this.groupName != this.oldGroupName) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  this.ok = function() {\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\n    var conversions = character.getConversions(this.job.id);\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\n    var heroStats = character.getHeroStats(this.heroLevel);\n    \n    if(this.newGroup) {\n      this.oldGroupName = this.groupName;\n      saveHelper.importGroup(this.groupName, []);\n    }\n    \n    saveHelper.renameSavedGroup(\n      this.oldGroupName, \n      this.groupName,\n      this.enemyLevel,\n      this.playerLevel,\n      this.heroLevel,\n      this.job,\n      this.damageType,\n      this.element,\n      this.secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\n    \n    $location.path('/builds/' + this.groupName);\n  }\n  \n  this.setHeroStats = function() {\n    this.heroStats = character.getHeroStats(this.heroLevel);\n    // console.log('got ' + this.heroStats.length + ' hero stats');\n  }\n  \n  $timeout(function() {\n    var input = document.getElementById('groupNameInput');\n    if(input) {\n      input.focus();\n      input.setSelectionRange(0, 9999);\n    }\n  });\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\n\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n  \n  this.setOptions = function() {\n    if(vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if(vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  }\n  \n  this.selectOption = function(value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n      \n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function(columns, fileName) {\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    }\n    else {\n      vm.setOptions();\n      console.log('setup next step');\n    }\n  }\n  \n  this.tryToAddItem = function(dntFiles, item) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        if(vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.onChange();\n        }\n      }\n    }\n  }\n  \n  this.reset = function() {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function() {\n      vm.setOptions();\n    });\n  }\n  \n  this.hasStarted = function() {\n    return vm.startedForCat == vm.category.name;\n  }\n  \n  this.start = function() {\n    vm.startedForCat = vm.category.name;\n    \n    jobs.init(function() {}, vm.reset);\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  }\n  \n  this.hasOptions = function() {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  }\n  \n  this.cancel = function() {\n    vm.startedForCat = '';\n    vm.reset();\n  }\n  \n  this.back = function() {\n    if(vm.stepNumber == 0) {\n      vm.cancel();\n    }\n    else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n        \n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\n      \n      vm.setOptions();\n    }\n  }\n  \n}])\n.directive('dngearsimQuickAdd', function() {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      onChange: '&onChange',\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    templateUrl: 'ui/builds/quick-add.html'\n  };\n});","angular.module('dnsim').controller('ViewGroupCtrl', \n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\n    'use strict';\n  \n    document.body.className = 'saved-back';\n    $window.document.title = 'DN Gear Sim';\n    \n    region.setLocationByName($routeParams.region);\n    \n    $scope.buildName = '';\n    $scope.build = {};\n    \n\n    if('g' in $routeParams && 'i' in $routeParams) {\n      $scope.buildName = $routeParams.g;\n      \n      $scope.enemyLevel = $routeParams.e;\n      $scope.playerLevel = $routeParams.p;\n      $scope.heroLevel = $routeParams.h;\n      $scope.job = { id: $routeParams.j };\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n      $scope.element = hCodeValues.elements[$routeParams.t];\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n        \n      var items = [];\n      \n      var itemString = $routeParams.i;\n      \n      angular.forEach(itemString.split(','), function(itemStr, index) {\n        var item = exportLinkHelper.decodeItem(itemStr);\n        \n        if(item.id > 0) {\n          items.push(item);\n        }\n      });\n\n      $scope.build = {};\n      $scope.savedItems = {};\n      $scope.savedItems[$scope.buildName] = $scope.build;\n      $scope.build.items = items;\n      $scope.isLoading = true;\n      \n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        dntData.init(fileName, columns, progress, tryInit);\n      });\n      \n      translations.init(progress, tryInit);\n      jobs.init(progress, tryInit);\n      character.init(tryInit);\n      \n      $timeout();\n    }\n    \n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n    \n    function tryInit() {\n      \n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n        return;\n      }\n      \n      $timeout(function() {\n        var groupName = $scope.buildName;\n        var group = $scope.build;\n        \n        $scope.job = jobs.getById($scope.job.id);\n        \n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n        if($scope.job) {\n          $scope.conversions = character.getConversions($scope.job.id);\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n        }\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\n        \n        var newItems = groupHelper.reloadGroup(groupName, group);\n        dntReset();\n      \n        $scope.savedItems = {};\n        $scope.build = {\n          items: newItems,\n          lastUpdate: group.lastUpdate,\n\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats,\n        };\n        $scope.savedItems[groupName] = $scope.build;\n        $scope.stats = statHelper.getBuildStats($scope.build);\n        \n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n      });\n    }\n    \n    function progress() {\n    }\n    \n    $scope.copyGroup = function() {\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n      console.log('copying in as ' + newBuildName);\n      \n      saveHelper.renameSavedGroup(\n        newBuildName, \n        newBuildName,\n        $scope.enemyLevel,\n        $scope.playerLevel,\n        $scope.heroLevel,\n        $scope.job,\n        $scope.damageType,\n        $scope.element,\n        $scope.secondaryElement,\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\n      \n      $location.url('/builds/' + newBuildName);\n    }\n  }]\n);\n","angular.module('dnsim').filter('percentage', [function() {\n  'use strict';\n\n  function filter(input) {\n    if(typeof input == 'number') {\n      return (Math.round(input * 100 * 100) / 100) + '%';\n    }\n    else {\n      return input;\n    }\n  }\n  filter.$stateful = false;\n\n  return filter;\n}])","angular.module('dnsim').controller('groupAssignmentCtrl',\n\n['hCodeValues','statHelper','saveHelper','itemCategory',\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = localStorage.getItem('currentGroup');\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    return;\n  }\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n    \n  this.clearGroup = function() {\n    this.addAffectAmount = null;\n    this.replaceAffectAmount = {};\n\n    this.groupItems = null;\n    this.groupCalcStats = null\n  }\n  this.clearGroup();\n  \n  this.getAddAffectAmount = function(stat) {\n    this.initAddAffects();\n    return this.addAffectAmount[stat];\n  }\n  \n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    return this.replaceAffectAmount[itemIndex][statId];\n  }\n  \n  this.getGroupCalcStats = function() {\n    \n    if(this.groupCalcStats == null) {\n      \n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  this.initAddAffects = function() {\n    \n    if(vm.addAffectAmount) {\n      return;\n    }\n    \n    var origStats = vm.getGroupCalcStats();\n    var group = vm.savedItems[vm.groupName];\n    var newItems = group.items.concat([vm.item]);\n    var newStats = vm.getCalculatedStats(group, newItems);\n    \n    this.addAffectAmount = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex]) {\n      return;\n    }\n    \n    var group = vm.savedItems[vm.groupName];\n    var newItems = [vm.item];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    this.replaceAffectAmount[itemIndex] = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getGroupItems = function() {\n\n    var itemSplit;\n    function numMatches(str) {\n      if(str) {\n        var numMatches = 0;\n        for(var i=0;i<itemSplit.length;++i) {\n          if(str.indexOf(itemSplit[i]) > 0) {\n            numMatches++;\n          }\n        }\n        return numMatches;\n      }\n      else {\n        return -1;\n      }\n    }\n    \n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n      vm.groupItems = [];\n      \n      var items = [];\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\n          if(item.exchangeType == vm.item.exchangeType) {\n            items.push(item);\n          }\n        }\n        else if(item.typeName == vm.item.typeName) {\n          items.push(item);\n        }\n      });\n      \n      if(vm.item.name) {\n        itemSplit = vm.item.name.split(' ');\n      }\n      items.sort(function(a,b) {\n        return numMatches(b.name)-numMatches(a.name);\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name == vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name != vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n    }\n    return vm.groupItems;\n  }\n  \n  this.hasMaxExchangable = function() {\n    var cat = itemCategory.byName(this.item.typeName);\n    var items = this.getGroupItems();\n    \n    if(cat && cat.maxCat) {\n      if(items.length >= cat.maxCat) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxExchange) {\n      if(items.length >= cat.maxExchange) {\n        for(var i=0;i<items.length;++i) {\n          if(!items[i].exchangeType) {\n            return false;\n          }\n        }\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.addToGroup = function() {\n    saveHelper.saveItem(vm.groupName, vm.item);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  this.replace = function(item) {\n    item.replaceItem = true;\n    var newItemList = [];\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\n      if(gItem.replaceItem) {\n        // console.log('found replace item');\n        newItemList.push(vm.item);\n      }\n      else {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n}])\n.directive('dngearsimGroupAssignment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'groupAssignmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/group-assignment.html'\n  };\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\n\n['hCodeValues',\nfunction(hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'custom') {\n    return;\n  }\n  \n  var vm = this;\n  \n  this.stat = {id:-1, name:''};\n  this.newStatVal = 0;\n\n  this.dropdownStats = [];\n  for(var id in hCodeValues.stats) {\n    if(!hCodeValues.stats[id].noCustom) {\n      this.dropdownStats.push(hCodeValues.stats[id]);\n    }\n  }\n  this.dropdownStats.sort()\n\n  this.getStats = function() {\n    return this.dropdownStats;\n  }\n  \n  this.newStat = function() {\n    return {id:this.stat.id,max:this.newStatVal};\n  }\n  \n  this.addStat = function() {\n    if(this.stat.id > -1) {\n      if(!this.item.stats) {\n        this.item.stats = [];\n      }\n       \n      this.item.stats.push(this.newStat());\n      this.onChange();\n    }\n  }\n  \n  this.removeStat = function(stat) {\n    var i = this.item.stats.indexOf(stat);\n    if(i != -1) {\n    \tthis.item.stats.splice(i, 1);\n      this.onChange();\n    }\n  }\n  \n  this.getNewStatName = function() {\n    return this.getStatName(this.newStat());\n  }\n  \n  this.getNewStatDisplayValue = function() {\n    return this.getStatDisplayValue(this.newStat());\n  }\n  \n  this.getStatName = function(stat) {\n    if(stat.id in hCodeValues.stats) {\n      return hCodeValues.stats[stat.id].name;\n    }\n  }\n  \n  this.getStatDisplayValue = function(stat) {\n    if(stat.id in hCodeValues.stats) {\n      return hCodeValues.stats[stat.id].display(stat);\n    }\n  }\n  \n}])\n.directive('dngearsimItemEditCustom', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-custom.html'\n  };\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\n\n['dntData','hCodeValues','items','$timeout','translations',\nfunction(dntData,hCodeValues,items,$timeout,translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if(vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n  \n  this.setEnchantment = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\n          }\n          else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  }\n  \n  this.isMaxEnchantLevel = function() {\n\n    if(vm.enchantments != null &&\n      vm.enchantments.length > 0 &&\n      typeof vm.item.enchantmentNum == 'number') {\n\n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  \n  this.setEnchantmentNum = function(enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    vm.setEnchantment();\n    vm.onChange();\n  }\n  \n  this.nextEnchantment = function() {\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\n      if(i == 0) {\n        vm.enhancementOptions.push({number: 0});\n      }\n      else {\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n      }\n    }\n  }\n  \n  this.prevEnchantment = function() {\n    vm.enhancementOptions = [];\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n    }\n    \n    vm.enhancementOptions.push({number: 0});\n  }\n  \n  this.getOption = function(enchantment) {\n    return {\n      number: enchantment.EnchantLevel,\n      stats: hCodeValues.getStats(enchantment)\n    };\n  }\n  \n  this.getEnchantments = function() {\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\n        var eid = vm.item.enchantmentId;\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\n        vm.setEnchantment();\n      }\n    }\n    \n    return vm.enchantments;\n  }\n  \n  var fileName = 'all-items.lzjson';\n  \n  this.showMaterials = function() {\n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        \n        if(!vm.enchantmentAfter) {\n          return;\n        }\n        \n        vm.materials = [];\n        for(var i=1;i<=5;++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if(itemId > 0 && itemCount > 0) {\n            \n            var items = dntData.find(fileName, 'id', itemId);\n            if(items.length == 0) {\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\n            }\n            else {\n              var item = items[0];\n              var name = translations.translate(item.NameID, item.NameIDParam);\n              \n              if(item) {\n                var material = {\n                  num: itemCount,\n                  icon: item.IconImageIndex,\n                  rank: item.Rank,\n                  levelLimit: item.LevelLimit,\n                  name: name\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  if(dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditEnchantment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-enchantment.html'\n  };\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\n\n['dntData','items','hCodeValues',\nfunction(dntData,items,hCodeValues) {\n  'use strict';\n  \n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n  \n  if(this.item == null) return;\n  \n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  this.getPotentials = function() {\n    if(!vm.potentials) {\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n        \n        if(potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        }\n        else if('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n        \n          if(potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n    \n    return vm.potentials;\n  }\n  \n  this.nextPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i+1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n  \n  this.prevPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i-1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n    \n  this.changePotential = function(pid) {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  }\n  \n  this.isFirstPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  }\n  \n  this.isLastPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\n  }\n  \n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n    \n    if(vm.potentials != null) {\n      angular.forEach(vm.potentials, function(p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\n          if(!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n        \n        if(stats.length > 0) {\n          pStats[p.id] = stats;\n        }\n        else if(!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n    \n    return pStats;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditPotential', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-potential.html'\n  };\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\n\n['$timeout','dntData','statHelper',\nfunction($timeout,dntData,statHelper) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'skills') {\n    return;\n  }\n  \n  if(!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n  \n  var vm = this;\n  \n  this.initSkills = function() {\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n    })});\n  }\n  \n  this.nextEnchantment = function() {\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  }\n  \n  this.isMaxSkillLevel = function() {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  }\n  \n  this.prevEnchantment = function() {\n    if(this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    }\n    else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  }\n  \n  this.initSkills();\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditSkill', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-skill.html'\n  };\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\n\n['dntData','hCodeValues','items',\nfunction(dntData,hCodeValues,items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  this.sparks = null;\n  var vm = this;\n\n  this.nextSpark = function() {\n    var index = getPotentialIndex();\n    index++;\n    if(index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.isMoreSparks = function() {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\n  }\n  \n  this.isFirstSpark = function() {\n    return getPotentialIndex() == 0;\n  }\n  \n  this.prevSpark = function() {\n    var index = getPotentialIndex();\n    index--;\n    if(index < 0) {\n      index = vm.sparks.length-1;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.removeSpark = function() {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  }\n  \n  this.getSparks = function() {\n    if(vm.item == null) return null;\n    if(vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if(sid) {\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n    \n    return vm.sparks;\n  }\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if(vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function(spark, index) {\n        if(spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n      \n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditSpark', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-spark.html'\n  };\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\n\n[function() {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'tman') {\n    return;\n  }\n  \n  this.setTalisman = function(amount) {\n    if(amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    }\n    else {\n      this.item.enchantmentNum = amount;\n      \n      var extraStats = [];\n      angular.forEach(this.item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\n      });\n      \n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  }\n\n}])\n.directive('dngearsimItemEditTalisman', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-talisman.html'\n  };\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\n\n['$timeout','dntData','itemFactory',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n  \n  var vm = this;\n  \n  var pouchFileNames = [\n    'itemdroptable.lzjson',\n    'itemdroptable_abyss.lzjson',\n    'itemdroptable_apprentice.lzjson',\n    'itemdroptable_cook.lzjson',\n    'itemdroptable_darklair.lzjson',\n    'itemdroptable_dimension.lzjson',\n    'itemdroptable_disjoint.lzjson',\n    'itemdroptable_dnexpedition.lzjson',\n    'itemdroptable_event.lzjson',\n    'itemdroptable_farm.lzjson',\n    'itemdroptable_fishing.lzjson',\n    'itemdroptable_guildwar.lzjson',\n    'itemdroptable_item.lzjson',\n    'itemdroptable_monsteritem.lzjson',\n    'itemdroptable_propdrop.lzjson',\n    'itemdroptable_pvp.lzjson',\n    'itemdroptable_randomcompound.lzjson',\n    'itemdroptable_stageclear.lzjson',\n    'itemdroptable_themepark.lzjson',\n    'itemdroptable_union.lzjson']\n  \n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  \n  var files;\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  }\n  else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxContents();\n      });\n    });\n  }\n  \n  this.initBoxContents = function() {\n    //console.log('init contents');\n\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if(datas.length > 0) {\n      var d = datas[0];\n      vm.items = [];\n      \n      \n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\n        vm.getCharmItems(d.TypeParam1);\n      }\n      else if (vm.item.typeId == 8) {\n        vm.getPouchItems(d.TypeParam1);\n      }\n      \n    }\n  }\n  \n  this.getPouchItems = function(boxType) {\n    for(var f=0;f<pouchFileNames.length;++f) {\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\n    }\n  }\n  \n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\n    \n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          }\n          else {\n            // console.log('adding item ' + pouchItem);\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\n              // console.log('found item ' + basicItem.name);\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: basicItem\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n  \n  this.getCharmItems = function(boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for(var i=0;i<charmFiles.length;++i) {\n      \n      //console.log('box: ' + boxType);\n\n      var charmData = dntData.getData(charmFiles[i]);\n      for(var c=0;c<charmData.length;++c) {\n        var cd = charmData[c];\n        if(cd.CharmNum == boxType && cd.Look) {\n          \n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n          if(itemds.length > 0) {\n            vm.items.push({\n              count: cd.Count,\n              gold: cd.Gold,\n              item: itemFactory.createBasicItem(itemds[0])\n            });\n          }\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewBox', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-box.html'\n  };\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = [\n    'itemcompoundtable.lzjson',\n    'itemcompoundtable_custom.lzjson',\n    'itemcompoundtable_glyph.lzjson',\n    'itemcompoundtable_jewel.lzjson',\n    'itemcompoundtable_renewal.lzjson',\n    'itemcompoundtable_set.lzjson'];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = cFiles.concat([allItemFileName]);\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initCrafts();\n      });\n    });\n  }\n  \n  this.initCrafts = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.crafts = [];\n    for(var i=0;i<cFiles.length;++i) {\n      vm.initCraft(cFiles[i]);\n    }\n    \n    var newCrafts = [];\n    for(var i=0;i<vm.crafts.length;++i) {\n      var found = false;\n      for(var j=0;j<newCrafts.length;++j) {\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\n            \n            found = true;\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n                  found = false;\n              }\n            }\n        }\n      }\n      \n      if(!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n    \n    vm.crafts = newCrafts;\n  }\n\n  this.initCraft = function(fileName) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\n    \n    for(var i=0;i<fCrafts.length;++i) {\n      var c = fCrafts[i];\n      \n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost/100/100,\n        items: [],\n      };\n      \n      var j=0;\n      for(;;) {\n        j++;\n        var itemColName = 'Slot' + j +'Id';\n        var qtyColName = 'Slot' + j +'Num';\n        if(!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if(items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName],\n          });\n        }\n      }\n      \n      vm.crafts.push(craft);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewCraft', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-craft.html'\n  };\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\n\n['$timeout','dntData','itemFactory','items',\n  function($timeout, dntData, itemFactory, items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  \n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [extractFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initExtract();\n      });\n    });\n  }\n  \n  this.initExtract = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if(d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n    \n    var itemType = items[vm.item.itemSource];\n    \n    if(itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      for(var i=0;i<enchantments.length;++i) {\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n    \n    vm.items = [];\n    if(disjoint) {\n      vm.getItems(disjoint);\n    }\n  }\n  \n  this.getGold = function() {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount)/100/100;\n  }\n  \n  this.getItems = function(disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getItems(pouchItem);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0]),\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewExtraction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-extraction.html'\n  };\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = [plateFile,allItemFileName];\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    getPlates();\n  }\n  \n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for(var r=0;r<rows.length;++r) {\n      var row = rows[r];\n      var col=0;\n      for(;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if(!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if(itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewPlate', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-plate.html'\n  };\n});","angular.module('dnsim').controller('itemViewSetCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var files = [\n  'partstable.optimised.lzjson',\n  'partstable_cash.optimised.lzjson',\n  'partstable_common2014.optimised.lzjson',\n  'partstable_common2015.optimised.lzjson',\n  'partstable_common2016.lzjson',\n  'partstable_commoncash.lzjson',\n  'partstable_equipment.optimised.lzjson',\n  'partstable_event.lzjson',\n  'partstable_guild.lzjson',\n  'partstable_pvp.optimised.lzjson',\n  'partstable_reboot.optimised.lzjson',\n  'partstable_skilllevelup.lzjson',\n  'weapontable.optimised.lzjson',\n  'weapontable_cash.optimised.lzjson',\n  'weapontable_common2014.optimised.lzjson',\n  'weapontable_common2015.optimised.lzjson',\n  'weapontable_common2016.lzjson',\n  'weapontable_commoncash.lzjson',\n  'weapontable_equipment.optimised.lzjson',\n  'weapontable_event.lzjson',\n  'weapontable_guild.lzjson',\n  'weapontable_pvp.optimised.lzjson',\n  'weapontable_reboot.optimised.lzjson',\n  //'weapontable_skilllevelup.lzjson'\n  ];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = files.concat([allItemFileName]);\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    for(var i=0;i<files.length;++i) {\n      getSetItems(files[i]);\n    }\n  }\n  \n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for(var r=0;r<rows.length;++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if(itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewSet', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-set.html'\n  };\n});","angular.module('dnsim').controller('itemViewShopCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.shopCosts = [];\n  \n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initShops();\n      });\n    });\n  }\n  \n  this.initShops = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n    \n    var newShopCosts = [];\n    for(var i=0;i<vm.shopCosts.length;++i) {\n      var found = false;\n      for(var j=0;j<newShopCosts.length;++j) {\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n            found = true;\n            break;\n        }\n      }\n      \n      if(!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n    \n    vm.shopCosts = newShopCosts;\n  }\n  \n  /*\n  function getShopCosts() {\n    var shops = dntData.getData(shopFileName);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n      \n      var c = 0;\n      for(;;) {\n        ++c;\n        \n        var colName = 'itemIndex' + c;\n        if(!(colName in s)) {\n          break;\n        }\n        \n        var itemId = s[colName];\n        if(!itemId) {\n          break;\n        }\n        \n        if(itemId == vm.item.id) {\n          s = {\n            shopName: s.ShopID,\n            tabName: translations.translate(s.TabNameID),\n            gold: s['Quantity' + c],\n          };\n          \n      \n          if(s.shopName in hCodeValues.shopNames) {\n            s.shopName = hCodeValues.shopNames[s.shopName];\n          }\n      \n          if(!s.shopName) {\n            s.shopName = s.ShopId;\n          }\n          vm.shopCosts.push(s);\n        }\n      }\n    }\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n        \n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n      \n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0,\n      };\n      \n      if(shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n      \n      if(s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      }\n      else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n      }\n      \n      if(s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      }\n      else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n      }\n      \n      shopCost.gold = shopCost.gold/100/100;\n      \n      vm.shopCosts.push(shopCost);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewShop', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-shop.html'\n  };\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.matchingTransfers = [];\n  \n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [transferFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n    vm.matchingTransfers = [];\n    \n    for(var i=0;i<transfers.length;++i) {\n      var t = transfers[i];\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n        \n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n        \n        vm.matchingTransfers.push({\n          level: t.ResultLevel,\n          enchantmentNum: t.ResultEnchantLevel,\n          gold: t.NeedCoin/100/100,\n          rank: hCodeValues.rankNames[t.ResultRank],\n          numItem1: t.NeedItemCount1,\n          item1: itemFactory.createBasicItem(item1s[0]),\n          numItem2: t.NeedItemCount2,\n          item2: itemFactory.createBasicItem(item2s[0]),\n        });\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTransfer', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-transfer.html'\n  };\n});","angular.module('dnsim').controller('ItemCtrl',\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\n  'use strict';\n  \n  region.setLocationByName($routeParams.region);\n  \n  $window.scrollTo(0, 0);\n  \n  $scope.jobName = null;\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\n  if('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n  \n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n  \n  $scope.getDescription = function() {\n    if($scope.item.description) {\n      return $scope.item.description;\n    }\n    else if($scope.itemType &&\n      $scope.itemType.name == 'title' &&\n      translations.isLoaded() &&\n      dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    return '';\n  }\n  \n  $scope.getExchangeType = function() {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if(translations.isLoaded() &&\n      dntData.isLoaded(exchangeDnt) &&\n      $scope.item.exchangeType > 0) {\n        \n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  }\n  \n  $scope.setDetail = function(detail) {\n    $scope.detail = detail;\n  }\n  \n  $scope.getServerStorage = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if(itemData.AbleWStorage == 1) {\n        return 'can put in server storage';\n      }\n      else if(itemData.AbleWStorage == 0) {\n        return 'not transferable';\n      }\n    }\n    return '';\n  }\n  \n  $scope.handleChange = function() {\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\n    $location.replace();\n  }\n  \n  function getJobName() {\n    var retVal = '';\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function(job, index) {\n      if(job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n        return;\n      }\n    });\n  }\n  \n  function init() {\n    var anyToLoad = false;\n    \n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\n        anyToLoad = true;\n      }\n    });\n    \n    if(!translations.isLoaded()) {\n      translations.init(reportProgress,function() { tryInit() });\n      anyToLoad = true;\n    }\n    \n    if(!jobs.isLoaded()) {\n      jobs.init(reportProgress, function() { tryInit(); });\n      anyToLoad = true;\n    }\n    \n    if(!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n  \n  function tryInit() {\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\n      if($scope.item == null) {\n        return;\n      }\n      \n      setFullStats();\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\n      if($scope.item.itemSource != 'custom') {\n      \n        if($scope.item.typeName == 'skills') {\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          }\n          else {\n            $scope.item.pve = 'pvp';\n          }\n        }\n    \n        if($scope.item.needJobClass > 0) {\n          getJobName();\n        }\n      }\n      \n      var itemData = itemFactory.getItemData($scope.item);\n      if(itemData.DisjointDrop1 > 0) {\n        $scope.canExtract = true;\n      }\n      \n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n        $scope.canTransfer = true;\n      }\n      \n      if($scope.item.setId) {\n        $scope.isInSet = true;\n      }\n      \n      if($scope.item.typeId == 5) {\n        $scope.isPlate = true;\n      }\n      \n      if($scope.item.typeName != null) {\n        $scope.canUse = true;\n        $scope.detail = 'use';\n      }\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\n        $scope.hasContents = true;\n        $scope.detail = 'contents';\n      }\n      else if($scope.canExtract) {\n        $scope.detail = 'extract';\n      }\n      else if($scope.canTransfer) {\n        $scope.detail = 'transfer';\n      }\n      else if($scope.isPlate) {\n        $scope.detail = 'plate';\n      }\n      else {\n        $scope.detail = 'shops';\n      }\n    }\n  }\n\n  \n  function setFullStats() {\n    $scope.item.fullStats = $scope.item.stats;\n    \n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n    \n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n  \n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n}]);","angular.module('dnsim').controller('ExportCtrl', \n  ['$scope','$window','saveHelper',\n   function($scope, $window, saveHelper) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | EXPORT';\n  \n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n  \n  $scope.save = function() {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  }\n}]);\n","angular.module('dnsim').controller('NavCtrl', \n  ['$scope','$location','translations','region','itemCategory',\n  function($scope,$location,translations,region,itemCategory) {\n    'use strict';\n\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\n    \n    var noMenu = [];\n    var noLocationMenu = [aboutAction];\n    var normalMenu = [\n      {path: 'builds', name:'builds', icon: 'wrench'},\n      {path: 'search', name:'gear', icon: 'search'},\n      {path: 'items', name:'items', icon: 'search'},\n      aboutAction,\n      ];\n      \n    region.init();\n  \n    $scope.isSearch = function() {\n      return $location.path().indexOf('/search') == 0;\n    }\n\n    $scope.isLoading = function() {\n      return translations.startedLoading && \n            !translations.isLoaded() &&\n            region.tlocation != null &&\n            region.tlocation.url != '' &&\n            !$scope.noRegion();\n    }\n    \n    $scope.noRegion = function() {\n      return region.dntLocation == null;\n    }\n    \n    $scope.fireAction = function(action) {\n      if(action.name == 'search') {\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\n        if(cat) {\n          $location.path('/' + action.path + '/' + cat);\n        }\n        else {\n          $location.path('/' + action.path);\n        }\n      }\n      else {\n          $location.path('/' + action.path);\n      }\n    }\n      \n    $scope.getActions = function() {\n      var menu = null;\n      if(region.dntLocation != null && region.dntLocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if(region.tlocation != null && region.tlocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\n        menu = normalMenu;\n      }\n      else {\n        menu = normalMenu;\n      }\n      \n      angular.forEach(menu, function(value, key) {\n        delete value.extraCss;\n        if($location.path().length == 1) {\n          if(value.path.length == 1) {\n            value.extraCss = 'active';\n          }\n        }\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\n          value.extraCss = 'active';\n        }\n      });\n      \n      return menu;\n    };\n  }\n])\n.directive('dngearsimNav', function() {\n  return {\n    templateUrl: 'ui/nav/nav.html'\n  };\n});","angular.module('dnsim').controller('SetupCtrl', \n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | SETUP';\n  \n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n  \n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if(sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n  \n  $scope.location = sessionLocation;\n  if($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  }\n  else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n  \n  $scope.setLocation = function(url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  $scope.resetSessionData = function() {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function() {   \n      location.hash = '';\n      location.reload(true);\n    });\n  }\n  \n  $scope.loadUiString = function() {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n  \n  function progress(msg) {\n    $timeout(\n      function() {\n        if($scope.testResults != null) {\n          $scope.testResults.push(msg);\n        }\n      });\n  }\n  \n  function progressTranslations(msg) {\n    $timeout(\n      function() {\n        if($scope.translationResults != null) {\n          $scope.translationResults.push(msg);\n        }\n      });\n  }\n  \n  $scope.saveLocation = function() {\n    dntReset();\n    if($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n      \n      region.init();\n      if(region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = [\n        'Location saved',\n        'Using location ' + $scope.location];\n    }\n  }\n  \n  $scope.testLocation = function() {\n    if($scope.location != noLocation) {\n      $scope.testResults = [\n        'Using location ' + $scope.location,\n        'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  }\n}]);\n","angular.module('dnsim').controller('RegionCtrl', \n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\n    'use strict';\n\n    region.init();\n    translations.init(\n      function(msg) { \n        // console.log(msg);\n      }, \n      function() {\n        $timeout();\n      });\n    \n    $scope.getDntLocation = function() {\n      return region.dntLocation;\n    }\n    $scope.getTlocation = function() {\n      return region.tlocation;\n    }\n     \n    $scope.getHostedFiles = function() {\n      // console.log('getting hosted files');\n      return region.hostedFiles;\n    }\n    \n    $scope.getWorldName = function() {\n      if(translations.isLoaded()) {\n        return translations.translate(10169);\n      }\n      else {\n        return '';\n      }\n    }\n    \n    $scope.setTLocation = function(location) {\n      region.setTLocation(location);\n      $scope.edit = false;\n    }\n    \n    $scope.setLocation = function(location) {\n      if($routeParams.region) {\n        $routeParams.region = location.region;\n        $route.updateParams($routeParams);\n      }\n      else {\n        region.setLocation(location);\n      }\n      $scope.edit = !$scope.edit;\n    }\n  }\n])\n.directive('dngearsimRegion', function() {\n  return {\n    templateUrl: 'ui/region/region.html'\n  };\n});","angular.module('dnsim').controller('CustomItemCtrl',\n\n['$window','saveHelper','$location','hCodeValues',\nfunction($window,saveHelper,$location,hCodeValues) {\n  'use strict';\n  \n  document.body.className = 'search-back';\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\n  \n  this.customItems = hCodeValues.customItems;\n  \n  this.maxDisplay = 10;\n  this.currentResults = 0;\n  \n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n  \n  this.getResults = function() {\n    return this.customItems;\n  }\n  \n  this.getNewStatName = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      return 'unnamed custom item';\n    }\n    else {\n      return this.nameSearch;\n    }\n  }\n  \n  this.createCustomItem = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      this.nameSearch = this.getNewStatName();\n    }\n    $location.path('/item/_custom:.' + this.nameSearch);\n  }\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\n['$scope','$window','$routeParams','$timeout','$location',\n'translations',\n'itemCategory',\n'jobs',\n'hCodeValues',\n'itemFactory',\n'region',\n'saveHelper',\nfunction(\n  $scope,$window,$routeParams,$timeout,$location,\n  translations,\n  itemCategory,\n  jobs,\n  hCodeValues,\n  itemFactory,\n  region,\n  saveHelper) {\n  'use strict';\n  \n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\n  if(!$scope.itemCategory) {\n     var catName = localStorage.getItem('selectedItemCategory');\n     if(!catName) {\n       catName = 'titles';\n     }\n     \n     var cat = itemCategory.byName(catName);\n     if(cat) {\n       $location.path(cat.path);\n     }\n     return;\n  }\n\n  document.body.className = 'search-back';\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\n  \n  $scope.job = {id: -1, name: ''};\n  $scope.jobs = [$scope.job];\n  $scope.allJobs = [];\n  $scope.minLevel = 1;\n  $scope.maxLevel = 99;\n  $scope.maxDisplay = 10;\n  $scope.totalNumResults = 0;\n  $scope.grades = hCodeValues.rankNames;\n  $scope.stat = {id:-1, name:''};\n  $scope.stats = [$scope.stat];\n  \n  angular.forEach(hCodeValues.stats, function(stat, statId) {\n    if(stat.type) {\n      $scope.stats.push(stat);\n    }\n  });\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if(minLevel > 0 && minLevel < 100) {\n    $scope.minLevel = minLevel;\n  }\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if(maxLevel > 0 && maxLevel < 100) {\n    $scope.maxLevel = maxLevel;\n  }\n  \n  $scope.nameSearch = localStorage.getItem('nameSearch');\n  if($scope.nameSearch == null) {\n    $scope.nameSearch = '';\n  }\n  \n  var savedSearchStatId = localStorage.getItem('searchStat');\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n\n  $scope.save = function() {\n    if(!$scope.itemCategory.hideLevel) {\n      localStorage.setItem('minLevel', $scope.minLevel);\n      localStorage.setItem('maxLevel', $scope.maxLevel);\n    }\n    \n    if(!$scope.itemCategory.hideJob) {\n      if($scope.job != null) {\n        localStorage.setItem('jobNumber', $scope.job.id);\n      }\n    }\n  \n    if($scope.stat != null) {\n      localStorage.setItem('searchStat', $scope.stat.id);\n    }\n\n    localStorage.setItem('nameSearch', $scope.nameSearch);\n  };\n  \n  function init() {\n    // console.log('translations loaded');\n    if(jobs.isLoaded()) {\n      jobInit();\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n\n    itemCategory.init($scope.itemCategory.name, $timeout);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    // console.log('called the job init func');\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      // console.log('trying to init jobs');\n      // console.log('job dropdown should be set');\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, $scope.jobs[0]);\n      $scope.jobs = newJobs;\n      $scope.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            $scope.job = value;\n            return;\n          }\n        });\n      }\n    }\n  }\n  \n  $scope.rankChecked = hCodeValues.checkedRank;\n  \n  $scope.getResults = function() {\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\n    if(allItems == null) {\n      return null;\n    }\n    \n    allItems = allItems.sort(function(item1, item2) {\n        return (item2.levelLimit - item1.levelLimit);\n      });\n    \n    $scope.save();\n    \n    var start = new Date().getTime();\n          \n    var pcStatId = -1;\n    if('pc' in $scope.stat) {\n      pcStatId = $scope.stat.pc;\n    }\n  \n    var statVals = [];\n    var newResults = [];\n    var numEquip = allItems.length;\n    var curDisplay = 0;\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\n      var e = allItems[i];\n      if(e != null) {\n        \n        if(!$scope.itemCategory.hideLevel) {\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\n            continue;\n          }\n        }\n          \n        if(!$scope.itemCategory.hideRank) {\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\n            continue;\n          }\n        }\n          \n        if(!$scope.itemCategory.hideJob) {\n          if($scope.job != null && $scope.job.id > 0) {\n            if(!$scope.job.isClassJob(e.needJobClass)) {\n              continue;\n            }\n          }\n        }\n        \n        itemFactory.initItem(e);\n        if(e.typeName != $scope.itemCategory.name) {\n          continue;\n        }\n        \n        if($scope.nameSearch != '') {\n          var nameSearches = $scope.nameSearch.split(' ');\n          if(nameSearches.length == 0) {\n            nameSearches = [$scope.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        if($scope.stat.id >= 0) {\n          var statFound = false;\n          \n          var statVal = {};\n          for(var s=0;s<e.stats.length;++s) {\n            var stat = e.stats[s]\n            if(stat.id == $scope.stat.id) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n              break;\n            }\n            else if(stat.id == pcStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n          }\n          \n          if(!statFound) {\n            continue;\n          }\n          else {\n            statVals.push(statVal);\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n    }\n    \n    if($scope.stat.id >= 0) {\n      \n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\n      \n      statVals = statVals.sort(function(value1, value2) {\n        return value2.s - value1.s;\n      });\n      \n      var statResults = [];\n      for(var i=0;i<currentResults;++i) {\n        statResults.push(newResults[statVals[i].i]);\n      }\n      newResults = statResults;\n    }\n    \n    $scope.totalNumResults = newResults.length;\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    \n    return newResults;\n  };\n  \n  $scope.showMoreResults = function(extra) {\n    $scope.maxDisplay = $scope.totalNumResults + extra;\n    $scope.totalNumResults = 0;\n  }\n  \n}]);\n","angular.module('dnsim').controller('SkillSearchCtrl',\n\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues',\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues) {\n  'use strict';\n  \n  $window.document.title = 'DN Gear Sim | SKILLS';\n  \n  var vm = this;\n  document.body.className = 'search-back';\n  \n  this.job = {id: -1, d:{}, name: ''};\n  this.jobs = [this.job];\n  this.allJobs = [];\n  this.maxDisplay = 60;\n  this.currentResults = 0;\n  this.dntName = '';\n  this.skills = [];\n  this.loadedJobId = -1;\n\n  this.nameSearch = localStorage.getItem('nameSearch');\n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n\n  var classFactories = [];\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n  \n  this.isLoading = function() {\n    if(!jobs.isLoaded()) {\n      // console.log('jobs not loaded');\n      if(!jobs.hasStartedLoading()) {\n        init();\n      }\n      return true;      \n    }\n    \n    if(!translations.isLoaded()) {\n      // console.log('transations not loaded');\n      if(!translations.startedLoading) {\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\n      }\n\n      return true;\n    }\n    \n    var baseName = jobs.getBaseJobName(vm.job);\n    var dntName = getDntName(baseName);\n    if(dntName != null) {\n      if(!dntData.isLoaded(dntName)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  \n  function getDntName(baseClassName) {\n    // console.log('got base class :' + baseClassName);\n    if(baseClassName != null) {\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n    }\n    else {\n      return null;\n    }\n  }\n\n  function getSkills() {\n    // console.log('getting skills for ' + vm.job.name);\n    if(vm.loadedJobId == vm.job.id) {\n      return vm.skills;\n    }\n    else {\n      \n      var baseJobNames = [];\n      if(vm.job.id >= 0) {\n        var baseName = jobs.getBaseJobName(vm.job);\n        baseJobNames.push(baseName);\n      }\n\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n        if(dntName) {\n          if(!dntData.isLoaded(dntName)) {\n            // console.log('loading skills for ' + baseName);\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\n          }\n          else {\n            setupSkills(baseJobNames, vm.job);\n          }\n        }\n      });\n    }\n  }\n  \n  function setupSkills(baseJobNames, job) {\n    \n    vm.skills = [];\n    var allReady = true;\n    angular.forEach(baseJobNames, function(baseName, index) {\n      var dntName = getDntName(baseName);\n      if(!dntData.isLoaded(dntName)) {\n        allReady = false;\n        return;\n      }\n    });\n    \n    if(allReady) {\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n      \n        var skills = dntData.getData(dntName);\n        var numSkills = skills.length;\n        for(var s=0;s<numSkills;++s) {\n          if(skills[s].NameID == 0) {\n            continue;\n          }\n          \n          if(skills[s].EffectClass1 > 0 || \n             skills[s].EffectClass2 > 0 || \n             skills[s].EffectClass3 > 0 || \n             skills[s].EffectClass4 > 0 ||\n             skills[s].EffectClass5 > 0 ||  \n             skills[s].EffectClass6 > 0) {\n               \n            var newItem = {d: skills[s]};\n            \n            newItem.id = skills[s].id;\n            newItem.typeName = 'skills';\n            newItem.itemSource = 'skills';\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n            newItem.needJobClass = skills[s].NeedJob;\n            newItem.rank = hCodeValues.rankNames[0];\n            newItem.baseJobName = baseName.toLowerCase();\n            newItem.icon = skills[s].IconImageIndex;\n            \n            vm.skills.push(newItem);\n          }\n        }\n      });\n  \n      vm.loadedJobId = job.id;\n    }\n  }\n  \n  this.itemLinkClosed = function() {\n    saveHelper.saveCustomItems(vm.customItems);\n    vm.customItems = saveHelper.getCustomItems();\n  }\n  \n  this.getResults = function() {\n    \n    var skills = getSkills();\n    if(skills == null) {\n      return [];\n    }\n    \n    \n    if(vm.job != null) {\n      localStorage.setItem('jobNumber', vm.job.id);\n    }\n    localStorage.setItem('nameSearch', vm.nameSearch);\n\n    var newResults = [];\n    var numSkills = skills.length;\n    var curDisplay = 0;\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\n      var e = skills[i];\n      \n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(nameSearches.length == 0) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n        continue;\n      }\n      \n      newResults.push(e);\n      curDisplay++;\n    }\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\n    return newResults;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, vm.jobs[0]);\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            return;\n          }\n        });\n      }\n      \n      vm.getResults();\n    }\n  }\n  \n  function init() {\n    // console.log('skill init');\n    if(jobs.isLoaded()) {\n      $timeout(jobInit);\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n  }\n}]);","angular.module('dnsim')\n.controller('ItemsCtrl', \n  ['$window','$timeout','hCodeValues','region','translations','dntData',\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\n    \n    'use strict';\n    \n    var vm = this;\n    \n    this.boxes = null;\n    this.boxeContents = [];\n    this.maxDisplay = 10;\n    this.currentResults = 0;\n\n    this.nameSearch = localStorage.getItem('itemNameSearch');\n    if(this.nameSearch == null) {\n      this.nameSearch = '';\n    }\n    \n    document.body.className = 'default-back';\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\n    \n    var fileName = 'all-items.lzjson';\n    \n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxes();\n      });\n    });\n    \n    this.initBoxes = function() {\n      // console.log('init boxes');\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\n        vm.boxes = [];\n        \n        var datas = dntData.getData(fileName);\n        // console.log(datas.length + ' boxes');\n        for(var i=0;i<datas.length;++i) {\n          var data = datas[i];\n          if(data.NameID > 0) {\n            var box = {\n              id: data.id,\n              name: vm.translate(data.NameID, data.NameIDParam),\n              rank: hCodeValues.rankNames[data.Rank],\n              icon: data.IconImageIndex,\n              levelLimit: data.LevelLimit,\n              fileName: data.fileName,\n            }\n            vm.boxes.push(box);\n          }\n        }\n      }\n    }\n    \n    this.getResults = function() {\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\n      if(vm.boxes == null) {\n        vm.initBoxes();\n      }\n      \n      if(vm.boxes == null) {\n        return;\n      }\n  \n      var newResults = [];\n      var numBoxes = vm.boxes.length;\n      var curDisplay = 0;\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\n        var e = vm.boxes[i];\n\n        if(vm.nameSearch != '') {\n          var nameSearches = vm.nameSearch.split(' ');\n          if(nameSearches.length == 0) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n      \n      vm.totalNumResults = newResults.length;\n      return newResults;\n    }\n  \n    this.showMoreResults = function(extra) {\n      vm.maxDisplay = vm.totalNumResults + extra;\n      vm.totalNumResults = 0;\n    }\n    \n    this.translate = function(nameId, nameParam) {\n      return translations.translate(nameId, nameParam);\n    }\n  }]\n);\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\n\nfunction dnsimCategoryLinks(itemCategory,$location) {\n  return {\n    restrict: 'E',\n    scope: {\n    },\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.categories = itemCategory.categories;\n      \n      $scope.setCategory = function(action) {\n        localStorage.setItem('selectedItemCategory', action.name);\n        $location.path('/' + action.path);\n      }\n\n      angular.forEach($scope.categories, function(value, key) {\n        if($location.path() == '/' + value.path) {\n          value.extraCss = 'active';\n        }\n        else {\n          value.extraCss = 'search-default';\n        }\n      });\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\n\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.iconImage = $scope.getIcon();\n        }\n      });\n      \n      $scope.getIcon = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\n          \n          var prefix;\n          if($scope.item.typeName == 'skills') {\n            prefix = 'skillicon';\n          }\n          else {\n            prefix = 'itemicon';\n          }\n          \n          if(fileIndex > 9) {\n            return prefix + fileIndex + '.png';\n          }\n          else {\n            return prefix + '0' + fileIndex + '.png';\n          }\n        }\n        return null;\n      }\n      \n      $scope.iconImage = $scope.getIcon();\n      \n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (($scope.item.icon % 10) * 40) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\n\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n      noClick: '=noClick',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\n    link: function($scope, element, attrs) {\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\n        }\n      });\n      \n      $scope.openItem = function() {\n        if(!$scope.noClick) {\n          $location.path($scope.itemLink);\n        }\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\n\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\n    link: function($scope, element, attrs) {\n\n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\n\nfunction dnsimLoading(dntData, translations, $timeout) {\n  'use strict';\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n    },\n    templateUrl: 'ui/widgets/dnsim-loading.html',\n    link: function($scope, element, attrs) {\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n      \n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n\n      $scope.numLoading = 0;\n      $scope.setLoadCount = function() {\n        var n = dntData.anyLoading();\n        if(!translations.isLoaded())\n        {\n          n++;\n        }\n        \n        $timeout(function() {\n          if($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n        });\n      }\n      \n      $scope.setLoadCount();\n      $scope.loadError = false;\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\nfunction dnsimSelectAllOnClick() {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var hasSelectedAll = false;\n      element.on('click', function($event) {\n        if (!hasSelectedAll) {\n          try {\n            //IOs, Safari, thows exception on Chrome etc\n            this.selectionStart = 0;\n            this.selectionEnd = this.value.length + 1;\n            hasSelectedAll = true;\n          } catch (err) {\n            //Non IOs option if not supported, e.g. Chrome\n            this.select();\n            hasSelectedAll = true;\n          }\n        }\n      });\n      //On blur reset hasSelectedAll to allow full select\n      element.on('blur', function($event) {\n        hasSelectedAll = false;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\n\nfunction dnsimStats(hCodeValues) {\n  return {\n    restrict: 'A',\n    scope: {\n      stats: '=stats',\n      build: '=build',\n      altStats: '=altStats',\n      separator: '=separator',\n      filter: '=filter',\n    },\n    link: function($scope, element, attrs) {\n      \n      var sep;\n      if(!$scope.separator) {\n        sep = '';\n      }\n      else {\n        sep = '&nbsp;' + $scope.separator + ' ';\n      }\n      \n      var addedElements = [];\n      var originalDisplay = element.css('display');\n      \n      function showStats() {\n        element.css('display', 'none' );\n        var stats = $scope.stats;\n        if(!stats) {\n          stats = $scope.altStats;\n        }\n        \n        angular.forEach(addedElements, function(value, key) {\n          value.remove();\n        });\n        \n        var first = true;\n        var lastElement = element;\n        \n        function append(text) {\n          var newElement = element.clone();\n          newElement.css('display', originalDisplay);\n          newElement.html(text);\n          \n          lastElement.after(newElement);\n          lastElement = newElement;\n          addedElements.push(newElement);\n        }\n        \n        angular.forEach(stats, function(stat, key) {\n          var output = '';\n          \n          if(stat.id in hCodeValues.stats) {\n            \n            var def = hCodeValues.stats[stat.id];\n            if('hide' in def && def.hide) {\n              return;\n            }\n            \n            if($scope.filter && !def[$scope.filter]) {\n              return;\n            }\n            \n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '&nbsp;';\n            }\n            \n            if($scope.build) {\n              if(def.element == 'primary') {\n                var eleId = 0;\n                if($scope.build.element) {\n                  eleId = $scope.build.element.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n              else if(def.element == 'secondary') {\n                var eleId = 0;\n                if($scope.build.secondaryElement) {\n                  eleId = $scope.build.secondaryElement.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n            }\n            \n            output += def.name+':&nbsp;'+def.display(stat);\n            if(def.combineWith > 0) {\n              angular.forEach(stats, function(stat2, key2) {\n                if(stat2.id == def.combineWith) {\n                  if(stat2.max != stat.max) {\n                    output += '-' + def.display(stat2);\n                  }\n                  return;\n                }\n              });\n            }\n          }\n          else {\n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '-Increases&nbsp;';\n            }\n            \n            output += stat.id+':&nbsp;'+stat.max;\n          }\n          \n          append(output);\n        });\n      }\n        \n      $scope.$watch('stats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('altStats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + value;\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10);\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\n\n  var jobConversions = 'rebootplayerweighttable.lzjson';\n  var statCaps = 'playercommonleveltable.lzjson';\n  var jobBaseStats = 'playerleveltable.lzjson';\n\n  var heroLevels = 'heroleveltable.lzjson';\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  return {\n    init: function(complete) {\n      jobs.init(reportProgress, complete);\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\n      dntData.init(heroLevels, null, reportProgress, complete);\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\n    },\n    \n    getHeroStats: function(heroLevel) {\n      var heroStats = [];\n      if(heroLevel > 0) {\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\n        if(index.length == 1) {\n          var h = dntData.getRow(heroLevels, index[0]);\n          if(h != null) {\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n            if(pIndex.length == 1) {\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n              if(p != null) {\n                heroStats = hCodeValues.getStats(p);\n              }\n            }\n          }\n        }\n      }\n      return heroStats;\n    },\n    \n    getStatCaps: function(level) {\n      if(level > 0) {\n        var index = dntData.findFast(statCaps, 'id', level);\n        if(index.length == 1) {\n          return dntData.getRow(statCaps, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getConversions: function(jobId) {\n      if(jobId > 0) {\n        var index = dntData.findFast(jobConversions, 'id', jobId);\n        if(index.length == 1) {\n          return dntData.getRow(jobConversions, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getBaseStats: function(level, jobId) {\n      if(level > 0 && jobId > 0) {\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\n        if(index.length == 1) {\n          return dntData.getRow(jobBaseStats, index[0]);\n        }\n      }\n      \n      return {};\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\nfunction itemColumnsToLoad() {\n  return {\n    mainDnt: {\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\n      State2: true, StateValue2: true, State2_Max: true,\n      State3: true, StateValue3: true, State3_Max: true,\n      State4: true, StateValue4: true, State4_Max: true,\n      State5: true, StateValue5: true, State5_Max: true,\n      State6: true, StateValue6: true, State6_Max: true,\n      State7: true, StateValue7: true, State7_Max: true,\n      State8: true, StateValue8: true, State8_Max: true,\n      State9: true, StateValue9: true, State9_Max: true,\n      State10: true,StateValue10: true,State10_Max: true,\n      EnchantID: true,\n      SkillID: true,\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\n    },\n    partsDnt: {\n      SetItemID: true\n    },\n    enchantDnt: {\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\n      DisjointDrop: true,\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\n    },\n    potentialDnt : {\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\n      State1: true,State1Value: true,\n      State2: true,State2Value: true,\n      State3: true,State3Value: true,\n      State4: true,State4Value: true,\n      State5: true,State5Value: true,\n      State6: true,State6Value: true,\n      State7: true,State7Value: true,\n      State8: true,State8Value: true,\n      State9: true,State9Value: true,\n      State10: true,State10Value: true,\n      State11: true,State11Value: true,\n      State12: true,State12Value: true,\n      State13: true,State13Value: true,\n      State14: true,State14Value: true,\n      State15: true,State15Value: true,\n      State16: true,State16Value: true\n    },\n    gemDnt: {\n      Type: true\n    },\n    setDnt : null,\n    sparkDnt: null,\n    jobsDnt: {\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\n    },\n    jobBaseStatColsToLoad: {\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\n    },\n    statCapColsToLoad: {\n      Cbase: true,\n      Cdefense: true,\n      Ccritical: true,\n      Cfinaldamage: true,\n      CcriticalDamage: true,\n    },\n    jobConversionColsToLoad: {\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\n\nfunction dntData($rootScope,$timeout) {\n  \n  function createLoader(dntLocation, file, colsToLoad) {\n\n    var loader = {\n      reader: new DntReader(),\n      \n      loaded: false,\n      startedLoading: false,\n      \n      file: file,\n      \n      dntLocation: dntLocation,\n      progressCallback: null,\n      completeCallbacks : [],\n      \n      init: function(progress, complete) {\n        \n        if(this.loaded) {\n          complete();\n        }\n        else {\n          this.progressCallback = progress;\n          this.completeCallbacks.push(complete);\n          \n          if(!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n            \n            this.reader.colsToLoad = colsToLoad;\n            \n            if(this.dntLocation != null && \n              this.dntLocation.url != null &&\n              this.dntLocation.url.length > 0) {\n\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n              $timeout(function() {\n                t.reader.loadDntFromServerFile(\n                  t.dntLocation.url + '/' + file,\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \n                  function(result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n                    \n                    angular.forEach(t.completeCallbacks, function(value, key) {\n                      value();\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  },\n                  function(msg) {\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    t.startedLoading = false;\n                    t.loaded = false;\n                  }  );\n              });\n            }\n            else {\n              // console.log(\"dnt location not set!\");\n            }\n          }\n        }\n      },\n      \n      reset: function() {\n        this.reader = new DntReader();\n        this.loaded = false;\n        this.startedLoading = false;\n      }\n    }\n  \n    return loader;\n  };\n  \n  return {\n    loaders : {},\n    findIndexes : {},\n    dntLocation : null,\n    \n    setLocation: function(location) {\n      this.dntLocation = location;\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        if(value.dntLocation != location) {\n          value.dntLocation = location;\n          t.reset(key);\n        }\n      });\n    },\n    \n    init : function (fileName, colsToLoad, progress, complete) {\n      if(!(fileName in this.loaders)) {\n        if(fileName.length > 0) {\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n        }\n      }\n      this.loaders[fileName].init(progress, complete);\n    },\n    getData : function (fileName) {\n      if(this.isLoaded(fileName)) {\n        var reader = this.loaders[fileName].reader;\n        var retVal = new Array(reader.numRows);\n        for(var i=0;i<reader.numRows;++i) {\n          retVal[i] = reader.getRow(i);\n        }\n        \n        return retVal;\n      }\n      else {\n        return [];\n      }\n    },\n    find : function(fileName, column, value) {\n      var results = this.findFast(fileName, column, value);\n      var retVal = [];\n      var numResults = results.length;\n      for(var i=0;i<numResults;++i) {\n        retVal.push(this.getRow(fileName, results[i]));\n      }\n      \n      return retVal;\n    },\n    findFast : function(fileName, column, value) {\n      \n      if(this.isLoaded(fileName)) {\n        if(!(fileName in this.findIndexes)){\n          this.findIndexes[fileName] = {};\n        }\n        \n        var reader = this.loaders[fileName].reader;\n        var colIndex = reader.columnIndexes[column];\n        \n        var findIndex = this.findIndexes[fileName];\n        \n        if(!(column in findIndex)) {\n          var index = {}\n          findIndex[column] = index;\n          \n          var results = [];\n          \n          var data = reader.data;\n          var len = data.length;\n          for(var r=0;r<len;++r) {\n            var d = data[r];\n            var val = d[colIndex];\n\n            if(!(val in index)) {\n              index[val] = [r];\n            }\n            else {\n              index[val].push(r);\n            }\n          }\n        }\n        \n        if(value in findIndex[column]) {\n          return findIndex[column][value];\n        }\n        else {\n          return [];\n        }\n      }\n      \n      return [];\n    },\n    isLoaded : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].loaded;\n    },\n    hasStartedLoading : function(fileName) {\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\n    },\n    reset : function(fileName) {\n      if(fileName in this.loaders) {\n        this.loaders[fileName].reset();\n        delete this.loaders[fileName];\n        delete this.findIndexes[fileName];\n      }\n    },\n    resetAll : function() {\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        t.reset(key);\n      });\n    },\n    anyLoading : function() {\n      var t = this;\n      var found = 0;\n      angular.forEach(this.loaders, function(value, key) {\n        if(!value.loaded && value.startedLoading) {\n          found++;\n        }\n      });\n      \n      return found;\n    },\n    getNumRows : function(fileName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.numRows;\n      }\n      else {\n        return 0;\n      }\n    },\n    getRow : function(fileName, index) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getRow(index);\n      }\n      else {\n        return {};\n      }\n    },\n    lookupValue: function(fileName, data, columnName) {\n      if(this.isLoaded(fileName)) {\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\n      }\n      else {\n        return null;\n      }\n    },\n    convertData: function(fileName, data) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.convertData(data);\n      }\n      else {\n        return null;\n      }\n    },\n    getValue : function(fileName, index, columnName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getValue(index, columnName);\n      }\n      else {\n        return null;\n      }\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\nfunction dntInit(items,jobs,dntData,itemFactory) {\n  return function(progress) {\n    \n    progress('starting init');\n    \n    var allFactories = [jobs];\n    \n    var dntFiles = {};\n    angular.forEach(items, function(item, key) {\n      if(key != 'all') {\n        angular.forEach(item, function(value, prop) {\n          if(prop.indexOf('Dnt') == prop.length-3) {\n            var newFactory = { \n              init: function(progress, complete) {\n                dntData.init(value, null, progress, complete);\n              },\n              isLoaded: function() {\n                return dntData.isLoaded(value);\n              },\n              fileName: value,\n            };\n            \n            allFactories.push(newFactory);\n          }\n        });\n      }\n    });\n    \n    function initFactory(index) {\n    \n      if(index < allFactories.length) {\n        allFactories[index].init(progress, function() { \n          if(allFactories[index].isLoaded()) {\n            if('fileName' in allFactories[index]) {\n              progress('dnt loaded: ' + allFactories[index].fileName);\n            }\n            initFactory(index+1);\n          }\n        });\n      }\n      else {\n        progress('Full initialise complete');\n      }\n    }\n    \n    initFactory(0);\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\nfunction dntReset(items, jobs, dntData) {\n  return function() {\n    \n    angular.forEach(items, function(source, name) {\n      source.reset();\n    });\n    \n    jobs.reset();\n    dntData.resetAll();\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('exportLinkHelper', \n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\n  'use strict';\n  \n  return {\n    \n    encodeItem: function(item, small) {\n      if(item != null) {\n        var itemString;\n\n        if(item.typeName == 'custom')  {\n          itemString = '_custom';\n          angular.forEach(item.stats, function(stat, index) {\n            if(index > 0) {\n              itemString += '|';\n            }\n            else {\n              itemString += ':C'\n            }\n            itemString += stat.id.toString(36) + '=' + stat.max;\n          });\n        }\n        else if(item.id) {\n          itemString = 'I' + item.id.toString(36) + ':_';\n          if('itemSource' in item) {\n            itemString += item.itemSource;\n          }\n          else if('itemTypeName' in item) {\n            // this is to support groups saved with the old property name\n            itemString += item.itemTypeName;\n          }\n        \n          if(item.enchantmentNum || item.enchantmentNum == 0) {\n            itemString += ':E' + item.enchantmentNum.toString(36);\n          }\n          if(item.pid > 0) {\n            itemString += ':P' + item.pid.toString(36);\n          }\n          // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n          // }\n          if(item.sparkId > 0) {\n            itemString += ':H' + item.sparkId.toString(36);\n          }\n          if(item.typeName == 'skills') {\n            itemString += ':J' + item.baseJobName;\n          }\n          if(item.pve) {\n            itemString += ':V' + item.pve;\n          }\n          if(item.fileName) {\n            itemString += ':F' + item.fileName;\n          }\n        }\n        \n        if(item.name && !small) {\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n        }\n\n        return itemString;\n      }\n      \n      return '';\n    },\n    \n    decodeItem: function(itemStr) {\n      var item = {};\n      \n      if(itemStr != null) {\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\n          if(itemBit.charAt(0) == 'I') {\n            item.id = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'E') {\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'P') {\n            item.pid = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'S') {\n            item.setId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'H') {\n            item.sparkId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'J') {\n            item.baseJobName = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == 'V') {\n            item.pve = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '_') {\n            item.itemSource = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '.') {\n            item.name = itemBit.substr(1).replace('-', ' ');\n          }\n          else if(itemBit.charAt(0) == 'C') {\n            item.stats = [];\n            var statString = itemBit.substr(1);\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\n              var splitStat = statBit.split('=');\n              item.stats.push({\n                id: parseInt(splitStat[0], 36),\n                max: Number(splitStat[1])\n              });\n            });\n          }\n          else if(itemBit.charAt(0) == 'F') {\n            \n            item.fileName = itemBit.substr(1);\n            angular.forEach(items, function(itemSource, key) {\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                item.itemSource = key;\n              }\n            });\n          }\n        });\n      }\n      \n      return item;\n    },\n    \n    createGroupLink: function(groupName, group) {\n      var itemStrings = [];\n      var self = this;\n      \n      if(group == null) {\n        return '';\n      }\n      \n      angular.forEach(group.items, function(item, key) {\n        var itemString = self.encodeItem(item, true);  \n        if(itemString != null && itemString.length > 0) {\n          itemStrings.push(itemString);\n        }\n      });\n  \n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\n      \n      \n      if(group.enemyLevel) {\n        retVal += '&e=' + group.enemyLevel;\n      }\n      if(group.playerLevel) {\n        retVal += '&p=' + group.playerLevel;\n      }\n      if(group.heroLevel) {\n        retVal += '&h=' + group.heroLevel;\n      }\n      if(group.job && group.job.id) {\n        retVal += '&j=' + group.job.id;\n      }\n      if(group.damageType && group.damageType.id) {\n        retVal += '&d=' + group.damageType.id;\n      }\n      if(group.element && group.element.id) {\n        retVal += '&t=' + group.element.id;\n      }\n      if(group.secondaryElement && group.secondaryElement.id) {\n        retVal += '&s=' + group.secondaryElement.id;\n      }\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n      return retVal\n    },\n\n    createShortUrl: function(groupName, group) {\n      \n      var path = this.createGroupLink(groupName, group);\n      var longUrl = window.location.href.split(\"#\")[0] + path;\n      var data = { longUrl: longUrl };\n      \n    \t$http.post(\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\n    \t    function(data,status,headers,config){\n        \t\tgroup.shortUrl = data.id;\n    \t      sessionStorage.setItem(path, data.id);\n        \t}).\n        \terror(function(data,status,headers,config){\n        \t\t// console.log(data);\n        \t\t// console.log(status);\n        \t\t// console.log(headers);\n        \t\t// console.log(config);\n        \t});\n    },\n    \n    reloadItem: function(item) {\n\n      if(item == null) {\n        // console.log('cannot reload null item');\n        return;\n      }\n      \n      // support for old property name\n      if('itemTypeName' in item && !item.itemSource) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      // console.log('checking ' + item.itemSource)\n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n        console.log('changed to ' + item.itemSource)\n      }\n      \n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\n        item.typeName = 'custom';\n        return item;\n      }\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n        \n        if(!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n        \n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if(item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n        \n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n            return;\n          }\n        });\n        \n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve,\n        };\n        \n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n      }\n      else if(item.itemSource in items) {\n        \n        var itemType = items[item.itemSource];\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\n        if(ds.length == 0) {\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n        }\n        else {\n          var d = ds[0];\n        \n          var totalRatio = 0;\n          var p = null;\n          \n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n          if(ps.length == 0) {\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\n          }\n          \n          if(ps.length == 0) {\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n            if(ps.length == 0) {\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\n            }\n          }\n          \n          if(ps.length > 0) {\n            p = ps[0];\n            \n            if(p.PotentialID != d.TypeParam1) {\n              // this happened one time\n              // not sure how but it corrupted the stats\n              p = null;\n            console.log('bad potential');\n            }\n            else {\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\n              angular.forEach(potentials, function(value, key) {\n                totalRatio += value.PotentialRatio;\n              });\n            }\n          }\n          \n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\n          itemFactory.initItem(newItem);\n          itemCategory.setItemCategory(newItem, d);\n\n          var usePartDnt = null;\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\n            usePartDnt = 'partsDnt';\n          }\n          else {\n            usePartDnt = 'weaponDnt';\n          }\n      \n          if(usePartDnt) {\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n              newItem.setStats = [];\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n              if(parts.length > 0) {\n                newItem.setId = parts[0].SetItemID;\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n                if(sets.length > 0) {\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\n                }\n              }\n            }\n          }\n\n          newItem.fullStats = newItem.stats;\n          if(item.enchantmentNum >= 0) {\n            newItem.enchantmentNum = item.enchantmentNum;\n            \n            if(newItem.typeName == 'skills') {\n              \n            }\n            else if(newItem.typeName == 'talisman') {\n              var extraStats = [];\n              angular.forEach(newItem.stats, function(stat, index) {\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\n              });\n              \n              newItem.enchantmentStats = extraStats;\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n            }\n            else {\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n              angular.forEach(enchantments, function(enchantment, index) {\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n                  return;\n                }\n              });\n            }\n          }\n          \n          if(item.sparkId > 0) {\n            newItem.sparkId = item.sparkId;\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n            if(sparks.length > 0) {\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n            }\n          }\n          else if(d.dragonjeweltype) {\n            newItem.offensiveGemSlots = 0;\n            newItem.increasingGemSlots = 0;\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\n            if(itemData && itemData.length > 0) {\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n              \n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n            }\n          }\n          \n          return newItem;\n        }\n      }\n      \n      if(item.fileName) {\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\n        if(datas.length > 0) {\n          var d = datas[0];\n          var newItem = {\n            id: item.id,\n            data: d,\n            levelLimit : d.LevelLimit,\n            needJobClass : d.NeedJobClass,\n            typeId : d.Type,\n            exchangeType: d.ExchangeType,\n            rank : hCodeValues.rankNames[d.Rank],\n            fileName: item.fileName,\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\n          };\n          \n          itemFactory.initItem(newItem);\n          return newItem;\n        }\n        else {\n          return {name: 'unknown item'};\n        }\n      }\n      else {\n        return {name: 'unknown item source: ' + item.itemSource};\n      }\n    },\n    \n    getDntFiles: function(item) {\n\n      var dntFiles = {};\n\n      if(item == null) {\n      }\n      else {\n        if(!item.itemSource && item.itemTypeName in items) {\n          item.itemSource = item.itemTypeName;\n        }\n        \n        if(item.itemSource == 'rbTech') {\n          item.itemSource = 'tech';\n        }\n        \n        if(item.itemSource in items) {\n          var itemType = items[item.itemSource];\n          \n          dntFiles['exchange.lzjson'] = null;\n          dntFiles['dragonjewelslottable.lzjson'] = null;\n  \n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n          if('potentialDnt' in itemType) {\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\n          }\n          if('potentialDntEx' in itemType) {\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\n          }\n          \n          if('enchantDnt' in itemType) {\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\n          }\n          \n          if('weaponDnt' in itemType) {\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\n          }\n          \n          if('partsDnt' in itemType) {\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\n          }\n          \n          if('setDnt' in itemType) {\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\n          }\n          \n          if('gemDnt' in itemType) {\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\n          }\n          \n          if('sparkDnt' in itemType) {\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\n          }\n        }\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n            dntFiles[skillDnt] = null;\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n        }\n        else if(item.typeName == 'custom') {\n        }\n        \n        if(item.fileName) {\n          dntFiles[item.fileName + '.lzjson'] = null;\n        }\n      }\n      \n      return dntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\nfunction groupHelper(exportLinkHelper) {\n  'use strict';\n  \n  return {\n    reloadGroup: function(groupName, group) {\n      var newItems = [];\n      angular.forEach(group.items, function(item, key) {\n        var newItem = exportLinkHelper.reloadItem(item);\n        if(newItem != null) {\n          newItems.push(newItem);\n        }\n      });\n      \n      return newItems;\n    },\n    \n    getDntFiles: function(group) {\n\n      var allDntFiles = {};\n      angular.forEach(group.items, function(item, key1) {\n        \n        var dntFiles = exportLinkHelper.getDntFiles(item);\n\n        angular.forEach(dntFiles, function(value, key) {\n          allDntFiles[key] = value;\n        });\n      });\n      \n      return allDntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemCategory',\n['itemFactory','items','dntData',itemCategory]);\nfunction itemCategory(itemFactory,items,dntData) {\n\n  return {\n    categories: [\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\n      {path: 'search/skills', name:'skills'},\n      {path: 'search/custom', name:'custom'},\n      ],\n      \n    byName: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.name == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n      \n    byPath: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.path == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n    \n    getItems: function(name) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var retVal = [];\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType && retVal != null) {\n            if(source.items == null && !source.loading) {\n              itemFactory.loadItems(source);\n            }\n            \n            if(source.items != null) {\n              retVal = retVal.concat(source.items);\n            }\n            else {\n              retVal = null; // if any are null just return null\n            }\n          }\n        });\n        \n        var catItems = [];\n        if(retVal) {\n          var vm = this;\n          angular.forEach(retVal, function(item, index) {\n            if(item.typeName == cat.name ||\n              vm.isItemForCat(cat, item, item.data)) {\n\n              item.typeName = name;\n              catItems.push(item);\n            }\n          });\n        }\n        \n        return catItems;\n      }\n      else {\n        return null;\n      }\n    },\n    \n    isItemForCat: function(cat, item, rawData) {\n      \n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\n        return false;\n      }\n      else if(item.itemType == cat.name) {\n        return true;\n      }\n      else if(cat.limitExchange) {\n        \n        for(var i=0;i<cat.limitExchange.length;++i) {\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\n            \n            if(item.itemSource == 'plate') {\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\n                return cat.name == 'expedition plates';\n              }\n              else {\n                return cat.name == 'enhancement plates';\n              }\n            }\n            else if(item.itemSource == 'gem') {\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n              if(gemTypes.length > 0) {\n                \n                if(gemTypes[0].Type == 1) {\n                  return cat.name == 'offensive gems';\n                }\n                else if(gemTypes[0].Type == 2) {\n                  return cat.name == 'increasing gems';\n                }\n                else {\n                  return false;\n                }\n              }\n            }\n            \n            return true;\n          }\n        }\n        \n        return false;\n      }\n      else if(item.itemSource in items) {\n        return items[item.itemSource].type == cat.sourceType;\n      }\n      else {\n        return false;\n      }\n    },\n    \n    init: function(name, complete) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType) {\n            source.init(function() {}, complete);\n          }\n        });\n      }\n    },\n    \n    setItemCategory: function (item, rawData) {\n      var vm = this;\n      \n      angular.forEach(this.categories, function(cat, index) {\n        if(vm.isItemForCat(cat, item, rawData)) {\n          item.typeName = cat.name;\n        }\n      });\n    },\n    \n    getItemsByCategory: function(items) {\n      var itemMap = {};\n      if(items != null) {\n        var types = {};\n        angular.forEach(items, function(item, index) {\n          if(item != null) {\n            if(!(item.typeName in types)) {\n              types[item.typeName] = [];\n            }\n            types[item.typeName].push(item);\n          }\n        });\n        \n        angular.forEach(this.categories, function(category, index) {\n\n          if(category.name in types) {\n            \n            var sorted = types[category.name].sort(function(item1, item2) {\n              if(category.name == 'talisman') {\n                \n                var enh1 = item1.enchantmentNum;\n                if(!enh1) enh1 = 0;\n                var enh2 = item2.enchantmentNum;\n                if(!enh2) enh1 = 0;\n                \n                if(enh1 != enh2) {\n                  return enh2 - enh1;\n                }\n              }\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                return item2.levelLimit - item1.levelLimit;\n              }\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\n                return item1.exchangeType - item2.exchangeType;\n              }\n              \n              return item1.name.localeCompare(item2.name);\n            });\n            itemMap[category.name] = sorted;\n          }\n          else {\n            itemMap[category.name] = [];\n          }\n        });\n        \n        angular.forEach(items, function(item, index) {\n          if(item != null && !(item.typeName in itemMap)) {\n            console.log('we dont know ' + item.typeName + ' anymore')\n            itemMap.typeError = true;\n          }\n        });\n      }\n      return itemMap;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemFactory',\n['translations','dntData','hCodeValues','items',itemFactory]);\n\nfunction itemFactory(translations,dntData,hCodeValues,items) {\n  \n  return {\n    loadItems: loadItems,\n    initItem: initItem,\n    createItem: createItem,\n    getItemData: getItemData,\n    createBasicItem: createBasicItem,\n  };\n  \n  function createItem(itemSourceName, d, p, totalRatio) {\n    \n    // data and potential are used to initialise name and stats\n    // this is only done when needed\n    // they are then removed from the object\n    return {\n      data : d,\n      potential : p,\n      id: d.id,\n      totalRatio: totalRatio,\n      itemSource : itemSourceName,\n      levelLimit : d.LevelLimit,\n      needJobClass : d.NeedJobClass,\n      typeId : d.Type,\n      exchangeType: d.ExchangeType,\n      rank : hCodeValues.rankNames[d.Rank],\n      pid: null,\n      name : null,\n      stats : null,\n      potentialRatio : null,\n      typeName : null,\n      sparkId: null,\n    };\n  };\n  \n  function loadItems(itemType) {\n    \n    if(!dntData.isLoaded(itemType.mainDnt)) {\n      return null;\n    }\n    \n    if(!translations.isLoaded()) {\n      return null;\n    }\n    \n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n      return null;\n    }\n    \n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n      return null;\n    }\n    \n    var start = new Date().getTime();\n    \n    itemType.items = [];\n    var numRows = dntData.getNumRows(itemType.mainDnt);\n    for(var r=0;r<numRows;++r) {\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\n      \n      // skip certain types like pouches, res scrolls, etc\n      if(dType != 8 &&\n        dType != 29 &&\n        dType != 114 &&\n        dType != 79 &&\n        dType != 174 &&\n        dType != 130 &&\n        dType != 24 &&\n        dType != 182 &&\n        dType != 78 &&\n        dType != 20 &&\n        dType != 46 &&\n        dType != 9 &&\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\n        (!itemType.minRank || dRank >= itemType.minRank)) {\n\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n          \n        // skip items with no data\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\n          var d = dntData.getRow(itemType.mainDnt, r);\n          \n          if(itemType.type == 'techs') {\n            var exists = false;\n            for(var i=0;i<itemType.items.length;++i) {\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\n                itemType.items[i].levelLimit == d.LevelLimit &&\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\n                  exists = true;\n                  break;\n                }\n            }\n            \n            if(exists) {\n              continue;\n            }\n          }\n          \n          var potentials = [];\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n            \n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n            }\n          }\n          \n          var totalRatio = 0;\n          angular.forEach(potentials, function(value, key) {\n            totalRatio += value.PotentialRatio;\n          });\n          \n          var numPotentials = potentials.length;\n          if(numPotentials == 0) {\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\n          }\n          else {\n            for(var p=0;p<numPotentials;++p) {\n              \n              var found = false;\n              for(var q=0;q<p;++q) {\n                if(potentialsMatch(potentials[p], potentials[q])) {\n                  found = true;\n                  break;\n                }\n              }\n              \n              if(!found) {\n                for(var q=p+1;q<numPotentials;++q) {\n                  if(potentialsMatch(potentials[p], potentials[q])) {\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\n                  }\n                }\n                \n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\n              }\n            }\n          }\n        }\n      }\n    }\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\n  }\n  \n  function potentialsMatch(p1, p2) {\n    \n    var i = 1;\n    var j = 1;\n    for(;;) {\n      var state1Col = 'State' + i;\n      var state2Col = 'State' + j;\n      \n      if(p1[state1Col] == 107) {\n        i++;\n        state1Col = 'State' + i;\n      }\n      if(p2[state2Col] == 107) {\n        j++;\n        state2Col = 'State' + j;\n      }\n      \n      if(!(state1Col in p1 || state2Col in p2)) {\n        return true;\n      }\n      \n      if(!(state1Col in p1)) {\n        return false;\n      }\n      if(!(state2Col in p2)) {\n        return false;\n      }\n      \n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\n        return true;\n      }\n      \n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\n        return true;\n      }\n      \n      if(p1[state1Col] != p2[state2Col]) {\n        return false;\n      }\n      \n      var val1Col = 'State' + i + 'Value';\n      var val2Col = 'State' + j + 'Value';\n      if(p1[val1Col] != p2[val2Col]) {\n        return false;\n      }\n      \n      ++i;\n    }\n  }\n  \n  function initItem(item) {\n    \n    if(item.data) {\n      var d = item.data;\n      var p = item.potential;\n  \n      if(item.name == null) {\n        item.name = translations.translate(d.NameID, d.NameIDParam);\n      }\n      \n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\n        item.sparkTypeId = d.TypeParam2;\n      }\n      \n      if(item.stats == null) {\n        var stats = hCodeValues.getStats(d);\n        if(p != null) {\n          var potentialStats = hCodeValues.getStats(p);\n          stats = hCodeValues.mergeStats(stats, potentialStats);\n        }\n        \n        item.stats = stats;\n      }\n      \n      if(d.SkillID && !item.skillId) {\n        item.skillId = d.SkillID;\n      }\n      \n      if(item.iconIndex == null) {\n        item.icon = d.IconImageIndex;\n        if(!item.icon && item.itemSource == 'title') {\n          item.icon = 12417;\n        }\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      \n      if(p != null) {\n        item.pid = p.id;\n      \n        if(item.potentialRatio == null) {\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\n        }\n      }\n      \n      delete item.data;\n      delete item.potential;\n    }\n  }\n  \n  function getPotentialRatio(p, totalRatio) {\n    \n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\n      if(ratio != 100) {\n        return ratio + '%';\n      }\n    }\n\n    return null;\n  }\n  \n  function getItemData(item) {\n    \n    var fileName = null;\n    var itemType = items[item.itemSource];\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\n      fileName = item.fileName + '.optimised.lzjson';\n    }\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n      fileName = item.fileName + '.lzjson';\n    }\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\n      fileName = itemType.mainDnt\n    }\n\n    if(fileName) {\n      var itemData = dntData.find(fileName, 'id', item.id);\n      if(itemData && itemData.length > 0) {\n        return itemData[0];\n      }\n    }\n    \n    return [];\n  }\n  \n  function createBasicItem(d) {\n    if(!d) {\n      return [];\n    }\n    return {\n      id: d.id,\n      name: translations.translate(d.NameID, d.NameIDParam),\n      rank: hCodeValues.rankNames[d.Rank],\n      icon: d.IconImageIndex,\n      levelLimit : d.LevelLimit,\n      fileName: d.fileName,\n    };\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('items',\n['translations','dntData','itemColumnsToLoad',items]);\nfunction items(translations,dntData,itemColumnsToLoad) {\n  \n  var itemSources = {\n    \n      title : {\n        mainDnt: 'appellationtable.optimised.lzjson', \n        type: 'titles', \n        minLevel: 0, \n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n      \n      tech: { \n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        type: 'techs', \n        minLevel: 24,\n        minRank: 0},\n      \n      tman: { \n        mainDnt: 'itemtable_talisman.optimised.lzjson', \n        type: 'talisman', \n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\n        minLevel: 24,\n        minRank: 0 },\n      \n      gem: { \n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \n        gemDnt: 'dragonjeweltable.optimised.lzjson',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3},\n      \n      plate: { \n        mainDnt : 'itemtable_glyph.optimised.lzjson', \n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n\n      items: {\n        mainDnt: 'itemtable.optimised.lzjson', \n        partsDnt: 'partstable.optimised.lzjson', \n        weaponDnt: 'weapontable.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \n        partsDnt: 'partstable_equipment.optimised.lzjson', \n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      rbeq: { \n        mainDnt: 'itemtable_reboot.optimised.lzjson', \n        partsDnt: 'partstable_reboot.optimised.lzjson', \n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: { \n        mainDnt: 'itemtable_pvp.optimised.lzjson',\n        partsDnt: 'partstable_pvp.optimised.lzjson', \n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n\n      c2016: { \n        mainDnt: 'itemtable_common2016.lzjson', \n        partsDnt: 'partstable_common2016.lzjson', \n        weaponDnt: 'weapontable_common2016.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2015: { \n        mainDnt: 'itemtable_common2015.optimised.lzjson', \n        partsDnt: 'partstable_common2015.optimised.lzjson', \n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: { \n        mainDnt: 'itemtable_common2014.optimised.lzjson', \n        partsDnt: 'partstable_common2014.optimised.lzjson', \n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: { \n        mainDnt: 'itemtable_cash.optimised.lzjson', \n        partsDnt: 'partstable_cash.optimised.lzjson', \n        weaponDnt: 'weapontable_cash.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.lzjson',\n        partsDnt: 'partstable_event.optimised.lzjson',\n        weaponDnt: 'weapontable_event.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n    };\n    \n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function(itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function() {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n  \n  \n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n  \n      if(itemSource.items != null) {\n        complete();\n      }\n      else {\n        \n        translations.init(progress, function() { doComplete(itemSource, complete) });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\n        if('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n  \n        doComplete(itemSource, complete);\n      }\n    }\n    \n    function doComplete(itemSource, complete) {\n      if(translations.isLoaded() && \n      dntData.isLoaded(itemSource.mainDnt) && \n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\n      ) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\nfunction jobs(dntData, translations, itemColumnsToLoad) {\n  \n  var fileName ='jobtable.lzjson';\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\n  \n  return {\n    fileName : fileName,\n    allJobs : null,\n    \n    isLoaded : function() {\n      return dntData.isLoaded(fileName);\n    },\n    \n    hasStartedLoading: function() {\n      return dntData.hasStartedLoading(fileName);\n    },\n    \n    init : function(progress, complete) {\n      dntData.init(fileName, colsToLoad, progress, function() {\n        complete();\n        });\n    },\n\n    reset : function() {\n      this.allJobs = null;\n      dntData.reset(fileName);\n    },\n    \n    getFinalJobs : function () {\n      var jobs = [];\n      var alljobs = this.getAllJobs();\n      if(alljobs != null) {\n        var numRows = alljobs.length;\n        for(var r=0;r<numRows;++r) {\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n            jobs.push(alljobs[r]);\n          }\n        }\n      }\n      \n      return jobs;\n    },\n    \n    getBaseJobs : function () {\n      var retVal=[];\n      var baseJobs = {};\n\n      var self = this;\n      angular.forEach(this.getFinalJobs(), function(job, key) {\n        baseJobs[self.getBaseJobName(job)] = job;\n      });\n\n      angular.forEach(baseJobs, function(job, jobName) {\n        retVal.push(jobName);\n      });\n\n      return retVal;\n    },\n    \n    getAllJobs : function () {\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n        var jobs = [];\n        var data = dntData.getData(fileName);\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          jobs[jobs.length] = this.createJob(data[r]);\n        }\n        \n        this.allJobs = jobs;\n      }\n      return this.allJobs;\n    },\n    \n    getById: function(id) {\n      var data = this.getAllJobs();\n      \n      var numRows = data.length;\n      for(var r=0;r<numRows;++r) {\n        if(data[r].id == id) {\n          return data[r];\n        }\n      }\n    },\n    \n    createJob : function(d) {\n      var t = this;\n      return {\n          d : d,\n          id : d.id,\n          name : translations.translate(d.JobName),\n          isClassJob : function(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n    },\n    \n    isClassJob : function (d, c) {\n      if(c == 0) return true;\n      if(d.id == c) {\n        return true;\n      }\n      \n      var parentJob = d.ParentJob;\n      \n      if(!parentJob) return false;\n      if(parentJob == c) return true;\n\n      var parentJobData = this.getById(parentJob);\n      if(parentJobData) {\n        return this.isClassJob(parentJobData.d, c);\n      }\n      \n      return false;\n    },\n    \n    getBaseJobName : function(job) {\n      if(this.isLoaded()) {\n        var alljobs = this.getAllJobs();\n        if(alljobs != null) {\n          var numRows = alljobs.length;\n          for(var r=0;r<numRows;++r) {\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\n              return alljobs[r].d.EnglishName;\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\n\n  return {\n    stepDefs: {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(numExchange >= category.maxExchange) {\n              continue;\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            var exName = '';\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({id: exId, name: exName.toLowerCase()});\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(exId == 10 || exId == 25) {\n              if(numExchange >= 2) {\n                continue;\n              }\n            }\n            else {\n              if(numExchange >= 1) {\n                continue;\n              }\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n              \n              exchanges.push({id: exId, name: exName.toLowerCase()});\n            }\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      sixtyLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      allLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          { id: 50, name: 'level 50' }, \n          { id: 40, name: 'level 40' }, \n          { id: 32, name: 'level 32' }, \n          { id: 24, name: 'level 24' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      cashRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      techRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 2, name: 'rare' },\n          { id: 999, name: 'quality high grade' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            // todo: change this to use the name id\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n              \n            if(id == 999) {\n              return index == 0;\n            }\n            else {\n              return item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 999, name: 'quality high grade epic' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = Math.max(\n              item.name.indexOf('Quality'),\n              item.name.indexOf('High Grade'));\n            if(id == 999) {\n              return item.rank.id == 3 && index == 0;\n            }\n            else {\n              return item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      otherRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      equipRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 100, name: '+100% slot' },\n          { id: 75, name: '+75% slot' },\n          { id: 25, name: '+25% slot' },\n          { id: 0, name: '+0% slot' },\n          ];\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          var allTitles = findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for(var i=0;i<allTitles.length;++i) {\n            switch(allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              // case 339: // Cow Wrangler\n              case 230: // Miraculous\n              case 279: // Provoking\n              // case 1280: // Dragon Tamer\n                usefulTitles.push(allTitles[i]);\n            }\n          }\n          \n          return usefulTitles;\n        },\n        hasOptions: function(category, build, datas) {\n          return true;\n        },\n        isItemStep: true,\n      },\n      enhanceStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ]\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return findData(category, build, datas);\n        },\n        isItemStep: true,\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas, 1);\n          \n          // eventually show all the skills\n          // but for now\n          if(items.length > 0) {\n            return [{id: items[0].skillId, name: items[0].skillId}];\n          }\n          else {\n            return [];\n          }\n        },\n        matchesItem: function(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          \n          for(var i=0;i<build.items.length;++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n          \n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var numStats = {};\n          \n          for(var i=0;i<items.length;++i) {\n            var len = 0;\n            for(var j=0;j<items[i].stats.length;++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if(stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n          \n          var retVal = [];\n          for(var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val,\n            });\n          }\n          \n          retVal = retVal.sort(function(a, b) {\n              return a.id - b.id;\n            });\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          var len = 0;\n          for(var j=0;j<item.stats.length;++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if(stat && !stat.hide) {\n              len++;\n            }\n          }\n            \n          return len == id;\n        },\n        isItemStep: true,\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true,\n      },\n    },\n    // end of step defs\n    \n    categorySteps: {\n      titles: ['titleStep'],\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\n      custom: ['customStep'],\n    },\n    getOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        return this.stepDefs[stepName].getOptions(category, build, datas);\n      }\n      else {\n        return [];\n      }\n    },\n    hasOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        if(this.stepDefs[stepName].hasOptions) {\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\n        }\n        else {\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\n        }\n      }\n      else {\n        return false;\n      }\n    },\n    isValidStepNumber: function(category, stepNumber) {\n      return this.categorySteps[category.name].length > stepNumber;\n    },\n    createData: function(value, category, stepNumber) {\n      var stepName = this.getStepName(category, stepNumber);\n      var def = this.stepDefs[stepName];\n      \n      return {\n        step: stepName,\n        value: value,\n        def: def,\n        matchesItem: function(item) {\n          return def.matchesItem(value.id, item);\n        }\n      };\n    },\n    getItem: getItem,\n    getStepName: function(category, stepNumber) {\n      return this.categorySteps[category.name][stepNumber];\n    }\n  }\n  \n  function getItem(datas) {\n    var item = null;\n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.isItemStep) {\n        item = datas[d].value;\n      }\n    }\n    \n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.alterItem) {\n        datas[d].def.alterItem(datas[d].value.id, item);\n      }\n    }\n    \n    return item;\n  }\n  \n  function findData(category, build, datas, maxItems) {\n    if(!maxItems) {\n      maxItems = 9999;\n    }\n    \n    var allItems = itemCategory.getItems(category.name);\n    var retVal = [];\n    // console.log('looking at ' + allItems.length + ' items');\n    var numItems = allItems.length;\n    \n    for(var i=0;i<numItems;++i) {\n      \n      var item = allItems[i];\n      \n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n        continue;\n      }\n      itemFactory.initItem(item);\n      \n      var addItem = true;\n      for(var d=0;d<datas.length;++d) {\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\n          addItem = false;\n          break;\n        }\n      }\n      \n      if(addItem) {\n        retVal.push(item);\n      }\n      \n      if(retVal.length >= maxItems) {\n        break;\n      }\n    }\n    \n    retVal = retVal.sort(function(item1, item2) {\n      return item1.name.localeCompare(item2.name);\n    });\n    \n    // console.log('found ' + retVal.length + ' items');\n    return retVal;\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\nfunction region(translations,dntReset,dntData,$route) {\n  \n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\n  var hostedFiles =[\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\n      // {region: 'ina', name: 'indonesian files from gemscool', url : 'https://dnina.firebaseapp.com'},\n    ];\n  \n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n  var dntLocation = hostedFiles[0];\n  if(dntLocationRegion != null) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region == dntLocationRegion) {\n        dntLocation = hostedFile;\n      }\n    });\n  }\n\n  var lastTFile = localStorage.getItem('UIStrings_file');\n  var tlocation = null;\n  if(lastTFile != null) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n        tlocation = hostedFile;\n        return;\n      }\n    });\n  }\n  \n  if(tlocation == null) {\n    tlocation = dntLocation;\n  }\n\n  return {\n    hostedFiles : hostedFiles,\n    alternativeFiles : alternativeFiles,\n    dntLocation : dntLocation,\n    tlocation : tlocation,\n    \n    setCustomUrl: function(url) {\n      // console.log('setting custom location');\n      this.alternativeFiles.url = url;\n\n      var newFiles = [];\n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region != alternativeFiles.region) {\n          newFiles.push(hostedFile);\n        }\n      });\n  \n      newFiles.push(alternativeFiles);\n      hostedFiles = newFiles;\n      this.hostedFiles = newFiles;\n    },\n    \n    setLocationByName: function(locationName) {\n      var newLocation = null;\n      \n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region == locationName) {\n          newLocation = hostedFile;\n        }\n      });\n        \n      this.setLocation(newLocation);\n    },\n    \n    setLocation: function(location) {\n      if(location && location != this.dntLocation) {\n        this.dntLocation = location;\n        dntReset();\n        localStorage.setItem('lastDNTRegion', location.region);\n        dntReset();\n        $route.reload();\n      }\n\n      if(this.tlocation == null) {\n        this.setTLocation(location);\n      }\n      \n      this.init();\n      \n      // $route.reload();\n    },\n    \n    setTLocation: function(location) {\n      \n      if(location != this.tlocation) {\n        \n        angular.forEach(this.translationResettingEvents, function(event, index) {\n          event();\n        });\n        \n        this.tlocation = location;\n        sessionStorage.removeItem('UIStrings');\n        localStorage.removeItem('UIStrings_file');\n        dntReset();\n        translations.reset();\n        translations.location = this.tlocation.url;\n        translations.init(function() {}, function() { $route.reload(); });\n        // $route.reload();\n      }\n    },\n    \n    init: function() {\n      if(this.tlocation != null) {\n        translations.location = this.tlocation.url;\n      }\n      dntData.setLocation(this.dntLocation);\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\nfunction saveHelper(itemCategory) {\n  return {\n    saveItem: function(groupName, item) {\n      var groups = this.getSavedItems();\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\n        \n        groups[groupName].items.push(item);\n        groups[groupName].lastUpdate = (new Date()).getTime();\n        this.updatedSavedItems(groupName, groups[groupName].items);\n      }\n      else {\n        this.updatedSavedItems(groupName, [item]);\n      }\n      \n      localStorage.setItem('lastSavedGroup', groupName);\n    },\n    \n    saveBuildSelection : function(buildName, builds) {\n      console.log('saving selection');\n      localStorage.setItem('currentGroup', buildName);\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n        console.log('also job');\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\n      }\n    },\n    \n    importGroup: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      groupName = this.getUniqueGroupName(groupName, items);\n      this.updatedSavedItems(groupName, updatedItems);\n      return groupName;\n    },\n    \n    getUniqueGroupName: function(groupName, existingGroups) {\n      var groupNameIndex = 0;\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\n        var startIndex = groupName.lastIndexOf('(');\n        if(startIndex > 0) {\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\n          if(foundIndex > 0) {\n            groupNameIndex = foundIndex + 1;\n            groupName = groupName.substr(0, startIndex - 1);\n          }\n        }\n      }\n      \n      var originalName = groupName;\n      for(;;) {\n        var groupName = originalName;\n        if(groupNameIndex > 0) {\n          groupName = originalName + ' (' + groupNameIndex + ')';\n        }\n        \n        if(groupName in existingGroups) {\n          groupNameIndex++;\n        }\n        else {\n          break;\n        }\n      }\n      \n      return groupName;\n    },\n    \n    updatedSavedItems: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      if(groupName in items) {\n        if(updatedItems.length == 0) {\n          delete items[groupName];\n          // console.log('no items to update');\n        }\n        else {\n          items[groupName].items = updatedItems;\n          items[groupName].lastUpdate = (new Date()).getTime();\n          localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('set group');\n        }\n      }\n      else {\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\n        localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('created group');\n      }\n      \n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    renameSavedGroup: function(\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n        \n      var savedItems = this.getSavedItems();\n      \n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\n        // console.log('not changing name');\n        newGroupName = oldGroupName;\n      }\n      else if(oldGroupName in savedItems) {\n        var group = savedItems[oldGroupName];\n        savedItems[newGroupName] = group;\n        delete savedItems[oldGroupName];\n      }\n      \n      savedItems[newGroupName].enemyLevel = enemyLevel;\n      savedItems[newGroupName].playerLevel = playerLevel;\n      savedItems[newGroupName].heroLevel = heroLevel;\n      savedItems[newGroupName].job = job;\n      savedItems[newGroupName].damageType = damageType;\n      savedItems[newGroupName].element = element;\n      savedItems[newGroupName].secondaryElement = secondaryElement;\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\n      savedItems[newGroupName].conversions = conversions;\n      savedItems[newGroupName].baseStats = baseStats;\n      savedItems[newGroupName].heroStats = heroStats;\n      \n      var stringifiedData = JSON.stringify(savedItems);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getSavedItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    getCustomItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return [];\n    },\n    \n    saveCustomItems: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getHiddenTypes: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    saveHiddenTypes: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\nfunction statHelper(hCodeValues) {\n\n  return {\n    \n    getSetStats: function(groupItems) {\n      var stats = [];\n      var sets = {};\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value != null && value.setStats != null) {\n          if(value.setId in sets) {\n            sets[value.setId].numItems++;\n          }\n          else {\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\n          }\n        }\n      });\n      \n      angular.forEach(sets, function(value, key) {\n        var setStats = [];\n        angular.forEach(value.stats, function(stat, index) {\n          if(stat.needSetNum <= value.numItems) {\n            stats.push(stat);\n          }\n        });\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCombinedStats: function(groupItems) {\n      var stats = [];\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value != null) {\n          \n          if(value.fullStats != null) {\n            stats = stats.concat(value.fullStats);\n          }\n          else {\n            stats = stats.concat(value.stats);\n          }\n        }\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCalculatedStats: function(group, combinedStats) {\n      \n      var retVal = [];\n      var statLookup = {};\n      if(!group.conversions || !group.enemyStatCaps) {\n        return [];\n      }\n      \n      angular.forEach(combinedStats, function(stat, index) {\n        statLookup[stat.id] = stat;\n      });\n      \n      function getPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.pc]) {\n          return Number(statLookup[statDef.pc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function getSkillPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.skPc]) {\n          return Number(statLookup[statDef.skPc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function applyPc(stat) {\n        stat.max = Math.floor(\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\n          );\n      }\n      \n      function dupeStat(id) {\n        var stat = statLookup[id];\n        if(stat) {\n          return {id: id, max: Number(stat.max), pc: stat.pc};\n        }\n        else {\n          return {id: id, max: 0, pc: 0};\n        }\n      }\n      \n      function addStat(stat) {\n        if(stat.max > 0) {\n          retVal.push(stat);\n        }\n      }\n      \n      // base stats\n      var str = dupeStat(0);\n      applyPc(str);\n      addStat(str);\n      \n      var agi = dupeStat(1);\n      applyPc(agi);\n      addStat(agi);\n      \n      var int = dupeStat(2);\n      applyPc(int);\n      addStat(int);\n\n      var vit = dupeStat(3);\n      applyPc(vit);\n      addStat(vit);\n\n      // add vit to hp\n      var hp = dupeStat(25);\n      hp.max += (vit.max * Number(group.conversions.HP));\n      applyPc(hp);\n      addStat(hp);\n      \n      // defs\n      var def = dupeStat(8);\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\n      applyPc(def);\n      addStat(def);\n      \n      var defpc = dupeStat(1008);\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(defpc);\n      \n      var mdef = dupeStat(9);\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\n      applyPc(mdef);\n      addStat(mdef);\n      \n      var mdefpc = dupeStat(1009);\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(mdefpc);\n      \n      // attack power - like fd but for bufs\n      // this shows as blue damage\n      // i think there are magic and phis variants of this but doesnt matter\n      var aPwr = dupeStat(3000);\n\n      // physical damage\n      if(!group.damageType || group.damageType.id != 2) {\n        var extraPdmg = dupeStat(32);\n        var extraPdmgMod= dupeStat(101);\n        var paPwr = dupeStat(3001);\n        \n        // special stats for zeal\n        var intToPdmg = dupeStat(10164);\n        \n        var minPdmg = dupeStat(4);\n        minPdmg.max += extraPdmg.max;\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(minPdmg);\n  \n        var maxPdmg = dupeStat(5);\n        maxPdmg.max += extraPdmg.max;\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(maxPdmg);\n      }\n      \n      // magic damage\n      if(!group.damageType || group.damageType.id != 1) {\n        var extraMdmg = dupeStat(33);\n        var extraMdmgMod = dupeStat(102);\n        var maPwr = dupeStat(3002);\n        \n        // special stats for zeal\n        var strToMdmg = dupeStat(10165);\n        \n        var minMdmg = dupeStat(6);\n        minMdmg.max += extraMdmg.max;\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\n\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(minMdmg);\n        \n        var maxMdmg = dupeStat(7);\n        maxMdmg.max += extraMdmg.max;\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\n        \n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(maxMdmg);\n      }\n      \n      \n      // crit chance %\n      var crit = dupeStat(12);\n      crit.max += (agi.max*Number(group.conversions.Critical));\n      applyPc(crit);\n      \n      var skCrit = dupeStat(4012);\n      crit.max += skCrit.max;\n      addStat(crit);\n      \n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\n      retVal.push({id: 1012, max: critChance})\n\n      // crit damage %\n      var cDmg = dupeStat(103);\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\n      applyPc(cDmg);\n      addStat(cDmg);\n\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\n      addStat({id: 1103, max: critDamagePc + 2});\n\n      // fd\n      var fd = dupeStat(29);\n      addStat(fd);\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n      \n      var fdPc = dupeStat(1029);\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\n      addStat(fdPc);\n      \n      // elements\n      var firePc = dupeStat(16);\n      addStat(firePc);\n      \n      var icePc = dupeStat(17);\n      addStat(icePc);\n      \n      var lightPc = dupeStat(18);\n      addStat(lightPc);\n      \n      var darkPc = dupeStat(19);\n      addStat(darkPc);\n      \n      // average damage\n      function addAvgDamageStat(id, min, max) {\n        \n        var nonEleDamage = (min+max)/2;\n        // add crit (assume 25% crit resist - ie. x0.75)\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\n        // apply fd\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\n        \n        // apply element(s)\n        // assume no elemental resist (since probably have resist reduction anyways)\n        var avgDmg = nonEleDamage;\n        if(group.element && group.element.id > 0) {\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\n          if(elementStat) {\n            avgDmg = avgDmg * (1+Number(elementStat.max));\n          }\n        }\n        addStat({id: id, max: avgDmg});\n        var secElementId = 0;\n        var priElementId = 0;\n        if(group.element) {\n          priElementId = group.element.id;\n        }\n        else {\n          priElementId = 0;\n        }\n        if(group.secondaryElement) {\n          secElementId = group.secondaryElement.id;\n        }\n        else {\n          secElementId = 0;\n        }\n        \n        if(secElementId != priElementId) {\n          if(secElementId > 0) {\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\n            if(secondaryElementStat) {\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\n              addStat({id: id + 1000, max: secAvgDmg});\n            }\n          }\n          else {\n            addStat({id: id + 1000, max: nonEleDamage});\n          }\n        }\n      }\n      \n      // average damages\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n      }\n\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n      }\n      \n      if(!group.damageType || group.damageType.id == 3) {\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\n      }\n      \n      // Equivalent HP\n      var pdefEqHp = dupeStat(2008);\n      pdefEqHp.max = hp.max / (1-defpc.max);\n      \n      var mdefEqHp = dupeStat(2009);\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\n      \n      var eqHp = dupeStat(3008);\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n      addStat(eqHp);\n      \n      return retVal;\n    },\n    \n    getNakedStats: function(group) {\n      \n      if(\n        group.baseStats && \n        group.baseStats.Strength > 0) {\n\n        return [\n          {id:0, max:group.baseStats.Strength},\n          {id:1, max:group.baseStats.Agility},\n          {id:2, max:group.baseStats.Intelligence},\n          {id:3, max:group.baseStats.Stamina}\n          ];\n      }\n      else {\n        return [];\n      }\n    },\n    \n    getSkillStats : function (item, data, skillData) {\n\n      var skillLevelVals = null;\n      angular.forEach(skillData, function(value, index) {\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n          skillLevelVals = value;\n          return;\n        }\n      });\n      \n      if(!skillLevelVals) {\n        return null;\n      }\n      \n      var index = 1;\n      var effects = [];\n      var stillCols = true;\n      \n      while(stillCols) {\n        var colName = 'EffectClass' + index;\n        var valColName = 'EffectClassValue' + index;\n        if(data && colName in data && valColName in skillLevelVals) {\n          if(data[colName] > 0) {\n            \n            var val = skillLevelVals[valColName];\n            \n            // for now add 10k\n            var effectId = data[colName];\n            var map = hCodeValues.skillEffectMapping[effectId];\n            if(map && map.getVals) {\n              var vals = map.getVals(val);\n              for(var i=0;i<vals.length;++i) {\n                effects.push(vals[i]);\n              }\n            }\n            else {\n              var statId;\n              if(map && map.mapTo) {\n                statId = map.mapTo;\n              }\n              else {\n                statId = 10000 + effectId;\n              }\n              \n              if(val > 0) {\n                effects.push({ id: statId, effect: effectId, max: val });\n              }\n              else {\n                if(val.toString().indexOf(';') > 0) {\n                  var vals = val.split(';');\n                  if(vals.length > 0 && vals[0] > 0) {\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\n                  }\n                }\n              }\n            }\n          }\n        }\n        else {\n          stillCols = false;\n        }\n        \n        index++;\n      }\n      \n      return effects;\n    },\n\n    getBuildStats: function(build) {\n      var stats = {};\n      stats.nakedStats = this.getNakedStats(build);\n      stats.combinedStats = this.getCombinedStats(build.items);\n      stats.setStats = this.getSetStats(build.items);\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n      if(build.heroStats != null && build.heroStats.length > 0) {\n        stats.heroStats = build.heroStats;\n        stats.allStats = stats.allStats.concat(build.heroStats);\n      }\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\n      \n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n      return stats;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\nfunction translations($routeParams, $rootScope) {\n\n  var dnTranslations = new DnTranslations();\n  var tFile = 'uistring.lzjson';\n\n  var completeCallback = [];\n  var progressCallback = [];\n\n  return {\n    \n    reset : function() {\n      dnTranslations = new DnTranslations();\n      dnTranslations.sizeLimit = 100;\n      this.loaded = false;\n      this.startedLoading = false;\n      completeCallback = [];\n      progressCallback = [];\n    },\n    \n    loaded : false,\n    startedLoading : false,\n    \n    location : null,\n  \n    init : function(progress, complete) {\n\n      if(this.isLoaded()) {\n        complete();\n      }\n      else {\n        progressCallback = [];\n        progressCallback.push(progress);\n        completeCallback.push(complete);\n  \n        if(!this.startedLoading) {\n          this.startedLoading = true;\n          var t = this;\n          \n          var fileName = null;\n          if(this.location != null && this.location != '') {\n            fileName = this.location + '/' + tFile;\n            \n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n              sessionStorage.removeItem('UIStrings');\n              localStorage.removeItem('UIStrings_file');\n            }\n          }\n          \n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n          dnTranslations.loadDefaultFile(\n            fileName, \n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n            }, \n            function() {\n              t.loaded = true;\n              angular.forEach(completeCallback, function(value, key) { value(); });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            },\n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            }\n          );\n        }\n      }\n    },\n    \n    isLoaded : function() {\n      if(!this.loaded) {\n        var fileName = this.location + '/' + tFile;\n        \n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n        }\n\n        this.loaded = dnTranslations.loadFromSession();\n        if(this.loaded) {\n          this.startedLoading = true;\n        }\n      }\n      return this.loaded;\n    },\n    \n    translate : function(id,idParam) {\n      if(this.loaded) {\n        \n        var name;\n        if(!id) {\n          return '';\n        }\n        else {\n          name = dnTranslations.translate(id);\n          \n          if(typeof name != 'string') {\n            return 'm' + name;\n          }\n        }\n        \n        if(idParam) {\n          var params = idParam.split(',');\n          for(var p=0;p<params.length;++p) {\n            var pid = params[p];\n            if(pid.indexOf('{') == 0) {\n              pid = params[p].replace(/\\{|\\}/g,'');\n              pid = dnTranslations.translate(pid);\n            }\n            \n            name = name.replace('{' + p + '}', pid);\n          }\n        }\n\n        return name;\n      }\n      else {\n        return 'm' + id;\n      }\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\nfunction hCodeValues() {\n\n  function toOneDec(stat) {\n    return Math.round(stat.max*10)/10;\n  }\n  function toNoDec(stat) {\n    return Math.floor(stat.max);\n  }\n  function inThousands(stat) {\n    var val = Number(stat.max);\n    if(val < 100) {\n      return val;\n    }\n    else if(val < 100000) {\n      return Math.round(val/100)/10 + 'k';\n    }\n    else if(val < 1000000) {\n      return Math.round(val/1000) + 'k';\n    }\n    else if(val < 10000000) {\n      return Math.round(val/10000)/100 + 'm';\n    }\n    else {\n      return Math.round(val/1000000) + 'm';\n    }\n  }\n  function toPercent(stat) {\n    return (Math.floor(stat.max*100000)/1000) + '%';\n  }\n  \n  return {\n    stats : {\n      0  : {id: 0, name: 'str', display: toNoDec, type: 'dps', pc: 50, skPc: 4050 },\n      1  : {id: 1, name: 'agi', display: toNoDec, type: 'dps', pc: 51, skPc: 4051 },\n      2  : {id: 2, name: 'int', display: toNoDec, type: 'dps', pc: 52, skPc: 4052 },\n      3  : {id: 3, name: 'vit', display: toNoDec, type: 'def', pc: 53, skPc: 4053 },\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, type: 'dps', pc: 54 },\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, type: 'dps', pc: 56 },\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\n      8  : {id: 8, name: 'def', display: inThousands, type: 'def', pc: 58 },\n      9  : {id: 9, name: 'mdef', display: inThousands, type: 'def', pc: 59 },\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n      12 : {id: 12, name: 'crit', display: toNoDec, type: 'dps', pc: 62 },\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n      16 : {id: 16, name: 'fire%', display: toPercent, type: 'dps' },\n      17 : {id: 17, name: 'ice%', display: toPercent, type: 'dps' },\n      18 : {id: 18, name: 'light%', display: toPercent, type: 'dps' },\n      19 : {id: 19, name: 'dark%', display: toPercent, type: 'dps' },\n      20 : {id: 20, name: 'fire def', display: toPercent, type: 'def' },\n      21 : {id: 21, name: 'ice def', display: toPercent, type: 'def' },\n      22 : {id: 22, name: 'light def', display: toPercent, type: 'def' },\n      23 : {id: 23, name: 'dark def', display: toPercent, type: 'def' },\n      25 : {id: 25, name: 'hp', display: inThousands, type: 'def', pc: 75, skPc: 4075 },\n      26 : {id: 26, name: 'mp', display: inThousands, pc: 76, skPc: 4076 },\n      29 : {id: 29, name: 'fd', display: toNoDec, type: 'dps' },\n      \n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      32 : {id: 32, name: 'pdmg', display: toNoDec, type: 'dps', pc: 54 },\n      33 : {id: 33, name: 'mdmg', display: toNoDec, type: 'dps', pc: 56 },\n      \n      50 : {id: 50, name: 'str%', display: toPercent },\n      51 : {id: 51, name: 'agi%', display: toPercent },\n      52 : {id: 52, name: 'int%', display: toPercent },\n      53 : {id: 53, name: 'vit%', display: toPercent },\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55 },\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57 },\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n      58 : {id: 58, name: 'def%', display: toPercent },\n      59 : {id: 59, name: 'mdef%', display: toPercent },\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true },\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true },\n      62 : {id: 62, name: 'crit%', display: toPercent },\n      63 : {id: 63, name: 'crit resist%', display: toPercent },\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true },\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true },\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true },\n      75 : {id: 75, name: 'hp%', display: toPercent },\n      76 : {id: 76, name: 'mp%', display: toPercent },\n      77 : {id: 77, name: 'mp recover%', display: toPercent },\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true },\n\n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true },\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true },\n\n      103: {id: 103, name: 'crit dmg', display: toNoDec, type: 'dps', pc: 104 },\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true },\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true },\n      \n      // stats below here are ones I made up\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      \n      1008: {id: 1008, name: 'calc pdef', display: toPercent, noCustom: true },\n      1009: {id: 1009, name: 'calc mdef', display: toPercent, noCustom: true },\n      \n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\n      1029: {id: 1029, name: 'fd calc', display: toPercent, noCustom: true },\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\n      \n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      \n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n      \n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true },\n      \n      4012: {id: 4012, name: 'skCrit', display: inThousands },\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\n      \n      // special cases for skills\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\n      \n      // items over 10000 are unknown skill effects\n    },\n  \n    rankNames : {\n      0 : { id: 0, name : 'normal' },\n      1 : { id: 1, name : 'magic' },\n      2 : { id: 2, name : 'rare' },\n      3 : { id: 3, name : 'epic' },\n      4 : { id: 4, name : 'unique' },\n      5 : { id: 5, name : 'legendary' },\n    },\n    \n    shopNames : {\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\n      59001: 'garden bunny',\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \n      89001: 'guild master',\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \n      66001: 'erosion',\n      35006: 'plate',\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n      40001: 'daredevil faire', 40002: 'daredevil faire', \n      91001: 'wrath',\n      45001: 'farm',\n    },\n    \n    checkedRank : {\n      0 : true,\n      1 : true,\n      2 : true,\n      3 : true,\n      4 : true,\n      5 : true,\n    },\n    \n    typeNames : {\n      0 : 'weapons',\n      1 : 'equipment',\n      5 : 'plates',\n      8 : 'pouch',\n      38 : 'plates',\n      90 : 'welspring',\n      132 : 'talisman',\n      139 : 'gems',\n    },\n    \n    elements : {\n      0 : { id: 0, name: 'non-ele' },\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\n      3 : { id: 3, name: 'light', dmgStat: 18 },\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\n    },\n    \n    damageTypes : {\n      0 : { id: 0, name: 'both separate' },\n      1 : { id: 1, name: 'physical' },\n      2 : { id: 2, name: 'magical' },\n      3 : { id: 3, name: 'both combined' },\n    },\n    \n    // note: skills shown on-screen have 1k added to their id\n    skillEffectMapping : {\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n      13 : { id: 13, name: 'mp', mapTo: 26 },\n      25 : { id: 25, name: 'action speed' },\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\n      34 : { id: 34, name: 'light %', mapTo: 18 },\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\n      38 : { id: 38, name: 'light def', mapTo: 22 },\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\n      65 : { id: 65, name: 'range' },\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\n      134 : { id: 134, name: 'physicial defense%' },\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\n      222: {\n        id: 222, \n        name: 'hellfire', \n        getVals: function(val) {\n          if(val.indexOf(';') > 0) {\n            var vals = val.split(';');\n            return [\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\n              {id: 4012, effect: 222, max: Number(vals[1])},\n              ];\n          }\n          else {\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\n          }\n        }\n      },\n    },\n    \n    customItems: \n    [\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\n    ],\n  \n    getStats : function(data) {\n\n      var useMax=false;\n      var useStateXVal=false;\n      var mightHaveSets=true;\n      var prop = 'State1_Max';\n      if(prop in data) {\n        useMax = true;\n      }\n      else {\n        prop = 'State1Value';\n        if(prop in data) {\n          useStateXVal = true;\n        }\n      }\n      \n      var currentState = 0;\n      var statVals = [];\n      for(;;) {\n        currentState++;\n        \n        var stateProp = 'State' + currentState;\n        if(!(stateProp in data)) {\n          break;\n        }\n\n        var stateId = data[stateProp];\n        if(stateId == -1) {\n          break;\n        }\n        \n        if(stateId == 107) {\n          // is this mp?\n        }\n        else {\n          \n          var currentData = { id: stateId };\n          \n          var prop;\n        \n          if(useMax) {\n            prop = 'State' + currentState + '_Max';\n            currentData.max = data[prop];\n          }\n          else if(useStateXVal) {\n            prop = 'State' + currentState + 'Value';\n            currentData.max = data[prop];\n          }\n          else {\n            prop = 'StateValue' + currentState;\n            currentData.max = Number(data[prop]);\n          }\n          \n          if(currentData.max > 0 || currentData.max < 0) {\n            if(mightHaveSets) {\n              prop = 'NeedSetNum' + currentState;\n              if(prop in data) {\n                if(data[prop] == 0) {\n                  break;\n                }\n                currentData.needSetNum = data[prop];\n              }\n              else {\n                mightHaveSets = false;\n              }\n            }\n          \n            statVals.push(currentData);\n          }\n        }\n      }\n      \n      return statVals;\n    },\n    \n    setupStat : function(stat, id) {\n      stat.id = Number(id);\n    },\n    \n    mergeStats : function(stats1, stats2) {\n      var statMap = {};\n      \n      var self = this;\n      function add(value) {\n        \n        var amount = Number(value.max);\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\n          amount = Math.floor(amount);\n        }\n        \n        if(value.id in statMap) {\n          statMap[value.id] += amount;\n        }\n        else {\n          statMap[value.id] = amount;\n        }\n      }\n      \n      angular.forEach(stats1, function(value, key) {\n        if(value) {\n          add(value);\n        }\n      });\n      \n      if(stats2) {\n        angular.forEach(stats2, function(value, key) {\n          if(value) {\n            add(value);\n          }\n        });\n      }\n      \n      var newStats = [];\n      \n      for(var key in statMap) {\n        var stat = { max : statMap[key], id: Number(key) };\n        newStats.push(stat);\n      }\n        \n      return newStats;\n    }\n  }\n}\n\n})();"],"sourceRoot":"/source/"}