{"version":3,"sources":["routes.js","about/about.js","filters/filters.js","builds/build-actions.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/view-group.js","nav/export.js","nav/nav.js","nav/setup.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/item-search.js","search/skill-search.js","secrets/items.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","item","$routeParams","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","length","push","name","groupName","currentGroup","saveBuildSelection","anyItems","createGroup","handleChange","toggleGroup","url","publish","search","stats","getBuildStats","itemsByCategory","getItemsByCategory","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","index","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","typeName","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","gItem","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","selectedCategory","localStorage","category","byName","getCategoryItems","itemsByCat","getCategories","categories","setSelectedCategory","value","setItem","allowMoreItems","maxCat","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","removeItem","newItemList","server","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","d","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","icon","noLocationMenu","normalMenu","buildAction","withBuildMenu","isSearch","indexOf","startedLoading","tlocation","noRegion","dntLocation","fireAction","action","getActions","menu","currentBuild","extraCss","$route","dntInit","translationsStatus","progressTranslations","translate","msg","testResults","translationResults","advancedSetup","hostedFiles","noLocation","sessionLocation","alternativeFiles","location","setLocation","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","clearGroup","addAffectAmount","groupItems","$watch","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","exchangeType","itemSource","a","b","hasMaxExchangable","maxExchange","addToGroup","replace","replaceItem","statMap","_","newValue","oldValue","anyChange","Number","found","each","itemType","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","getStats","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","find","showMaterials","materials","itemId","itemCount","NameID","NameIDParam","material","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","reportProgress","initSkills","dntFile","baseJobName","pve","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","sparkStats","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","itemFactory","typeId","console","log","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","getPouchItems","boxType","f","getPouchItemsFromFile","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","basicItem","createBasicItem","count","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","getItemData","DisjointDrop1","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","getPlates","plateFile","r","row","itemData","allFiles","initSets","getSetItems","setId","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","getJobName","getAllJobs","needJobClass","jobName","preInitItem","anyToLoad","setFullStats","canExtract","Type","canTransfer","isInSet","isPlate","canUse","detail","hasContents","getDescription","description","mainDnt","DescriptionID","DescriptionIDParam","getExchangeType","exchangeDnt","exchange","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","encodeItem","copy","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","showMoreResults","extra","allResults","getFilteredBuilds","uid","results","result","toUpperCase","guild","profile","getSavedBuilds","getUserBuilds","storedBuilds","getProfile","openServer","load","user","getUser","handleError","err","show","login","saveProfile","getTime","saveBuild","publishBuild","startPublish","about","deleteAccount","openLocal","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","localToDelete","getAllBuildNames","allKeys","uniq","reallyDeleteLocal","deleteServer","serverToDelete","reallyDeleteServer","deleteBuild","published","copyLocally","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","edit","updateParams","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","jobInit","lastJobNumber","byPath","catName","minLevel","maxLevel","grades","searchable","savedSearchStatId","navigate","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","chooseClass","restrict","onSetJob","chooseClassController","getBaseJobs","englishName","EnglishName","dnsimCategoryLinks","collapse","dnsimCategoryLinksController","collapsed","setCategory","dnsimItemIcon","link","attrs","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","dnsimJobIconController","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","display","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","loaders","findIndexes","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","hasStartedLoading","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","searchType","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","resolve","reject","auth","onAuthStateChanged","database","ref","once","storedProfile","decompressBuild","service","deleteNullProperties","set","compressBuild","stringifiedData","compressedBuild","decompressFromUTF16","parse","actions","lev","all","test","recurse","undefined","pList","jobIds","currentUser","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","itemCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","dps","1","2","3","4","5","6","7","8","9","10","noCustom","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","105","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items/', {\r\n      templateUrl: 'ui/secrets/items.html',\r\n      controller: 'ItemsCtrl as items'\r\n    }).\r\n    \r\n    when('/', {\r\n      redirectTo: '/builds'\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build/:groupName*', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group/:region?', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build/:groupName*', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build/:name*', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search/:itemType?', {\r\n      templateUrl: 'ui/search/item-search.html',\r\n      controller: 'ItemSearchCtrl'\r\n    }).\r\n    \r\n    when('/item/:region?/:i*', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/builds'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function filter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  filter.$stateful = false;\r\n\r\n  return filter;\r\n}])","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build/' + vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build/' + vm.buildName)\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n    \r\n    vm.onChange();\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\r\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n      $timeout(vm.onChange);\r\n    }\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n  \r\n  this.createShortUrl = function() {\r\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper',\r\nfunction($timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('groupName' in $routeParams) {\r\n      if($routeParams.groupName != this.currentGroup) {\r\n        this.currentGroup = $routeParams.groupName;\r\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build/' + this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'DN Gear Sim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build/' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('buildStatsCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n}])\r\n.directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n    },\r\n    controller: 'buildStatsCtrl',\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    vm.groupCalcStats = null;\r\n    saveGroup();\r\n    vm.savedItems = saveHelper.getSavedItems();\r\n    vm.updateRows();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  }\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  }\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  }\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  }\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  }\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  }\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build/' + vm.groupName);\r\n  }\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').controller('buildCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  this.category = itemCategory.byName(selectedCategory);\r\n  if(!this.category) {\r\n    selectedCategory = 'titles';\r\n    this.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  this.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(this.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  \r\n  this.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  this.setSelectedCategory = function(value) {\r\n    this.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.allowMoreItems = function() {\r\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  this.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText + ' ' + vm.category.name;\r\n  }\r\n  \r\n  this.handleChange = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeItem = function(item) {\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.onChange();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: 'buildCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.updatedSavedItems(this.name, []);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.group = {};\r\n  this.newGroup = true;\r\n  if('groupName' in $routeParams) {\r\n      this.groupName = $routeParams.groupName;\r\n      if(this.groupName in this.savedItems) {\r\n        this.group = this.savedItems[this.groupName];\r\n        this.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    this.groupName = '';\r\n  }\r\n  this.oldGroupName = this.groupName;\r\n  this.heroStats = [];\r\n  this.elements = hCodeValues.elements;\r\n  this.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  if(this.group.damageType) {\r\n    this.damageType = this.group.damageType;\r\n  }\r\n  else {\r\n    this.damageType = hCodeValues.damageTypes[0];\r\n  }\r\n    \r\n  if(this.group.element) {\r\n    this.element = this.group.element;\r\n  }\r\n  else {\r\n    this.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(this.group.secondaryElement) {\r\n    this.secondaryElement = this.group.secondaryElement;\r\n  }\r\n  else {\r\n    this.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(this.group.enemyLevel) {\r\n    this.enemyLevel = this.group.enemyLevel;\r\n  }\r\n  else {\r\n    this.enemyLevel = 90;\r\n  }\r\n  \r\n  if(this.group.playerLevel) {\r\n    this.playerLevel = this.group.playerLevel;\r\n  }\r\n  else {\r\n    this.playerLevel = 90;\r\n  }\r\n  \r\n  if(this.group.heroLevel && this.group.heroLevel > 0) {\r\n    this.heroLevel = this.group.heroLevel;\r\n  }\r\n  else {\r\n    this.heroLevel = 1;\r\n  }\r\n  \r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.init = function(vm) {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n        \r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  character.init(function() { vm.init(vm) });\r\n  \r\n  this.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  this.getJobConversion = function(colName) {\r\n    return character.getConversions(this.job.id)[colName];\r\n  }\r\n  this.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\r\n  }\r\n  \r\n  this.invalidGroupName = function() {\r\n    if(!this.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(this.groupName in this.savedItems) {\r\n      if(this.newGroup || this.groupName != this.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  this.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\r\n    var conversions = character.getConversions(this.job.id);\r\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\r\n    var heroStats = character.getHeroStats(this.heroLevel);\r\n    \r\n    if(this.newGroup) {\r\n      this.oldGroupName = this.groupName;\r\n      saveHelper.importGroup(this.groupName, []);\r\n    }\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      this.oldGroupName, \r\n      this.groupName,\r\n      this.enemyLevel,\r\n      this.playerLevel,\r\n      this.heroLevel,\r\n      this.job,\r\n      this.damageType,\r\n      this.element,\r\n      this.secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\r\n    \r\n    $location.path('/build/' + this.groupName);\r\n  }\r\n  \r\n  this.setHeroStats = function() {\r\n    this.heroStats = character.getHeroStats(this.heroLevel);\r\n    // console.log('got ' + this.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    $window.document.title = 'DN Gear Sim';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n        dntReset();\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.renameSavedGroup(\r\n        newBuildName, \r\n        newBuildName,\r\n        $scope.enemyLevel,\r\n        $scope.playerLevel,\r\n        $scope.heroLevel,\r\n        $scope.job,\r\n        $scope.damageType,\r\n        $scope.element,\r\n        $scope.secondaryElement,\r\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\r\n      \r\n      $location.url('/build/' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n\r\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\r\n    \r\n    var noMenu = [];\r\n    var noLocationMenu = [aboutAction];\r\n    var normalMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n    \r\n    var buildAction = {path: 'build', name:'build', icon: 'wrench'};\r\n    \r\n    var withBuildMenu = [\r\n      {path: 'builds', name:'builds', icon: 'wrench'},\r\n      buildAction,\r\n      {path: 'search', name:'gear', icon: 'search'},\r\n      {path: 'items', name:'items', icon: 'search'},\r\n      aboutAction,\r\n      ];\r\n      \r\n    region.init();\r\n  \r\n    $scope.isSearch = function() {\r\n      return $location.path().indexOf('/search') == 0;\r\n    }\r\n\r\n    $scope.isLoading = function() {\r\n      return translations.startedLoading && \r\n            !translations.isLoaded() &&\r\n            region.tlocation != null &&\r\n            region.tlocation.url != '' &&\r\n            !$scope.noRegion();\r\n    }\r\n    \r\n    $scope.noRegion = function() {\r\n      return region.dntLocation == null;\r\n    }\r\n    \r\n    $scope.fireAction = function(action) {\r\n      if(action.name == 'search') {\r\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\r\n        if(cat) {\r\n          $location.path('/' + action.path + '/' + cat);\r\n        }\r\n        else {\r\n          $location.path('/' + action.path);\r\n        }\r\n      }\r\n      else {\r\n          $location.path('/' + action.path);\r\n      }\r\n    }\r\n      \r\n    $scope.getActions = function() {\r\n      // console.log('getting actions');\r\n      var menu = null;\r\n      \r\n      var currentBuild = saveHelper.getCurrentBuild();\r\n      if(currentBuild) {\r\n        var savedItems = saveHelper.getSavedItems();\r\n        if(!(currentBuild in savedItems)) {\r\n          currentBuild = null;\r\n        }\r\n      }\r\n\r\n      if(region.dntLocation != null && region.dntLocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(region.tlocation != null && region.tlocation.url == '') {\r\n        menu = noLocationMenu; \r\n      }\r\n      else if(currentBuild && currentBuild != 'null') {\r\n        menu = withBuildMenu;\r\n        buildAction.path = 'build/' + currentBuild;\r\n        buildAction.name = currentBuild;\r\n      }\r\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n        menu = normalMenu;\r\n      }\r\n      else {\r\n        menu = normalMenu;\r\n      }\r\n      \r\n      angular.forEach(menu, function(value, key) {\r\n        delete value.extraCss;\r\n        if($location.path().length == 1) {\r\n          if(value.path.length == 1) {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\r\n          if(value.path != 'builds' || $location.path() == '/builds') {\r\n            value.extraCss = 'active';\r\n          }\r\n        }\r\n      });\r\n      \r\n      return menu;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'DN Gear Sim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('groupAssignmentCtrl',\r\n\r\n['hCodeValues','statHelper','saveHelper','itemCategory','$scope',\r\nfunction(hCodeValues,statHelper,saveHelper,itemCategory,$scope) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null\r\n  }\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    // console.log('item changed');\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  }\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.getCalculatedStats = function(group, items) {\r\n    var nakedStats = statHelper.getNakedStats(group);\r\n    var combinedStats = statHelper.getCombinedStats(items);\r\n    var setStats = statHelper.getSetStats(items);\r\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n    if(group.heroStats != null && group.heroStats.length > 0) {\r\n      allStats = allStats.concat(group.heroStats);\r\n    }\r\n    allStats = hCodeValues.mergeStats(allStats);\r\n    \r\n    return statHelper.getCalculatedStats(group, allStats);\r\n  }\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = vm.getCalculatedStats(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  }\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  }\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  }\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var numMatches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            numMatches++;\r\n          }\r\n        }\r\n        return numMatches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n      \r\n      var items = [];\r\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\r\n          if(item.exchangeType == vm.item.exchangeType) {\r\n            items.push(item);\r\n          }\r\n        }\r\n        else if(item.typeName == vm.item.typeName) {\r\n          items.push(item);\r\n        }\r\n      });\r\n      \r\n      if(vm.item.name) {\r\n        itemSplit = vm.item.name.split(' ');\r\n      }\r\n      items.sort(function(a,b) {\r\n        return numMatches(b.name)-numMatches(a.name);\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  }\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'groupAssignmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\n['dntData','hCodeValues','items','$timeout','translations',\r\nfunction(dntData,hCodeValues,items,$timeout,translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    vm.setEnchantment();\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantment) {\r\n    return {\r\n      number: enchantment.EnchantLevel,\r\n      stats: hCodeValues.getStats(enchantment)\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        var eid = vm.item.enchantmentId;\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\r\n        vm.setEnchantment();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];\r\n              var name = translations.translate(item.NameID, item.NameIDParam);\r\n              \r\n              if(item) {\r\n                var material = {\r\n                  num: itemCount,\r\n                  icon: item.IconImageIndex,\r\n                  rank: item.Rank,\r\n                  levelLimit: item.LevelLimit,\r\n                  name: name\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues',\r\nfunction(dntData,items,hCodeValues) {\r\n  'use strict';\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.initSkills();\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items',\r\nfunction(dntData,hCodeValues,items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  this.sparks = null;\r\n  var vm = this;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    //console.log('init contents');\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n      \r\n      //console.log('box: ' + boxType);\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n          if(itemds.length > 0) {\r\n            vm.items.push({\r\n              count: cd.Count,\r\n              gold: cd.Gold,\r\n              item: itemFactory.createBasicItem(itemds[0])\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i]);\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    \r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.lzjson',\r\n  'partstable_cash.optimised.lzjson',\r\n  'partstable_common2014.optimised.lzjson',\r\n  'partstable_common2015.optimised.lzjson',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.lzjson',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.lzjson',\r\n  'partstable_reboot.optimised.lzjson',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.lzjson',\r\n  'weapontable_cash.optimised.lzjson',\r\n  'weapontable_common2014.optimised.lzjson',\r\n  'weapontable_common2015.optimised.lzjson',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.lzjson',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.lzjson',\r\n  'weapontable_reboot.optimised.lzjson',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n    vm.matchingTransfers = [];\r\n    \r\n    for(var i=0;i<transfers.length;++i) {\r\n      var t = transfers[i];\r\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n        \r\n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n        \r\n        vm.matchingTransfers.push({\r\n          level: t.ResultLevel,\r\n          enchantmentNum: t.ResultEnchantLevel,\r\n          gold: t.NeedCoin/100/100,\r\n          rank: hCodeValues.rankNames[t.ResultRank],\r\n          numItem1: t.NeedItemCount1,\r\n          item1: itemFactory.createBasicItem(item1s[0]),\r\n          numItem2: t.NeedItemCount2,\r\n          item2: itemFactory.createBasicItem(item2s[0]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData.AbleWStorage == 1) {\r\n        return 'can put in server storage';\r\n      }\r\n      else if(itemData.AbleWStorage == 0) {\r\n        return 'not transferable';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n  }\r\n  \r\n  function getJobName() {\r\n    var retVal = '';\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress,function() { tryInit() });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, function() { tryInit(); });\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n  \r\n  function tryInit() {\r\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n    \r\n        if($scope.item.needJobClass > 0) {\r\n          getJobName();\r\n        }\r\n      }\r\n      \r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      if(itemData.DisjointDrop1 > 0) {\r\n        $scope.canExtract = true;\r\n      }\r\n      \r\n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n        $scope.canTransfer = true;\r\n      }\r\n      \r\n      if($scope.item.setId) {\r\n        $scope.isInSet = true;\r\n      }\r\n      \r\n      if($scope.item.typeId == 5) {\r\n        $scope.isPlate = true;\r\n      }\r\n      \r\n      if($scope.item.typeName != null) {\r\n        $scope.canUse = true;\r\n        $scope.detail = 'use';\r\n      }\r\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112) {\r\n        $scope.hasContents = true;\r\n        $scope.detail = 'contents';\r\n      }\r\n      else if($scope.canExtract) {\r\n        $scope.detail = 'extract';\r\n      }\r\n      else if($scope.canTransfer) {\r\n        $scope.detail = 'transfer';\r\n      }\r\n      else if($scope.isPlate) {\r\n        $scope.detail = 'plate';\r\n      }\r\n      else {\r\n        $scope.detail = 'shops';\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}]);","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.path('/build-search/' + vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.uid + '/' + buildName);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.openLocal = function(buildName) {\r\n    $location.path('/build/' + buildName);\r\n  }\r\n  \r\n  this.openServer = function(buildName) {\r\n    $location.path('/published/' + vm.getUser().uid + '/' + buildName);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      build.enemyLevel,\r\n      build.playerLevel,\r\n      build.heroLevel,\r\n      build.job,\r\n      build.damageType,\r\n      build.element,\r\n      build.secondaryElement,\r\n      build.enemyStatCaps, \r\n      build.playerStatCaps, \r\n      build.conversions, \r\n      build.baseStats, \r\n      build.heroStats);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.renameSavedGroup(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build.enemyLevel,\r\n      vm.build.playerLevel,\r\n      vm.build.heroLevel,\r\n      vm.build.job,\r\n      vm.build.damageType,\r\n      vm.build.element,\r\n      vm.build.secondaryElement,\r\n      vm.build.enemyStatCaps, \r\n      vm.build.playerStatCaps, \r\n      vm.build.conversions, \r\n      vm.build.baseStats, \r\n      vm.build.heroStats);\r\n      \r\n    $location.path('/build/' + newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\r\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\r\n    'use strict';\r\n\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    $scope.region = region;\r\n    \r\n    $scope.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    }\r\n    $scope.getTlocation = function() {\r\n      return region.tlocation;\r\n    }\r\n     \r\n    $scope.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    }\r\n    \r\n    $scope.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }\r\n    \r\n    $scope.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      $scope.edit = false;\r\n    }\r\n    \r\n    $scope.setLocation = function(location) {\r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      $scope.edit = !$scope.edit;\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html'\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('ItemSearchCtrl',\r\n['$scope','$window','$routeParams','$timeout','$location',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper',\r\nfunction(\r\n  $scope,$window,$routeParams,$timeout,$location,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\r\n  if(!$scope.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     $scope.itemCategory = itemCategory.byName(catName);\r\n     if($scope.itemCategory) {\r\n       // console.log('moving');\r\n       $location.path($scope.itemCategory.path);\r\n     }\r\n     return;\r\n  }\r\n  \r\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\r\n  \r\n  $scope.job = {id: -1, name: ''};\r\n  $scope.jobs = [$scope.job];\r\n  $scope.allJobs = [];\r\n  $scope.minLevel = 1;\r\n  $scope.maxLevel = 99;\r\n  $scope.maxDisplay = 10;\r\n  $scope.totalNumResults = 0;\r\n  $scope.grades = hCodeValues.rankNames;\r\n  $scope.stat = {id:-1, name:''};\r\n  $scope.stats = [$scope.stat];\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      $scope.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    $scope.minLevel = minLevel;\r\n  }\r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    $scope.maxLevel = maxLevel;\r\n  }\r\n  \r\n  $scope.nameSearch = localStorage.getItem('nameSearch');\r\n  if($scope.nameSearch == null) {\r\n    $scope.nameSearch = '';\r\n  }\r\n  \r\n  var savedSearchStatId = localStorage.getItem('searchStat');\r\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\r\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  $scope.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      $scope.itemCategory = itemCategory.byName(catName);\r\n      if($scope.itemCategory) {\r\n        // console.log('navigating to ', $scope.itemCategory.path);\r\n        $location.path($scope.itemCategory.path);\r\n      }\r\n    }\r\n  }\r\n\r\n  $scope.save = function() {\r\n    if(!$scope.itemCategory.hideLevel) {\r\n      localStorage.setItem('minLevel', $scope.minLevel);\r\n      localStorage.setItem('maxLevel', $scope.maxLevel);\r\n    }\r\n    \r\n    if(!$scope.itemCategory.hideJob) {\r\n      if($scope.job != null) {\r\n        localStorage.setItem('jobNumber', $scope.job.id);\r\n      }\r\n    }\r\n  \r\n    if($scope.stat != null) {\r\n      localStorage.setItem('searchStat', $scope.stat.id);\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', $scope.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    // console.log('translations loaded');\r\n    if(jobs.isLoaded()) {\r\n      jobInit();\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n\r\n    itemCategory.init($scope.itemCategory.name, $timeout);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, $scope.jobs[0]);\r\n      $scope.jobs = newJobs;\r\n      $scope.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            $scope.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  $scope.rankChecked = hCodeValues.checkedRank;\r\n  \r\n  $scope.getResults = function() {\r\n    // console.log('getting items');\r\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\r\n    if(allItems == null) {\r\n      // console.log('no items');\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n    // console.log('got ', allItems);\r\n    \r\n    $scope.save();\r\n    \r\n    var start = new Date().getTime();\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in $scope.stat) {\r\n      pcStatId = $scope.stat.pc;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e != null) {\r\n        \r\n        if(!$scope.itemCategory.hideLevel) {\r\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideRank) {\r\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!$scope.itemCategory.hideJob) {\r\n          if($scope.job != null && $scope.job.id > 0) {\r\n            if(!$scope.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != $scope.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', $scope.nameSearch); \r\n        \r\n        if($scope.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = $scope.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [$scope.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if($scope.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s]\r\n            if(stat.id == $scope.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if($scope.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    $scope.totalNumResults = newResults.length;\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    \r\n    return newResults;\r\n  };\r\n  \r\n  $scope.showMoreResults = function(extra) {\r\n    $scope.maxDisplay = $scope.totalNumResults + extra;\r\n    $scope.totalNumResults = 0;\r\n  }\r\n  \r\n}]);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.allJobs = [];\r\n  this.maxDisplay = 60;\r\n  this.currentResults = 0;\r\n  this.dntName = '';\r\n  this.skills = [];\r\n  this.loadedJobId = -1;\r\n\r\n  this.itemCategory = itemCategory.byName('skills');\r\n\r\n  this.nameSearch = localStorage.getItem('nameSearch');\r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n\r\n  var classFactories = [];\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  this.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName != null) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  this.itemLinkClosed = function() {\r\n    saveHelper.saveCustomItems(vm.customItems);\r\n    vm.customItems = saveHelper.getCustomItems();\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    \r\n    if(vm.job != null) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim')\r\n.controller('ItemsCtrl', \r\n  ['$window','$timeout','hCodeValues','region','translations','dntData',\r\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\r\n    \r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    \r\n    this.boxes = null;\r\n    this.boxeContents = [];\r\n    this.maxDisplay = 10;\r\n    this.currentResults = 0;\r\n\r\n    this.nameSearch = localStorage.getItem('itemNameSearch');\r\n    if(this.nameSearch == null) {\r\n      this.nameSearch = '';\r\n    }\r\n    \r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\r\n    \r\n    var fileName = 'all-items.lzjson';\r\n    \r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxes();\r\n      });\r\n    });\r\n    \r\n    this.initBoxes = function() {\r\n      // console.log('init boxes');\r\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\r\n        vm.boxes = [];\r\n        \r\n        var datas = dntData.getData(fileName);\r\n        // console.log(datas.length + ' boxes');\r\n        for(var i=0;i<datas.length;++i) {\r\n          var data = datas[i];\r\n          if(data.NameID > 0) {\r\n            var box = {\r\n              id: data.id,\r\n              name: vm.translate(data.NameID, data.NameIDParam),\r\n              rank: hCodeValues.rankNames[data.Rank],\r\n              icon: data.IconImageIndex,\r\n              levelLimit: data.LevelLimit,\r\n              fileName: data.fileName,\r\n            }\r\n            vm.boxes.push(box);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.getResults = function() {\r\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\r\n      if(vm.boxes == null) {\r\n        vm.initBoxes();\r\n      }\r\n      \r\n      if(vm.boxes == null) {\r\n        return;\r\n      }\r\n  \r\n      var newResults = [];\r\n      var numBoxes = vm.boxes.length;\r\n      var curDisplay = 0;\r\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\r\n        var e = vm.boxes[i];\r\n\r\n        if(vm.nameSearch != '') {\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(nameSearches.length == 0) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n      \r\n      vm.totalNumResults = newResults.length;\r\n      return newResults;\r\n    }\r\n  \r\n    this.showMoreResults = function(extra) {\r\n      vm.maxDisplay = vm.totalNumResults + extra;\r\n      vm.totalNumResults = 0;\r\n    }\r\n    \r\n    this.translate = function(nameId, nameParam) {\r\n      return translations.translate(nameId, nameParam);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\r\n\r\nfunction dnsimCategoryLinks(itemCategory,$location) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: ['itemCategory', dnsimCategoryLinksController],\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.setCategory = function(action) {\r\n    // console.log('setting cat', action);\r\n    vm.cat = action;\r\n    localStorage.setItem('selectedItemCategory', action.name);\r\n    \r\n    if(vm.collapse) {\r\n      vm.collapsed = !vm.collapsed;\r\n    }\r\n\r\n    if(vm.onChange) {\r\n      vm.onChange();\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n      \r\n      $scope.openItem = function() {\r\n        if(!$scope.noClick) {\r\n          $location.path($scope.itemLink);\r\n        }\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * 44) + 5;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * 44) + 5;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      }\r\n      \r\n      $scope.setLoadCount();\r\n      $scope.loadError = false;\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += def.name+':&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.lzjson';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\r\n      dntData.init(heroLevels, null, reportProgress, complete);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h != null) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p != null) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation != null && \r\n              this.dntLocation.url != null &&\r\n              this.dntLocation.url.length > 0) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', \r\n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n  'use strict';\r\n  \r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item != null) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C'\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n          if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr != null) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString != null && itemString.length > 0) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\r\n      \r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal\r\n    },\r\n\r\n    createShortUrl: function(groupName, group) {\r\n      \r\n      var path = this.createGroupLink(groupName, group);\r\n      var longUrl = window.location.href.split(\"#\")[0] + path;\r\n      var data = { longUrl: longUrl };\r\n      \r\n    \t$http.post(\r\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\r\n    \t    function(data,status,headers,config){\r\n        \t\tgroup.shortUrl = data.id;\r\n    \t      sessionStorage.setItem(path, data.id);\r\n        \t}).\r\n        \terror(function(data,status,headers,config){\r\n        \t\t// console.log(data);\r\n        \t\t// console.log(status);\r\n        \t\t// console.log(headers);\r\n        \t\t// console.log(config);\r\n        \t});\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        \r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve,\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        \r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length == 0) {\r\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        }\r\n        else {\r\n          var d = ds[0];\r\n        \r\n          var totalRatio = 0;\r\n          var p = null;\r\n          \r\n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n          if(ps.length == 0) {\r\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\r\n          }\r\n          \r\n          if(ps.length == 0) {\r\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n            if(ps.length == 0) {\r\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\r\n            }\r\n          }\r\n          \r\n          if(ps.length > 0) {\r\n            p = ps[0];\r\n            \r\n            if(p.PotentialID != d.TypeParam1) {\r\n              // this happened one time\r\n              // not sure how but it corrupted the stats\r\n              p = null;\r\n            console.log('bad potential');\r\n            }\r\n            else {\r\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\r\n              angular.forEach(potentials, function(value, key) {\r\n                totalRatio += value.PotentialRatio;\r\n              });\r\n            }\r\n          }\r\n          \r\n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\r\n          itemFactory.initItem(newItem);\r\n          itemCategory.setItemCategory(newItem, d);\r\n\r\n          var usePartDnt = null;\r\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n            usePartDnt = 'partsDnt';\r\n          }\r\n          else {\r\n            usePartDnt = 'weaponDnt';\r\n          }\r\n      \r\n          if(usePartDnt) {\r\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n              newItem.setStats = [];\r\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n              if(parts.length > 0) {\r\n                newItem.setId = parts[0].SetItemID;\r\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n                if(sets.length > 0) {\r\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          newItem.fullStats = newItem.stats;\r\n          if(item.enchantmentNum >= 0) {\r\n            newItem.enchantmentNum = item.enchantmentNum;\r\n            \r\n            if(newItem.typeName == 'skills') {\r\n              \r\n            }\r\n            else if(newItem.typeName == 'talisman') {\r\n              var extraStats = [];\r\n              angular.forEach(newItem.stats, function(stat, index) {\r\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n              });\r\n              \r\n              newItem.enchantmentStats = extraStats;\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n            }\r\n            else {\r\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n              angular.forEach(enchantments, function(enchantment, index) {\r\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          }\r\n          \r\n          if(item.sparkId > 0) {\r\n            newItem.sparkId = item.sparkId;\r\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n            if(sparks.length > 0) {\r\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n            }\r\n          }\r\n          else if(d.dragonjeweltype) {\r\n            newItem.offensiveGemSlots = 0;\r\n            newItem.increasingGemSlots = 0;\r\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\r\n            if(itemData && itemData.length > 0) {\r\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n              \r\n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n            }\r\n          }\r\n          \r\n          return newItem;\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var d = datas[0];\r\n          var newItem = {\r\n            id: item.id,\r\n            data: d,\r\n            levelLimit : d.LevelLimit,\r\n            needJobClass : d.NeedJobClass,\r\n            typeId : d.Type,\r\n            exchangeType: d.ExchangeType,\r\n            rank : hCodeValues.rankNames[d.Rank],\r\n            fileName: item.fileName,\r\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\r\n          };\r\n          \r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n\r\n      var dntFiles = {};\r\n\r\n      if(item == null) {\r\n      }\r\n      else {\r\n        if(!item.itemSource && item.itemTypeName in items) {\r\n          item.itemSource = item.itemTypeName;\r\n        }\r\n        \r\n        if(item.itemSource == 'rbTech') {\r\n          item.itemSource = 'tech';\r\n        }\r\n        \r\n        if(item.itemSource in items) {\r\n          var itemType = items[item.itemSource];\r\n          \r\n          dntFiles['exchange.lzjson'] = null;\r\n          dntFiles['dragonjewelslottable.lzjson'] = null;\r\n  \r\n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n          if('potentialDnt' in itemType) {\r\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          if('potentialDntEx' in itemType) {\r\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\r\n          }\r\n          \r\n          if('enchantDnt' in itemType) {\r\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\r\n          }\r\n          \r\n          if('weaponDnt' in itemType) {\r\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\r\n          }\r\n          \r\n          if('partsDnt' in itemType) {\r\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\r\n          }\r\n          \r\n          if('setDnt' in itemType) {\r\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\r\n          }\r\n          \r\n          if('gemDnt' in itemType) {\r\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\r\n          }\r\n          \r\n          if('sparkDnt' in itemType) {\r\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\r\n          }\r\n        }\r\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n            dntFiles[skillDnt] = null;\r\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n            dntFiles[skillLevelDnt] = null;\r\n        }\r\n        else if(item.typeName == 'custom') {\r\n        }\r\n        \r\n        if(item.fileName) {\r\n          dntFiles[item.fileName + '.lzjson'] = null;\r\n        }\r\n      }\r\n      \r\n      return dntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem != null) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\r\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\r\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\r\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\r\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\r\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\r\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\r\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\r\n      {path: 'search/skills', name:'skills', searchType: 'skills'},\r\n      {path: 'search/custom', name:'custom', searchType: 'custom'},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal != null) {\r\n            if(source.items == null && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items != null) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == cat.name ||\r\n              vm.isItemForCat(cat, item, item.data)) {\r\n\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item, rawData) {\r\n      \r\n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      else if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      else if(cat.limitExchange) {\r\n        \r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\r\n            \r\n            if(item.itemSource == 'plate') {\r\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\r\n                return cat.name == 'expedition plates';\r\n              }\r\n              else {\r\n                return cat.name == 'enhancement plates';\r\n              }\r\n            }\r\n            else if(item.itemSource == 'gem') {\r\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n              if(gemTypes.length > 0) {\r\n                \r\n                if(gemTypes[0].Type == 1) {\r\n                  return cat.name == 'offensive gems';\r\n                }\r\n                else if(gemTypes[0].Type == 2) {\r\n                  return cat.name == 'increasing gems';\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return true;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      }\r\n      else if(item.itemSource in items) {\r\n        return items[item.itemSource].type == cat.sourceType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType) {\r\n            source.init(function() {}, complete);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items != null) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh1 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                return item2.levelLimit - item1.levelLimit;\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        angular.forEach(items, function(item, index) {\r\n          if(item != null && !(item.typeName in itemMap)) {\r\n            console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',\r\n['translations','dntData','hCodeValues','items',itemFactory]);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemSourceName, d, p, totalRatio) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      data : d,\r\n      potential : p,\r\n      id: d.id,\r\n      totalRatio: totalRatio,\r\n      itemSource : itemSourceName,\r\n      levelLimit : d.LevelLimit,\r\n      needJobClass : d.NeedJobClass,\r\n      typeId : d.Type,\r\n      exchangeType: d.ExchangeType,\r\n      rank : hCodeValues.rankNames[d.Rank],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  };\r\n  \r\n  function loadItems(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return null;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\r\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\r\n      \r\n      // skip certain types like pouches, res scrolls, etc\r\n      if(dType != 8 &&\r\n        dType != 29 &&\r\n        dType != 114 &&\r\n        dType != 79 &&\r\n        dType != 174 &&\r\n        dType != 130 &&\r\n        dType != 24 &&\r\n        dType != 182 &&\r\n        dType != 78 &&\r\n        dType != 20 &&\r\n        dType != 46 &&\r\n        dType != 9 &&\r\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\r\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\r\n        (!itemType.minRank || dRank >= itemType.minRank)) {\r\n\r\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\r\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n          \r\n        // skip items with no data\r\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\r\n          var d = dntData.getRow(itemType.mainDnt, r);\r\n          \r\n          if(itemType.type == 'techs') {\r\n            var exists = false;\r\n            for(var i=0;i<itemType.items.length;++i) {\r\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\r\n                itemType.items[i].levelLimit == d.LevelLimit &&\r\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\r\n                  exists = true;\r\n                  break;\r\n                }\r\n            }\r\n            \r\n            if(exists) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          var potentials = [];\r\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n            \r\n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\r\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n            }\r\n          }\r\n          \r\n          var totalRatio = 0;\r\n          angular.forEach(potentials, function(value, key) {\r\n            totalRatio += value.PotentialRatio;\r\n          });\r\n          \r\n          var numPotentials = potentials.length;\r\n          if(numPotentials == 0) {\r\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\r\n          }\r\n          else {\r\n            for(var p=0;p<numPotentials;++p) {\r\n              \r\n              var found = false;\r\n              for(var q=0;q<p;++q) {\r\n                if(potentialsMatch(potentials[p], potentials[q])) {\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n              \r\n              if(!found) {\r\n                for(var q=p+1;q<numPotentials;++q) {\r\n                  if(potentialsMatch(potentials[p], potentials[q])) {\r\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\r\n                  }\r\n                }\r\n                \r\n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function potentialsMatch(p1, p2) {\r\n    \r\n    var i = 1;\r\n    var j = 1;\r\n    for(;;) {\r\n      var state1Col = 'State' + i;\r\n      var state2Col = 'State' + j;\r\n      \r\n      if(p1[state1Col] == 107) {\r\n        i++;\r\n        state1Col = 'State' + i;\r\n      }\r\n      if(p2[state2Col] == 107) {\r\n        j++;\r\n        state2Col = 'State' + j;\r\n      }\r\n      \r\n      if(!(state1Col in p1 || state2Col in p2)) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(state1Col in p1)) {\r\n        return false;\r\n      }\r\n      if(!(state2Col in p2)) {\r\n        return false;\r\n      }\r\n      \r\n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\r\n        return true;\r\n      }\r\n      \r\n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\r\n        return true;\r\n      }\r\n      \r\n      if(p1[state1Col] != p2[state2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      var val1Col = 'State' + i + 'Value';\r\n      var val2Col = 'State' + j + 'Value';\r\n      if(p1[val1Col] != p2[val2Col]) {\r\n        return false;\r\n      }\r\n      \r\n      ++i;\r\n    }\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.data) {\r\n      var d = item.data;\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p != null) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(p != null) {\r\n        item.pid = p.id;\r\n      \r\n        if(item.potentialRatio == null) {\r\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\r\n        }\r\n      }\r\n      \r\n      delete item.data;\r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getPotentialRatio(p, totalRatio) {\r\n    \r\n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\r\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\r\n      if(ratio != 100) {\r\n        return ratio + '%';\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    \r\n    var fileName = null;\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\r\n      fileName = item.fileName + '.optimised.lzjson';\r\n    }\r\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      fileName = item.fileName + '.lzjson';\r\n    }\r\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      fileName = itemType.mainDnt\r\n    }\r\n\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.lzjson', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        type: 'techs', \r\n        minLevel: 24,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.lzjson', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \r\n        gemDnt: 'dragonjeweltable.optimised.lzjson',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.lzjson', \r\n        partsDnt: 'partstable.optimised.lzjson', \r\n        weaponDnt: 'weapontable.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \r\n        partsDnt: 'partstable_equipment.optimised.lzjson', \r\n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        potentialDnt: 'potentialtable.optimised.lzjson',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.lzjson', \r\n        partsDnt: 'partstable_reboot.optimised.lzjson', \r\n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \r\n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \r\n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.lzjson',\r\n        partsDnt: 'partstable_pvp.optimised.lzjson', \r\n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \r\n        enchantDnt: 'enchanttable.optimised.lzjson', \r\n        setDnt: 'setitemtable.optimised.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.lzjson', \r\n        partsDnt: 'partstable_common2016.lzjson', \r\n        weaponDnt: 'weapontable_common2016.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.lzjson', \r\n        partsDnt: 'partstable_common2015.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.lzjson', \r\n        partsDnt: 'partstable_common2014.optimised.lzjson', \r\n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.lzjson', \r\n        partsDnt: 'partstable_cash.optimised.lzjson', \r\n        weaponDnt: 'weapontable_cash.optimised.lzjson', \r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.lzjson',\r\n        partsDnt: 'partstable_event.optimised.lzjson',\r\n        weaponDnt: 'weapontable_event.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\r\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\r\n        setDnt: 'setitemtable_cash.optimised.lzjson',\r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items != null) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() { doComplete(itemSource, complete) });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs != null) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      \r\n      var numRows = data.length;\r\n      for(var r=0;r<numRows;++r) {\r\n        if(data[r].id == id) {\r\n          return data[r];\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs != null) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + buildName).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats != null && item.enchantmentStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats != null && item.sparkStats.length > 0) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + buildName).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id)\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + buildName).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    stepDefs: {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      sixtyLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      allLevelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      cashRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      techRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank.id == 3 && index == 0;\r\n            }\r\n            else {\r\n              return item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      otherRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 1, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      equipRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              // case 339: // Cow Wrangler\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              // case 1280: // Dragon Tamer\r\n              case 1313: // Jakard's Demise\r\n              case 2032: // Sharing Goddess's Grief\r\n                usefulTitles.push(allTitles[i]);\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ]\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    },\r\n    // end of step defs\r\n    \r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\r\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\r\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\r\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\r\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\r\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\r\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        return this.stepDefs[stepName].getOptions(category, build, datas);\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(this.stepDefs[stepName].hasOptions) {\r\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = this.stepDefs[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n        matchesItem: function(item) {\r\n          return def.matchesItem(value.id, item);\r\n        }\r\n      };\r\n    },\r\n    getItem: getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  }\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    // console.log('looking at ' + allItems.length + ' items');\r\n    var numItems = allItems.length;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    retVal = retVal.sort(function(item1, item2) {\r\n      return item1.name.localeCompare(item2.name);\r\n    });\r\n    \r\n    // console.log('found ' + retVal.length + ' items');\r\n    return retVal;\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\r\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\r\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\r\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\r\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\r\n      {region: 'ina', name: 'indonesian files from gemscool', url : 'https://inafiles-da491.firebaseapp.com'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = hostedFiles[0];\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      if(this.tlocation == null) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        angular.forEach(this.translationResettingEvents, function(event, index) {\r\n          event();\r\n        });\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        translations.location = this.tlocation.url;\r\n        translations.init(function() {}, function() { $route.reload(); });\r\n        // $route.reload();\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.tlocation != null) {\r\n        translations.location = this.tlocation.url;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n      \r\n      localStorage.setItem('lastSavedGroup', groupName);\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        if(updatedItems.length == 0) {\r\n          delete items[groupName];\r\n          this.setCurrentBuild(null);\r\n          // console.log('no items to update');\r\n        }\r\n        else {\r\n          items[groupName].items = updatedItems;\r\n          items[groupName].lastUpdate = (new Date()).getTime();\r\n          localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('set group');\r\n        }\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n        localStorage.setItem('lastSavedGroup', groupName);\r\n          // console.log('created group');\r\n      }\r\n      \r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    renameSavedGroup: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      var stringifiedData = JSON.stringify(savedItems);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getCustomItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    \r\n    saveCustomItems: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    getHiddenTypes: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    saveHiddenTypes: function(items) {\r\n      var stringifiedData = JSON.stringify(items);\r\n      // console.log('saving: ' + stringifiedData);\r\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      localStorage.setItem('currentGroup', buildName);\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        var setStats = [];\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value != null) {\r\n          \r\n          if(value.fullStats != null) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        var maxPdmg = dupeStat(5);\r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(minMdmg);\r\n        \r\n        var maxMdmg = dupeStat(7);\r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance})\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit (assume 25% crit resist - ie. x0.75)\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        // assume no elemental resist (since probably have resist reduction anyways)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1+Number(elementStat.max));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats != null && build.heroStats.length > 0) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var tFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        progressCallback.push(progress);\r\n        completeCallback.push(complete);\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location != null && this.location != '') {\r\n            fileName = this.location + '/' + tFile;\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + tFile;\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.floor(stat.max*100000)/1000) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: toNoDec, dps: true, pc: 50, skPc: 4050, searchable: true },\r\n      1  : {id: 1, name: 'agi', display: toNoDec, dps: true, pc: 51, skPc: 4051, searchable: true },\r\n      2  : {id: 2, name: 'int', display: toNoDec, dps: true, pc: 52, skPc: 4052, searchable: true },\r\n      3  : {id: 3, name: 'vit', display: toNoDec, def: true, pc: 53, skPc: 4053, searchable: true },\r\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, dps: true, pc: 54, searchable: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, dps: true, pc: 56, searchable: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: toNoDec, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54 },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56 },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true },\r\n\r\n      103: {id: 103, name: 'crit dmg', display: toNoDec, dps: true, pc: 104 },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\r\n      \r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', \r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n    },\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"],"sourceRoot":"/source/"}