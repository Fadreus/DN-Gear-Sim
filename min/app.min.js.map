{"version":3,"sources":["routes.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","about/about.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","document","body","className","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","encodeURIComponent","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","251","164","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats2","add","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var changeFileName = 'itemchangetable.lzjson';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 100000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1029, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}