{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-spark.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","stat","getReplaceAffectAmount","max","statId","floor","itemIndex","initReplaceAffects","fullStats2","newItems","fullStats1","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","encodeURIComponent","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","potentialIndex","sparks","spark","sparkId","sparkDnt","getSparks","nextSpark","getPotentialIndex","isMoreSparks","isFirstSpark","prevSpark","sid","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","getBaseJobName","baseName","dntName","setupSkills","allReady","EffectClass2","EffectClass3","EffectClass4","EffectClass6","NeedJob","numSkills","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","output","sep","needSetNum","display","stat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","reloadSkill","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","DragonJewelSlot4","dragonjeweltype","DragonJewelSlot2","fileType","itemTypeName","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","jobsDnt","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","allTitles","usefulTitles","enhanceEqStep","enhanceGemStep","isItemStep","itemStep","namedItemStep","techSkillStep","itemNames","itemNamesList","distinctItemNameStep","hideName","numStatsStep","numStats","itemNameStep","highStatStep","allItem","allStats","largestVal","quickHigh","val2","val1","hasStatStep","selectedVal","searchable","customStep","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","addStat","addAvgDamageStat","min","nonEleDamage","elementStat","critDamagePc","fdPc","avgDmg","secElementId","priElementId","dmgStat","secAvgDmg","secondaryElementStat","minPdmg","minMdmg","int","agi","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","paPwr","maxPdmg","intToPdmg","maxMdmg","extraPdmgMod","maPwr","intToMdmg","extraMdmg","strToMdmg","extraMdmgMod","crit","critChance","skCrit","cDmg","itemCrit","itemCtriDmg","fd","firePc","Cfinaldamage","icePc","maxFd","pow","eqHp","pdefEqHp","mdefEqHp","SkillIndex","effects","stillCols","valColName","effectId","vals","map","getVals","mapTo","effect","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","cdn","dragon nest gear simulator","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","toNoDec","inThousands","toPercent","dps","combineWith","noCustom","10","11","13","14","15","20","21","22","23","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","104","105","106","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","skillEffectMapping","34","35","36","37","39","87","88","89","185","251","164","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats2","add","stats1"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + buildName);\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    angular.forEach(item.stats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      angular.forEach(item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    angular.forEach(item2.stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: Math.floor(stat.max) * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 93;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.lzjson', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + newBuildName);\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.lzjson';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData','statHelper',\r\nfunction($timeout,dntData,statHelper) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\r\n\r\n['dntData','hCodeValues','items','itemColumnsToLoad',\r\nfunction(dntData,hCodeValues,items,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(this.item == null) return;\r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType || !vm.itemType.sparkDnt) {\r\n    return\r\n  }\r\n  \r\n  if(vm.itemType.sparkDnt) {\r\n    dntData.init(vm.itemType.sparkDnt, itemColumnsToLoad.sparkDnt, null, vm.getSparks);\r\n  }\r\n  \r\n  this.sparks = null;\r\n\r\n  this.nextSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index++;\r\n    if(index >= vm.sparks.length) {\r\n      index = 0;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.isMoreSparks = function() {\r\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\r\n  }\r\n  \r\n  this.isFirstSpark = function() {\r\n    return getPotentialIndex() == 0;\r\n  }\r\n  \r\n  this.prevSpark = function() {\r\n    var index = getPotentialIndex();\r\n    index--;\r\n    if(index < 0) {\r\n      index = vm.sparks.length-1;\r\n    }\r\n    var spark = vm.sparks[index]; \r\n    vm.item.sparkId = spark.id;\r\n    vm.item.sparkStats = hCodeValues.getStats(spark);\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.removeSpark = function() {\r\n    vm.item.sparkId = null;\r\n    vm.item.sparkStats = null;\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.getSparks = function() {\r\n    if(vm.item == null || vm.itemType == null) return null;\r\n    if(vm.sparks == null) {\r\n      var sid = vm.item.sparkTypeId;\r\n      if(sid) {\r\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\r\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.sparks;\r\n  }\r\n\r\n  function getPotentialIndex() {\r\n    var potentialIndex = -1;\r\n    if(vm.item.sparkId > 0) {\r\n      angular.forEach(vm.sparks, function(spark, index) {\r\n        if(spark.id == vm.item.sparkId) {\r\n          potentialIndex = index;\r\n          return;\r\n        }\r\n      });\r\n    }\r\n      \r\n    return potentialIndex;\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n}])\r\n.directive('dngearsimItemEditSpark', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSparkCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-spark.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n[function() {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n      angular.forEach(this.item.stats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: Math.floor(stat.max) * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.lzjson',\r\n    'itemgaintable_dragonjewel.lzjson',\r\n    'itemgaintable_enchant.lzjson',\r\n    'itemgaintable_etc.lzjson',\r\n    'itemgaintable_reboot.lzjson',\r\n    'itemgaintable_talisman.lzjson'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.lzjson',\r\n    'itemdroptable_abyss.lzjson',\r\n    'itemdroptable_apprentice.lzjson',\r\n    'itemdroptable_cook.lzjson',\r\n    'itemdroptable_darklair.lzjson',\r\n    'itemdroptable_dimension.lzjson',\r\n    'itemdroptable_disjoint.lzjson',\r\n    'itemdroptable_dnexpedition.lzjson',\r\n    'itemdroptable_event.lzjson',\r\n    'itemdroptable_farm.lzjson',\r\n    'itemdroptable_fishing.lzjson',\r\n    'itemdroptable_guildwar.lzjson',\r\n    'itemdroptable_item.lzjson',\r\n    'itemdroptable_monsteritem.lzjson',\r\n    'itemdroptable_propdrop.lzjson',\r\n    'itemdroptable_pvp.lzjson',\r\n    'itemdroptable_randomcompound.lzjson',\r\n    'itemdroptable_stageclear.lzjson',\r\n    'itemdroptable_themepark.lzjson',\r\n    'itemdroptable_union.lzjson']\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var charmItemtable = 'charmitemtable.lzjson';\r\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.lzjson',\r\n    'itemcompoundtable_custom.lzjson',\r\n    'itemcompoundtable_glyph.lzjson',\r\n    'itemcompoundtable_glyph95.lzjson',\r\n    'itemcompoundtable_jewel.lzjson',\r\n    'itemcompoundtable_renewal.lzjson',\r\n    'itemcompoundtable_set.lzjson'];\r\n  \r\n  var dropFile = 'itemdroptable.lzjson';\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.lzjson', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.lzjson',\r\n  'partstable_commoncash.lzjson',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.lzjson',\r\n  'partstable_guild.lzjson',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.lzjson',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.lzjson',\r\n  'weapontable_commoncash.lzjson',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.lzjson',\r\n  'weapontable_guild.lzjson',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.lzjson'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.lzjson';\r\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\r\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\r\n  // var shopFileName = 'shoptable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.lzjson';\r\n  var allItemFileName = 'all-items.lzjson';\r\n  var transferItemsFileName = 'enchanttransferitemtable.lzjson';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.lzjson';\r\n  var changeFileName = 'itemchangetable.lzjson';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.lzjson')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.lzjson', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.lzjson';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.lzjson', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.lzjson') &&\r\n      dntData.isLoaded('sealcounttable.lzjson');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.lzjson', null, $timeout);\r\n    dntData.init('sealcounttable.lzjson', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.lzjson', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + currentBuild;\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.lzjson';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues','itemCategory','$location', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues,itemCategory,$location) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() { setupSkills(baseJobNames, vm.job);} ); });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(newItem);\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.lzjson';\r\n  var statCaps = 'playercommonleveltable.lzjson';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.lzjson';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          angular.forEach(newItem.stats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: Math.floor(stat.max) * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(item.sparkId > 0) {\r\n        newItem.sparkId = item.sparkId;\r\n        var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\r\n        if(sparks.length > 0) {\r\n          newItem.sparkStats = hCodeValues.getStats(sparks[0]);\r\n          newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\r\n        }\r\n      }\r\n      else if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.lzjson', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.lzjson', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.lzjson'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.lzjson'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35) {        \r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.lzjson', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\r\n      var result = getItemDataFromFile(item.fileName + '.lzjson', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.lzjson', \r\n        potentialDnt: 'potentialtable_glyph95.lzjson',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        sparkDnt: 'potentialtable_potentialjewel.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.lzjson',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.lzjson',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.lzjson', \r\n        partsDnt: 'partstable_commoncash.lzjson', \r\n        weaponDnt: 'weapontable_commoncash.lzjson', \r\n        setDnt: 'setitemtable_cash.lzjson',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.lzjson',\r\n        petLevelDnt: 'petleveltable.lzjson', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.lzjson';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','numStatsStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: ['customStep'],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          { id: 70, name: 'level 70' }, \r\n          { id: 60, name: 'level 60' }, \r\n          { id: 50, name: 'level 50' }, \r\n          { id: 40, name: 'level 40' }, \r\n          { id: 32, name: 'level 32' }, \r\n          { id: 24, name: 'level 24' }, \r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\nfunction statHelper(hCodeValues) {\r\n\r\n  return {\r\n    \r\n    getSetStats: function(groupItems) {\r\n      var stats = [];\r\n      var sets = {};\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value !== null && value.setStats != null) {\r\n          if(value.setId in sets) {\r\n            sets[value.setId].numItems++;\r\n          }\r\n          else {\r\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n          }\r\n        }\r\n      });\r\n      \r\n      angular.forEach(sets, function(value, key) {\r\n        angular.forEach(value.stats, function(stat, index) {\r\n          if(stat.needSetNum <= value.numItems) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getNumItemsForSet: function(items, setId) {\r\n      var numItems = 0;\r\n      angular.forEach(items, function(value, key) {\r\n        if(value && value.setId && value.setId == setId) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      return numItems;\r\n    },\r\n    \r\n    getCombinedStats: function(groupItems) {\r\n      var stats = [];\r\n      \r\n      angular.forEach(groupItems, function(value, key) {\r\n        if(value) {\r\n          \r\n          if(value.fullStats) {\r\n            stats = stats.concat(value.fullStats);\r\n          }\r\n          else if(value.stats) {\r\n            stats = stats.concat(value.stats);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return hCodeValues.mergeStats(stats);\r\n    },\r\n    \r\n    getCalculatedStatsFromItems: function(group, items) {\r\n      var nakedStats = this.getNakedStats(group);\r\n      var combinedStats = this.getCombinedStats(items);\r\n      var setStats = this.getSetStats(items);\r\n      var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n      if(group.heroStats != null && group.heroStats.length > 0) {\r\n        allStats = allStats.concat(group.heroStats);\r\n      }\r\n      allStats = hCodeValues.mergeStats(allStats);\r\n      \r\n      return this.getCalculatedStats(group, allStats);\r\n    },\r\n    \r\n    getCalculatedStats: function(group, combinedStats) {\r\n      \r\n      var retVal = [];\r\n      var statLookup = {};\r\n      if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n        return [];\r\n      }\r\n      \r\n      angular.forEach(combinedStats, function(stat, index) {\r\n        statLookup[stat.id] = stat;\r\n      });\r\n      \r\n      function getPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.pc]) {\r\n          return Number(statLookup[statDef.pc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function getSkillPc(stat) {\r\n        var statDef = hCodeValues.stats[stat.id];\r\n        if(statLookup[statDef.skPc]) {\r\n          return Number(statLookup[statDef.skPc].max);\r\n        }\r\n        else {\r\n          return 0;\r\n        }\r\n      }\r\n      \r\n      function applyPc(stat) {\r\n        stat.max = Math.floor(\r\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n          );\r\n      }\r\n      \r\n      function dupeStat(id) {\r\n        var stat = statLookup[id];\r\n        if(stat) {\r\n          return {id: id, max: Number(stat.max), pc: stat.pc};\r\n        }\r\n        else {\r\n          return {id: id, max: 0, pc: 0};\r\n        }\r\n      }\r\n      \r\n      function addStat(stat) {\r\n        if(stat.max > 0) {\r\n          retVal.push(stat);\r\n        }\r\n      }\r\n\r\n      var critResist;\r\n      if(!('critResist' in group)) {\r\n        critResist = 0.20;\r\n      }\r\n      else {\r\n        critResist = group.critResist / 100.0;\r\n      }\r\n\r\n      var eleResist;\r\n      if(!('eleResist' in group)) {\r\n        eleResist = 0;\r\n      }\r\n      else {\r\n        eleResist = group.eleResist / 100.0;\r\n      }\r\n      \r\n      // base stats\r\n      var str = dupeStat(0);\r\n      applyPc(str);\r\n      addStat(str);\r\n      \r\n      var agi = dupeStat(1);\r\n      applyPc(agi);\r\n      addStat(agi);\r\n      \r\n      var int = dupeStat(2);\r\n      applyPc(int);\r\n      addStat(int);\r\n\r\n      var vit = dupeStat(3);\r\n      applyPc(vit);\r\n      addStat(vit);\r\n\r\n      // add vit to hp\r\n      var hp = dupeStat(25);\r\n      hp.max += (vit.max * Number(group.conversions.HP));\r\n      applyPc(hp);\r\n      addStat(hp);\r\n      \r\n      // defs\r\n      var def = dupeStat(8);\r\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n      applyPc(def);\r\n      addStat(def);\r\n      \r\n      var defpc = dupeStat(1008);\r\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(defpc);\r\n      \r\n      var mdef = dupeStat(9);\r\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n      applyPc(mdef);\r\n      addStat(mdef);\r\n      \r\n      var mdefpc = dupeStat(1009);\r\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n      addStat(mdefpc);\r\n      \r\n      // attack power - like fd but for bufs\r\n      // this shows as blue damage\r\n      // i think there are magic and phis variants of this but doesnt matter\r\n      var aPwr = dupeStat(3000);\r\n      \r\n      var minPdmg = dupeStat(4);\r\n      var maxPdmg = dupeStat(5);\r\n\r\n      // physical damage\r\n      if(!group.damageType || group.damageType.id != 2) {\r\n        var extraPdmg = dupeStat(32);\r\n        var extraPdmgMod= dupeStat(101);\r\n        var paPwr = dupeStat(3001);\r\n        \r\n        // special stats for zeal\r\n        var intToPdmg = dupeStat(10164);\r\n        \r\n        minPdmg.max += extraPdmg.max;\r\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(minPdmg);\r\n  \r\n        maxPdmg.max += extraPdmg.max;\r\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n        \r\n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n        addStat(maxPdmg);\r\n      }\r\n      \r\n      var minMdmg = dupeStat(6);\r\n      var maxMdmg = dupeStat(7);\r\n      \r\n      // magic damage\r\n      if(!group.damageType || group.damageType.id != 1) {\r\n        var extraMdmg = dupeStat(33);\r\n        var extraMdmgMod = dupeStat(102);\r\n        var maPwr = dupeStat(3002);\r\n        \r\n        // special stats for zeal\r\n        var strToMdmg = dupeStat(10165);\r\n        var intToMdmg = dupeStat(10372);\r\n        \r\n        minMdmg.max += extraMdmg.max;\r\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n\r\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(minMdmg);\r\n        \r\n        maxMdmg.max += extraMdmg.max;\r\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n        \r\n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n        maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n        addStat(maxMdmg);\r\n      }\r\n      \r\n      \r\n      // crit chance %\r\n      var crit = dupeStat(12);\r\n      crit.max += (agi.max*Number(group.conversions.Critical));\r\n      applyPc(crit);\r\n      \r\n      var skCrit = dupeStat(4012);\r\n      crit.max += skCrit.max;\r\n      addStat(crit);\r\n      var itemCrit = dupeStat(1012);\r\n      \r\n      var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n      retVal.push({id: 1012, max: critChance});\r\n\r\n      // crit damage %\r\n      var cDmg = dupeStat(103);\r\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n      applyPc(cDmg);\r\n      addStat(cDmg);\r\n\r\n      var itemCtriDmg = dupeStat(1103);\r\n      var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n      addStat({id: 1103, max: critDamagePc + 2});\r\n\r\n      // fd\r\n      var fd = dupeStat(29);\r\n      addStat(fd);\r\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n      \r\n      var fdPc = dupeStat(1029);\r\n      fdPc.max += Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\r\n      addStat(fdPc);\r\n      \r\n      // elements\r\n      var firePc = dupeStat(16);\r\n      addStat(firePc);\r\n      \r\n      var icePc = dupeStat(17);\r\n      addStat(icePc);\r\n      \r\n      var lightPc = dupeStat(18);\r\n      addStat(lightPc);\r\n      \r\n      var darkPc = dupeStat(19);\r\n      addStat(darkPc);\r\n      \r\n      // average damage\r\n      function addAvgDamageStat(id, min, max) {\r\n        \r\n        var nonEleDamage = (min+max)/2;\r\n        // add crit\r\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n        // apply fd\r\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\r\n        \r\n        // apply element(s)\r\n        var avgDmg = nonEleDamage;\r\n        if(group.element && group.element.id > 0) {\r\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\r\n          if(elementStat) {\r\n            avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n          }\r\n        }\r\n        addStat({id: id, max: avgDmg});\r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = group.element.id;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = group.secondaryElement.id;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n        \r\n        if(secElementId != priElementId) {\r\n          if(secElementId > 0) {\r\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\r\n            if(secondaryElementStat) {\r\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n              addStat({id: id + 1000, max: secAvgDmg});\r\n            }\r\n          }\r\n          else {\r\n            addStat({id: id + 1000, max: nonEleDamage});\r\n          }\r\n        }\r\n      }\r\n      \r\n      // average damages\r\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n      }\r\n\r\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\r\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n      }\r\n      \r\n      if(!group.damageType || group.damageType.id == 3) {\r\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n      }\r\n      \r\n      // Equivalent HP\r\n      var pdefEqHp = dupeStat(2008);\r\n      pdefEqHp.max = hp.max / (1-defpc.max);\r\n      \r\n      var mdefEqHp = dupeStat(2009);\r\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n      \r\n      var eqHp = dupeStat(3008);\r\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n      addStat(eqHp);\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getNakedStats: function(group) {\r\n      \r\n      if(\r\n        group.baseStats && \r\n        group.baseStats.Strength > 0) {\r\n\r\n        return [\r\n          {id:0, max:group.baseStats.Strength},\r\n          {id:1, max:group.baseStats.Agility},\r\n          {id:2, max:group.baseStats.Intelligence},\r\n          {id:3, max:group.baseStats.Stamina}\r\n          ];\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    getSkillStats : function (item, data, skillData) {\r\n\r\n      var skillLevelVals = null;\r\n      angular.forEach(skillData, function(value, index) {\r\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n          skillLevelVals = value;\r\n          return;\r\n        }\r\n      });\r\n      \r\n      if(!skillLevelVals) {\r\n        return null;\r\n      }\r\n      \r\n      var index = 1;\r\n      var effects = [];\r\n      var stillCols = true;\r\n      \r\n      while(stillCols) {\r\n        var colName = 'EffectClass' + index;\r\n        var valColName = 'EffectClassValue' + index;\r\n        if(data && colName in data && valColName in skillLevelVals) {\r\n          if(data[colName] > 0) {\r\n            \r\n            var val = skillLevelVals[valColName];\r\n            \r\n            // for now add 10k\r\n            var effectId = data[colName];\r\n            var map = hCodeValues.skillEffectMapping[effectId];\r\n            if(map && map.getVals) {\r\n              var vals = map.getVals(val);\r\n              for(var i=0;i<vals.length;++i) {\r\n                effects.push(vals[i]);\r\n              }\r\n            }\r\n            else {\r\n              var statId;\r\n              if(map && map.mapTo) {\r\n                statId = map.mapTo;\r\n              }\r\n              else {\r\n                statId = 10000 + effectId;\r\n              }\r\n              \r\n              if(val > 0) {\r\n                effects.push({ id: statId, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                if(val.toString().indexOf(';') > 0) {\r\n                  var vals = val.split(';');\r\n                  if(vals.length > 0 && vals[0] > 0) {\r\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          stillCols = false;\r\n        }\r\n        \r\n        index++;\r\n      }\r\n      \r\n      return effects;\r\n    },\r\n\r\n    getBuildStats: function(build) {\r\n      var stats = {};\r\n      stats.nakedStats = this.getNakedStats(build);\r\n      stats.combinedStats = this.getCombinedStats(build.items);\r\n      stats.setStats = this.getSetStats(build.items);\r\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n      if(build.heroStats && build.heroStats.length) {\r\n        stats.heroStats = build.heroStats;\r\n        stats.allStats = stats.allStats.concat(build.heroStats);\r\n      }\r\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n      \r\n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n      return stats;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($routeParams, $rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.lzjson';\r\n  var bigFile = 'uistring.lzjson';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\nfunction hCodeValues() {\r\n\r\n  function toOneDec(stat) {\r\n    return Math.round(stat.max*10)/10;\r\n  }\r\n  function toNoDec(stat) {\r\n    return Math.floor(stat.max);\r\n  }\r\n  function inThousands(stat) {\r\n    var val = Number(stat.max);\r\n    if(val < 100) {\r\n      return val;\r\n    }\r\n    else if(val < 100000) {\r\n      return Math.round(val/100)/10 + 'k';\r\n    }\r\n    else if(val < 1000000) {\r\n      return Math.round(val/1000) + 'k';\r\n    }\r\n    else if(val < 10000000) {\r\n      return Math.round(val/10000)/100 + 'm';\r\n    }\r\n    else {\r\n      return Math.round(val/1000000) + 'm';\r\n    }\r\n  }\r\n  function toPercent(stat) {\r\n    return (Math.round(stat.max*10000)/100) + '%';\r\n  }\r\n  \r\n  return {\r\n    stats : {\r\n      0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n      1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n      2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n      3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n      4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true },\r\n      5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55 },\r\n      6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true },\r\n      7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57 },\r\n      8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n      9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n      12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n      16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true },\r\n      17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true },\r\n      18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true },\r\n      19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true },\r\n      20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n      21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n      22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n      23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n      25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n      26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n      29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1029, searchable: true },\r\n      \r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      32 : {id: 32, name: 'pdmg', display: toNoDec, dps: true, pc: 54, quickHigh: true },\r\n      33 : {id: 33, name: 'mdmg', display: toNoDec, dps: true, pc: 56, quickHigh: true },\r\n      \r\n      50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n      51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n      52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n      53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n      58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n      59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n      62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n      63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n      75 : {id: 75, name: 'hp%', display: toPercent, def: true },\r\n      76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n      77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n      // these are both min and max\r\n      // shows with the same name but these are used really just for set bonus I think\r\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true },\r\n\r\n      103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n      105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n      106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n      \r\n      // stats below here are ones I made up\r\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n      \r\n      1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n      1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n      \r\n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12 },\r\n      1029: {id: 1029, name: 'fd', display: toPercent, noCustom: true, dps: true, summaryFor: 29 },\r\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103 },\r\n      \r\n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n      \r\n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n      \r\n      3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n      3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n      3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n      \r\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n      \r\n      4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n      4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n      4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n      4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n      4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n      4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n      4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n      \r\n      // special cases for skills\r\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n      // items over 10000 are unknown skill effects\r\n    },\r\n  \r\n    rankNames : {\r\n      0 : { id: 0, name : 'normal' },\r\n      1 : { id: 1, name : 'magic' },\r\n      2 : { id: 2, name : 'rare' },\r\n      3 : { id: 3, name : 'epic' },\r\n      4 : { id: 4, name : 'unique' },\r\n      5 : { id: 5, name : 'legendary' },\r\n      // 6 : { id: 6, name : 'divine' },\r\n    },\r\n    \r\n    shopNames : {\r\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n      59001: 'garden bunny',\r\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n      89001: 'guild master',\r\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n      66001: 'erosion',\r\n      35006: 'plate',\r\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n      40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n      91001: 'wrath',\r\n      45001: 'farm',\r\n      100004: 'event',\r\n      89000: 'nightmare'\r\n    },\r\n    \r\n    checkedRank : {\r\n      0 : true,\r\n      1 : true,\r\n      2 : true,\r\n      3 : true,\r\n      4 : true,\r\n      5 : true,\r\n    },\r\n    \r\n    typeNames : {\r\n      0 : 'weapons',\r\n      1 : 'equipment',\r\n      5 : 'plates',\r\n      8 : 'pouch',\r\n      38 : 'plates',\r\n      90 : 'welspring',\r\n      132 : 'talisman',\r\n      139 : 'gems',\r\n    },\r\n    \r\n    elements : {\r\n      0 : { id: 0, name: 'non-ele' },\r\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n      3 : { id: 3, name: 'light', dmgStat: 18 },\r\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n    },\r\n    \r\n    damageTypes : {\r\n      0 : { id: 0, name: 'both separate' },\r\n      1 : { id: 1, name: 'physical' },\r\n      2 : { id: 2, name: 'magical' },\r\n      3 : { id: 3, name: 'both combined' },\r\n    },\r\n    \r\n    // note: skills shown on-screen have 1k added to their id\r\n    skillEffectMapping : {\r\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n      13 : { id: 13, name: 'mp', mapTo: 26 },\r\n      25 : { id: 25, name: 'action speed' },\r\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n      34 : { id: 34, name: 'light %', mapTo: 18 },\r\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n      38 : { id: 38, name: 'light def', mapTo: 22 },\r\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n      65 : { id: 65, name: 'range' },\r\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n      // 134 : { id: 134, name: 'p dmg reduction%' },\r\n      // 135 : { id: 135, name: 'm dmg reduction%' },\r\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n      222: {\r\n        id: 222, \r\n        name: 'hellfire', \r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            return [\r\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n              {id: 4012, effect: 222, max: Number(vals[1])},\r\n              ];\r\n          }\r\n          else {\r\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n          }\r\n        }\r\n      },\r\n      372: {\r\n        id: 372,\r\n        name: 'statConversion',\r\n        getVals: function(val) {\r\n          if(val.indexOf(';') > 0) {\r\n            var vals = val.split(';');\r\n            if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n              return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n            }\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      \r\n      389: { id: 389, name: 'fd buf', mapTo: 1029 },\r\n      404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n    },\r\n    \r\n    gemExchanges: [\r\n      {id: 2, exchange: 1, name: 'Weapon'},\r\n      {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n      {id: 4, exchange: 3, name: 'Headgear'},\r\n      {id: 5, exchange: 4, name: 'Body Armor'},\r\n      {id: 6, exchange: 5, name: 'Leg Armor'},\r\n      {id: 7, exchange: 6, name: 'Gloves'},\r\n      {id: 8, exchange: 7, name: 'Shoes'},\r\n      {id: 101, exchange: 8, name: 'Necklace'},\r\n      {id: 102, exchange: 9, name: 'Earrings'},\r\n      {id: 103, exchange: 10, name: 'Ring'},\r\n    ],\r\n    \r\n    customItems: \r\n    [\r\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n    ],\r\n  \r\n    getStats : function(data) {\r\n\r\n      var useMax=false;\r\n      var useStateXVal=false;\r\n      var mightHaveSets=true;\r\n      var prop = 'State1_Max';\r\n      if(prop in data) {\r\n        useMax = true;\r\n      }\r\n      else {\r\n        prop = 'State1Value';\r\n        if(prop in data) {\r\n          useStateXVal = true;\r\n        }\r\n      }\r\n      \r\n      var currentState = 0;\r\n      var statVals = [];\r\n      for(;;) {\r\n        currentState++;\r\n        \r\n        var stateProp = 'State' + currentState;\r\n        if(!(stateProp in data)) {\r\n          break;\r\n        }\r\n\r\n        var stateId = data[stateProp];\r\n        if(stateId == -1) {\r\n          break;\r\n        }\r\n        \r\n        if(stateId == 107) {\r\n          // is this mp?\r\n        }\r\n        else {\r\n          \r\n          var currentData = { id: stateId };\r\n          \r\n          var prop;\r\n        \r\n          if(useMax) {\r\n            prop = 'State' + currentState + '_Max';\r\n            currentData.max = data[prop];\r\n          }\r\n          else if(useStateXVal) {\r\n            prop = 'State' + currentState + 'Value';\r\n            currentData.max = data[prop];\r\n          }\r\n          else {\r\n            prop = 'StateValue' + currentState;\r\n            currentData.max = Number(data[prop]);\r\n          }\r\n          \r\n          if(currentData.max > 0 || currentData.max < 0) {\r\n            if(mightHaveSets) {\r\n              prop = 'NeedSetNum' + currentState;\r\n              if(prop in data) {\r\n                if(data[prop] == 0) {\r\n                  break;\r\n                }\r\n                currentData.needSetNum = data[prop];\r\n              }\r\n              else {\r\n                mightHaveSets = false;\r\n              }\r\n            }\r\n          \r\n            statVals.push(currentData);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return statVals;\r\n    },\r\n    \r\n    setupStat : function(stat, id) {\r\n      stat.id = Number(id);\r\n    },\r\n    \r\n    mergeStats : function(stats1, stats2) {\r\n      var statMap = {};\r\n      \r\n      var self = this;\r\n      function add(value) {\r\n        \r\n        var amount = Number(value.max);\r\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        if(value.id in statMap) {\r\n          statMap[value.id] += amount;\r\n        }\r\n        else {\r\n          statMap[value.id] = amount;\r\n        }\r\n      }\r\n      \r\n      angular.forEach(stats1, function(value, key) {\r\n        if(value) {\r\n          add(value);\r\n        }\r\n      });\r\n      \r\n      if(stats2) {\r\n        angular.forEach(stats2, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n      }\r\n      \r\n      var newStats = [];\r\n      \r\n      for(var key in statMap) {\r\n        var stat = { max : statMap[key], id: Number(key) };\r\n        newStats.push(stat);\r\n      }\r\n        \r\n      return newStats;\r\n    }\r\n  }\r\n}\r\n\r\n})();"]}