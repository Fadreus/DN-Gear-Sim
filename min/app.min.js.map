{"version":3,"sources":["routes.js","about/aboutController.js","filters/filters.js","builds/buildActionsController.js","builds/buildController.js","builds/buildItemController.js","builds/buildListController.js","builds/buildStatsController.js","builds/buildSummaryController.js","builds/buildTalismansController.js","builds/deleteBuildController.js","builds/editBuildController.js","builds/quickAddController.js","builds/viewGroupController.js","item/equipmentController.js","item/groupAssignmentController.js","item/itemEditCustomController.js","item/itemEditEnchantmentController.js","item/itemEditPotentialController.js","item/itemEditSkillController.js","item/itemEditSparkController.js","item/itemEditTalismanController.js","item/itemViewBoxController.js","item/itemViewCraftController.js","item/itemViewExtractionController.js","item/itemViewPlateController.js","item/itemViewSetController.js","item/itemViewShopController.js","item/itemViewTransferController.js","region/regionController.js","search/customItemsController.js","search/itemSearchController.js","search/skillSearchController.js","secrets/itemsController.js","nav/exportController.js","nav/navController.js","nav/setupController.js","widgets/dnsimCategoryLinks.js","widgets/dnsimItemIcon.js","widgets/dnsimItemLink.js","widgets/dnsimJobIcon.js","widgets/dnsimLoading.js","widgets/dnsimSelectAllOnClick.js","widgets/dnsimStats.js","widgets/dnsimStringToNumber.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemFactoryService.js","itemSourceService.js","jobService.js","quickAddService.js","regionService.js","saveService.js","statService.js","translationService.js","valueServices.js"],"names":["config","$routeProvider","when","templateUrl","controller","redirectTo","reloadOnSearch","otherwise","angular","module","$window","document","body","className","title","filter","input","Math","round","$stateful","$timeout","$location","hCodeValues","statHelper","itemCategory","saveHelper","exportLinkHelper","groupHelper","translations","dntData","dntReset","tryInit","vm","reloaded","allLoaded","files","getDntFiles","build","forEach","columns","fileName","isLoaded","newItems","reloadGroup","buildName","updatedSavedItems","items","onChange","progress","this","deleteGroup","path","editGroup","copyGroup","newGroupName","importGroup","renameSavedGroup","enemyLevel","playerLevel","heroLevel","job","damageType","element","secondaryElement","enemyStatCaps","playerStatCaps","conversions","baseStats","heroStats","init","createShortUrl","setShortUrl","longUrl","createGroupLink","shortUrl","sessionStorage","getItem","directive","scope","bindToController","controllerAs","stats","getBuildStats","selectedCategory","localStorage","category","byName","getCategoryItems","getItemsByCategory","name","getCategories","categories","setSelectedCategory","value","setItem","toggleGroup","url","getSaveDate","group","lastUpdate","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","allowMoreItems","maxCat","length","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","item","index","typeName","offensiveGemSlots","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","increasingGemSlots","number","numItems","cat","numItemText","handleChange","removeItem","newItemList","gItem","push","$anchorScroll","$routeParams","currentGroup","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","sort","builds","i","groupName","saveBuildSelection","anyItems","createGroup","console","log","itemsByCategory","getBuildSummary","summary","itemsByType","type","jobs","itemColumnsToLoad","character","saveGroup","calcStatPercent","newVal","origVal","scrollTo","groupNames","getGroupCalcStats","groupCalcStats","getCalculatedStats","getBuild","pickup","selectedIndex","replaceHPAffectAmount","replaceMDmgAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","nakedStats","getNakedStats","combinedStats","getCombinedStats","setStats","getSetStats","allStats","concat","mergeStats","nextGroup","uptoItem","updateRows","prevGroup","foundGroup","headers","summaryStatIds","id","summaryDisplay","pcIndexes","rows","pcIndex","enchantmentNum","rowIndex","makeFakeCells","data","makeCell","num","click","col","move","swapEnchantmentNumber","setTalisman","splice","replaceAffectAmount","newEnhancementNum","extraStats","stat","max","enchantmentStats","fullStats","getReplaceAffectAmount","statId","itemIndex","initReplaceAffects","item2","fullStats1","fullStats2","newStats","origStats","getStat","getStatName","retVal","eleId","elements","len","save","newGroup","oldGroupName","damageTypes","getFinalJobs","allJobs","finalJobs","j","getBaseJobName","bJob","getBaseJobs","getJobName","englishName","getAllJobs","d","EnglishName","newJobs","key","setHeroStats","setJob","getStatCap","colName","useLevel","getStatCaps","getJobConversion","getConversions","getJobBaseStat","getBaseStats","invalidGroupName","ok","getHeroStats","getElementById","focus","setSelectionRange","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","newItem","dntFiles","tryToAddItem","anyLoading","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","$scope","region","getById","setLocationByName","g","e","p","h","t","s","itemString","split","itemStr","decodeItem","isLoading","newBuildName","itemFactory","needJobClass","jobName","anyToLoad","reportProgress","setFullStats","itemSource","pve","itemData","getItemData","DisjointDrop1","canExtract","Type","canTransfer","setId","isInSet","typeId","isPlate","canUse","detail","hasContents","sparkStats","msg","itemType","getDescription","description","mainDnt","find","DescriptionID","translate","DescriptionIDParam","getExchangeType","exchangeDnt","exchangeType","exchange","NameID","toLowerCase","setDetail","getServerStorage","IsCash","AbleWStorage","dntLocation","encodeItem","replace","clearGroup","addAffectAmount","groupItems","getAddAffectAmount","initAddAffects","getGroupItems","numMatches","str","itemSplit","indexOf","a","b","hasMaxExchangable","maxExchange","addToGroup","replaceItem","newStatVal","dropdownStats","noCustom","getStats","newStat","addStat","removeStat","getNewStatName","getNewStatDisplayValue","getStatDisplayValue","display","enchantments","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","EnchantLevel","NeedCoin","isMaxEnchantLevel","setEnchantmentNum","enhancementOption","nextEnchantment","getOption","prevEnchantment","getEnchantments","enchantmentId","enchantDnt","eid","showMaterials","materials","itemId","itemCount","NameIDParam","material","icon","IconImageIndex","rank","Rank","levelLimit","LevelLimit","getPotentialStats","pStats","emptyStatId","potentials","sIndex","hide","potential","changingPotentials","potentialStats","pid","getPotentials","potentialDnt","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","initSkills","dntFile","baseJobName","skillData","isMaxSkillLevel","getPotentialIndex","potentialIndex","sparkId","sparks","spark","nextSpark","isMoreSparks","isFirstSpark","prevSpark","removeSpark","getSparks","sid","sparkDnt","amount","pouchFileNames","allItemFileName","charmItemtable","commonCharmItemtable","initBoxContents","getCharmItems","TypeParam1","f","getPouchItems","boxType","pouchFileName","pouchData","gold","GoldMin","isGroup","pouchItem","pouchItemCount","itemds","count","createBasicItem","charmFiles","charmData","getData","c","cd","CharmNum","Look","ItemID","Count","Gold","crafts","cFiles","initCrafts","initCraft","newCrafts","found","k","fCrafts","craft","Cost","itemColName","qtyColName","extractFileName","initExtract","disjoint","EnchantID","DisjointDrop","getItems","getGold","Number","Disjointamount","getPlates","plateFile","r","row","allFiles","initSets","getSetItems","getCombinedCosts","shops","item1s","PurchaseItem1","item2s","PurchaseItem2","shopCost","shopName","ShopID","tabName","TabNameID","nightmarePoints","ladderPoints","item1","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","shopCosts","cShopFileName","cSysShopFileName","cCashShopFileName","initShops","newShopCosts","matchingTransfers","transferFileName","initTransfers","transfers","NeedItemID1","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","ResultRank","NeedItemCount1","NeedItemCount2","$route","getDntLocation","getTlocation","tlocation","getHostedFiles","hostedFiles","getWorldName","setTLocation","location","edit","setLocation","updateParams","customItems","maxDisplay","currentResults","nameSearch","getResults","createCustomItem","jobInit","lastJobNumber","byPath","catName","toUpperCase","minLevel","maxLevel","totalNumResults","grades","savedSearchStatId","hideLevel","hideJob","rankChecked","checkedRank","pcStatId","getTime","pc","statVals","newResults","numEquip","curDisplay","hideRank","isClassJob","initItem","nameSearches","allMatch","ns","statFound","statVal","min","value1","value2","statResults","showMoreResults","extra","getDntName","baseClassName","getSkills","loadedJobId","skills","baseJobNames","baseName","dntName","setupSkills","allReady","numSkills","EffectClass1","EffectClass2","EffectClass3","EffectClass4","EffectClass5","EffectClass6","NeedJob","hasStartedLoading","startedLoading","translationsInit","itemLinkClosed","saveCustomItems","getCustomItems","toString","boxes","boxeContents","initBoxes","box","numBoxes","nameId","nameParam","rawSavedData","exportData","JSON","stringify","LZString","compressToUTF16","aboutAction","noLocationMenu","normalMenu","isSearch","noRegion","fireAction","action","getActions","menu","extraCss","dntInit","translationsStatus","progressTranslations","testResults","translationResults","advancedSetup","noLocation","sessionLocation","alternativeFiles","saveLocation","existingFile","resetSessionData","clear","hash","reload","loadUiString","setCustomUrl","testLocation","dnsimCategoryLinks","restrict","link","attrs","setCategory","dnsimItemIcon","$watch","newValue","oldValue","iconImage","getIcon","prefix","fileIndex","floor","getIconXPostion","getIconYPostion","dnsimItemLink","noClick","itemLink","openItem","dnsimJobIcon","JobIcon","dnsimLoading","transclude","$on","setLoadCount","loadError","n","numLoading","totalToLoad","dnsimSelectAllOnClick","hasSelectedAll","on","$event","selectionStart","selectionEnd","err","select","dnsimStats","altStats","separator","showStats","append","text","newElement","clone","css","originalDisplay","html","lastElement","after","addedElements","remove","first","output","def","sep","needSetNum","combineWith","stat2","key2","dnsimStringToNumber","require","ngModel","$parsers","$formatters","parseFloat","jobConversions","statCaps","jobBaseStats","heroLevels","heroLevelPotentials","complete","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","findFast","getRow","pIndex","HeroLevelAbilityID","jobId","factory","TypeParam2","TypeParam3","NeedJobClass","State1","StateValue1","State1_Max","State1_GenProb","State2","StateValue2","State2_Max","State3","StateValue3","State3_Max","State4","StateValue4","State4_Max","State5","StateValue5","State5_Max","State6","StateValue6","State6_Max","State7","StateValue7","State7_Max","State8","StateValue8","State8_Max","State9","StateValue9","State9_Max","State10","StateValue10","State10_Max","SkillID","dragonjeweltype","ExchangeType","partsDnt","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID3","NeedItemCount3","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State1Value","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State11","State11Value","State12","State12Value","State13","State13Value","State14","State14Value","State15","State15Value","State16","State16Value","gemDnt","setDnt","jobsDnt","JobName","JobNumber","BaseClass","ParentJob","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","Cfinaldamage","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","createLoader","file","colsToLoad","loader","reader","DntReader","loaded","progressCallback","completeCallbacks","$broadcast","loadDntFromServerFile","result","loaders","findIndexes","Array","numRows","column","results","numResults","colIndex","columnIndexes","findIndex","val","resetAll","getNumRows","lookupValue","columnName","columnNames","convertData","getValue","initFactory","allFactories","prop","newFactory","source","$http","small","itemTypeName","itemBit","bitIndex","charAt","parseInt","substr","statString","statBit","statBitIndex","splitStat","itemStrings","self","encodeURI","join","window","href","post","success","status","error","skillDnt","pv","skillLevelDnt","skillLevelDatas","skillLevelVals","SkillIndex","SkillLevel","SkillExplanationID","SkillExplanationIDParam","getSkillStats","ds","totalRatio","ps","createItem","setItemCategory","usePartDnt","parts","sets","DragonJewelSlot1","DragonJewelSlot2","DragonJewelSlot3","DragonJewelSlot4","weaponDnt","allDntFiles","key1","sourceType","limitExchange","sourceName","loading","loadItems","catItems","isItemForCat","rawData","gemTypes","gem","itemMap","types","sorted","enh1","enh2","localeCompare","typeError","itemSourceName","potentialRatio","dType","dLevelLimit","dRank","minRank","dState1_GenProb","dStateValue1","dTypeParam1","exists","numPotentials","q","potentialsMatch","end","time","p1","p2","state1Col","state2Col","val1Col","val2Col","skillId","iconIndex","getPotentialRatio","ratio","doComplete","itemSources","tech","tman","plate","eq","rbeq","pvpeq","c2016","c2015","c2014","cash","event","xtras","alljobs","baseJobs","createJob","parentJob","parentJobData","isItemStep","alterItem","findData","maxItems","addItem","matchesItem","stepDefs","exchangeStep","exchanges","exId","numExchange","exName","accExchangeStep","sixtyLevelStep","allLevelStep","cashRankStep","techRankStep","talismanRankStep","gemRankStep","otherRankStep","equipRankStep","enhanceTalismanStep","titleStep","allTitles","usefulTitles","enhanceStep","itemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","distinctItemNameStep","numStatsStep","numStats","customStep","categorySteps","titles","weapons","armour","accessories","offensive gems","increasing gems","enhancement plates","expedition plates","talisman","costume","techs","custom","stepName","getStepName","step","dntLocationRegion","hostedFile","lastTFile","newFiles","locationName","newLocation","translationResettingEvents","groups","isArray","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","stringifiedData","decompressFromUTF16","parse","ex","getHiddenTypes","saveHiddenTypes","getPc","statDef","statLookup","getSkillPc","skPc","applyPc","dupeStat","addAvgDamageStat","nonEleDamage","critChance","critDamagePc","fdPc","avgDmg","elementStat","dmgStat","secElementId","priElementId","secondaryElementStat","secAvgDmg","agi","int","vit","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","extraPdmgMod","paPwr","intToPdmg","minPdmg","maxPdmg","extraMdmg","extraMdmgMod","maPwr","strToMdmg","minMdmg","maxMdmg","crit","skCrit","cDmg","fd","maxFd","pow","firePc","icePc","lightPc","darkPc","pdefEqHp","mdefEqHp","eqHp","effects","stillCols","valColName","effectId","map","skillEffectMapping","getVals","vals","mapTo","effect","calculatedStats","dnTranslations","DnTranslations","tFile","completeCallback","sizeLimit","loadDefaultFile","loadFromSession","idParam","params","toNoDec","inThousands","toPercent","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","25","26","29","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","101","102","103","104","107","1001","1004","1006","1008","1009","1012","1029","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","28001","28002","28003","28004","28005","28006","28007","28008","28009","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","91001","45001","typeNames","38","90","132","139","34","35","36","37","39","87","88","89","134","185","251","164","165","222","useMax","useStateXVal","mightHaveSets","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add","statMap"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n'use strict';\n\nangular.module('dnsim').config(['$routeProvider', config]);\n\nfunction config($routeProvider) {\n\n  $routeProvider.\n  \n    when('/about', {\n      templateUrl: 'ui/about/about.html',\n      controller: 'AboutCtrl as about'\n    }).\n    \n    when('/setup', {\n      templateUrl: 'ui/nav/setup.html',\n      controller: 'SetupCtrl'\n    }).\n    when('/test', {\n      templateUrl: 'ui/nav/test.html',\n      controller: 'TestCtrl'\n    }).\n    \n    when('/items/', {\n      templateUrl: 'ui/secrets/items.html',\n      controller: 'ItemsCtrl as items'\n    }).\n    \n    when('/', {\n      redirectTo: '/builds'\n    }).\n    when('/saved', {\n      redirectTo: '/builds'\n    }).\n    when('/saved/:groupName*', {\n      redirectTo: '/builds/:groupName'\n    }).\n    when('/builds', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/builds/:groupName*', {\n      templateUrl: 'ui/builds/build-list.html',\n      controller: 'BuildListCtrl as buildList'\n    }).\n    when('/view-group/:region?', {\n      templateUrl: 'ui/builds/view-group.html',\n      controller: 'ViewGroupCtrl'\n    }).\n    when('/edit-build/:groupName*', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      reloadOnSearch: false,\n    }).\n    when('/new-build', {\n      templateUrl: 'ui/builds/edit-build.html',\n      controller: 'EditBuildCtrl as editGroup',\n      reloadOnSearch: false,\n    }).\n    when('/delete-build/:name*', {\n      templateUrl: 'ui/builds/delete-build.html',\n      controller: 'DeleteBuildCtrl as deleteBuild',\n      reloadOnSearch: false,\n    }).\n    \n    when('/item-search', {\n      redirectTo: '/search'\n    }).\n    when('/item-search/:itemType', {\n      redirectTo: '/search/:itemType'\n    }).\n    \n    when('/search', {\n      templateUrl: 'ui/search/item-search.html',\n      controller: 'ItemSearchCtrl'\n    }).\n    when('/search/custom', {\n      templateUrl: 'ui/search/custom-items.html',\n      controller: 'CustomItemCtrl as customItems'\n    }).\n    when('/search/skills', {\n      templateUrl: 'ui/search/skill-search.html',\n      controller: 'SkillSearchCtrl as skillSearch'\n    }).\n    when('/search/:itemType*', {\n      templateUrl: 'ui/search/item-search.html',\n      controller: 'ItemSearchCtrl'\n    }).\n    \n    when('/item/:region?/:itemString*', {\n      templateUrl: 'ui/item/equipment.html',\n      controller: 'EquipmentCtrl',\n      reloadOnSearch: false,\n    }).\n    \n    when('/export', {\n      templateUrl: 'ui/nav/export.html',\n      controller: 'ExportCtrl',\n    }).\n    \n    when('/talismans', {\n      templateUrl: 'ui/builds/build-talismans.html',\n      controller: 'BuildTalismansCtrl as ctrl',\n    }).\n    \n    otherwise({\n      redirectTo: '/builds'\n    });\n}\n\n})();","angular.module('dnsim')\n.controller('AboutCtrl', \n  ['$window',\n  function($window) {\n    'use strict';\n    document.body.className = 'default-back';\n    $window.document.title = 'DN Gear Sim';\n  }]\n);\n","angular.module('dnsim').filter('percentage', [function() {\n  'use strict';\n\n  function filter(input) {\n    if(typeof input == 'number') {\n      return (Math.round(input * 100 * 100) / 100) + '%';\n    }\n    else {\n      return input;\n    }\n  }\n  filter.$stateful = false;\n\n  return filter;\n}])","angular.module('dnsim').controller('buildActionsCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.deleteGroup = function() {\n    $location.path('/delete-build/' + vm.buildName);\n  }\n  \n  this.editGroup = function() {\n    $location.path('/edit-build/' + vm.buildName)\n  }\n  \n  this.copyGroup = function() {\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\n    \n    saveHelper.renameSavedGroup(\n      newGroupName, \n      newGroupName,\n      vm.build.enemyLevel,\n      vm.build.playerLevel,\n      vm.build.heroLevel,\n      vm.build.job,\n      vm.build.damageType,\n      vm.build.element,\n      vm.build.secondaryElement,\n      vm.build.enemyStatCaps, \n      vm.build.playerStatCaps, \n      vm.build.conversions, \n      vm.build.baseStats, \n      vm.build.heroStats);\n    \n    $location.path('/builds/' + newGroupName);\n  }\n  \n  this.reloaded = false;\n  this.reloadGroup = function() {\n    dntReset();\n    vm.reloaded = false;\n    \n    translations.init(progress, tryInit);\n\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      dntData.init(fileName, columns, progress, tryInit);\n    });\n    \n    vm.onChange();\n  }\n\n  function tryInit() {\n    if(vm.reloaded) {\n      return;\n    }\n    \n    var allLoaded = true;\n    var files = groupHelper.getDntFiles(vm.build);\n    angular.forEach(files, function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        allLoaded = false;\n        return;\n      }\n    });\n    \n    if(allLoaded && translations.isLoaded()) {\n      var newItems = groupHelper.reloadGroup(vm.buildName, vm.build);\n      saveHelper.updatedSavedItems(vm.buildName, newItems);\n      vm.build.items = newItems;\n      \n      vm.reloaded = true;\n      $timeout(vm.onChange);\n    }\n  }\n  \n  function progress() {\n  }\n  \n  this.createShortUrl = function() {\n    exportLinkHelper.createShortUrl(vm.buildName, vm.build);\n  }\n    \n  this.setShortUrl = function() {\n    if(vm.build) {\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\n    }\n  }\n  \n  this.setShortUrl();\n}])\n.directive('dngearsimBuildActions', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildActionsCtrl',\n    controllerAs: 'buildActions',\n    templateUrl: 'ui/builds/build-actions.html'\n  };\n});","angular.module('dnsim').controller('buildCtrl',\n\n['$timeout','$location','hCodeValues','statHelper','itemCategory',\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  \n  var selectedCategory = localStorage.getItem('selectedItemCategory');\n  this.category = itemCategory.byName(selectedCategory);\n  if(!this.category) {\n    selectedCategory = 'titles';\n    this.category = itemCategory.byName('titles');\n  }\n  \n  this.getCategoryItems = function() {\n    return itemCategory.getItemsByCategory(this.build.items)[vm.category.name];\n  }\n  \n  this.getCategories = function() {\n    return itemCategory.categories;\n  }\n    \n  this.setSelectedCategory = function(value) {\n    this.category = itemCategory.byName(value);\n    localStorage.setItem('selectedItemCategory', value);\n  }\n\n  this.toggleGroup = function() {\n    localStorage.setItem('currentGroup', null);\n    $location.url('/builds');\n  }\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.allowMoreItems = function() {\n    return !vm.category.maxCat || this.getCategoryItems().length < vm.category.maxCat;\n  }\n  \n  this.getItemCount = function() {\n    var itemCountText = '';\n    var allItems = vm.build.items;\n    \n    if(vm.category.name == 'offensive gems') {\n      var numOffensiveSlots = 0;\n      var numOffensiveGems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          numOffensiveGems++;\n        }\n        else if(item.offensiveGemSlots) {\n          numOffensiveSlots += item.offensiveGemSlots;\n        }\n      });\n      \n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\n    }\n    else if(vm.category.name == 'increasing gems') {\n      \n      var totalIncreasingGems = 0;\n      var numIncreasingSlots = 0;\n      var numIncreasingGems = {};\n      angular.forEach(allItems, function(item, index) {\n        if(item.typeName == vm.category.name) {\n          var gemType = item.sparkTypeId;\n          if(!gemType) {\n            gemType = 0;\n          }\n          \n          if(!(gemType in numIncreasingGems)) {\n            numIncreasingGems[gemType] = 0;\n          }\n          numIncreasingGems[gemType]++;\n          totalIncreasingGems++;\n        }\n        else if(item.increasingGemSlots) {\n          numIncreasingSlots += item.increasingGemSlots;\n        }\n      });\n      \n      itemCountText = ''\n      angular.forEach(numIncreasingGems, function(number, gemType) {\n        if(itemCountText.length > 0) {\n          itemCountText += '+';\n        }\n        itemCountText += number;\n      });\n      \n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\n    }\n    else {\n      var numItems = 0;\n      angular.forEach(allItems, function(item, index) {\n        if(item && item.typeName == vm.category.name) {\n          numItems++;\n        }\n      });\n      \n      itemCountText = numItems;\n      var cat = itemCategory.byName(vm.category.name);\n      if(cat && 'numItemText' in cat) {\n        itemCountText += ' / ' + cat.numItemText;\n      }\n    }\n    \n    return itemCountText + ' ' + vm.category.name;\n  }\n  \n  this.handleChange = function() {\n    vm.onChange();\n  }\n  \n}])\n.directive('dngearsimBuild', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build.html'\n  };\n});","angular.module('dnsim').controller('buildItemCtrl',\n\n['$timeout','statHelper','saveHelper',\nfunction($timeout,statHelper,saveHelper) {\n  'use strict';\n  \n  var vm = this;\n    \n  this.removeItem = function() {\n    vm.item.removeItem = true;\n    var newItemList = [];\n    angular.forEach(vm.build.items, function(gItem, index) {\n      if(gItem && !gItem.removeItem) {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\n    vm.onChange();\n  }\n  \n}])\n.directive('dngearsimBuildItem', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      buildName: '=buildName',\n      build: '=build',\n      onChange: '&onChange'\n    },\n    controller: 'buildItemCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/builds/build-item.html'\n  };\n});","angular.module('dnsim').controller('BuildListCtrl', \n  [ '$window','$location','$anchorScroll','$routeParams','$timeout','saveHelper',\n  function($window,$location,$anchorScroll,$routeParams,$timeout,saveHelper) {\n    'use strict';\n    \n    var vm = this;\n    document.body.className = 'saved-back';\n    this.currentGroup = localStorage.getItem('currentGroup');\n    this.setupBuilds = function() {\n      vm.savedItems = saveHelper.getSavedItems();\n      vm.buildNames = Object.keys(vm.savedItems).sort();\n      vm.builds = [];\n      for(var i=0;i<vm.buildNames.length;++i) {\n        vm.builds.push({\n          name: vm.buildNames[i],\n          build: vm.savedItems[vm.buildNames[i]],\n        });\n      }\n    }\n    this.setupBuilds();\n    \n    if('groupName' in $routeParams) {\n      if($routeParams.groupName != this.currentGroup) {\n        this.currentGroup = $routeParams.groupName;\n        saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\n      }\n    }\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\n      $location.path('/builds/' + this.currentGroup);\n    }\n    else {\n      this.currentGroup = null;\n    }\n    \n    if(this.currentGroup) {\n      $window.document.title = 'DN Gear Sim | ' + this.currentGroup;\n    }\n    else {\n      $window.document.title = 'DN Gear Sim | BUILDS';\n    }\n\n    this.anyItems = function() {\n      return Object.keys(this.savedItems).length > 0;\n    }\n\n    this.createGroup = function() {\n      $location.path('/new-build');\n    }\n    \n    this.handleChange = function() {\n      vm.setupBuilds();\n      $timeout();\n      console.log('change');\n    }\n  \n    this.toggleGroup = function(buildName) {\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\n      $location.url('/builds/' + buildName);\n    }\n    \n    $timeout(function() {\n      $anchorScroll('/builds/' + vm.currentGroup);\n    });\n  }]\n);\n","angular.module('dnsim').controller('buildStatsCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n}])\n.directive('dngearsimBuildStats', function() {\n  return {\n    scope: true,\n    bindToController: {\n      stats: '=stats',\n      build: '=build',\n    },\n    controller: 'buildStatsCtrl',\n    controllerAs: 'statsCtrl',\n    templateUrl: 'ui/builds/build-stats.html'\n  };\n});","angular.module('dnsim').controller('buildSummaryCtrl',\n\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.stats = statHelper.getBuildStats(this.build);\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\n  \n  this.getSaveDate = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleDateString();\n    }\n  }\n  \n  this.getSaveTime = function(group) {\n    if(vm.build.lastUpdate > 0) {\n      var lastUpdate = new Date(vm.build.lastUpdate);\n      return lastUpdate.toLocaleTimeString();\n    }\n  }\n  \n  this.getBuildSummary = function(group) {\n    var summary = '';\n    \n    var typeCounts = {};\n    var cashItems = 0;\n    var titles = 0;\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\n      if(itemsByType.length > 0) {\n        if(summary.length > 0) {\n          summary += ', ';\n        }\n        summary += itemsByType.length + ' ' + type;\n      }\n    });\n    \n    return summary;\n  }\n}])\n.directive('dngearsimBuildSummary', function() {\n  return {\n    scope: true,\n    bindToController: {\n      buildName: '=buildName',\n      build: '=build'\n    },\n    controller: 'buildSummaryCtrl',\n    controllerAs: 'buildCtrl',\n    templateUrl: 'ui/builds/build-summary.html'\n  };\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | TALISMANS';\n  $window.scrollTo(0, 0);\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = localStorage.getItem('currentGroup');\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    console.log('cannot find build');\n    return;\n  }\n  \n  this.getGroupCalcStats = function() {\n    if(this.groupCalcStats == null) {\n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.pickup = function(index) {\n    vm.selectedIndex = index;\n    \n    vm.replaceHPAffectAmount = [];\n    vm.replaceMDmgAffectAmount = [];\n    vm.replacePDmgAffectAmount = [];\n    vm.replaceAvgDmgAffectAmount = [];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    vm.groupCalcStats = null;\n    saveGroup();\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.updateRows();\n  }\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    vm.groupCalcStats = null;\n    saveGroup();\n    vm.savedItems = saveHelper.getSavedItems();\n    vm.updateRows();\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n  this.headers = [\n    '+100%',\n    '+75%',\n    '+25%',\n    '+0%',\n    ];\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n  \n  this.pcIndexes = {};\n  this.pcIndexes['100'] = 0;\n  this.pcIndexes['75'] = 1;\n  this.pcIndexes['25'] = 2;\n  this.pcIndexes['0'] = 3;\n  \n  this.selectedIndex = -1;\n  \n  this.rows = [];\n  \n  this.updateRows = function() {\n    vm.rows = [];\n        \n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n      if(item.typeName == 'talisman') {\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\n        if(!pcIndex && pcIndex != 0) {\n          pcIndex = 3;\n        }\n        \n        var rowIndex = 0;\n        for(;;) {\n          if(!vm.rows[rowIndex]) {\n            vm.rows[rowIndex] = vm.makeFakeCells();\n          }\n          \n          if(vm.rows[rowIndex][pcIndex].index < 0) {\n            if(!item.enchantmentNum) {\n              item.enchantmentNum = 0;\n            }\n            \n            var data = vm.makeCell(item, index);\n            vm.rows[rowIndex][pcIndex] = data;\n            break;\n          }\n          else {\n            rowIndex++;\n          }\n        }\n      }\n      \n    });\n    \n    if(vm.rows.length < 3) {\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\n    }\n  }\n  \n  this.makeFakeCells = function(num) {\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\n  }\n  \n  this.makeCell = function(item, index) {\n    return { item: item, index: index };\n  }\n  \n  this.click = function(col) {\n    if(vm.selectedIndex == -1) {\n      if(col.index >= 0) {\n        vm.pickup(col.index);\n      }\n    }\n    else {\n      vm.move(col);\n    }\n  }\n  \n  this.move = function(col) {\n    \n    var items = vm.savedItems[vm.groupName].items;\n    if(col.index >= 0) {\n      var swapEnchantmentNumber = col.item.enchantmentNum;\n      \n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\n      items[col.index] = items[vm.selectedIndex];\n      items[vm.selectedIndex] = col.item;\n    }\n    else {\n      var item = items[vm.selectedIndex];\n      vm.setTalisman(item, col.item.enchantmentNum);\n      items.splice(vm.selectedIndex, 1);\n      items.push(item);\n    }\n\n    vm.groupCalcStats = null;\n    vm.selectedIndex = -1;\n    vm.updateRows();\n    vm.replaceAffectAmount = {};\n    $timeout();\n  }\n  \n  this.setTalisman = function(item, newEnhancementNum) {\n    var extraStats = [];\n    angular.forEach(item.stats, function(stat, index) {\n      if(newEnhancementNum) {\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\n      }\n    });\n    \n    item.enchantmentStats = extraStats;\n    item.enchantmentNum = newEnhancementNum;\n    \n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\n  }\n  \n    \n  this.replaceAffectAmount = {};\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    if(this.replaceAffectAmount[itemIndex]) {\n      return this.replaceAffectAmount[itemIndex][statId];\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\n      return;\n    }\n    this.replaceAffectAmount[itemIndex] = {};\n    \n    var group = vm.savedItems[vm.groupName];\n    var item2 = group.items[vm.selectedIndex];\n    \n    var extraStats = [];\n    var fullStats1 = [];\n    if(item.stats) {\n      angular.forEach(item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\n      });\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\n    }\n    \n    extraStats = [];\n    angular.forEach(item2.stats, function(stat, index) {\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\n    });\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\n\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem && item2 !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.save = function() {\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\n    $location.path('/builds/' + vm.groupName);\n  }\n  \n  this.updateRows();\n  \n}]); ","angular.module('dnsim').controller('DeleteBuildCtrl',\n\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\n  'use strict';\n  \n  var vm = this;\n  this.newGroup = true;\n  if('name' in $routeParams) {\n      this.name = $routeParams.name;\n  }\n  \n  this.delete = function() {\n    saveHelper.updatedSavedItems(this.name, []);\n    $location.path('/builds/');\n  }\n    \n}]); ","angular.module('dnsim').controller('EditBuildCtrl',\n\n['$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character',\nfunction($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\n  'use strict';\n  \n  var vm = this;\n  this.savedItems = saveHelper.getSavedItems();\n  this.group = {};\n  this.newGroup = true;\n  if('groupName' in $routeParams) {\n      this.groupName = $routeParams.groupName;\n      if(this.groupName in this.savedItems) {\n        this.group = this.savedItems[this.groupName];\n        this.newGroup = false;\n      }\n  }\n  else {\n    this.groupName = '';\n  }\n  this.oldGroupName = this.groupName;\n  this.heroStats = [];\n  this.elements = hCodeValues.elements;\n  this.damageTypes = hCodeValues.damageTypes;\n  \n  if(this.group.damageType) {\n    this.damageType = this.group.damageType;\n  }\n  else {\n    this.damageType = hCodeValues.damageTypes[0];\n  }\n    \n  if(this.group.element) {\n    this.element = this.group.element;\n  }\n  else {\n    this.element = hCodeValues.elements[0];\n  }\n    \n  if(this.group.secondaryElement) {\n    this.secondaryElement = this.group.secondaryElement;\n  }\n  else {\n    this.secondaryElement = hCodeValues.elements[0];\n  }\n\n  if(this.group.enemyLevel) {\n    this.enemyLevel = this.group.enemyLevel;\n  }\n  else {\n    this.enemyLevel = 90;\n  }\n  \n  if(this.group.playerLevel) {\n    this.playerLevel = this.group.playerLevel;\n  }\n  else {\n    this.playerLevel = 90;\n  }\n  \n  if(this.group.heroLevel && this.group.heroLevel > 0) {\n    this.heroLevel = this.group.heroLevel;\n  }\n  else {\n    this.heroLevel = 1;\n  }\n  \n  this.getFinalJobs = function() {\n    var allJobs = jobs.getFinalJobs();\n    var finalJobs = [];\n    for(var j=0;j<allJobs.length;++j) {\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\n        finalJobs.push(allJobs[j]);\n      }\n    }\n    return finalJobs;\n  }\n  \n  this.getBaseJobs = function() {\n    return jobs.getBaseJobs();\n  }\n  \n  this.getJobName = function(englishName) {\n    var allJobs = jobs.getAllJobs();\n    for(var j=0;j<allJobs.length;++j) {\n      if(allJobs[j].d.EnglishName == englishName) {\n        return allJobs[j].name;\n      }\n    }\n  }\n  \n  this.init = function(vm) {\n    var newJobs = jobs.getFinalJobs();\n    if(newJobs.length > 0) {\n      $timeout( function() {\n        \n        if('job' in vm.group) {\n          angular.forEach(newJobs, function(value, key) {\n            if(value.id == vm.group.job.id) {\n              vm.job = value;\n            }\n          });\n        }\n        \n        vm.setHeroStats();\n      });\n    }\n  }\n  \n  this.setJob = function(job) {\n    this.job = job;\n    $window.scrollTo(0, 0);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  character.init(function() { vm.init(vm) });\n  \n  this.getStatCap = function(colName, useLevel) {\n    return character.getStatCaps(useLevel)[colName];\n  }\n  this.getJobConversion = function(colName) {\n    return character.getConversions(this.job.id)[colName];\n  }\n  this.getJobBaseStat = function(colName) {\n    return character.getBaseStats(this.playerLevel, this.job.id)[colName];\n  }\n  \n  this.invalidGroupName = function() {\n    if(!this.groupName) {\n      return true;\n    }\n    \n    if(this.groupName in this.savedItems) {\n      if(this.newGroup || this.groupName != this.oldGroupName) {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  this.ok = function() {\n    var enemyStatCaps = character.getStatCaps(this.enemyLevel);\n    var playerStatCaps = character.getStatCaps(this.playerLevel);\n    var conversions = character.getConversions(this.job.id);\n    var baseStats = character.getBaseStats(this.playerLevel, this.job.id);\n    var heroStats = character.getHeroStats(this.heroLevel);\n    \n    if(this.newGroup) {\n      this.oldGroupName = this.groupName;\n      saveHelper.importGroup(this.groupName, []);\n    }\n    \n    saveHelper.renameSavedGroup(\n      this.oldGroupName, \n      this.groupName,\n      this.enemyLevel,\n      this.playerLevel,\n      this.heroLevel,\n      this.job,\n      this.damageType,\n      this.element,\n      this.secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats);\n    \n    $location.path('/builds/' + this.groupName);\n  }\n  \n  this.setHeroStats = function() {\n    this.heroStats = character.getHeroStats(this.heroLevel);\n    // console.log('got ' + this.heroStats.length + ' hero stats');\n  }\n  \n  $timeout(function() {\n    var input = document.getElementById('groupNameInput');\n    if(input) {\n      input.focus();\n      input.setSelectionRange(0, 9999);\n    }\n  });\n}]); ","angular.module('dnsim').controller('quickAddCtrl',\n\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\n  'use strict';\n  \n  var vm = this;\n  vm.startedForCat = '';\n  vm.stepNumber = 0;\n  vm.datas = [];\n  vm.options = [];\n  \n  this.setOptions = function() {\n    if(vm.hasStarted()) {\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      if(vm.options.length == 1) {\n        vm.selectOption(vm.options[0]);\n      }\n    }\n  }\n  \n  this.selectOption = function(value) {\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\n    vm.datas.push(data);\n    vm.stepNumber++;\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\n      \n      var newItem = quickAdd.getItem(vm.datas);\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\n      angular.forEach(dntFiles, function(columns, fileName) {\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\n      });\n      vm.tryToAddItem(dntFiles, newItem);\n    }\n    else {\n      vm.setOptions();\n      console.log('setup next step');\n    }\n  }\n  \n  this.tryToAddItem = function(dntFiles, item) {\n    if(!dntData.anyLoading()) {\n      \n      var allLoaded = true;\n      angular.forEach(dntFiles, function(columns, fileName) {\n        if(!dntData.isLoaded(fileName)) {\n          allLoaded = false;\n        }\n      });\n      \n      if(allLoaded) {\n        if(vm.datas.length > 0) {\n          vm.cancel();\n          var newItem = exportLinkHelper.reloadItem(item);\n          saveHelper.saveItem(vm.buildName, newItem);\n          vm.onChange();\n        }\n      }\n    }\n  }\n  \n  this.reset = function() {\n    vm.stepNumber = 0;\n    vm.datas = [];\n    $timeout(function() {\n      vm.setOptions();\n    });\n  }\n  \n  this.hasStarted = function() {\n    return vm.startedForCat == vm.category.name;\n  }\n  \n  this.start = function() {\n    vm.startedForCat = vm.category.name;\n    \n    jobs.init(function() {}, vm.reset);\n    dntData.init('exchange.lzjson', null, function() {}, vm.reset);\n    itemCategory.init(vm.category.name, vm.reset);\n  }\n  \n  this.hasOptions = function() {\n    return quickAdd.hasOptions(vm.category, vm.build, []);\n  }\n  \n  this.cancel = function() {\n    vm.startedForCat = '';\n    vm.reset();\n  }\n  \n  this.back = function() {\n    if(vm.stepNumber == 0) {\n      vm.cancel();\n    }\n    else {\n      do {\n        vm.stepNumber--;\n        vm.datas.pop();\n        \n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\n      \n      vm.setOptions();\n    }\n  }\n  \n}])\n.directive('dngearsimQuickAdd', function() {\n  return {\n    scope: true,\n    bindToController: {\n      category: '=category',\n      build: '=build',\n      buildName: '=buildName',\n      onChange: '&onChange',\n    },\n    controller: 'quickAddCtrl',\n    controllerAs: 'quickAdd',\n    templateUrl: 'ui/builds/quick-add.html'\n  };\n});","angular.module('dnsim').controller('ViewGroupCtrl', \n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\n    'use strict';\n  \n    document.body.className = 'saved-back';\n    $window.document.title = 'DN Gear Sim';\n    \n    region.setLocationByName($routeParams.region);\n    \n    $scope.buildName = '';\n    $scope.build = {};\n    \n\n    if('g' in $routeParams && 'i' in $routeParams) {\n      $scope.buildName = $routeParams.g;\n      \n      $scope.enemyLevel = $routeParams.e;\n      $scope.playerLevel = $routeParams.p;\n      $scope.heroLevel = $routeParams.h;\n      $scope.job = { id: $routeParams.j };\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\n      $scope.element = hCodeValues.elements[$routeParams.t];\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\n        \n      var items = [];\n      \n      var itemString = $routeParams.i;\n      \n      angular.forEach(itemString.split(','), function(itemStr, index) {\n        var item = exportLinkHelper.decodeItem(itemStr);\n        \n        if(item.id > 0) {\n          items.push(item);\n        }\n      });\n\n      $scope.build = {};\n      $scope.savedItems = {};\n      $scope.savedItems[$scope.buildName] = $scope.build;\n      $scope.build.items = items;\n      $scope.isLoading = true;\n      \n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\n        dntData.init(fileName, columns, progress, tryInit);\n      });\n      \n      translations.init(progress, tryInit);\n      jobs.init(progress, tryInit);\n      character.init(tryInit);\n      \n      $timeout();\n    }\n    \n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\n    \n    function tryInit() {\n      \n      if(dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\n        return;\n      }\n      \n      $timeout(function() {\n        var groupName = $scope.buildName;\n        var group = $scope.build;\n        \n        $scope.job = jobs.getById($scope.job.id);\n        \n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\n        if($scope.job) {\n          $scope.conversions = character.getConversions($scope.job.id);\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\n        }\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\n        \n        var newItems = groupHelper.reloadGroup(groupName, group);\n        dntReset();\n      \n        $scope.savedItems = {};\n        $scope.build = {\n          items: newItems,\n          lastUpdate: group.lastUpdate,\n\n          enemyLevel: $scope.enemyLevel,\n          playerLevel: $scope.playerLevel,\n          heroLevel: $scope.heroLevel,\n          job: $scope.job,\n          damageType: $scope.damageType,\n          element: $scope.element,\n          secondaryElement: $scope.secondaryElement,\n          enemyStatCaps: $scope.enemyStatCaps,\n          playerStatCaps: $scope.playerStatCaps,\n          conversions: $scope.conversions,\n          baseStats: $scope.baseStats,\n          heroStats: $scope.heroStats,\n        };\n        $scope.savedItems[groupName] = $scope.build;\n        $scope.stats = statHelper.getBuildStats($scope.build);\n        \n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\n      });\n    }\n    \n    function progress() {\n    }\n    \n    $scope.copyGroup = function() {\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\n      console.log('copying in as ' + newBuildName);\n      \n      saveHelper.renameSavedGroup(\n        newBuildName, \n        newBuildName,\n        $scope.enemyLevel,\n        $scope.playerLevel,\n        $scope.heroLevel,\n        $scope.job,\n        $scope.damageType,\n        $scope.element,\n        $scope.secondaryElement,\n        $scope.enemyStatCaps, $scope.playerStatCaps, $scope.conversions, $scope.baseStats, $scope.heroStats);\n      \n      $location.url('/builds/' + newBuildName);\n    }\n  }]\n);\n","angular.module('dnsim').controller('EquipmentCtrl',\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory',\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory) {\n  'use strict';\n  \n  region.setLocationByName($routeParams.region);\n  \n  $window.scrollTo(0, 0);\n  \n  $scope.jobName = null;\n  $scope.item = exportLinkHelper.decodeItem($routeParams.itemString);\n  if('itemSource' in $scope.item) {\n    $scope.itemType = items[$scope.item.itemSource];\n  }\n  \n  $scope.item.setStats = null;\n  $scope.item.setId = null;\n  $scope.detail = null;\n  \n  $scope.getDescription = function() {\n    if($scope.item.description) {\n      return $scope.item.description;\n    }\n    else if($scope.itemType &&\n      $scope.itemType.name == 'title' &&\n      translations.isLoaded() &&\n      dntData.isLoaded($scope.itemType.mainDnt)) {\n\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\n      }\n    }\n    return '';\n  }\n  \n  $scope.getExchangeType = function() {\n    // console.log('getting exchange');\n    var exchangeDnt = 'exchange.lzjson';\n    if(translations.isLoaded() &&\n      dntData.isLoaded(exchangeDnt) &&\n      $scope.item.exchangeType > 0) {\n        \n      // console.log('finding exchange ' + $scope.item.exchangeType);\n\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\n      // console.log('got ' + exchange.length);\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n        // console.log('exchange name: ' + exchange[0].NameID);\n        return translations.translate(exchange[0].NameID).toLowerCase();\n      }\n    }\n    return '';\n  }\n  \n  $scope.setDetail = function(detail) {\n    $scope.detail = detail;\n  }\n  \n  $scope.getServerStorage = function() {\n    var itemData = itemFactory.getItemData($scope.item);\n    if(itemData && 'AbleWStorage' in itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\n      if(itemData.AbleWStorage == 1) {\n        return 'can put in server storage';\n      }\n      else if(itemData.AbleWStorage == 0) {\n        return 'not transferable';\n      }\n    }\n    return '';\n  }\n  \n  $scope.handleChange = function() {\n    $location.path('/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item));\n    $location.replace();\n  }\n  \n  function getJobName() {\n    var retVal = '';\n    var allJobs = jobs.getAllJobs();\n    angular.forEach(allJobs, function(job, index) {\n      if(job.id == $scope.item.needJobClass) {\n        $scope.jobName = job.name;\n        return;\n      }\n    });\n  }\n  \n  function init() {\n    var anyToLoad = false;\n    \n    angular.forEach(exportLinkHelper.getDntFiles($scope.item), function(columns, fileName) {\n      if(!dntData.isLoaded(fileName)) {\n        dntData.init(fileName, columns, reportProgress, function() { tryInit() });\n        anyToLoad = true;\n      }\n    });\n    \n    if(!translations.isLoaded()) {\n      translations.init(reportProgress,function() { tryInit() });\n      anyToLoad = true;\n    }\n    \n    if(!jobs.isLoaded()) {\n      jobs.init(reportProgress, function() { tryInit(); });\n      anyToLoad = true;\n    }\n    \n    if(!anyToLoad) {\n      tryInit();\n    }\n  }\n  init();\n  \n  function tryInit() {\n    if(!dntData.anyLoading() && translations.isLoaded() && jobs.isLoaded()) {\n      $scope.item = exportLinkHelper.reloadItem($scope.item);\n      if($scope.item == null) {\n        return;\n      }\n      \n      setFullStats();\n      $window.document.title = 'DN Gear Sim | ' + $scope.item.name;\n      if($scope.item.itemSource != 'custom') {\n      \n        if($scope.item.typeName == 'skills') {\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\n            $scope.item.pve = 'pve';\n          }\n          else {\n            $scope.item.pve = 'pvp';\n          }\n        }\n    \n        if($scope.item.needJobClass > 0) {\n          getJobName();\n        }\n      }\n      \n      var itemData = itemFactory.getItemData($scope.item);\n      if(itemData.DisjointDrop1 > 0) {\n        $scope.canExtract = true;\n      }\n      \n      if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\n        $scope.canTransfer = true;\n      }\n      \n      if($scope.item.setId) {\n        $scope.isInSet = true;\n      }\n      \n      if($scope.item.typeId == 5) {\n        $scope.isPlate = true;\n      }\n      \n      if($scope.item.typeName != null) {\n        $scope.canUse = true;\n        $scope.detail = 'use';\n      }\n      else if($scope.item.typeId == 46 || $scope.item.typeId == 8) {\n        $scope.hasContents = true;\n        $scope.detail = 'contents';\n      }\n      else if($scope.canExtract) {\n        $scope.detail = 'extract';\n      }\n      else if($scope.canTransfer) {\n        $scope.detail = 'transfer';\n      }\n      else if($scope.isPlate) {\n        $scope.detail = 'plate';\n      }\n      else {\n        $scope.detail = 'shops';\n      }\n    }\n  }\n\n  \n  function setFullStats() {\n    $scope.item.fullStats = $scope.item.stats;\n    \n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\n    }\n    \n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\n    }\n  }\n  \n  function reportProgress(msg) {\n    // $scope.progress += '|' + msg;\n    // console.log('progress: ' + msg);\n  }\n}]);","angular.module('dnsim').controller('groupAssignmentCtrl',\n\n['hCodeValues','statHelper','saveHelper','itemCategory',\nfunction(hCodeValues,statHelper,saveHelper,itemCategory) {\n  'use strict';\n  \n  var vm = this;\n  \n  this.savedItems = saveHelper.getSavedItems();\n  this.groupNames = Object.keys(this.savedItems);\n  if(!this.groupNames) {\n    this.groupNames = [];\n  }\n  if(this.groupNames.length > 0) {\n    this.groupName = localStorage.getItem('currentGroup');\n  }\n  else {\n    this.groupName = null;\n  }\n  \n  if(!this.groupName || !(this.groupName in this.savedItems)) {\n    if(this.groupNames.length > 0) {\n      this.groupName = this.groupNames[0];\n    }\n  }\n  \n  if(!this.groupName) {\n    return;\n  }\n  \n  this.summaryStatIds = [];\n  for(var id in hCodeValues.stats) {\n    if(hCodeValues.stats[id].summaryDisplay) {\n      this.summaryStatIds.push(id);\n    }\n  }\n    \n  this.clearGroup = function() {\n    this.addAffectAmount = null;\n    this.replaceAffectAmount = {};\n\n    this.groupItems = null;\n    this.groupCalcStats = null\n  }\n  this.clearGroup();\n  \n  this.getAddAffectAmount = function(stat) {\n    this.initAddAffects();\n    return this.addAffectAmount[stat];\n  }\n  \n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\n    this.initReplaceAffects(itemIndex, item);\n    return this.replaceAffectAmount[itemIndex][statId];\n  }\n  \n  this.getGroupCalcStats = function() {\n    \n    if(this.groupCalcStats == null) {\n      \n      var group = vm.savedItems[vm.groupName];\n      if(group) {\n        this.groupCalcStats = this.getCalculatedStats(group, group.items);\n      }\n    }\n    \n    return this.groupCalcStats;\n  }\n  \n  this.getBuild = function() {\n    return vm.savedItems[vm.groupName];\n  }\n  \n  this.getCalculatedStats = function(group, items) {\n    var nakedStats = statHelper.getNakedStats(group);\n    var combinedStats = statHelper.getCombinedStats(items);\n    var setStats = statHelper.getSetStats(items);\n    var allStats = nakedStats.concat(combinedStats).concat(setStats);\n    if(group.heroStats != null && group.heroStats.length > 0) {\n      allStats = allStats.concat(group.heroStats);\n    }\n    allStats = hCodeValues.mergeStats(allStats);\n    \n    return statHelper.getCalculatedStats(group, allStats);\n  }\n  \n  this.initAddAffects = function() {\n    \n    if(vm.addAffectAmount) {\n      return;\n    }\n    \n    var origStats = vm.getGroupCalcStats();\n    var group = vm.savedItems[vm.groupName];\n    var newItems = group.items.concat([vm.item]);\n    var newStats = vm.getCalculatedStats(group, newItems);\n    \n    this.addAffectAmount = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.addAffectAmount[id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  this.initReplaceAffects = function(itemIndex, item) {\n    if(vm.replaceAffectAmount[itemIndex]) {\n      return;\n    }\n    \n    var group = vm.savedItems[vm.groupName];\n    var newItems = [vm.item];\n    angular.forEach(group.items, function(gItem , index) {\n      if(item !== gItem) {\n        newItems.push(gItem);\n      }\n    });\n    \n    var newStats = vm.getCalculatedStats(group, newItems);\n    var origStats = vm.getGroupCalcStats();\n    \n    this.replaceAffectAmount[itemIndex] = {};\n    for(var id in hCodeValues.stats) {\n      if(hCodeValues.stats[id].summaryDisplay) {\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\n      }\n    }\n  }\n  \n  function calcStatPercent(newVal, origVal) {\n    if(newVal && origVal) {\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\n    }\n    else {\n      return 0;\n    }\n  }\n  \n  this.getStat = function(id, stats) {\n    var len = stats.length;\n    for(var i=0;i<len;++i) {\n      if(stats[i].id == id) {\n        return stats[i];\n      }\n    }\n    return {id: id, max:0};\n  }\n  \n  this.getStatName = function(id) {\n    var retVal = '';\n    if(hCodeValues.stats[id].element == 'primary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].element) {\n        eleId = vm.savedItems[vm.groupName].element.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    else if(hCodeValues.stats[id].element == 'secondary') {\n      var eleId = 0;\n      if(vm.savedItems[vm.groupName].secondaryElement) {\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\n      }\n      retVal += hCodeValues.elements[eleId].name;\n    }\n    return retVal + ' ' + hCodeValues.stats[id].name;\n  }\n  \n  this.getGroupItems = function() {\n\n    var itemSplit;\n    function numMatches(str) {\n      if(str) {\n        var numMatches = 0;\n        for(var i=0;i<itemSplit.length;++i) {\n          if(str.indexOf(itemSplit[i]) > 0) {\n            numMatches++;\n          }\n        }\n        return numMatches;\n      }\n      else {\n        return -1;\n      }\n    }\n    \n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\n      vm.groupItems = [];\n      \n      var items = [];\n      angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\n        if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate') {\n          if(item.exchangeType == vm.item.exchangeType) {\n            items.push(item);\n          }\n        }\n        else if(item.typeName == vm.item.typeName) {\n          items.push(item);\n        }\n      });\n      \n      if(vm.item.name) {\n        itemSplit = vm.item.name.split(' ');\n      }\n      items.sort(function(a,b) {\n        return numMatches(b.name)-numMatches(a.name);\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name == vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n      \n      angular.forEach(items, function(item, index) {\n        if(item.name != vm.item.name) {\n          vm.groupItems.push(item);\n        }\n      });\n    }\n    return vm.groupItems;\n  }\n  \n  this.hasMaxExchangable = function() {\n    var cat = itemCategory.byName(this.item.typeName);\n    var items = this.getGroupItems();\n    \n    if(cat && cat.maxCat) {\n      if(items.length >= cat.maxCat) {\n        return true;\n      }\n    }\n    \n    if(cat && cat.maxExchange) {\n      if(items.length >= cat.maxExchange) {\n        for(var i=0;i<items.length;++i) {\n          if(!items[i].exchangeType) {\n            return false;\n          }\n        }\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  this.nextGroup = function() {\n    \n    var uptoItem = false;\n    var nextGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(uptoItem) {\n        if(nextGroup == null) {\n          nextGroup = groupName;\n        }\n      }\n      if(groupName == vm.groupName) {\n        uptoItem = true;\n      }\n    });\n    \n    if(nextGroup == null) {\n      nextGroup = vm.groupNames[0];\n    }\n    \n    vm.groupName = nextGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.prevGroup = function() {\n    \n    var foundGroup = false;\n    var prevGroup = null;\n    angular.forEach(vm.groupNames, function(groupName, index) {\n      if(groupName == vm.groupName) {\n        foundGroup = true;\n      }\n      \n      if(!foundGroup) {\n        prevGroup = groupName;\n      }\n    });\n    \n    if(prevGroup == null) {\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\n    }\n    \n    vm.groupName = prevGroup;\n    saveGroup();\n    vm.clearGroup();\n  }\n  \n  this.addToGroup = function() {\n    saveHelper.saveItem(vm.groupName, vm.item);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  this.replace = function(item) {\n    item.replaceItem = true;\n    var newItemList = [];\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\n      if(gItem.replaceItem) {\n        // console.log('found replace item');\n        newItemList.push(vm.item);\n      }\n      else {\n        newItemList.push(gItem);\n      }\n    });\n    \n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\n    this.savedItems = saveHelper.getSavedItems();\n    vm.clearGroup();\n  }\n  \n  function saveGroup() {\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\n  }\n  \n}])\n.directive('dngearsimGroupAssignment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'groupAssignmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/group-assignment.html'\n  };\n});","angular.module('dnsim').controller('itemEditCustomCtrl',\n\n['hCodeValues',\nfunction(hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'custom') {\n    return;\n  }\n  \n  var vm = this;\n  \n  this.stat = {id:-1, name:''};\n  this.newStatVal = 0;\n\n  this.dropdownStats = [];\n  for(var id in hCodeValues.stats) {\n    if(!hCodeValues.stats[id].noCustom) {\n      this.dropdownStats.push(hCodeValues.stats[id]);\n    }\n  }\n  this.dropdownStats.sort()\n\n  this.getStats = function() {\n    return this.dropdownStats;\n  }\n  \n  this.newStat = function() {\n    return {id:this.stat.id,max:this.newStatVal};\n  }\n  \n  this.addStat = function() {\n    if(this.stat.id > -1) {\n      if(!this.item.stats) {\n        this.item.stats = [];\n      }\n       \n      this.item.stats.push(this.newStat());\n      this.onChange();\n    }\n  }\n  \n  this.removeStat = function(stat) {\n    var i = this.item.stats.indexOf(stat);\n    if(i != -1) {\n    \tthis.item.stats.splice(i, 1);\n      this.onChange();\n    }\n  }\n  \n  this.getNewStatName = function() {\n    return this.getStatName(this.newStat());\n  }\n  \n  this.getNewStatDisplayValue = function() {\n    return this.getStatDisplayValue(this.newStat());\n  }\n  \n  this.getStatName = function(stat) {\n    if(stat.id in hCodeValues.stats) {\n      return hCodeValues.stats[stat.id].name;\n    }\n  }\n  \n  this.getStatDisplayValue = function(stat) {\n    if(stat.id in hCodeValues.stats) {\n      return hCodeValues.stats[stat.id].display(stat);\n    }\n  }\n  \n}])\n.directive('dngearsimItemEditCustom', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditCustomCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-custom.html'\n  };\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\n\n['dntData','hCodeValues','items','$timeout','translations',\nfunction(dntData,hCodeValues,items,$timeout,translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !('enchantDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  vm.enchantments = null;\n  vm.enchantment = null;\n  vm.enchantmentAfter = null;\n  vm.enchantmentCost = '';\n  vm.enhancementOptions = [];\n  if(vm.item.enchantmentStats == null) {\n    vm.item.enchantmentStats = [];\n  }\n  \n  this.setEnchantment = function() {\n    vm.item.enchantmentStats = [];\n\n    if(vm.enchantments && vm.enchantments.length > 0) {\n\n      if(typeof vm.item.enchantmentNum != 'number') {\n        vm.item.enchantmentNum = 6;\n        vm.onChange();\n      }\n      \n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum == vm.enchantments[i].EnchantLevel) {\n          vm.enchantment = vm.enchantments[i];\n          \n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\n        }\n        else if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          vm.enchantmentAfter = vm.enchantments[i];\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\n          }\n          else {\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\n          }\n        }\n      }\n    }\n  }\n  \n  this.isMaxEnchantLevel = function() {\n\n    if(vm.enchantments != null &&\n      vm.enchantments.length > 0 &&\n      typeof vm.item.enchantmentNum == 'number') {\n\n      for(var i=0;i<vm.enchantments.length;++i) {\n        if(vm.item.enchantmentNum + 1 == vm.enchantments[i].EnchantLevel) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  \n  this.setEnchantmentNum = function(enhancementOption) {\n    vm.item.enchantmentNum = enhancementOption;\n    vm.enhancementOptions = [];\n    vm.setEnchantment();\n    vm.onChange();\n  }\n  \n  this.nextEnchantment = function() {\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\n      if(i == 0) {\n        vm.enhancementOptions.push({number: 0});\n      }\n      else {\n        vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n      }\n    }\n  }\n  \n  this.prevEnchantment = function() {\n    vm.enhancementOptions = [];\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\n      vm.enhancementOptions.push(vm.getOption(vm.enchantments[i-1]));\n    }\n    \n    vm.enhancementOptions.push({number: 0});\n  }\n  \n  this.getOption = function(enchantment) {\n    return {\n      number: enchantment.EnchantLevel,\n      stats: hCodeValues.getStats(enchantment)\n    };\n  }\n  \n  this.getEnchantments = function() {\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\n      if(dntData.isLoaded(vm.itemType.enchantDnt)) {\n        var eid = vm.item.enchantmentId;\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', eid);\n        vm.setEnchantment();\n      }\n    }\n    \n    return vm.enchantments;\n  }\n  \n  var fileName = 'all-items.lzjson';\n  \n  this.showMaterials = function() {\n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        \n        if(!vm.enchantmentAfter) {\n          return;\n        }\n        \n        vm.materials = [];\n        for(var i=1;i<=5;++i) {\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\n          if(itemId > 0 && itemCount > 0) {\n            \n            var items = dntData.find(fileName, 'id', itemId);\n            if(items.length == 0) {\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\n            }\n            else {\n              var item = items[0];\n              var name = translations.translate(item.NameID, item.NameIDParam);\n              \n              if(item) {\n                var material = {\n                  num: itemCount,\n                  icon: item.IconImageIndex,\n                  rank: item.Rank,\n                  levelLimit: item.LevelLimit,\n                  name: name\n                };\n                vm.materials.push(material);\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  if(dntData.isLoaded(fileName)) {\n    this.showMaterials();\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditEnchantment', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditEnchantmentCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-enchantment.html'\n  };\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\n\n['dntData','items','hCodeValues',\nfunction(dntData,items,hCodeValues) {\n  'use strict';\n  \n  this.potentials = null;\n  this.potential = null;\n  this.changingPotentials = false;\n  this.potentialStats = {};\n  \n  if(this.item == null) return;\n  \n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\n    return;\n  }\n  \n  var vm = this;\n  \n  this.getPotentials = function() {\n    if(!vm.potentials) {\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\n        \n        if(potentials.length == 1) {\n          vm.potential = potentials[0];\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\n          vm.potentialStats = getPotentialStats(vm.potentials);\n        }\n        else if('potentialDntEx' in vm.itemType) {\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\n        \n          if(potentials.length == 1) {\n            vm.potential = potentials[0];\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\n            vm.potentialStats = getPotentialStats(vm.potentials);\n          }\n        }\n      }\n    }\n    \n    return vm.potentials;\n  }\n  \n  this.nextPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i+1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n  \n  this.prevPotential = function() {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(vm.potential.id == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i-1];\n        vm.item.pid = vm.potential.id;\n        vm.onChange();\n        this.changingPotentials = true;\n        return;\n      }\n    }\n  }\n    \n  this.changePotential = function(pid) {\n    for(var i=0;i<vm.potentials.length;++i) {\n      if(pid == vm.potentials[i].id) {\n        vm.potential = vm.potentials[i];\n        vm.item.pid = vm.potential.id;\n        vm.changingPotentials = false;\n        vm.onChange();\n        return;\n      }\n    }\n  }\n  \n  this.isFirstPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\n  }\n  \n  this.isLastPotential = function() {\n    this.getPotentials();\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\n  }\n  \n  function getPotentialStats() {\n    var pStats = {};\n    var emptyStatId = null;\n    \n    if(vm.potentials != null) {\n      angular.forEach(vm.potentials, function(p, index) {\n        var stats = [];\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\n          if(!hCodeValues.stats[stat.id].hide) {\n            stats.push(stat);\n          }\n        });\n        \n        if(stats.length > 0) {\n          pStats[p.id] = stats;\n        }\n        else if(!emptyStatId) {\n          pStats[p.id] = [];\n          emptyStatId = p.id;\n        }\n      });\n    }\n    \n    return pStats;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditPotential', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditPotentialCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-potential.html'\n  };\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\n\n['$timeout','dntData','statHelper',\nfunction($timeout,dntData,statHelper) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'skills') {\n    return;\n  }\n  \n  if(!this.item.enchantmentNum) {\n    this.item.enchantmentNum = 1;\n  }\n  \n  var vm = this;\n  \n  this.initSkills = function() {\n    var dntFile = 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.lzjson';\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\n    })});\n  }\n  \n  this.nextEnchantment = function() {\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\n      this.item.enchantmentNum++;\n      vm.onChange();\n    }\n  }\n  \n  this.isMaxSkillLevel = function() {\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\n  }\n  \n  this.prevEnchantment = function() {\n    if(this.item.enchantmentNum > 0) {\n      this.item.enchantmentNum--;\n    }\n    else {\n      this.item.enchantmentNum = 0;\n    }\n\n    vm.onChange();\n  }\n  \n  this.initSkills();\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n}])\n.directive('dngearsimItemEditSkill', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSkillCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-skill.html'\n  };\n});","angular.module('dnsim').controller('itemEditSparkCtrl',\n\n['dntData','hCodeValues','items',\nfunction(dntData,hCodeValues,items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if('itemSource' in this.item) {\n    this.itemType = items[this.item.itemSource];\n  }\n  \n  this.sparks = null;\n  var vm = this;\n\n  this.nextSpark = function() {\n    var index = getPotentialIndex();\n    index++;\n    if(index >= vm.sparks.length) {\n      index = 0;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.isMoreSparks = function() {\n    return vm.sparks != null && getPotentialIndex() >= vm.sparks.length-1;\n  }\n  \n  this.isFirstSpark = function() {\n    return getPotentialIndex() == 0;\n  }\n  \n  this.prevSpark = function() {\n    var index = getPotentialIndex();\n    index--;\n    if(index < 0) {\n      index = vm.sparks.length-1;\n    }\n    var spark = vm.sparks[index]; \n    vm.item.sparkId = spark.id;\n    vm.item.sparkStats = hCodeValues.getStats(spark);\n    vm.onChange();\n  }\n  \n  this.removeSpark = function() {\n    vm.item.sparkId = null;\n    vm.item.sparkStats = null;\n    vm.onChange();\n  }\n  \n  this.getSparks = function() {\n    if(vm.item == null) return null;\n    if(vm.sparks == null) {\n      var sid = vm.item.sparkTypeId;\n      if(sid) {\n        if(dntData.isLoaded(vm.itemType.sparkDnt)) {\n          vm.sparks = dntData.find(vm.itemType.sparkDnt, 'PotentialID', sid);\n        }\n      }\n    }\n    \n    return vm.sparks;\n  }\n\n  function getPotentialIndex() {\n    var potentialIndex = -1;\n    if(vm.item.sparkId > 0) {\n      angular.forEach(vm.sparks, function(spark, index) {\n        if(spark.id == vm.item.sparkId) {\n          potentialIndex = index;\n          return;\n        }\n      });\n    }\n      \n    return potentialIndex;\n  }\n\n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n}])\n.directive('dngearsimItemEditSpark', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditSparkCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-spark.html'\n  };\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\n\n[function() {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.itemSource != 'tman') {\n    return;\n  }\n  \n  this.setTalisman = function(amount) {\n    if(amount == 0) {\n      this.item.enchantmentNum = null;\n      this.item.enchantmentStats = [];\n    }\n    else {\n      this.item.enchantmentNum = amount;\n      \n      var extraStats = [];\n      angular.forEach(this.item.stats, function(stat, index) {\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\n      });\n      \n      this.item.enchantmentStats = extraStats;\n    }\n    this.onChange();\n  }\n\n}])\n.directive('dngearsimItemEditTalisman', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n      onChange: '&onChange',\n    },\n    controller: 'itemEditTalismanCtrl',\n    controllerAs: 'editCtrl',\n    templateUrl: 'ui/item/item-edit-talisman.html'\n  };\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\n\n['$timeout','dntData','itemFactory',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  if(this.item.typeId != 46 && this.item.typeId != 8) {\n    console.log('not box item type ' + this.item.typeId);\n    return;\n  }\n  \n  var vm = this;\n  \n  var pouchFileNames = [\n    'itemdroptable.lzjson',\n    'itemdroptable_abyss.lzjson',\n    'itemdroptable_apprentice.lzjson',\n    'itemdroptable_cook.lzjson',\n    'itemdroptable_darklair.lzjson',\n    'itemdroptable_dimension.lzjson',\n    'itemdroptable_disjoint.lzjson',\n    'itemdroptable_dnexpedition.lzjson',\n    'itemdroptable_event.lzjson',\n    'itemdroptable_farm.lzjson',\n    'itemdroptable_fishing.lzjson',\n    'itemdroptable_guildwar.lzjson',\n    'itemdroptable_item.lzjson',\n    'itemdroptable_monsteritem.lzjson',\n    'itemdroptable_propdrop.lzjson',\n    'itemdroptable_pvp.lzjson',\n    'itemdroptable_randomcompound.lzjson',\n    'itemdroptable_stageclear.lzjson',\n    'itemdroptable_themepark.lzjson',\n    'itemdroptable_union.lzjson']\n  \n  var allItemFileName = 'all-items.lzjson';\n  var charmItemtable = 'charmitemtable.lzjson';\n  var commonCharmItemtable = 'charmitemtable_common.lzjson';\n  \n  var files;\n  if(this.item.typeId == 46) {\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\n  }\n  else if (this.item.typeId == 8) {\n    files = [allItemFileName].concat(pouchFileNames);\n  }\n\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxContents();\n      });\n    });\n  }\n  \n  this.initBoxContents = function() {\n    //console.log('init contents');\n\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var datas = dntData.find(this.item.fileName + '.lzjson', 'id', this.item.id);\n    if(datas.length > 0) {\n      var d = datas[0];\n      vm.items = [];\n      \n      \n      if(vm.item.typeId == 46) {\n        vm.getCharmItems(d.TypeParam1);\n      }\n      else if (vm.item.typeId == 8) {\n        for(var f=0;f<pouchFileNames.length;++f) {\n          vm.getPouchItems(d.TypeParam1, pouchFileNames[f]);\n        }\n      }\n      \n    }\n  }\n  \n  this.getPouchItems = function(boxType, pouchFileName) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getPouchItems(pouchItem, pouchFileName);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0])\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n  \n  this.getCharmItems = function(boxType) {\n    var charmFiles = [charmItemtable, commonCharmItemtable];\n    for(var i=0;i<charmFiles.length;++i) {\n      \n      //console.log('box: ' + boxType);\n\n      var charmData = dntData.getData(charmFiles[i]);\n      for(var c=0;c<charmData.length;++c) {\n        var cd = charmData[c];\n        if(cd.CharmNum == boxType && cd.Look) {\n          \n          var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\n          if(itemds.length > 0) {\n            vm.items.push({\n              count: cd.Count,\n              gold: cd.Gold,\n              item: itemFactory.createBasicItem(itemds[0])\n            });\n          }\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewBox', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewBoxCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-box.html'\n  };\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.crafts = [];\n\n  var cFiles = [\n    'itemcompoundtable.lzjson',\n    'itemcompoundtable_custom.lzjson',\n    'itemcompoundtable_glyph.lzjson',\n    'itemcompoundtable_jewel.lzjson',\n    'itemcompoundtable_renewal.lzjson',\n    'itemcompoundtable_set.lzjson'];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = cFiles.concat([allItemFileName]);\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initCrafts();\n      });\n    });\n  }\n  \n  this.initCrafts = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.crafts = [];\n    for(var i=0;i<cFiles.length;++i) {\n      vm.initCraft(cFiles[i]);\n    }\n    \n    var newCrafts = [];\n    for(var i=0;i<vm.crafts.length;++i) {\n      var found = false;\n      for(var j=0;j<newCrafts.length;++j) {\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\n            \n            found = true;\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\n                  found = false;\n              }\n            }\n        }\n      }\n      \n      if(!found) {\n        newCrafts.push(vm.crafts[i]);\n      }\n    }\n    \n    vm.crafts = newCrafts;\n  }\n\n  this.initCraft = function(fileName) {\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', vm.item.id);\n    \n    for(var i=0;i<fCrafts.length;++i) {\n      var c = fCrafts[i];\n      \n      var craft = {\n        id: c.id,\n        fileName: fileName.replace('.lzjson', ''),\n        gold: c.Cost/100/100,\n        items: [],\n      };\n      \n      var j=0;\n      for(;;) {\n        j++;\n        var itemColName = 'Slot' + j +'Id';\n        var qtyColName = 'Slot' + j +'Num';\n        if(!(itemColName in c)) {\n          break;\n        }\n\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\n        if(items.length > 0) {\n          craft.items.push({\n            item: itemFactory.createBasicItem(items[0]),\n            num: c[qtyColName],\n          });\n        }\n      }\n      \n      vm.crafts.push(craft);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewCraft', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewCraftCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-craft.html'\n  };\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\n\n['$timeout','dntData','itemFactory','items',\n  function($timeout, dntData, itemFactory, items) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  \n  var extractFileName = 'itemdroptable_disjoint.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [extractFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initExtract();\n      });\n    });\n  }\n  \n  this.initExtract = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    var disjoint;\n    var d = itemFactory.getItemData(vm.item);\n    if(d && d.DisjointDrop1 > 0) {\n      disjoint = d.DisjointDrop1;\n    }\n    \n    var itemType = items[vm.item.itemSource];\n    \n    if(itemType && d.EnchantID) {\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\n      for(var i=0;i<enchantments.length;++i) {\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\n          disjoint = enchantments[i].DisjointDrop;\n          break;\n        }\n      }\n    }\n    \n    vm.items = [];\n    if(disjoint) {\n      vm.getItems(disjoint);\n    }\n  }\n  \n  this.getGold = function() {\n    var d = itemFactory.getItemData(this.item);\n    return Number(d.Disjointamount)/100/100;\n  }\n  \n  this.getItems = function(disjoint) {\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\n    \n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\n    if(pouchData.length == 0) {\n    }\n    else {\n      var gold = pouchData[0].GoldMin;\n\n      var itemIndex = 0;\n      do {\n        itemIndex++;\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\n        //console.log('pouch contains ' + pouchItem);\n        if(pouchItem) {\n          if(isGroup) {\n            vm.getItems(pouchItem);\n          }\n          else {\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\n            if(itemds.length > 0) {\n              //console.log('found item ');\n  \n              vm.items.push({\n                count: pouchItemCount,\n                gold: gold,\n                item: itemFactory.createBasicItem(itemds[0]),\n              });\n            }\n          }\n        }\n      } while(pouchItem);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewExtraction', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewExtractionCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-extraction.html'\n  };\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var plateFile = 'platetable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = [plateFile,allItemFileName];\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    getPlates();\n  }\n  \n  function getPlates() {\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\n    for(var r=0;r<rows.length;++r) {\n      var row = rows[r];\n      var col=0;\n      for(;;) {\n        col++;\n        var colName = 'CompoundTableIndex' + col;\n        if(!(colName in row)) {\n          break;\n        }\n\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\n        if(itemData.length > 0) {\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\n        }\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewPlate', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewPlateCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-plate.html'\n  };\n});","angular.module('dnsim').controller('itemViewSetCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.items = [];\n  \n  var files = [\n  'partstable.optimised.lzjson',\n  'partstable_cash.optimised.lzjson',\n  'partstable_common2014.optimised.lzjson',\n  'partstable_common2015.optimised.lzjson',\n  'partstable_common2016.lzjson',\n  'partstable_commoncash.lzjson',\n  'partstable_equipment.optimised.lzjson',\n  'partstable_event.lzjson',\n  'partstable_guild.lzjson',\n  'partstable_pvp.optimised.lzjson',\n  'partstable_reboot.optimised.lzjson',\n  'partstable_skilllevelup.lzjson',\n  'weapontable.optimised.lzjson',\n  'weapontable_cash.optimised.lzjson',\n  'weapontable_common2014.optimised.lzjson',\n  'weapontable_common2015.optimised.lzjson',\n  'weapontable_common2016.lzjson',\n  'weapontable_commoncash.lzjson',\n  'weapontable_equipment.optimised.lzjson',\n  'weapontable_event.lzjson',\n  'weapontable_guild.lzjson',\n  'weapontable_pvp.optimised.lzjson',\n  'weapontable_reboot.optimised.lzjson',\n  //'weapontable_skilllevelup.lzjson'\n  ];\n  \n  var allItemFileName = 'all-items.lzjson';\n  \n  var allFiles = files.concat([allItemFileName]);\n  for(var i=0;i<allFiles.length;++i) {\n    dntData.init(allFiles[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initSets();\n      });\n    });\n  }\n  \n  this.initSets = function() {\n    for(var i=0;i<allFiles.length;++i) {\n      if(!dntData.isLoaded(allFiles[i])) {\n        return;\n      }\n    }\n    \n    vm.items = [];\n    for(var i=0;i<files.length;++i) {\n      getSetItems(files[i]);\n    }\n  }\n  \n  function getSetItems(fileName) {\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\n    for(var r=0;r<rows.length;++r) {\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\n      if(itemData.length > 0) {\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewSet', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewSetCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-set.html'\n  };\n});","angular.module('dnsim').controller('itemViewShopCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues','translations',\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.shopCosts = [];\n  \n  var cShopFileName = 'combinedshoptable.lzjson';\n  var cSysShopFileName = 'combinedshoptable_system.lzjson';\n  var cCashShopFileName = 'combinedshoptable_cash.lzjson';\n  // var shopFileName = 'shoptable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initShops();\n      });\n    });\n  }\n  \n  this.initShops = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n    \n    vm.shopCosts = [];\n    getCombinedCosts(cShopFileName);\n    getCombinedCosts(cSysShopFileName);\n    getCombinedCosts(cCashShopFileName);\n    // getShopCosts();\n    \n    var newShopCosts = [];\n    for(var i=0;i<vm.shopCosts.length;++i) {\n      var found = false;\n      for(var j=0;j<newShopCosts.length;++j) {\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\n            found = true;\n            break;\n        }\n      }\n      \n      if(!found) {\n        newShopCosts.push(vm.shopCosts[i]);\n      }\n    }\n    \n    vm.shopCosts = newShopCosts;\n  }\n  \n  /*\n  function getShopCosts() {\n    var shops = dntData.getData(shopFileName);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n      \n      var c = 0;\n      for(;;) {\n        ++c;\n        \n        var colName = 'itemIndex' + c;\n        if(!(colName in s)) {\n          break;\n        }\n        \n        var itemId = s[colName];\n        if(!itemId) {\n          break;\n        }\n        \n        if(itemId == vm.item.id) {\n          s = {\n            shopName: s.ShopID,\n            tabName: translations.translate(s.TabNameID),\n            gold: s['Quantity' + c],\n          };\n          \n      \n          if(s.shopName in hCodeValues.shopNames) {\n            s.shopName = hCodeValues.shopNames[s.shopName];\n          }\n      \n          if(!s.shopName) {\n            s.shopName = s.ShopId;\n          }\n          vm.shopCosts.push(s);\n        }\n      }\n    }\n  }*/\n\n  function getCombinedCosts(fileName) {\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\n    \n    for(var i=0;i<shops.length;++i) {\n      var s = shops[i];\n        \n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\n      \n      var shopCost = {\n        shopName: s.ShopID,\n        tabName: translations.translate(s.TabNameID),\n        gold: 0,\n        nightmarePoints: 0,\n        ladderPoints: 0,\n        item1: itemFactory.createBasicItem(item1s[0]),\n        item2: itemFactory.createBasicItem(item2s[0]),\n        numItem1: 0,\n        numItem2: 0,\n      };\n      \n      if(shopCost.shopName in hCodeValues.shopNames) {\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\n      }\n      \n      if(s.PurchaseType1 == 1) {\n        shopCost.gold += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue1;\n      }\n      else if(s.PurchaseType1 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\n      }\n      else {\n        shopCost.numItem1 = s.PurchaseItemValue1;\n      }\n      \n      if(s.PurchaseType2 == 1) {\n        shopCost.gold += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 3) {\n        shopCost.ladderPoints += s.PurchaseItemValue2;\n      }\n      else if(s.PurchaseType2 == 8) {\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\n      }\n      else {\n        shopCost.numItem2 = s.PurchaseItemValue2;\n      }\n      \n      shopCost.gold = shopCost.gold/100/100;\n      \n      vm.shopCosts.push(shopCost);\n    }\n  }\n\n}])\n.directive('dngearsimItemViewShop', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewShopCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-shop.html'\n  };\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\n\n['$timeout','dntData','itemFactory','hCodeValues',\n  function($timeout, dntData, itemFactory, hCodeValues) {\n  'use strict';\n  \n  if(this.item == null) return;\n  \n  var vm = this;\n  vm.matchingTransfers = [];\n  \n  var transferFileName = 'enchanttransfertable.lzjson';\n  var allItemFileName = 'all-items.lzjson';\n  \n  var files = [transferFileName,allItemFileName];\n  for(var i=0;i<files.length;++i) {\n    dntData.init(files[i], null, function() {}, function() {\n      $timeout(function() {\n        vm.initTransfers();\n      });\n    });\n  }\n  \n  this.initTransfers = function() {\n    for(var i=0;i<files.length;++i) {\n      if(!dntData.isLoaded(files[i])) {\n        return;\n      }\n    }\n\n    var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\n    vm.matchingTransfers = [];\n    \n    for(var i=0;i<transfers.length;++i) {\n      var t = transfers[i];\n      if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\n        \n        var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\n        var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\n        \n        vm.matchingTransfers.push({\n          level: t.ResultLevel,\n          enchantmentNum: t.ResultEnchantLevel,\n          gold: t.NeedCoin/100/100,\n          rank: hCodeValues.rankNames[t.ResultRank],\n          numItem1: t.NeedItemCount1,\n          item1: itemFactory.createBasicItem(item1s[0]),\n          numItem2: t.NeedItemCount2,\n          item2: itemFactory.createBasicItem(item2s[0]),\n        });\n      }\n    }\n  }\n\n}])\n.directive('dngearsimItemViewTransfer', function() {\n  return {\n    scope: true,\n    bindToController: {\n      item: '=item',\n    },\n    controller: 'itemViewTransferCtrl',\n    controllerAs: 'ctrl',\n    templateUrl: 'ui/item/item-view-transfer.html'\n  };\n});","angular.module('dnsim').controller('RegionCtrl', \n  ['$scope','$timeout','$route','$routeParams','$location','translations','region',\n  function($scope,$timeout,$route,$routeParams,$location,translations,region) {\n    'use strict';\n\n    region.init();\n    translations.init(\n      function(msg) { \n        // console.log(msg);\n      }, \n      function() {\n        $timeout();\n      });\n    \n    $scope.getDntLocation = function() {\n      return region.dntLocation;\n    }\n    $scope.getTlocation = function() {\n      return region.tlocation;\n    }\n     \n    $scope.getHostedFiles = function() {\n      // console.log('getting hosted files');\n      return region.hostedFiles;\n    }\n    \n    $scope.getWorldName = function() {\n      if(translations.isLoaded()) {\n        return translations.translate(10169);\n      }\n      else {\n        return '';\n      }\n    }\n    \n    $scope.setTLocation = function(location) {\n      region.setTLocation(location);\n      $scope.edit = false;\n    }\n    \n    $scope.setLocation = function(location) {\n      if($routeParams.region) {\n        $routeParams.region = location.region;\n        $route.updateParams($routeParams);\n      }\n      else {\n        region.setLocation(location);\n      }\n      $scope.edit = !$scope.edit;\n    }\n  }\n])\n.directive('dngearsimRegion', function() {\n  return {\n    templateUrl: 'ui/region/region.html'\n  };\n});","angular.module('dnsim').controller('CustomItemCtrl',\n\n['$window','saveHelper','$location','hCodeValues',\nfunction($window,saveHelper,$location,hCodeValues) {\n  'use strict';\n  \n  document.body.className = 'search-back';\n  $window.document.title = 'DN Gear Sim | CUSTOM ITEMS';\n  \n  this.customItems = hCodeValues.customItems;\n  \n  this.maxDisplay = 10;\n  this.currentResults = 0;\n  \n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n  \n  this.getResults = function() {\n    return this.customItems;\n  }\n  \n  this.getNewStatName = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      return 'unnamed custom item';\n    }\n    else {\n      return this.nameSearch;\n    }\n  }\n  \n  this.createCustomItem = function() {\n    if(this.nameSearch == '' || this.nameSearch == null) {\n      this.nameSearch = this.getNewStatName();\n    }\n    $location.path('/item/_custom:.' + this.nameSearch);\n  }\n}]);","angular.module('dnsim').controller('ItemSearchCtrl',\n['$scope','$window','$routeParams','$timeout','$location',\n'translations',\n'itemCategory',\n'jobs',\n'hCodeValues',\n'itemFactory',\n'region',\n'saveHelper',\nfunction(\n  $scope,$window,$routeParams,$timeout,$location,\n  translations,\n  itemCategory,\n  jobs,\n  hCodeValues,\n  itemFactory,\n  region,\n  saveHelper) {\n  'use strict';\n  \n  $scope.itemCategory = itemCategory.byPath('search/' + $routeParams.itemType);\n  if(!$scope.itemCategory) {\n     var catName = localStorage.getItem('selectedItemCategory');\n     if(!catName) {\n       catName = 'titles';\n     }\n     \n     var cat = itemCategory.byName(catName);\n     if(cat) {\n       $location.path(cat.path);\n     }\n     return;\n  }\n\n  document.body.className = 'search-back';\n  $window.document.title = 'DN Gear Sim | ' + $scope.itemCategory.name.toUpperCase();\n  \n  $scope.job = {id: -1, name: ''};\n  $scope.jobs = [$scope.job];\n  $scope.allJobs = [];\n  $scope.minLevel = 1;\n  $scope.maxLevel = 99;\n  $scope.maxDisplay = 10;\n  $scope.totalNumResults = 0;\n  $scope.grades = hCodeValues.rankNames;\n  $scope.stat = {id:-1, name:''};\n  $scope.stats = [$scope.stat];\n  \n  angular.forEach(hCodeValues.stats, function(stat, statId) {\n    if(stat.type) {\n      $scope.stats.push(stat);\n    }\n  });\n  \n  var minLevel = Number(localStorage.getItem('minLevel'));\n  if(minLevel > 0 && minLevel < 100) {\n    $scope.minLevel = minLevel;\n  }\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\n  if(maxLevel > 0 && maxLevel < 100) {\n    $scope.maxLevel = maxLevel;\n  }\n  \n  $scope.nameSearch = localStorage.getItem('nameSearch');\n  if($scope.nameSearch == null) {\n    $scope.nameSearch = '';\n  }\n  \n  var savedSearchStatId = localStorage.getItem('searchStat');\n  if(savedSearchStatId > -1 && savedSearchStatId in hCodeValues.stats) {\n    $scope.stat = hCodeValues.stats[savedSearchStatId];\n  }\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n\n  $scope.save = function() {\n    if(!$scope.itemCategory.hideLevel) {\n      localStorage.setItem('minLevel', $scope.minLevel);\n      localStorage.setItem('maxLevel', $scope.maxLevel);\n    }\n    \n    if(!$scope.itemCategory.hideJob) {\n      if($scope.job != null) {\n        localStorage.setItem('jobNumber', $scope.job.id);\n      }\n    }\n  \n    if($scope.stat != null) {\n      localStorage.setItem('searchStat', $scope.stat.id);\n    }\n\n    localStorage.setItem('nameSearch', $scope.nameSearch);\n  };\n  \n  function init() {\n    // console.log('translations loaded');\n    if(jobs.isLoaded()) {\n      jobInit();\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n\n    itemCategory.init($scope.itemCategory.name, $timeout);\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    // console.log('called the job init func');\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      // console.log('trying to init jobs');\n      // console.log('job dropdown should be set');\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, $scope.jobs[0]);\n      $scope.jobs = newJobs;\n      $scope.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            $scope.job = value;\n            return;\n          }\n        });\n      }\n    }\n  }\n  \n  $scope.rankChecked = hCodeValues.checkedRank;\n  \n  $scope.getResults = function() {\n    var allItems = itemCategory.getItems($scope.itemCategory.name);\n    if(allItems == null) {\n      return null;\n    }\n    \n    allItems = allItems.sort(function(item1, item2) {\n        return (item2.levelLimit - item1.levelLimit);\n      });\n    \n    $scope.save();\n    \n    var start = new Date().getTime();\n          \n    var pcStatId = -1;\n    if('pc' in $scope.stat) {\n      pcStatId = $scope.stat.pc;\n    }\n  \n    var statVals = [];\n    var newResults = [];\n    var numEquip = allItems.length;\n    var curDisplay = 0;\n    for(var i=0;i<numEquip && (curDisplay<$scope.maxDisplay || $scope.stat.id >= 0);++i) {\n      var e = allItems[i];\n      if(e != null) {\n        \n        if(!$scope.itemCategory.hideLevel) {\n          if(e.levelLimit < $scope.minLevel || e.levelLimit > $scope.maxLevel) {\n            continue;\n          }\n        }\n          \n        if(!$scope.itemCategory.hideRank) {\n          if(e.rank != null && !$scope.rankChecked[e.rank.id]) {\n            continue;\n          }\n        }\n          \n        if(!$scope.itemCategory.hideJob) {\n          if($scope.job != null && $scope.job.id > 0) {\n            if(!$scope.job.isClassJob(e.needJobClass)) {\n              continue;\n            }\n          }\n        }\n        \n        itemFactory.initItem(e);\n        if(e.typeName != $scope.itemCategory.name) {\n          continue;\n        }\n        \n        if($scope.nameSearch != '') {\n          var nameSearches = $scope.nameSearch.split(' ');\n          if(nameSearches.length == 0) {\n            nameSearches = [$scope.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        if($scope.stat.id >= 0) {\n          var statFound = false;\n          \n          var statVal = {};\n          for(var s=0;s<e.stats.length;++s) {\n            var stat = e.stats[s]\n            if(stat.id == $scope.stat.id) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n              break;\n            }\n            else if(stat.id == pcStatId) {\n              statFound = true;\n              statVal.i = curDisplay;\n              statVal.s = Number(stat.max);\n            }\n          }\n          \n          if(!statFound) {\n            continue;\n          }\n          else {\n            statVals.push(statVal);\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n    }\n    \n    if($scope.stat.id >= 0) {\n      \n      var currentResults = Math.min(curDisplay, $scope.maxDisplay);\n      \n      statVals = statVals.sort(function(value1, value2) {\n        return value2.s - value1.s;\n      });\n      \n      var statResults = [];\n      for(var i=0;i<currentResults;++i) {\n        statResults.push(newResults[statVals[i].i]);\n      }\n      newResults = statResults;\n    }\n    \n    $scope.totalNumResults = newResults.length;\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    \n    return newResults;\n  };\n  \n  $scope.showMoreResults = function(extra) {\n    $scope.maxDisplay = $scope.totalNumResults + extra;\n    $scope.totalNumResults = 0;\n  }\n  \n}]);\n","angular.module('dnsim').controller('SkillSearchCtrl',\n\n['$window','$timeout','saveHelper','region','jobs','translations','dntData','hCodeValues',\nfunction($window,$timeout,saveHelper, region, jobs, translations,dntData,hCodeValues) {\n  'use strict';\n  \n  $window.document.title = 'DN Gear Sim | SKILLS';\n  \n  var vm = this;\n  document.body.className = 'search-back';\n  \n  this.job = {id: -1, d:{}, name: ''};\n  this.jobs = [this.job];\n  this.allJobs = [];\n  this.maxDisplay = 60;\n  this.currentResults = 0;\n  this.dntName = '';\n  this.skills = [];\n  this.loadedJobId = -1;\n\n  this.nameSearch = localStorage.getItem('nameSearch');\n  if(this.nameSearch == null) {\n    this.nameSearch = '';\n  }\n\n  var classFactories = [];\n  \n  region.init();\n  if(translations.isLoaded()) {\n    init();\n  }\n  else {\n    translations.init(reportProgress, function() { $timeout(init); } );\n  }\n  \n  this.isLoading = function() {\n    if(!jobs.isLoaded()) {\n      // console.log('jobs not loaded');\n      if(!jobs.hasStartedLoading()) {\n        init();\n      }\n      return true;      \n    }\n    \n    if(!translations.isLoaded()) {\n      // console.log('transations not loaded');\n      if(!translations.startedLoading) {\n        translations.init(reportProgress, function() { $timeout(translationsInit); } );\n      }\n\n      return true;\n    }\n    \n    var baseName = jobs.getBaseJobName(vm.job);\n    var dntName = getDntName(baseName);\n    if(dntName != null) {\n      if(!dntData.isLoaded(dntName)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  \n  function getDntName(baseClassName) {\n    // console.log('got base class :' + baseClassName);\n    if(baseClassName != null) {\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.lzjson';\n    }\n    else {\n      return null;\n    }\n  }\n\n  function getSkills() {\n    // console.log('getting skills for ' + vm.job.name);\n    if(vm.loadedJobId == vm.job.id) {\n      return vm.skills;\n    }\n    else {\n      \n      var baseJobNames = [];\n      if(vm.job.id >= 0) {\n        var baseName = jobs.getBaseJobName(vm.job);\n        baseJobNames.push(baseName);\n      }\n\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n        if(dntName) {\n          if(!dntData.isLoaded(dntName)) {\n            // console.log('loading skills for ' + baseName);\n            dntData.init(dntName, null, reportProgress, function() { $timeout(function() {setupSkills(baseJobNames, vm.job);} ) });\n          }\n          else {\n            setupSkills(baseJobNames, vm.job);\n          }\n        }\n      });\n    }\n  }\n  \n  function setupSkills(baseJobNames, job) {\n    \n    vm.skills = [];\n    var allReady = true;\n    angular.forEach(baseJobNames, function(baseName, index) {\n      var dntName = getDntName(baseName);\n      if(!dntData.isLoaded(dntName)) {\n        allReady = false;\n        return;\n      }\n    });\n    \n    if(allReady) {\n      angular.forEach(baseJobNames, function(baseName, index) {\n        var dntName = getDntName(baseName);\n      \n        var skills = dntData.getData(dntName);\n        var numSkills = skills.length;\n        for(var s=0;s<numSkills;++s) {\n          if(skills[s].NameID == 0) {\n            continue;\n          }\n          \n          if(skills[s].EffectClass1 > 0 || \n             skills[s].EffectClass2 > 0 || \n             skills[s].EffectClass3 > 0 || \n             skills[s].EffectClass4 > 0 ||\n             skills[s].EffectClass5 > 0 ||  \n             skills[s].EffectClass6 > 0) {\n               \n            var newItem = {d: skills[s]};\n            \n            newItem.id = skills[s].id;\n            newItem.typeName = 'skills';\n            newItem.itemSource = 'skills';\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\n            newItem.needJobClass = skills[s].NeedJob;\n            newItem.rank = hCodeValues.rankNames[0];\n            newItem.baseJobName = baseName.toLowerCase();\n            newItem.icon = skills[s].IconImageIndex;\n            \n            vm.skills.push(newItem);\n          }\n        }\n      });\n  \n      vm.loadedJobId = job.id;\n    }\n  }\n  \n  this.itemLinkClosed = function() {\n    saveHelper.saveCustomItems(vm.customItems);\n    vm.customItems = saveHelper.getCustomItems();\n  }\n  \n  this.getResults = function() {\n    \n    var skills = getSkills();\n    if(skills == null) {\n      return [];\n    }\n    \n    \n    if(vm.job != null) {\n      localStorage.setItem('jobNumber', vm.job.id);\n    }\n    localStorage.setItem('nameSearch', vm.nameSearch);\n\n    var newResults = [];\n    var numSkills = skills.length;\n    var curDisplay = 0;\n    for(var i=0;i<numSkills && (curDisplay<vm.maxDisplay);++i) {\n      var e = skills[i];\n      \n      if(vm.nameSearch != '') {\n        var nameSearches = vm.nameSearch.split(' ');\n        if(nameSearches.length == 0) {\n          nameSearches = [vm.nameSearch];\n        }\n        var allMatch = true;\n        for(var ns=0;ns<nameSearches.length;++ns) {\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n            allMatch = false;\n            break;\n          }\n        }\n        \n        if(!allMatch) {\n          continue;\n        }\n      }\n      \n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\n        continue;\n      }\n      \n      newResults.push(e);\n      curDisplay++;\n    }\n    vm.currentResults = Math.min(curDisplay, vm.maxDisplay);\n    return newResults;\n  }\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n  \n  function jobInit() {\n    if(translations.isLoaded() && jobs.isLoaded()) {\n      var newJobs = jobs.getFinalJobs();\n\n      newJobs.splice(0, 0, vm.jobs[0]);\n      vm.jobs = newJobs;\n      vm.allJobs = jobs.getAllJobs();\n      \n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\n      if(lastJobNumber != null) {\n        angular.forEach(newJobs, function(value, key) {\n          if(value.id == lastJobNumber) {\n            vm.job = value;\n            return;\n          }\n        });\n      }\n      \n      vm.getResults();\n    }\n  }\n  \n  function init() {\n    // console.log('skill init');\n    if(jobs.isLoaded()) {\n      $timeout(jobInit);\n    }\n    else {\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\n    }\n  }\n}]);","angular.module('dnsim')\n.controller('ItemsCtrl', \n  ['$window','$timeout','hCodeValues','region','translations','dntData',\n  function($window, $timeout, hCodeValues, region, translations, dntData) {\n    \n    'use strict';\n    \n    var vm = this;\n    \n    this.boxes = null;\n    this.boxeContents = [];\n    this.maxDisplay = 10;\n    this.currentResults = 0;\n\n    this.nameSearch = localStorage.getItem('itemNameSearch');\n    if(this.nameSearch == null) {\n      this.nameSearch = '';\n    }\n    \n    document.body.className = 'default-back';\n    $window.document.title = 'DN Gear Sim | ITEM SEARCH';\n    \n    var fileName = 'all-items.lzjson';\n    \n    dntData.init(fileName, null, function() {}, function() {\n      $timeout(function() {\n        vm.initBoxes();\n      });\n    });\n    \n    this.initBoxes = function() {\n      // console.log('init boxes');\n      if(dntData.isLoaded(fileName) && translations.isLoaded()) {\n        vm.boxes = [];\n        \n        var datas = dntData.getData(fileName);\n        // console.log(datas.length + ' boxes');\n        for(var i=0;i<datas.length;++i) {\n          var data = datas[i];\n          if(data.NameID > 0) {\n            var box = {\n              id: data.id,\n              name: vm.translate(data.NameID, data.NameIDParam),\n              rank: hCodeValues.rankNames[data.Rank],\n              icon: data.IconImageIndex,\n              levelLimit: data.LevelLimit,\n              fileName: data.fileName,\n            }\n            vm.boxes.push(box);\n          }\n        }\n      }\n    }\n    \n    this.getResults = function() {\n      localStorage.setItem('itemNameSearch', vm.nameSearch);\n      if(vm.boxes == null) {\n        vm.initBoxes();\n      }\n      \n      if(vm.boxes == null) {\n        return;\n      }\n  \n      var newResults = [];\n      var numBoxes = vm.boxes.length;\n      var curDisplay = 0;\n      for(var i=0;i<numBoxes && (curDisplay<vm.maxDisplay);++i) {\n        var e = vm.boxes[i];\n\n        if(vm.nameSearch != '') {\n          var nameSearches = vm.nameSearch.split(' ');\n          if(nameSearches.length == 0) {\n            nameSearches = [vm.nameSearch];\n          }\n          var allMatch = true;\n          for(var ns=0;ns<nameSearches.length;++ns) {\n            if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\n              allMatch = false;\n              break;\n            }\n          }\n          \n          if(!allMatch) {\n            continue;\n          }\n        }\n        \n        newResults.push(e);\n        curDisplay++;\n      }\n      \n      vm.totalNumResults = newResults.length;\n      return newResults;\n    }\n  \n    this.showMoreResults = function(extra) {\n      vm.maxDisplay = vm.totalNumResults + extra;\n      vm.totalNumResults = 0;\n    }\n    \n    this.translate = function(nameId, nameParam) {\n      return translations.translate(nameId, nameParam);\n    }\n  }]\n);\n","angular.module('dnsim').controller('ExportCtrl', \n  ['$scope','$window','saveHelper',\n   function($scope, $window, saveHelper) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | EXPORT';\n  \n  var rawSavedData = saveHelper.getSavedItems();\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\n  \n  $scope.save = function() {\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\n  }\n}]);\n","angular.module('dnsim').controller('NavCtrl', \n  ['$scope','$location','translations','region','itemCategory',\n  function($scope,$location,translations,region,itemCategory) {\n    'use strict';\n\n    var aboutAction = { path: 'about', name: '', icon: 'question-sign' }\n    \n    var noMenu = [];\n    var noLocationMenu = [aboutAction];\n    var normalMenu = [\n      {path: 'builds', name:'builds', icon: 'wrench'},\n      {path: 'search', name:'gear', icon: 'search'},\n      {path: 'items', name:'items', icon: 'search'},\n      aboutAction,\n      ];\n      \n    region.init();\n  \n    $scope.isSearch = function() {\n      return $location.path().indexOf('/search') == 0;\n    }\n\n    $scope.isLoading = function() {\n      return translations.startedLoading && \n            !translations.isLoaded() &&\n            region.tlocation != null &&\n            region.tlocation.url != '' &&\n            !$scope.noRegion();\n    }\n    \n    $scope.noRegion = function() {\n      return region.dntLocation == null;\n    }\n    \n    $scope.fireAction = function(action) {\n      if(action.name == 'search') {\n        var cat = localStorage.getItem('selectedItemCategory', action.name);\n        if(cat) {\n          $location.path('/' + action.path + '/' + cat);\n        }\n        else {\n          $location.path('/' + action.path);\n        }\n      }\n      else {\n          $location.path('/' + action.path);\n      }\n    }\n      \n    $scope.getActions = function() {\n      var menu = null;\n      if(region.dntLocation != null && region.dntLocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if(region.tlocation != null && region.tlocation.url == '') {\n        menu = noLocationMenu; \n      }\n      else if($location.path() == '/view-group' || region.dntLocation == null) {\n        menu = normalMenu;\n      }\n      else {\n        menu = normalMenu;\n      }\n      \n      angular.forEach(menu, function(value, key) {\n        delete value.extraCss;\n        if($location.path().length == 1) {\n          if(value.path.length == 1) {\n            value.extraCss = 'active';\n          }\n        }\n        else if(value.path.length > 1 && $location.path().indexOf('/' + value.path) == 0) {\n          value.extraCss = 'active';\n        }\n      });\n      \n      return menu;\n    };\n  }\n])\n.directive('dngearsimNav', function() {\n  return {\n    templateUrl: 'ui/nav/nav.html'\n  };\n});","angular.module('dnsim').controller('SetupCtrl', \n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\n  'use strict';\n     \n  document.body.className = 'default-back';\n  $window.document.title = 'DN Gear Sim | SETUP';\n  \n  $scope.advancedSetup = false;\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\n  $scope.translationResults = [];\n  $scope.hostedFiles = region.hostedFiles;\n  \n  var noLocation = '';\n  var sessionLocation = region.alternativeFiles.url;\n  if(sessionLocation == null) {\n    sessionLocation = noLocation;\n  }\n  \n  $scope.location = sessionLocation;\n  if($scope.location == noLocation) {\n    $scope.testResults = ['No location set'];\n  }\n  else {\n    $scope.testResults = ['Using location ' + $scope.location];\n  }\n  \n  $scope.setLocation = function(url) {\n    $scope.location = url;\n    $scope.isLoading = true;\n    $scope.saveLocation();\n    dntReset();\n\n    $scope.translationResults = [];\n    var existingFile = localStorage.getItem('UIStrings_file');\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\n      sessionStorage.removeItem('UIStrings');\n    }\n    translations.reset();\n    translations.location = url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  $scope.resetSessionData = function() {\n    $scope.testResults = ['session data reset.. reloading page'];\n    region.tlocation = null;\n    region.dntLocation = null;\n    translations.reset();\n    sessionStorage.clear();\n    localStorage.clear();\n    this.saveLocation();\n    $timeout(function() {   \n      location.hash = '';\n      location.reload(true);\n    });\n  }\n  \n  $scope.loadUiString = function() {\n    $scope.translationResults = [];\n    sessionStorage.removeItem('UIStrings');\n    dntReset();\n    translations.reset();\n    translations.location = region.tlocation.url;\n    translations.init(progressTranslations, translationsStatus);\n  }\n  \n  function translationsStatus() {\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\n    $scope.isLoading = false;\n  }\n  \n  function progress(msg) {\n    $timeout(\n      function() {\n        if($scope.testResults != null) {\n          $scope.testResults.push(msg);\n        }\n      });\n  }\n  \n  function progressTranslations(msg) {\n    $timeout(\n      function() {\n        if($scope.translationResults != null) {\n          $scope.translationResults.push(msg);\n        }\n      });\n  }\n  \n  $scope.saveLocation = function() {\n    dntReset();\n    if($scope.location != noLocation) {\n      region.setCustomUrl($scope.location);\n      \n      region.init();\n      if(region.alternativeFiles.region == region.tlocation.region) {\n        translations.reset();\n        translations.init(progressTranslations, translationsStatus);\n      }\n      $scope.testResults = [\n        'Location saved',\n        'Using location ' + $scope.location];\n    }\n  }\n  \n  $scope.testLocation = function() {\n    if($scope.location != noLocation) {\n      $scope.testResults = [\n        'Using location ' + $scope.location,\n        'Loading all data used by the app'];\n\n      translations.init(progress, function () {\n        dntInit(progress);\n      });\n    }\n  }\n}]);\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimCategoryLinks', ['itemCategory','$location', dnsimCategoryLinks]);\n\nfunction dnsimCategoryLinks(itemCategory,$location) {\n  return {\n    restrict: 'E',\n    scope: {\n    },\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.categories = itemCategory.categories;\n      \n      $scope.setCategory = function(action) {\n        localStorage.setItem('selectedItemCategory', action.name);\n        $location.path('/' + action.path);\n      }\n\n      angular.forEach($scope.categories, function(value, key) {\n        if($location.path() == '/' + value.path) {\n          value.extraCss = 'active';\n        }\n        else {\n          value.extraCss = 'search-default';\n        }\n      });\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\n\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\n    link: function($scope, element, attrs) {\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.iconImage = $scope.getIcon();\n        }\n      });\n      \n      $scope.getIcon = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\n          \n          var prefix;\n          if($scope.item.typeName == 'skills') {\n            prefix = 'skillicon';\n          }\n          else {\n            prefix = 'itemicon';\n          }\n          \n          if(fileIndex > 9) {\n            return prefix + fileIndex + '.png';\n          }\n          else {\n            return prefix + '0' + fileIndex + '.png';\n          }\n        }\n        return null;\n      }\n      \n      $scope.iconImage = $scope.getIcon();\n      \n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (($scope.item.icon % 10) * 40) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.icon > 0) {\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n  \nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\n\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n      noClick: '=noClick',\n    },\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\n    link: function($scope, element, attrs) {\n      $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\n      \n      $scope.$watch('item', function(newValue, oldValue) {\n        if (newValue) {\n          $scope.itemLink = '/item/' + region.dntLocation.region + '/' + exportLinkHelper.encodeItem($scope.item);\n        }\n      });\n      \n      $scope.openItem = function() {\n        if(!$scope.noClick) {\n          $location.path($scope.itemLink);\n        }\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimJobIcon', ['exportLinkHelper','$location','region', dnsimJobIcon]);\n\nfunction dnsimJobIcon(exportLinkHelper,$location,region) {\n  return {\n    restrict: 'E',\n    scope: {\n      item: '=item',\n    },\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\n    link: function($scope, element, attrs) {\n\n      $scope.getIconXPostion = function() {\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\n          return (($scope.item.d.JobIcon % 9) * 44) + 5;\n        }\n        return 0;\n      }\n      \n      $scope.getIconYPostion = function() {\n        if($scope.item && $scope.item.d && $scope.item.d.JobIcon > 0) {\n          return (Math.floor($scope.item.d.JobIcon / 9) * 44) + 5;\n        }\n        return 0;\n      }\n    },\n  };\n}\n\n})();\n","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', dnsimLoading]);\n\nfunction dnsimLoading(dntData, translations, $timeout) {\n  'use strict';\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n    },\n    templateUrl: 'ui/widgets/dnsim-loading.html',\n    link: function($scope, element, attrs) {\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\n        $scope.setLoadCount();\n      });\n      \n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n      \n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\n        $timeout(function() {\n          $scope.loadError = true;\n        });\n      });\n\n      $scope.setLoadCount = function() {\n        var n = dntData.anyLoading();\n        if(!translations.isLoaded())\n        {\n          n++;\n        }\n        \n        $timeout(function() {\n          if($scope.numLoading < n || !$scope.totalToLoad) {\n            $scope.totalToLoad = n;\n          }\n          $scope.numLoading = n;\n        });\n      }\n      \n      $scope.setLoadCount();\n      $scope.loadError = false;\n    },\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\n\nfunction dnsimSelectAllOnClick() {\n  'use strict';\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      var hasSelectedAll = false;\n      element.on('click', function($event) {\n        if (!hasSelectedAll) {\n          try {\n            //IOs, Safari, thows exception on Chrome etc\n            this.selectionStart = 0;\n            this.selectionEnd = this.value.length + 1;\n            hasSelectedAll = true;\n          } catch (err) {\n            //Non IOs option if not supported, e.g. Chrome\n            this.select();\n            hasSelectedAll = true;\n          }\n        }\n      });\n      //On blur reset hasSelectedAll to allow full select\n      element.on('blur', function($event) {\n        hasSelectedAll = false;\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues',dnsimStats]);\n\nfunction dnsimStats(hCodeValues) {\n  return {\n    restrict: 'A',\n    scope: {\n      stats: '=stats',\n      build: '=build',\n      altStats: '=altStats',\n      separator: '=separator',\n      filter: '=filter',\n    },\n    link: function($scope, element, attrs) {\n      \n      var sep;\n      if(!$scope.separator) {\n        sep = '';\n      }\n      else {\n        sep = '&nbsp;' + $scope.separator + ' ';\n      }\n      \n      var addedElements = [];\n      var originalDisplay = element.css('display');\n      \n      function showStats() {\n        element.css('display', 'none' );\n        var stats = $scope.stats;\n        if(!stats) {\n          stats = $scope.altStats;\n        }\n        \n        angular.forEach(addedElements, function(value, key) {\n          value.remove();\n        });\n        \n        var first = true;\n        var lastElement = element;\n        \n        function append(text) {\n          var newElement = element.clone();\n          newElement.css('display', originalDisplay);\n          newElement.html(text);\n          \n          lastElement.after(newElement);\n          lastElement = newElement;\n          addedElements.push(newElement);\n        }\n        \n        angular.forEach(stats, function(stat, key) {\n          var output = '';\n          \n          if(stat.id in hCodeValues.stats) {\n            \n            var def = hCodeValues.stats[stat.id];\n            if('hide' in def && def.hide) {\n              return;\n            }\n            \n            if($scope.filter && !def[$scope.filter]) {\n              return;\n            }\n            \n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '&nbsp;';\n            }\n            \n            if($scope.build) {\n              if(def.element == 'primary') {\n                var eleId = 0;\n                if($scope.build.element) {\n                  eleId = $scope.build.element.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n              else if(def.element == 'secondary') {\n                var eleId = 0;\n                if($scope.build.secondaryElement) {\n                  eleId = $scope.build.secondaryElement.id;\n                }\n                output += hCodeValues.elements[eleId].name + '&nbsp;';\n              }\n            }\n            \n            output += def.name+':&nbsp;'+def.display(stat);\n            if(def.combineWith > 0) {\n              angular.forEach(stats, function(stat2, key2) {\n                if(stat2.id == def.combineWith) {\n                  if(stat2.max != stat.max) {\n                    output += '-' + def.display(stat2);\n                  }\n                  return;\n                }\n              });\n            }\n          }\n          else {\n            if(!first) {\n              output += sep;\n            }\n            first = false;\n          \n            if('needSetNum' in stat) {\n              output += stat.needSetNum + '-Increases&nbsp;';\n            }\n            \n            output += stat.id+':&nbsp;'+stat.max;\n          }\n          \n          append(output);\n        });\n      }\n        \n      $scope.$watch('stats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n      \n      $scope.$watch('altStats', function(newValue, oldValue) {\n        if (newValue) {\n          showStats();\n        }\n      });\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\n\nfunction dnsimStringToNumber() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n      ngModel.$parsers.push(function(value) {\n        return '' + value;\n      });\n      ngModel.$formatters.push(function(value) {\n        return parseFloat(value, 10);\n      });\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('character',['dntData','itemColumnsToLoad','jobs','hCodeValues',character]);\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\n\n  var jobConversions = 'rebootplayerweighttable.lzjson';\n  var statCaps = 'playercommonleveltable.lzjson';\n  var jobBaseStats = 'playerleveltable.lzjson';\n\n  var heroLevels = 'heroleveltable.lzjson';\n  var heroLevelPotentials = 'potentialtable_herolevel.lzjson';\n  \n  function reportProgress(msg) {\n    // console.log('progress: ' + msg);\n  }\n\n  return {\n    init: function(complete) {\n      jobs.init(reportProgress, complete);\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete);\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete);\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete);\n      dntData.init(heroLevels, null, reportProgress, complete);\n      dntData.init(heroLevelPotentials, null, reportProgress, complete);\n    },\n    \n    getHeroStats: function(heroLevel) {\n      var heroStats = [];\n      if(heroLevel > 0) {\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\n        if(index.length == 1) {\n          var h = dntData.getRow(heroLevels, index[0]);\n          if(h != null) {\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\n            if(pIndex.length == 1) {\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\n              if(p != null) {\n                heroStats = hCodeValues.getStats(p);\n              }\n            }\n          }\n        }\n      }\n      return heroStats;\n    },\n    \n    getStatCaps: function(level) {\n      if(level > 0) {\n        var index = dntData.findFast(statCaps, 'id', level);\n        if(index.length == 1) {\n          return dntData.getRow(statCaps, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getConversions: function(jobId) {\n      if(jobId > 0) {\n        var index = dntData.findFast(jobConversions, 'id', jobId);\n        if(index.length == 1) {\n          return dntData.getRow(jobConversions, index[0]);\n        }\n      }\n      \n      return {};\n    },\n    \n    getBaseStats: function(level, jobId) {\n      if(level > 0 && jobId > 0) {\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\n        if(index.length == 1) {\n          return dntData.getRow(jobBaseStats, index[0]);\n        }\n      }\n      \n      return {};\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\nfunction itemColumnsToLoad() {\n  return {\n    mainDnt: {\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\n      State2: true, StateValue2: true, State2_Max: true,\n      State3: true, StateValue3: true, State3_Max: true,\n      State4: true, StateValue4: true, State4_Max: true,\n      State5: true, StateValue5: true, State5_Max: true,\n      State6: true, StateValue6: true, State6_Max: true,\n      State7: true, StateValue7: true, State7_Max: true,\n      State8: true, StateValue8: true, State8_Max: true,\n      State9: true, StateValue9: true, State9_Max: true,\n      State10: true,StateValue10: true,State10_Max: true,\n      EnchantID: true,\n      SkillID: true,\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\n    },\n    partsDnt: {\n      SetItemID: true\n    },\n    enchantDnt: {\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\n      DisjointDrop: true,\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\n    },\n    potentialDnt : {\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\n      State1: true,State1Value: true,\n      State2: true,State2Value: true,\n      State3: true,State3Value: true,\n      State4: true,State4Value: true,\n      State5: true,State5Value: true,\n      State6: true,State6Value: true,\n      State7: true,State7Value: true,\n      State8: true,State8Value: true,\n      State9: true,State9Value: true,\n      State10: true,State10Value: true,\n      State11: true,State11Value: true,\n      State12: true,State12Value: true,\n      State13: true,State13Value: true,\n      State14: true,State14Value: true,\n      State15: true,State15Value: true,\n      State16: true,State16Value: true\n    },\n    gemDnt: {\n      Type: true\n    },\n    setDnt : null,\n    sparkDnt: null,\n    jobsDnt: {\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\n    },\n    jobBaseStatColsToLoad: {\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\n    },\n    statCapColsToLoad: {\n      Cbase: true,\n      Cdefense: true,\n      Ccritical: true,\n      Cfinaldamage: true,\n      CcriticalDamage: true,\n    },\n    jobConversionColsToLoad: {\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\n\nfunction dntData($rootScope,$timeout) {\n  \n  function createLoader(dntLocation, file, colsToLoad) {\n\n    var loader = {\n      reader: new DntReader(),\n      \n      loaded: false,\n      startedLoading: false,\n      \n      file: file,\n      \n      dntLocation: dntLocation,\n      progressCallback: null,\n      completeCallbacks : [],\n      \n      init: function(progress, complete) {\n        \n        if(this.loaded) {\n          complete();\n        }\n        else {\n          this.progressCallback = progress;\n          this.completeCallbacks.push(complete);\n          \n          if(!this.startedLoading) {\n            this.startedLoading = true;\n            var t = this;\n            \n            this.reader.colsToLoad = colsToLoad;\n            \n            if(this.dntLocation != null && \n              this.dntLocation.url != null &&\n              this.dntLocation.url.length > 0) {\n                \n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n\n              $timeout(function() {\n                t.reader.loadDntFromServerFile(\n                  t.dntLocation.url + '/' + file,\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \n                  function(result, fileName) {\n                    // console.info('dnt loading complete : ' + file);\n                    t.loaded = true;\n                    \n                    angular.forEach(t.completeCallbacks, function(value, key) {\n                      value();\n                    });\n                    t.completeCallbacks = [];\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\n                  },\n                  function(msg) {\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\n                    t.startedLoading = false;\n                    t.loaded = false;\n                  }  );\n              });\n            }\n            else {\n              // console.log(\"dnt location not set!\");\n            }\n          }\n        }\n      },\n      \n      reset: function() {\n        this.reader = new DntReader();\n        this.loaded = false;\n        this.startedLoading = false;\n      }\n    }\n  \n    return loader;\n  };\n  \n  return {\n    loaders : {},\n    findIndexes : {},\n    dntLocation : null,\n    \n    setLocation: function(location) {\n      this.dntLocation = location;\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        if(value.dntLocation != location) {\n          value.dntLocation = location;\n          t.reset(key);\n        }\n      });\n    },\n    \n    init : function (fileName, colsToLoad, progress, complete) {\n      if(!(fileName in this.loaders)) {\n        if(fileName.length > 0) {\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\n        }\n      }\n      this.loaders[fileName].init(progress, complete);\n    },\n    getData : function (fileName) {\n      if(this.isLoaded(fileName)) {\n        var reader = this.loaders[fileName].reader;\n        var retVal = new Array(reader.numRows);\n        for(var i=0;i<reader.numRows;++i) {\n          retVal[i] = reader.getRow(i);\n        }\n        \n        return retVal;\n      }\n      else {\n        return [];\n      }\n    },\n    find : function(fileName, column, value) {\n      var results = this.findFast(fileName, column, value);\n      var retVal = [];\n      var numResults = results.length;\n      for(var i=0;i<numResults;++i) {\n        retVal.push(this.getRow(fileName, results[i]));\n      }\n      \n      return retVal;\n    },\n    findFast : function(fileName, column, value) {\n      \n      if(this.isLoaded(fileName)) {\n        if(!(fileName in this.findIndexes)){\n          this.findIndexes[fileName] = {};\n        }\n        \n        var reader = this.loaders[fileName].reader;\n        var colIndex = reader.columnIndexes[column];\n        \n        var findIndex = this.findIndexes[fileName];\n        \n        if(!(column in findIndex)) {\n          var index = {}\n          findIndex[column] = index;\n          \n          var results = [];\n          \n          var data = reader.data;\n          var len = data.length;\n          for(var r=0;r<len;++r) {\n            var d = data[r];\n            var val = d[colIndex];\n\n            if(!(val in index)) {\n              index[val] = [r];\n            }\n            else {\n              index[val].push(r);\n            }\n          }\n        }\n        \n        if(value in findIndex[column]) {\n          return findIndex[column][value];\n        }\n        else {\n          return [];\n        }\n      }\n      \n      return [];\n    },\n    isLoaded : function(fileName) {\n      return fileName in this.loaders && this.loaders[fileName].loaded;\n    },\n    hasStartedLoading : function(fileName) {\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\n    },\n    reset : function(fileName) {\n      if(fileName in this.loaders) {\n        this.loaders[fileName].reset();\n        delete this.loaders[fileName];\n        delete this.findIndexes[fileName];\n      }\n    },\n    resetAll : function() {\n      var t = this;\n      angular.forEach(this.loaders, function(value, key) {\n        t.reset(key);\n      });\n    },\n    anyLoading : function() {\n      var t = this;\n      var found = 0;\n      angular.forEach(this.loaders, function(value, key) {\n        if(!value.loaded && value.startedLoading) {\n          found++;\n        }\n      });\n      \n      return found;\n    },\n    getNumRows : function(fileName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.numRows;\n      }\n      else {\n        return 0;\n      }\n    },\n    getRow : function(fileName, index) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getRow(index);\n      }\n      else {\n        return {};\n      }\n    },\n    lookupValue: function(fileName, data, columnName) {\n      if(this.isLoaded(fileName)) {\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\n      }\n      else {\n        return null;\n      }\n    },\n    convertData: function(fileName, data) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.convertData(data);\n      }\n      else {\n        return null;\n      }\n    },\n    getValue : function(fileName, index, columnName) {\n      if(this.isLoaded(fileName)) {\n        return this.loaders[fileName].reader.getValue(index, columnName);\n      }\n      else {\n        return null;\n      }\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\nfunction dntInit(items,jobs,dntData,itemFactory) {\n  return function(progress) {\n    \n    progress('starting init');\n    \n    var allFactories = [jobs];\n    \n    var dntFiles = {};\n    angular.forEach(items, function(item, key) {\n      if(key != 'all') {\n        angular.forEach(item, function(value, prop) {\n          if(prop.indexOf('Dnt') == prop.length-3) {\n            var newFactory = { \n              init: function(progress, complete) {\n                dntData.init(value, null, progress, complete);\n              },\n              isLoaded: function() {\n                return dntData.isLoaded(value);\n              },\n              fileName: value,\n            };\n            \n            allFactories.push(newFactory);\n          }\n        });\n      }\n    });\n    \n    function initFactory(index) {\n    \n      if(index < allFactories.length) {\n        allFactories[index].init(progress, function() { \n          if(allFactories[index].isLoaded()) {\n            if('fileName' in allFactories[index]) {\n              progress('dnt loaded: ' + allFactories[index].fileName);\n            }\n            initFactory(index+1);\n          }\n        });\n      }\n      else {\n        progress('Full initialise complete');\n      }\n    }\n    \n    initFactory(0);\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\nfunction dntReset(items, jobs, dntData) {\n  return function() {\n    \n    angular.forEach(items, function(source, name) {\n      source.reset();\n    });\n    \n    jobs.reset();\n    dntData.resetAll();\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('exportLinkHelper', \n['$http','items','dntData','itemFactory','hCodeValues','itemColumnsToLoad','statHelper','translations','itemCategory','region',exportLinkHelper]);\nfunction exportLinkHelper($http,items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\n  'use strict';\n  \n  return {\n    \n    encodeItem: function(item, small) {\n      if(item != null) {\n        var itemString;\n\n        if(item.typeName == 'custom')  {\n          itemString = '_custom';\n          angular.forEach(item.stats, function(stat, index) {\n            if(index > 0) {\n              itemString += '|';\n            }\n            else {\n              itemString += ':C'\n            }\n            itemString += stat.id.toString(36) + '=' + stat.max;\n          });\n        }\n        else if(item.id) {\n          itemString = 'I' + item.id.toString(36) + ':_';\n          if('itemSource' in item) {\n            itemString += item.itemSource;\n          }\n          else if('itemTypeName' in item) {\n            // this is to support groups saved with the old property name\n            itemString += item.itemTypeName;\n          }\n        \n          if(item.enchantmentNum || item.enchantmentNum == 0) {\n            itemString += ':E' + item.enchantmentNum.toString(36);\n          }\n          if(item.pid > 0) {\n            itemString += ':P' + item.pid.toString(36);\n          }\n          // if(item.setId > 0) {\n            // itemString += ':S' + item.setId.toString(36);\n          // }\n          if(item.sparkId > 0) {\n            itemString += ':H' + item.sparkId.toString(36);\n          }\n          if(item.typeName == 'skills') {\n            itemString += ':J' + item.baseJobName;\n          }\n          if(item.pve) {\n            itemString += ':V' + item.pve;\n          }\n          if(item.fileName) {\n            itemString += ':F' + item.fileName;\n          }\n        }\n        \n        if(item.name && !small) {\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\n        }\n\n        return itemString;\n      }\n      \n      return '';\n    },\n    \n    decodeItem: function(itemStr) {\n      var item = {};\n      \n      if(itemStr != null) {\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\n          if(itemBit.charAt(0) == 'I') {\n            item.id = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'E') {\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'P') {\n            item.pid = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'S') {\n            item.setId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'H') {\n            item.sparkId = parseInt(itemBit.substr(1), 36);\n          }\n          else if(itemBit.charAt(0) == 'J') {\n            item.baseJobName = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == 'V') {\n            item.pve = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '_') {\n            item.itemSource = itemBit.substr(1);\n          }\n          else if(itemBit.charAt(0) == '.') {\n            item.name = itemBit.substr(1).replace('-', ' ');\n          }\n          else if(itemBit.charAt(0) == 'C') {\n            item.stats = [];\n            var statString = itemBit.substr(1);\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\n              var splitStat = statBit.split('=');\n              item.stats.push({\n                id: parseInt(splitStat[0], 36),\n                max: Number(splitStat[1])\n              });\n            });\n          }\n          else if(itemBit.charAt(0) == 'F') {\n            \n            item.fileName = itemBit.substr(1);\n            angular.forEach(items, function(itemSource, key) {\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\n                item.itemSource = key;\n              }\n            });\n          }\n        });\n      }\n      \n      return item;\n    },\n    \n    createGroupLink: function(groupName, group) {\n      var itemStrings = [];\n      var self = this;\n      \n      if(group == null) {\n        return '';\n      }\n      \n      angular.forEach(group.items, function(item, key) {\n        var itemString = self.encodeItem(item, true);  \n        if(itemString != null && itemString.length > 0) {\n          itemStrings.push(itemString);\n        }\n      });\n  \n      var retVal = '#/view-group/' + region.dntLocation.region + '/?';\n      \n      \n      if(group.enemyLevel) {\n        retVal += '&e=' + group.enemyLevel;\n      }\n      if(group.playerLevel) {\n        retVal += '&p=' + group.playerLevel;\n      }\n      if(group.heroLevel) {\n        retVal += '&h=' + group.heroLevel;\n      }\n      if(group.job && group.job.id) {\n        retVal += '&j=' + group.job.id;\n      }\n      if(group.damageType && group.damageType.id) {\n        retVal += '&d=' + group.damageType.id;\n      }\n      if(group.element && group.element.id) {\n        retVal += '&t=' + group.element.id;\n      }\n      if(group.secondaryElement && group.secondaryElement.id) {\n        retVal += '&s=' + group.secondaryElement.id;\n      }\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\n      return retVal\n    },\n\n    createShortUrl: function(groupName, group) {\n      \n      var path = this.createGroupLink(groupName, group);\n      var longUrl = window.location.href.split(\"#\")[0] + path;\n      var data = { longUrl: longUrl };\n      \n    \t$http.post(\n    \t  'https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyD5t5o7ZcSAvM-xMwc14ft2BA-MKQA7LMo', data).success(\n    \t    function(data,status,headers,config){\n        \t\tgroup.shortUrl = data.id;\n    \t      sessionStorage.setItem(path, data.id);\n        \t}).\n        \terror(function(data,status,headers,config){\n        \t\t// console.log(data);\n        \t\t// console.log(status);\n        \t\t// console.log(headers);\n        \t\t// console.log(config);\n        \t});\n    },\n    \n    reloadItem: function(item) {\n\n      if(item == null) {\n        // console.log('cannot reload null item');\n        return;\n      }\n      \n      // support for old property name\n      if('itemTypeName' in item && !item.itemSource) {\n        item.itemSource = item.itemTypeName;\n      }\n      \n      // console.log('checking ' + item.itemSource)\n      if(item.itemSource == 'rbTech') {\n        item.itemSource = 'tech';\n        console.log('changed to ' + item.itemSource)\n      }\n      \n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\n        item.typeName = 'custom';\n        return item;\n      }\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n        \n        if(!item.enchantmentNum) {\n          item.enchantmentNum = 1;\n        }\n        \n        var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n        var pv = 'pve';\n        if(item.pve == 'pvp') {\n          pv = 'pvp';\n        }\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.lzjson';\n        \n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\n\n        var skillLevelVals = {};\n        angular.forEach(skillLevelDatas, function(value, index) {\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n            skillLevelVals = value;\n            return;\n          }\n        });\n        \n        var newItem = {\n          id: item.id,\n          itemSource: item.itemSource,\n          typeName: item.itemSource,\n          needJobClass: skillData.NeedJob,\n          baseJobName: item.baseJobName,\n          rank: hCodeValues.rankNames[0],\n          enchantmentNum: item.enchantmentNum,\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\n          icon: skillData.IconImageIndex,\n          pve: item.pve,\n        };\n        \n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\n        return newItem;\n      }\n      else if(item.itemSource in items) {\n        \n        var itemType = items[item.itemSource];\n        var ds = dntData.find(itemType.mainDnt, 'id', item.id);\n        if(ds.length == 0) {\n          console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\n        }\n        else {\n          var d = ds[0];\n        \n          var totalRatio = 0;\n          var p = null;\n          \n          var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\n          if(ps.length == 0) {\n            ps = dntData.find(itemType.potentialDnt, 'PotentialID', d.TypeParam1);\n          }\n          \n          if(ps.length == 0) {\n            var ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\n            if(ps.length == 0) {\n              ps = dntData.find(itemType.potentialDntEx, 'PotentialID', d.TypeParam1);\n            }\n          }\n          \n          if(ps.length > 0) {\n            p = ps[0];\n            \n            if(p.PotentialID != d.TypeParam1) {\n              // this happened one time\n              // not sure how but it corrupted the stats\n              p = null;\n            console.log('bad potential');\n            }\n            else {\n              var potentials = dntData.find(itemType.potentialDnt, 'PotentialID', p.PotentialID);\n              angular.forEach(potentials, function(value, key) {\n                totalRatio += value.PotentialRatio;\n              });\n            }\n          }\n          \n          var newItem = itemFactory.createItem(itemType.name, d, p, totalRatio);\n          itemFactory.initItem(newItem);\n          itemCategory.setItemCategory(newItem, d);\n\n          var usePartDnt = null;\n          if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\n            usePartDnt = 'partsDnt';\n          }\n          else {\n            usePartDnt = 'weaponDnt';\n          }\n      \n          if(usePartDnt) {\n            if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\n              newItem.setStats = [];\n              var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\n              if(parts.length > 0) {\n                newItem.setId = parts[0].SetItemID;\n                var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\n                if(sets.length > 0) {\n                  newItem.setStats = hCodeValues.getStats(sets[0]);\n                }\n              }\n            }\n          }\n\n          newItem.fullStats = newItem.stats;\n          if(item.enchantmentNum >= 0) {\n            newItem.enchantmentNum = item.enchantmentNum;\n            \n            if(newItem.typeName == 'skills') {\n              \n            }\n            else if(newItem.typeName == 'talisman') {\n              var extraStats = [];\n              angular.forEach(newItem.stats, function(stat, index) {\n                extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\n              });\n              \n              newItem.enchantmentStats = extraStats;\n              newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n            }\n            else {\n              var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\n              angular.forEach(enchantments, function(enchantment, index) {\n                if(enchantment.EnchantLevel == newItem.enchantmentNum) {\n                  newItem.enchantmentStats = hCodeValues.getStats(enchantment);\n                  newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\n                  return;\n                }\n              });\n            }\n          }\n          \n          if(item.sparkId > 0) {\n            newItem.sparkId = item.sparkId;\n            var sparks = dntData.find(itemType.sparkDnt, 'id', item.sparkId);\n            if(sparks.length > 0) {\n              newItem.sparkStats = hCodeValues.getStats(sparks[0]);\n              newItem.fullStats = hCodeValues.mergeStats(newItem.fullStats, newItem.sparkStats);\n            }\n          }\n          else if(d.dragonjeweltype) {\n            newItem.offensiveGemSlots = 0;\n            newItem.increasingGemSlots = 0;\n            var itemData = dntData.find('dragonjewelslottable.lzjson', 'DragonJewelID', d.dragonjeweltype);\n            if(itemData && itemData.length > 0) {\n              if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\n              \n              if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\n              if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\n            }\n          }\n          \n          return newItem;\n        }\n      }\n      \n      if(item.fileName) {\n        var datas = dntData.find(item.fileName + '.lzjson', 'id', item.id);\n        if(datas.length > 0) {\n          var d = datas[0];\n          var newItem = {\n            id: item.id,\n            data: d,\n            levelLimit : d.LevelLimit,\n            needJobClass : d.NeedJobClass,\n            typeId : d.Type,\n            exchangeType: d.ExchangeType,\n            rank : hCodeValues.rankNames[d.Rank],\n            fileName: item.fileName,\n            description: translations.translate(d.DescriptionID, d.DescriptionIDParam),\n          };\n          \n          itemFactory.initItem(newItem);\n          return newItem;\n        }\n        else {\n          return {name: 'unknown item'};\n        }\n      }\n      else {\n        return {name: 'unknown item source: ' + item.itemSource};\n      }\n    },\n    \n    getDntFiles: function(item) {\n\n      var dntFiles = {};\n\n      if(item == null) {\n      }\n      else {\n        if(!item.itemSource && item.itemTypeName in items) {\n          item.itemSource = item.itemTypeName;\n        }\n        \n        if(item.itemSource == 'rbTech') {\n          item.itemSource = 'tech';\n        }\n        \n        if(item.itemSource in items) {\n          var itemType = items[item.itemSource];\n          \n          dntFiles['exchange.lzjson'] = null;\n          dntFiles['dragonjewelslottable.lzjson'] = null;\n  \n          dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\n          if('potentialDnt' in itemType) {\n            dntFiles[itemType.potentialDnt] = itemColumnsToLoad.potentialDnt;\n          }\n          if('potentialDntEx' in itemType) {\n            dntFiles[itemType.potentialDntEx] = itemColumnsToLoad.potentialDnt;\n          }\n          \n          if('enchantDnt' in itemType) {\n            dntFiles[itemType.enchantDnt] = itemColumnsToLoad.enchantDnt;\n          }\n          \n          if('weaponDnt' in itemType) {\n            dntFiles[itemType.weaponDnt] = itemColumnsToLoad.weaponDnt;\n          }\n          \n          if('partsDnt' in itemType) {\n            dntFiles[itemType.partsDnt] = itemColumnsToLoad.partsDnt;\n          }\n          \n          if('setDnt' in itemType) {\n            dntFiles[itemType.setDnt] = itemColumnsToLoad.setDnt;\n          }\n          \n          if('gemDnt' in itemType) {\n            dntFiles[itemType.gemDnt] = itemColumnsToLoad.gemDnt;\n          }\n          \n          if('sparkDnt' in itemType) {\n            dntFiles[itemType.sparkDnt] = itemColumnsToLoad.sparkDnt;\n          }\n        }\n        else if(item.itemSource == 'skills' || item.typeName == 'skills') {\n            var skillDnt = 'skilltable_character' + item.baseJobName + '.lzjson';\n            dntFiles[skillDnt] = null;\n            var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n            skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.lzjson';\n            dntFiles[skillLevelDnt] = null;\n        }\n        else if(item.typeName == 'custom') {\n        }\n        \n        if(item.fileName) {\n          dntFiles[item.fileName + '.lzjson'] = null;\n        }\n      }\n      \n      return dntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\nfunction groupHelper(exportLinkHelper) {\n  'use strict';\n  \n  return {\n    reloadGroup: function(groupName, group) {\n      var newItems = [];\n      angular.forEach(group.items, function(item, key) {\n        var newItem = exportLinkHelper.reloadItem(item);\n        if(newItem != null) {\n          newItems.push(newItem);\n        }\n      });\n      \n      return newItems;\n    },\n    \n    getDntFiles: function(group) {\n\n      var allDntFiles = {};\n      angular.forEach(group.items, function(item, key1) {\n        \n        var dntFiles = exportLinkHelper.getDntFiles(item);\n\n        angular.forEach(dntFiles, function(value, key) {\n          allDntFiles[key] = value;\n        });\n      });\n      \n      return allDntFiles;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemCategory',\n['itemFactory','items','dntData',itemCategory]);\nfunction itemCategory(itemFactory,items,dntData) {\n\n  return {\n    categories: [\n      {path: 'search/titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\n      {path: 'search/weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\n      {path: 'search/armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\n      {path: 'search/accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'search/techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10]},\n      {path: 'search/offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, maxCat: 4, maxExchange: 4, limitExchange: [54]},\n      {path: 'search/increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, maxCat: 14, maxExchange: 14, limitExchange: [54]},\n      {path: 'search/enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33]},\n      {path: 'search/expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33]},\n      {path: 'search/talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53]},\n      {path: 'search/costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, limitExchange: [16,17,18,19,20,21,22]},\n      {path: 'search/cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, limitExchange: [23,24,25,26,27,28,29]},\n      {path: 'search/extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true,},\n      {path: 'search/skills', name:'skills'},\n      {path: 'search/custom', name:'custom'},\n      ],\n      \n    byName: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.name == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n      \n    byPath: function(name) {\n      var retVal = null;\n      angular.forEach(this.categories, function(category, index) {\n        if(category.path == name) {\n          retVal = category;\n        }\n      });\n      \n      return retVal;\n    },\n    \n    getItems: function(name) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        var retVal = [];\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType && retVal != null) {\n            if(source.items == null && !source.loading) {\n              itemFactory.loadItems(source);\n            }\n            \n            if(source.items != null) {\n              retVal = retVal.concat(source.items);\n            }\n            else {\n              retVal = null; // if any are null just return null\n            }\n          }\n        });\n        \n        var catItems = [];\n        if(retVal) {\n          var vm = this;\n          angular.forEach(retVal, function(item, index) {\n            if(item.typeName == cat.name ||\n              vm.isItemForCat(cat, item, item.data)) {\n\n              item.typeName = name;\n              catItems.push(item);\n            }\n          });\n        }\n        \n        return catItems;\n      }\n      else {\n        return null;\n      }\n    },\n    \n    isItemForCat: function(cat, item, rawData) {\n      \n      if(item.itemSource in items && items[item.itemSource].type != cat.sourceType) {\n        return false;\n      }\n      else if(item.itemType == cat.name) {\n        return true;\n      }\n      else if(cat.limitExchange) {\n        \n        for(var i=0;i<cat.limitExchange.length;++i) {\n          if(cat.limitExchange[i] == item.exchangeType || (rawData && cat.limitExchange[i] == rawData.ExchangeType)) {\n            \n            if(item.itemSource == 'plate') {\n              if((item.rawData && rawData.Rank == 4) || (item.rank && item.rank.id == 4)) {\n                return cat.name == 'expedition plates';\n              }\n              else {\n                return cat.name == 'enhancement plates';\n              }\n            }\n            else if(item.itemSource == 'gem') {\n              var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\n              if(gemTypes.length > 0) {\n                \n                if(gemTypes[0].Type == 1) {\n                  return cat.name == 'offensive gems';\n                }\n                else if(gemTypes[0].Type == 2) {\n                  return cat.name == 'increasing gems';\n                }\n                else {\n                  return false;\n                }\n              }\n            }\n            \n            return true;\n          }\n        }\n        \n        return false;\n      }\n      else if(item.itemSource in items) {\n        return items[item.itemSource].type == cat.sourceType;\n      }\n      else {\n        return false;\n      }\n    },\n    \n    init: function(name, complete) {\n      var cat = this.byName(name);\n      if(cat && 'sourceType' in cat) {\n        angular.forEach(items, function(source, sourceName) {\n          if(source.type == cat.sourceType) {\n            source.init(function() {}, complete);\n          }\n        });\n      }\n    },\n    \n    setItemCategory: function (item, rawData) {\n      var vm = this;\n      \n      angular.forEach(this.categories, function(cat, index) {\n        if(vm.isItemForCat(cat, item, rawData)) {\n          item.typeName = cat.name;\n        }\n      });\n    },\n    \n    getItemsByCategory: function(items) {\n      var itemMap = {};\n      if(items != null) {\n        var types = {};\n        angular.forEach(items, function(item, index) {\n          if(item != null) {\n            if(!(item.typeName in types)) {\n              types[item.typeName] = [];\n            }\n            types[item.typeName].push(item);\n          }\n        });\n        \n        angular.forEach(this.categories, function(category, index) {\n\n          if(category.name in types) {\n            \n            var sorted = types[category.name].sort(function(item1, item2) {\n              if(category.name == 'talisman') {\n                \n                var enh1 = item1.enchantmentNum;\n                if(!enh1) enh1 = 0;\n                var enh2 = item2.enchantmentNum;\n                if(!enh2) enh1 = 0;\n                \n                if(enh1 != enh2) {\n                  return enh2 - enh1;\n                }\n              }\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\n                return item2.levelLimit - item1.levelLimit;\n              }\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\n                return item1.exchangeType - item2.exchangeType;\n              }\n              \n              return item1.name.localeCompare(item2.name);\n            });\n            itemMap[category.name] = sorted;\n          }\n          else {\n            itemMap[category.name] = [];\n          }\n        });\n        \n        angular.forEach(items, function(item, index) {\n          if(item != null && !(item.typeName in itemMap)) {\n            console.log('we dont know ' + item.typeName + ' anymore')\n            itemMap.typeError = true;\n          }\n        });\n      }\n      return itemMap;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('itemFactory',\n['translations','dntData','hCodeValues','items',itemFactory]);\n\nfunction itemFactory(translations,dntData,hCodeValues,items) {\n  \n  return {\n    loadItems: loadItems,\n    initItem: initItem,\n    createItem: createItem,\n    getItemData: getItemData,\n    createBasicItem: createBasicItem,\n  };\n  \n  function createItem(itemSourceName, d, p, totalRatio) {\n    \n    // data and potential are used to initialise name and stats\n    // this is only done when needed\n    // they are then removed from the object\n    return {\n      data : d,\n      potential : p,\n      id: d.id,\n      totalRatio: totalRatio,\n      itemSource : itemSourceName,\n      levelLimit : d.LevelLimit,\n      needJobClass : d.NeedJobClass,\n      typeId : d.Type,\n      exchangeType: d.ExchangeType,\n      rank : hCodeValues.rankNames[d.Rank],\n      pid: null,\n      name : null,\n      stats : null,\n      potentialRatio : null,\n      typeName : null,\n      sparkId: null,\n    };\n  };\n  \n  function loadItems(itemType) {\n    \n    if(!dntData.isLoaded(itemType.mainDnt)) {\n      return null;\n    }\n    \n    if(!translations.isLoaded()) {\n      return null;\n    }\n    \n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\n      return null;\n    }\n    \n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\n      return null;\n    }\n    \n    var start = new Date().getTime();\n    \n    itemType.items = [];\n    var numRows = dntData.getNumRows(itemType.mainDnt);\n    for(var r=0;r<numRows;++r) {\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\n      var dLevelLimit = dntData.getValue(itemType.mainDnt, r, 'LevelLimit');\n      var dRank = dntData.getValue(itemType.mainDnt, r, 'Rank');\n      \n      // skip certain types like pouches, res scrolls, etc\n      if(dType != 8 &&\n        dType != 29 &&\n        dType != 114 &&\n        dType != 79 &&\n        dType != 174 &&\n        dType != 130 &&\n        dType != 24 &&\n        dType != 182 &&\n        dType != 78 &&\n        dType != 20 &&\n        dType != 46 &&\n        dType != 9 &&\n        (!itemType.minLevel || dLevelLimit >= itemType.minLevel) &&\n        (!itemType.maxLevel || dLevelLimit <= itemType.maxLevel) &&\n        (!itemType.minRank || dRank >= itemType.minRank)) {\n\n        var dState1_GenProb = dntData.getValue(itemType.mainDnt, r, 'State1_GenProb');\n        var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\n        var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\n          \n        // skip items with no data\n        if(dState1_GenProb > 0 || dStateValue1 > 0 || dTypeParam1 > 0) {\n          var d = dntData.getRow(itemType.mainDnt, r);\n          \n          if(itemType.type == 'techs') {\n            var exists = false;\n            for(var i=0;i<itemType.items.length;++i) {\n              if(itemType.items[i].needJobClass == d.NeedJobClass &&\n                itemType.items[i].levelLimit == d.LevelLimit &&\n                itemType.items[i].potential && itemType.items[i].potential.PotentialID == dTypeParam1) {\n                  exists = true;\n                  break;\n                }\n            }\n            \n            if(exists) {\n              continue;\n            }\n          }\n          \n          var potentials = [];\n          if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\n            potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\n            \n            if(potentials.length == 0 && 'potentialDntEx' in itemType) {\n              potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\n            }\n          }\n          \n          var totalRatio = 0;\n          angular.forEach(potentials, function(value, key) {\n            totalRatio += value.PotentialRatio;\n          });\n          \n          var numPotentials = potentials.length;\n          if(numPotentials == 0) {\n            itemType.items.push(this.createItem(itemType.name, d, null, totalRatio));\n          }\n          else {\n            for(var p=0;p<numPotentials;++p) {\n              \n              var found = false;\n              for(var q=0;q<p;++q) {\n                if(potentialsMatch(potentials[p], potentials[q])) {\n                  found = true;\n                  break;\n                }\n              }\n              \n              if(!found) {\n                for(var q=p+1;q<numPotentials;++q) {\n                  if(potentialsMatch(potentials[p], potentials[q])) {\n                    potentials[p].PotentialRatio += potentials[q].PotentialRatio;\n                  }\n                }\n                \n                itemType.items.push(this.createItem(itemType.name, d, potentials[p], totalRatio));\n              }\n            }\n          }\n        }\n      }\n    }\n            \n    var end = new Date().getTime();\n    var time = end - start;\n    console.log('item init time: ' + time/1000 + 's for ' + itemType.name);\n  }\n  \n  function potentialsMatch(p1, p2) {\n    \n    var i = 1;\n    var j = 1;\n    for(;;) {\n      var state1Col = 'State' + i;\n      var state2Col = 'State' + j;\n      \n      if(p1[state1Col] == 107) {\n        i++;\n        state1Col = 'State' + i;\n      }\n      if(p2[state2Col] == 107) {\n        j++;\n        state2Col = 'State' + j;\n      }\n      \n      if(!(state1Col in p1 || state2Col in p2)) {\n        return true;\n      }\n      \n      if(!(state1Col in p1)) {\n        return false;\n      }\n      if(!(state2Col in p2)) {\n        return false;\n      }\n      \n      if(p1[state1Col] == -1 && p2[state2Col] == -1) {\n        return true;\n      }\n      \n      if(!(p1[state1Col] >= 0 || p2[state2Col] >= 0)) {\n        return true;\n      }\n      \n      if(p1[state1Col] != p2[state2Col]) {\n        return false;\n      }\n      \n      var val1Col = 'State' + i + 'Value';\n      var val2Col = 'State' + j + 'Value';\n      if(p1[val1Col] != p2[val2Col]) {\n        return false;\n      }\n      \n      ++i;\n    }\n  }\n  \n  function initItem(item) {\n    \n    if(item.data) {\n      var d = item.data;\n      var p = item.potential;\n  \n      if(item.name == null) {\n        item.name = translations.translate(d.NameID, d.NameIDParam);\n      }\n      \n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\n        item.sparkTypeId = d.TypeParam2;\n      }\n      \n      if(item.stats == null) {\n        var stats = hCodeValues.getStats(d);\n        if(p != null) {\n          var potentialStats = hCodeValues.getStats(p);\n          stats = hCodeValues.mergeStats(stats, potentialStats);\n        }\n        \n        item.stats = stats;\n      }\n      \n      if(d.SkillID && !item.skillId) {\n        item.skillId = d.SkillID;\n      }\n      \n      if(item.iconIndex == null) {\n        item.icon = d.IconImageIndex;\n        if(!item.icon && item.itemSource == 'title') {\n          item.icon = 12417;\n        }\n      }\n      \n      if(d.EnchantID && !item.enchantmentId) {\n        item.enchantmentId = d.EnchantID;\n      }\n      \n      if(p != null) {\n        item.pid = p.id;\n      \n        if(item.potentialRatio == null) {\n          item.potentialRatio = getPotentialRatio(p, item.totalRatio);\n        }\n      }\n      \n      delete item.data;\n      delete item.potential;\n    }\n  }\n  \n  function getPotentialRatio(p, totalRatio) {\n    \n    if(p != null && p.PotentialRatio > 0 && totalRatio != 0) {\n      var ratio = Math.round(p.PotentialRatio/totalRatio*100*100)/100;\n      if(ratio != 100) {\n        return ratio + '%';\n      }\n    }\n\n    return null;\n  }\n  \n  function getItemData(item) {\n    \n    var fileName = null;\n    var itemType = items[item.itemSource];\n    \n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.lzjson')) {\n      fileName = item.fileName + '.optimised.lzjson';\n    }\n    else if(item.fileName && dntData.isLoaded(item.fileName + '.lzjson')) {\n      fileName = item.fileName + '.lzjson';\n    }\n    else if(itemType && dntData.isLoaded(itemType.mainDnt)) {\n      fileName = itemType.mainDnt\n    }\n\n    if(fileName) {\n      var itemData = dntData.find(fileName, 'id', item.id);\n      if(itemData && itemData.length > 0) {\n        return itemData[0];\n      }\n    }\n    \n    return [];\n  }\n  \n  function createBasicItem(d) {\n    if(!d) {\n      return [];\n    }\n    return {\n      id: d.id,\n      name: translations.translate(d.NameID, d.NameIDParam),\n      rank: hCodeValues.rankNames[d.Rank],\n      icon: d.IconImageIndex,\n      levelLimit : d.LevelLimit,\n      fileName: d.fileName,\n    };\n  }\n}\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('items',\n['translations','dntData','itemColumnsToLoad',items]);\nfunction items(translations,dntData,itemColumnsToLoad) {\n  \n  var itemSources = {\n    \n      title : {\n        mainDnt: 'appellationtable.optimised.lzjson', \n        type: 'titles', \n        minLevel: 0, \n        minRank: 0 },\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\n      \n      tech: { \n        mainDnt: 'itemtable_skilllevelup.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        type: 'techs', \n        minLevel: 24,\n        minRank: 0},\n      \n      tman: { \n        mainDnt: 'itemtable_talisman.optimised.lzjson', \n        type: 'talisman', \n        potentialDnt: 'potentialtable_talismanitem.optimised.lzjson',\n        minLevel: 24,\n        minRank: 0 },\n      \n      gem: { \n        mainDnt: 'itemtable_dragonjewel.optimised.lzjson', \n        potentialDnt: 'potentialtable_dragonjewel.optimised.lzjson',\n        potentialDntEx: 'potentialtable_reboot.optimised.lzjson',\n        enchantDnt: 'enchanttable_dragonjewel.optimised.lzjson', \n        gemDnt: 'dragonjeweltable.optimised.lzjson',\n        type: 'gems',\n        minLevel: 24,\n        minRank: 3},\n      \n      plate: { \n        mainDnt : 'itemtable_glyph.optimised.lzjson', \n        potentialDnt: 'potentialtable_glyph.optimised.lzjson',\n        type: 'plates',\n        minLevel: 16,\n        minRank: 2 },\n\n      items: {\n        mainDnt: 'itemtable.optimised.lzjson', \n        partsDnt: 'partstable.optimised.lzjson', \n        weaponDnt: 'weapontable.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 80,\n        minRank: 3 },\n      eq: {\n        mainDnt: 'itemtable_equipment.optimised.lzjson', \n        partsDnt: 'partstable_equipment.optimised.lzjson', \n        weaponDnt: 'weapontable_equipment.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        potentialDnt: 'potentialtable.optimised.lzjson',\n        sparkDnt: 'potentialtable_potentialjewel.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      rbeq: { \n        mainDnt: 'itemtable_reboot.optimised.lzjson', \n        partsDnt: 'partstable_reboot.optimised.lzjson', \n        weaponDnt: 'weapontable_reboot.optimised.lzjson', \n        enchantDnt: 'enchanttable_reboot.optimised.lzjson', \n        potentialDnt: 'potentialtable_reboot.optimised.lzjson',\n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n      pvpeq: { \n        mainDnt: 'itemtable_pvp.optimised.lzjson',\n        partsDnt: 'partstable_pvp.optimised.lzjson', \n        weaponDnt: 'weapontable_pvp.optimised.lzjson', \n        enchantDnt: 'enchanttable.optimised.lzjson', \n        setDnt: 'setitemtable.optimised.lzjson',\n        type: 'equipment',\n        minLevel: 24,\n        minRank: 3 },\n\n      c2016: { \n        mainDnt: 'itemtable_common2016.lzjson', \n        partsDnt: 'partstable_common2016.lzjson', \n        weaponDnt: 'weapontable_common2016.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2015: { \n        mainDnt: 'itemtable_common2015.optimised.lzjson', \n        partsDnt: 'partstable_common2015.optimised.lzjson', \n        weaponDnt: 'weapontable_common2015.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      c2014: { \n        mainDnt: 'itemtable_common2014.optimised.lzjson', \n        partsDnt: 'partstable_common2014.optimised.lzjson', \n        weaponDnt: 'weapontable_common2014.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      cash: { \n        mainDnt: 'itemtable_cash.optimised.lzjson', \n        partsDnt: 'partstable_cash.optimised.lzjson', \n        weaponDnt: 'weapontable_cash.optimised.lzjson', \n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      event: {\n        mainDnt: 'itemtable_event.optimised.lzjson',\n        partsDnt: 'partstable_event.optimised.lzjson',\n        weaponDnt: 'weapontable_event.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'cash',\n        minLevel: 0,\n        minRank: 0 },\n      xtras: {\n        mainDnt: 'itemtable_vehicle.optimised.lzjson',\n        partsDnt: 'vehiclepartstable.optimised.lzjson',\n        setDnt: 'setitemtable_cash.optimised.lzjson',\n        type: 'xtras',\n        minLevel: 0,\n        minRank: 0 },\n    };\n    \n    // now that the sources are set up add some methods on them for initialisation\n    // each source will store the items from that source for reuse by searches\n    angular.forEach(itemSources, function(itemSource, key) {\n      itemSource.name = key;\n      itemSource.loading = false;\n      itemSource.items = null;\n      itemSource.init = init; // decalared below\n      itemSource.reset = function() {\n        itemSource.items = null;\n        itemSource.loading = false;\n      };\n    });\n\n    return itemSources;\n  \n  \n    function init(progress, complete) {\n      var itemSource = this;\n      itemSource.loading = true;\n  \n      if(itemSource.items != null) {\n        complete();\n      }\n      else {\n        \n        translations.init(progress, function() { doComplete(itemSource, complete) });\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() { doComplete(itemSource, complete) });\n        if('potentialDnt' in itemSource) {\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('potentialDntEx' in itemSource) {\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n        if('gemDnt' in itemSource) {\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() { doComplete(itemSource, complete) });\n        }\n  \n        doComplete(itemSource, complete);\n      }\n    }\n    \n    function doComplete(itemSource, complete) {\n      if(translations.isLoaded() && \n      dntData.isLoaded(itemSource.mainDnt) && \n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt)) &&\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx)) &&\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt))\n      ) {\n        complete();\n        itemSource.loading = false;\n      }\n    }\n  };\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\nfunction jobs(dntData, translations, itemColumnsToLoad) {\n  \n  var fileName ='jobtable.lzjson';\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\n  \n  return {\n    fileName : fileName,\n    allJobs : null,\n    \n    isLoaded : function() {\n      return dntData.isLoaded(fileName);\n    },\n    \n    hasStartedLoading: function() {\n      return dntData.hasStartedLoading(fileName);\n    },\n    \n    init : function(progress, complete) {\n      dntData.init(fileName, colsToLoad, progress, function() {\n        complete();\n        });\n    },\n\n    reset : function() {\n      this.allJobs = null;\n      dntData.reset(fileName);\n    },\n    \n    getFinalJobs : function () {\n      var jobs = [];\n      var alljobs = this.getAllJobs();\n      if(alljobs != null) {\n        var numRows = alljobs.length;\n        for(var r=0;r<numRows;++r) {\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\n            jobs.push(alljobs[r]);\n          }\n        }\n      }\n      \n      return jobs;\n    },\n    \n    getBaseJobs : function () {\n      var retVal=[];\n      var baseJobs = {};\n\n      var self = this;\n      angular.forEach(this.getFinalJobs(), function(job, key) {\n        baseJobs[self.getBaseJobName(job)] = job;\n      });\n\n      angular.forEach(baseJobs, function(job, jobName) {\n        retVal.push(jobName);\n      });\n\n      return retVal;\n    },\n    \n    getAllJobs : function () {\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\n        var jobs = [];\n        var data = dntData.getData(fileName);\n        var numRows = data.length;\n        for(var r=0;r<numRows;++r) {\n          jobs[jobs.length] = this.createJob(data[r]);\n        }\n        \n        this.allJobs = jobs;\n      }\n      return this.allJobs;\n    },\n    \n    getById: function(id) {\n      var data = this.getAllJobs();\n      \n      var numRows = data.length;\n      for(var r=0;r<numRows;++r) {\n        if(data[r].id == id) {\n          return data[r];\n        }\n      }\n    },\n    \n    createJob : function(d) {\n      var t = this;\n      return {\n          d : d,\n          id : d.id,\n          name : translations.translate(d.JobName),\n          isClassJob : function(c) {\n            return t.isClassJob(d, c);\n          }\n        };\n    },\n    \n    isClassJob : function (d, c) {\n      if(c == 0) return true;\n      if(d.id == c) {\n        return true;\n      }\n      \n      var parentJob = d.ParentJob;\n      \n      if(!parentJob) return false;\n      if(parentJob == c) return true;\n\n      var parentJobData = this.getById(parentJob);\n      if(parentJobData) {\n        return this.isClassJob(parentJobData.d, c);\n      }\n      \n      return false;\n    },\n    \n    getBaseJobName : function(job) {\n      if(this.isLoaded()) {\n        var alljobs = this.getAllJobs();\n        if(alljobs != null) {\n          var numRows = alljobs.length;\n          for(var r=0;r<numRows;++r) {\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\n              return alljobs[r].d.EnglishName;\n            }\n          }\n        }\n      }\n      \n      return null;\n    },\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('quickAdd', ['dntData', 'translations', 'itemColumnsToLoad', 'itemCategory','itemFactory','jobs','hCodeValues', quickAdd]);\nfunction quickAdd(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\n\n  return {\n    stepDefs: {\n      exchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(numExchange >= category.maxExchange) {\n              continue;\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            var exName = '';\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n            }\n            exchanges.push({id: exId, name: exName.toLowerCase()});\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      accExchangeStep: {\n        name: 'type',\n        getOptions: function(category, build, datas) {\n          \n          var exchanges = [];\n          \n          for(var e=0;e<category.limitExchange.length;++e) {\n            var exId = category.limitExchange[e];\n            \n            var numExchange = 0;\n            for(var i=0;i<build.items.length;++i) {\n              if(build.items[i] && build.items[i].exchangeType == exId) {\n                numExchange++;\n              }\n            }\n            \n            if(exId == 10 || exId == 25) {\n              if(numExchange >= 2) {\n                continue;\n              }\n            }\n            else {\n              if(numExchange >= 1) {\n                continue;\n              }\n            }\n            \n            var exchange = dntData.find('exchange.lzjson','ExchangeType',exId);\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\n              \n              exchanges.push({id: exId, name: exName.toLowerCase()});\n            }\n          }\n          \n          return exchanges;\n        },\n        matchesItem: function(id, item) {\n          return item.exchangeType == id;\n        }\n      },\n      sixtyLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      allLevelStep: {\n        name: 'level',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 93, name: 'level 93' },\n          { id: 90, name: 'level 90' },\n          { id: 80, name: 'level 80' },\n          { id: 70, name: 'level 70' }, \n          { id: 60, name: 'level 60' }, \n          { id: 50, name: 'level 50' }, \n          { id: 40, name: 'level 40' }, \n          { id: 32, name: 'level 32' }, \n          { id: 24, name: 'level 24' }, \n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.levelLimit == id;\n        }\n      },\n      cashRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      techRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      talismanRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 2, name: 'rare' },\n          { id: 999, name: 'quality' },\n          { id: 1, name: 'magic' },\n          { id: 0, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = item.name.indexOf('Quality');\n            if(id == 999) {\n              return index == 0;\n            }\n            else {\n              return item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      gemRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 999, name: 'quality epic' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          itemFactory.initItem(item);\n          if(item.name) {\n            var index = item.name.indexOf('Quality');\n            if(id == 999) {\n              return item.rank.id == 3 && index == 0;\n            }\n            else {\n              return item.rank.id == id && index != 0;\n            }\n          }\n          return false;\n        }\n      },\n      otherRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 3, name: 'epic' },\n          { id: 2, name: 'rare' },\n          { id: 1, name: 'normal' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      equipRankStep: {\n        name: 'rank',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 5, name: 'legendary' },\n          { id: 4, name: 'unique' },\n          { id: 3, name: 'epic' },\n          ];\n        },\n        matchesItem: function(id, item) {\n          return item.rank.id == id;\n        }\n      },\n      enhanceTalismanStep: {\n        name: 'slot',\n        getOptions: function(category, build, datas) {\n          \n          return [\n          { id: 100, name: '+100% slot' },\n          { id: 75, name: '+75% slot' },\n          { id: 25, name: '+25% slot' },\n          { id: 0, name: '+0% slot' },\n          ];\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      titleStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          var allTitles = findData(category, build, datas, 9999);\n          var usefulTitles = [];\n          for(var i=0;i<allTitles.length;++i) {\n            switch(allTitles[i].id) {\n              case 1975: // Manticore Expert\n              case 1973: // Returned\n              case 1008: // Dark Knight\n              // case 339: // Cow Wrangler\n              case 230: // Miraculous\n              case 279: // Provoking\n              // case 1280: // Dragon Tamer\n                usefulTitles.push(allTitles[i]);\n            }\n          }\n          \n          return usefulTitles;\n        },\n        hasOptions: function(category, build, datas) {\n          return true;\n        },\n        isItemStep: true,\n      },\n      enhanceStep: {\n        name: 'enhance',\n        getOptions: function(category, build, datas) {\n          \n          var item = getItem(datas);\n          if(item && item.enchantmentId) {\n            return [\n            { id: 14, name: 'enhance to +14' },\n            { id: 13, name: 'enhance to +13' },\n            { id: 12, name: 'enhance to +12' },\n            { id: 11, name: 'enhance to +11' },\n            { id: 10, name: 'enhance to +10' },\n            { id: 9, name: 'enhance to +9' },\n            { id: 8, name: 'enhance to +8' },\n            { id: 7, name: 'enhance to +7' },\n            { id: 6, name: 'enhance to +6' },\n            { id: 5, name: 'enhance to +5' },\n            { id: 4, name: 'enhance to +4' },\n            { id: 3, name: 'enhance to +3' },\n            { id: 2, name: 'enhance to +2' },\n            { id: 1, name: 'enhance to +1' },\n            { id: 0, name: 'not enhanced' },\n            ]\n          }\n          else {\n            return [{ id: 0, name: 'not enhanced' }];\n          }\n        },\n        alterItem: function(id, item) {\n          item.enchantmentNum = id;\n        }\n      },\n      itemStep: {\n        name: 'select',\n        getOptions: function(category, build, datas) {\n          return findData(category, build, datas);\n        },\n        isItemStep: true,\n      },\n      techSkillStep: {\n        name: 'skill',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas, 1);\n          \n          // eventually show all the skills\n          // but for now\n          if(items.length > 0) {\n            return [{id: items[0].skillId, name: items[0].skillId}];\n          }\n          else {\n            return [];\n          }\n        },\n        matchesItem: function(id, item) {\n          return item.skillId == id;\n        }\n      },\n      itemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      distinctItemNameStep: {\n        name: 'item',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var itemNames = {};\n          var itemNamesList = [];\n          \n          for(var i=0;i<build.items.length;++i) {\n            var item = build.items[i];\n            itemNames[item.name] = true;\n          }\n          \n          for(var i=0;i<items.length;++i) {\n            var name = items[i].name;\n            if(!(name in itemNames)) {\n              itemNames[name] = true;\n              itemNamesList.push({\n                id: name,\n                name: name,\n              });\n            }\n          }\n          \n          return itemNamesList;\n        },\n        matchesItem: function(id, item) {\n          return item.name == id;\n        },\n        isItemStep: true,\n      },\n      numStatsStep: {\n        name: 'Num Stats',\n        getOptions: function(category, build, datas) {\n          var items = findData(category, build, datas);\n          var numStats = {};\n          \n          for(var i=0;i<items.length;++i) {\n            var len = 0;\n            for(var j=0;j<items[i].stats.length;++j) {\n              var stat = hCodeValues.stats[items[i].stats[j].id];\n              if(stat && !stat.hide) {\n                len++;\n              }\n            }\n            numStats[len + 'x stats'] = len;\n          }\n          \n          var retVal = [];\n          for(var val in numStats) {\n            retVal.push({\n              id: numStats[val],\n              name: val,\n            });\n          }\n          \n          retVal = retVal.sort(function(a, b) {\n              return a.id - b.id;\n            });\n          \n          return retVal;\n        },\n        matchesItem: function(id, item) {\n          var len = 0;\n          for(var j=0;j<item.stats.length;++j) {\n            var stat = hCodeValues.stats[item.stats[j].id];\n            if(stat && !stat.hide) {\n              len++;\n            }\n          }\n            \n          return len == id;\n        },\n        isItemStep: true,\n      },\n      customStep: {\n        name: 'misc',\n        getOptions: function(category, build, datas) {\n          return hCodeValues.customItems;\n        },\n        isItemStep: true,\n      },\n    },\n    // end of step defs\n    \n    categorySteps: {\n      titles: ['titleStep'],\n      weapons: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      armour: ['exchangeStep','sixtyLevelStep','equipRankStep','itemStep','enhanceStep'],\n      accessories: ['accExchangeStep','allLevelStep','equipRankStep','itemNameStep','itemStep'],\n      'offensive gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'increasing gems': ['sixtyLevelStep','gemRankStep','itemNameStep','numStatsStep','itemStep','enhanceStep'],\n      'enhancement plates': ['allLevelStep','otherRankStep','distinctItemNameStep','numStatsStep','itemStep'],\n      'expedition plates': ['sixtyLevelStep','distinctItemNameStep','numStatsStep','itemStep'],\n      talisman: ['sixtyLevelStep','talismanRankStep','distinctItemNameStep','numStatsStep','itemStep','enhanceTalismanStep'],\n      costume: ['exchangeStep','otherRankStep','itemNameStep','itemStep'],\n      cash: ['accExchangeStep','cashRankStep','itemNameStep','itemStep'],\n      techs: ['exchangeStep','allLevelStep','techRankStep','techSkillStep','itemStep'],\n      custom: ['customStep'],\n    },\n    getOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        return this.stepDefs[stepName].getOptions(category, build, datas);\n      }\n      else {\n        return [];\n      }\n    },\n    hasOptions: function(category, build, datas) {\n      if(category.name in this.categorySteps) {\n        var stepName = this.getStepName(category, datas.length);\n        if(this.stepDefs[stepName].hasOptions) {\n          return this.stepDefs[stepName].hasOptions(category, build, datas);\n        }\n        else {\n          return this.stepDefs[stepName].getOptions(category, build, datas).length > 0;\n        }\n      }\n      else {\n        return false;\n      }\n    },\n    isValidStepNumber: function(category, stepNumber) {\n      return this.categorySteps[category.name].length > stepNumber;\n    },\n    createData: function(value, category, stepNumber) {\n      var stepName = this.getStepName(category, stepNumber);\n      var def = this.stepDefs[stepName];\n      \n      return {\n        step: stepName,\n        value: value,\n        def: def,\n        matchesItem: function(item) {\n          return def.matchesItem(value.id, item);\n        }\n      };\n    },\n    getItem: getItem,\n    getStepName: function(category, stepNumber) {\n      return this.categorySteps[category.name][stepNumber];\n    }\n  }\n  \n  function getItem(datas) {\n    var item = null;\n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.isItemStep) {\n        item = datas[d].value;\n      }\n    }\n    \n    for(var d=0;d<datas.length;++d) {\n      if(datas[d].def.alterItem) {\n        datas[d].def.alterItem(datas[d].value.id, item);\n      }\n    }\n    \n    return item;\n  }\n  \n  function findData(category, build, datas, maxItems) {\n    if(!maxItems) {\n      maxItems = 9999;\n    }\n    \n    var allItems = itemCategory.getItems(category.name);\n    var retVal = [];\n    // console.log('looking at ' + allItems.length + ' items');\n    var numItems = allItems.length;\n    \n    for(var i=0;i<numItems;++i) {\n      \n      var item = allItems[i];\n      \n      if(build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\n        continue;\n      }\n      itemFactory.initItem(item);\n      \n      var addItem = true;\n      for(var d=0;d<datas.length;++d) {\n        if(datas[d].matchesItem && !datas[d].matchesItem(item)) {\n          addItem = false;\n          break;\n        }\n      }\n      \n      if(addItem) {\n        retVal.push(item);\n      }\n      \n      if(retVal.length >= maxItems) {\n        break;\n      }\n    }\n    \n    retVal = retVal.sort(function(item1, item2) {\n      return item1.name.localeCompare(item2.name);\n    });\n    \n    // console.log('found ' + retVal.length + ' items');\n    return retVal;\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\nfunction region(translations,dntReset,dntData,$route) {\n  \n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\n  var hostedFiles =[\n      {region: 'na', name: 'english files from nexon north america', url : 'https://dnna.firebaseapp.com'},\n      {region: 'kdn', name: 'korean files from pupu', url : 'https://kdnfiles.firebaseapp.com'},\n      {region: 'cdn', name: 'chinese files from shanda', url : 'https://cdnfiles.firebaseapp.com'},\n      {region: 'sea', name: 'south east asia - english files from cherry credits', url : 'https://seadnfiles.firebaseapp.com'},\n      {region: 'eu', name: 'europe - english files from cherry credits', url : 'https://eufiles.firebaseapp.com'},\n      // {region: 'ina', name: 'indonesian files from gemscool', url : 'https://dnina.firebaseapp.com'},\n    ];\n  \n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\n  var dntLocation = hostedFiles[0];\n  if(dntLocationRegion != null) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region == dntLocationRegion) {\n        dntLocation = hostedFile;\n      }\n    });\n  }\n\n  var lastTFile = localStorage.getItem('UIStrings_file');\n  var tlocation = null;\n  if(lastTFile != null) {\n    angular.forEach(hostedFiles, function(hostedFile, index) {\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\n        tlocation = hostedFile;\n        return;\n      }\n    });\n  }\n  \n  if(tlocation == null) {\n    tlocation = dntLocation;\n  }\n\n  return {\n    hostedFiles : hostedFiles,\n    alternativeFiles : alternativeFiles,\n    dntLocation : dntLocation,\n    tlocation : tlocation,\n    \n    setCustomUrl: function(url) {\n      // console.log('setting custom location');\n      this.alternativeFiles.url = url;\n\n      var newFiles = [];\n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region != alternativeFiles.region) {\n          newFiles.push(hostedFile);\n        }\n      });\n  \n      newFiles.push(alternativeFiles);\n      hostedFiles = newFiles;\n      this.hostedFiles = newFiles;\n    },\n    \n    setLocationByName: function(locationName) {\n      var newLocation = null;\n      \n      angular.forEach(hostedFiles, function(hostedFile, index) {\n        if(hostedFile.region == locationName) {\n          newLocation = hostedFile;\n        }\n      });\n        \n      this.setLocation(newLocation);\n    },\n    \n    setLocation: function(location) {\n      if(location && location != this.dntLocation) {\n        this.dntLocation = location;\n        dntReset();\n        localStorage.setItem('lastDNTRegion', location.region);\n        dntReset();\n        $route.reload();\n      }\n\n      if(this.tlocation == null) {\n        this.setTLocation(location);\n      }\n      \n      this.init();\n      \n      // $route.reload();\n    },\n    \n    setTLocation: function(location) {\n      \n      if(location != this.tlocation) {\n        \n        angular.forEach(this.translationResettingEvents, function(event, index) {\n          event();\n        });\n        \n        this.tlocation = location;\n        sessionStorage.removeItem('UIStrings');\n        localStorage.removeItem('UIStrings_file');\n        dntReset();\n        translations.reset();\n        translations.location = this.tlocation.url;\n        translations.init(function() {}, function() { $route.reload(); });\n        // $route.reload();\n      }\n    },\n    \n    init: function() {\n      if(this.tlocation != null) {\n        translations.location = this.tlocation.url;\n      }\n      dntData.setLocation(this.dntLocation);\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\nfunction saveHelper(itemCategory) {\n  return {\n    saveItem: function(groupName, item) {\n      var groups = this.getSavedItems();\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\n        \n        groups[groupName].items.push(item);\n        groups[groupName].lastUpdate = (new Date()).getTime();\n        this.updatedSavedItems(groupName, groups[groupName].items);\n      }\n      else {\n        this.updatedSavedItems(groupName, [item]);\n      }\n      \n      localStorage.setItem('lastSavedGroup', groupName);\n    },\n    \n    saveBuildSelection : function(buildName, builds) {\n      console.log('saving selection');\n      localStorage.setItem('currentGroup', buildName);\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\n        console.log('also job');\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\n      }\n    },\n    \n    importGroup: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      groupName = this.getUniqueGroupName(groupName, items);\n      this.updatedSavedItems(groupName, updatedItems);\n      return groupName;\n    },\n    \n    getUniqueGroupName: function(groupName, existingGroups) {\n      var groupNameIndex = 0;\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\n        var startIndex = groupName.lastIndexOf('(');\n        if(startIndex > 0) {\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\n          if(foundIndex > 0) {\n            groupNameIndex = foundIndex + 1;\n            groupName = groupName.substr(0, startIndex - 1);\n          }\n        }\n      }\n      \n      var originalName = groupName;\n      for(;;) {\n        var groupName = originalName;\n        if(groupNameIndex > 0) {\n          groupName = originalName + ' (' + groupNameIndex + ')';\n        }\n        \n        if(groupName in existingGroups) {\n          groupNameIndex++;\n        }\n        else {\n          break;\n        }\n      }\n      \n      return groupName;\n    },\n    \n    updatedSavedItems: function(groupName, updatedItems) {\n      var items = this.getSavedItems();\n      if(groupName in items) {\n        if(updatedItems.length == 0) {\n          delete items[groupName];\n          // console.log('no items to update');\n        }\n        else {\n          items[groupName].items = updatedItems;\n          items[groupName].lastUpdate = (new Date()).getTime();\n          localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('set group');\n        }\n      }\n      else {\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\n        localStorage.setItem('lastSavedGroup', groupName);\n          // console.log('created group');\n      }\n      \n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    renameSavedGroup: function(\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement,\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\n        \n      var savedItems = this.getSavedItems();\n      \n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\n        // console.log('not changing name');\n        newGroupName = oldGroupName;\n      }\n      else if(oldGroupName in savedItems) {\n        var group = savedItems[oldGroupName];\n        savedItems[newGroupName] = group;\n        delete savedItems[oldGroupName];\n      }\n      \n      savedItems[newGroupName].enemyLevel = enemyLevel;\n      savedItems[newGroupName].playerLevel = playerLevel;\n      savedItems[newGroupName].heroLevel = heroLevel;\n      savedItems[newGroupName].job = job;\n      savedItems[newGroupName].damageType = damageType;\n      savedItems[newGroupName].element = element;\n      savedItems[newGroupName].secondaryElement = secondaryElement;\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\n      savedItems[newGroupName].conversions = conversions;\n      savedItems[newGroupName].baseStats = baseStats;\n      savedItems[newGroupName].heroStats = heroStats;\n      \n      var stringifiedData = JSON.stringify(savedItems);\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getSavedItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    getCustomItems: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('customItems'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return [];\n    },\n    \n    saveCustomItems: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('customItems', LZString.compressToUTF16(stringifiedData));\n    },\n    \n    getHiddenTypes: function() {\n      try {\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('hiddenTypes'));\n        var savedItems = JSON.parse(stringifiedData);\n        return savedItems;\n      }\n      catch(ex) {\n      }\n      \n      return {};\n    },\n    \n    saveHiddenTypes: function(items) {\n      var stringifiedData = JSON.stringify(items);\n      // console.log('saving: ' + stringifiedData);\n      localStorage.setItem('hiddenTypes', LZString.compressToUTF16(stringifiedData));\n    }\n  };\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\nfunction statHelper(hCodeValues) {\n\n  return {\n    \n    getSetStats: function(groupItems) {\n      var stats = [];\n      var sets = {};\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value != null && value.setStats != null) {\n          if(value.setId in sets) {\n            sets[value.setId].numItems++;\n          }\n          else {\n            sets[value.setId] = { numItems : 1, stats : value.setStats };\n          }\n        }\n      });\n      \n      angular.forEach(sets, function(value, key) {\n        var setStats = [];\n        angular.forEach(value.stats, function(stat, index) {\n          if(stat.needSetNum <= value.numItems) {\n            stats.push(stat);\n          }\n        });\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCombinedStats: function(groupItems) {\n      var stats = [];\n      \n      angular.forEach(groupItems, function(value, key) {\n        if(value != null) {\n          \n          if(value.fullStats != null) {\n            stats = stats.concat(value.fullStats);\n          }\n          else {\n            stats = stats.concat(value.stats);\n          }\n        }\n      });\n      \n      return hCodeValues.mergeStats(stats);\n    },\n    \n    getCalculatedStats: function(group, combinedStats) {\n      \n      var retVal = [];\n      var statLookup = {};\n      if(!group.conversions || !group.enemyStatCaps) {\n        return [];\n      }\n      \n      angular.forEach(combinedStats, function(stat, index) {\n        statLookup[stat.id] = stat;\n      });\n      \n      function getPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.pc]) {\n          return Number(statLookup[statDef.pc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function getSkillPc(stat) {\n        var statDef = hCodeValues.stats[stat.id];\n        if(statLookup[statDef.skPc]) {\n          return Number(statLookup[statDef.skPc].max);\n        }\n        else {\n          return 0;\n        }\n      }\n      \n      function applyPc(stat) {\n        stat.max = Math.floor(\n          stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\n          );\n      }\n      \n      function dupeStat(id) {\n        var stat = statLookup[id];\n        if(stat) {\n          return {id: id, max: Number(stat.max), pc: stat.pc};\n        }\n        else {\n          return {id: id, max: 0, pc: 0};\n        }\n      }\n      \n      function addStat(stat) {\n        if(stat.max > 0) {\n          retVal.push(stat);\n        }\n      }\n      \n      // base stats\n      var str = dupeStat(0);\n      applyPc(str);\n      addStat(str);\n      \n      var agi = dupeStat(1);\n      applyPc(agi);\n      addStat(agi);\n      \n      var int = dupeStat(2);\n      applyPc(int);\n      addStat(int);\n\n      var vit = dupeStat(3);\n      applyPc(vit);\n      addStat(vit);\n\n      // add vit to hp\n      var hp = dupeStat(25);\n      hp.max += (vit.max * Number(group.conversions.HP));\n      applyPc(hp);\n      addStat(hp);\n      \n      // defs\n      var def = dupeStat(8);\n      def.max += (vit.max * Number(group.conversions.PhysicalDefense));\n      applyPc(def);\n      addStat(def);\n      \n      var defpc = dupeStat(1008);\n      // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\n      defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(defpc);\n      \n      var mdef = dupeStat(9);\n      mdef.max += (int.max * Number(group.conversions.MagicDefense));\n      applyPc(mdef);\n      addStat(mdef);\n      \n      var mdefpc = dupeStat(1009);\n      // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\n      mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\n      addStat(mdefpc);\n      \n      // attack power - like fd but for bufs\n      // this shows as blue damage\n      // i think there are magic and phis variants of this but doesnt matter\n      var aPwr = dupeStat(3000);\n\n      // physical damage\n      if(!group.damageType || group.damageType.id != 2) {\n        var extraPdmg = dupeStat(32);\n        var extraPdmgMod= dupeStat(101);\n        var paPwr = dupeStat(3001);\n        \n        // special stats for zeal\n        var intToPdmg = dupeStat(10164);\n        \n        var minPdmg = dupeStat(4);\n        minPdmg.max += extraPdmg.max;\n        minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\n        minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\n        minPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(minPdmg);\n  \n        var maxPdmg = dupeStat(5);\n        maxPdmg.max += extraPdmg.max;\n        maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\n        maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\n        \n        maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\n        maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\n        maxPdmg.max += Math.floor(intToPdmg.max * int.max);\n        addStat(maxPdmg);\n      }\n      \n      // magic damage\n      if(!group.damageType || group.damageType.id != 1) {\n        var extraMdmg = dupeStat(33);\n        var extraMdmgMod = dupeStat(102);\n        var maPwr = dupeStat(3002);\n        \n        // special stats for zeal\n        var strToMdmg = dupeStat(10165);\n        \n        var minMdmg = dupeStat(6);\n        minMdmg.max += extraMdmg.max;\n        minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\n\n        minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\n        minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\n        minMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(minMdmg);\n        \n        var maxMdmg = dupeStat(7);\n        maxMdmg.max += extraMdmg.max;\n        maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\n        \n        maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\n        maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\n        maxMdmg.max += Math.floor(strToMdmg.max * str.max);\n        addStat(maxMdmg);\n      }\n      \n      \n      // crit chance %\n      var crit = dupeStat(12);\n      crit.max += (agi.max*Number(group.conversions.Critical));\n      applyPc(crit);\n      \n      var skCrit = dupeStat(4012);\n      crit.max += skCrit.max;\n      addStat(crit);\n      \n      var critChance = Math.min(0.89, crit.max / Number(group.enemyStatCaps.Ccritical));\n      retVal.push({id: 1012, max: critChance})\n\n      // crit damage %\n      var cDmg = dupeStat(103);\n      cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\n      applyPc(cDmg);\n      addStat(cDmg);\n\n      var critDamagePc = cDmg.max / group.enemyStatCaps.CcriticalDamage;\n      addStat({id: 1103, max: critDamagePc + 2});\n\n      // fd\n      var fd = dupeStat(29);\n      addStat(fd);\n      var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\n      \n      var fdPc = dupeStat(1029);\n      fdPc.max = Math.min(Math.max(0.35*Number(fd.max)/maxFd,Math.pow(Number(fd.max)/maxFd,2.2)),1);\n      addStat(fdPc);\n      \n      // elements\n      var firePc = dupeStat(16);\n      addStat(firePc);\n      \n      var icePc = dupeStat(17);\n      addStat(icePc);\n      \n      var lightPc = dupeStat(18);\n      addStat(lightPc);\n      \n      var darkPc = dupeStat(19);\n      addStat(darkPc);\n      \n      // average damage\n      function addAvgDamageStat(id, min, max) {\n        \n        var nonEleDamage = (min+max)/2;\n        // add crit (assume 25% crit resist - ie. x0.75)\n        nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * 0.75);\n        // apply fd\n        nonEleDamage = nonEleDamage * (1 + fdPc.max);\n        \n        // apply element(s)\n        // assume no elemental resist (since probably have resist reduction anyways)\n        var avgDmg = nonEleDamage;\n        if(group.element && group.element.id > 0) {\n          var elementStat = statLookup[hCodeValues.elements[group.element.id].dmgStat];\n          if(elementStat) {\n            avgDmg = avgDmg * (1+Number(elementStat.max));\n          }\n        }\n        addStat({id: id, max: avgDmg});\n        var secElementId = 0;\n        var priElementId = 0;\n        if(group.element) {\n          priElementId = group.element.id;\n        }\n        else {\n          priElementId = 0;\n        }\n        if(group.secondaryElement) {\n          secElementId = group.secondaryElement.id;\n        }\n        else {\n          secElementId = 0;\n        }\n        \n        if(secElementId != priElementId) {\n          if(secElementId > 0) {\n            var secondaryElementStat = statLookup[hCodeValues.elements[group.secondaryElement.id].dmgStat];\n            if(secondaryElementStat) {\n              var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max));\n              addStat({id: id + 1000, max: secAvgDmg});\n            }\n          }\n          else {\n            addStat({id: id + 1000, max: nonEleDamage});\n          }\n        }\n      }\n      \n      // average damages\n      if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0) {\n        addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\n      }\n\n      if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0) {\n        addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\n      }\n      \n      if(!group.damageType || group.damageType.id == 3) {\n        addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\n      }\n      \n      // Equivalent HP\n      var pdefEqHp = dupeStat(2008);\n      pdefEqHp.max = hp.max / (1-defpc.max);\n      \n      var mdefEqHp = dupeStat(2009);\n      mdefEqHp.max = hp.max / (1-mdefpc.max);\n      \n      var eqHp = dupeStat(3008);\n      eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\n      addStat(eqHp);\n      \n      return retVal;\n    },\n    \n    getNakedStats: function(group) {\n      \n      if(\n        group.baseStats && \n        group.baseStats.Strength > 0) {\n\n        return [\n          {id:0, max:group.baseStats.Strength},\n          {id:1, max:group.baseStats.Agility},\n          {id:2, max:group.baseStats.Intelligence},\n          {id:3, max:group.baseStats.Stamina}\n          ];\n      }\n      else {\n        return [];\n      }\n    },\n    \n    getSkillStats : function (item, data, skillData) {\n\n      var skillLevelVals = null;\n      angular.forEach(skillData, function(value, index) {\n        if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\n          skillLevelVals = value;\n          return;\n        }\n      });\n      \n      if(!skillLevelVals) {\n        return null;\n      }\n      \n      var index = 1;\n      var effects = [];\n      var stillCols = true;\n      \n      while(stillCols) {\n        var colName = 'EffectClass' + index;\n        var valColName = 'EffectClassValue' + index;\n        if(data && colName in data && valColName in skillLevelVals) {\n          if(data[colName] > 0) {\n            \n            var val = skillLevelVals[valColName];\n            \n            // for now add 10k\n            var effectId = data[colName];\n            var map = hCodeValues.skillEffectMapping[effectId];\n            if(map && map.getVals) {\n              var vals = map.getVals(val);\n              for(var i=0;i<vals.length;++i) {\n                effects.push(vals[i]);\n              }\n            }\n            else {\n              var statId;\n              if(map && map.mapTo) {\n                statId = map.mapTo;\n              }\n              else {\n                statId = 10000 + effectId;\n              }\n              \n              if(val > 0) {\n                effects.push({ id: statId, effect: effectId, max: val });\n              }\n              else {\n                if(val.toString().indexOf(';') > 0) {\n                  var vals = val.split(';');\n                  if(vals.length > 0 && vals[0] > 0) {\n                    effects.push({ id: statId, effect: effectId, max: vals[0] });\n                  }\n                }\n              }\n            }\n          }\n        }\n        else {\n          stillCols = false;\n        }\n        \n        index++;\n      }\n      \n      return effects;\n    },\n\n    getBuildStats: function(build) {\n      var stats = {};\n      stats.nakedStats = this.getNakedStats(build);\n      stats.combinedStats = this.getCombinedStats(build.items);\n      stats.setStats = this.getSetStats(build.items);\n      stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\n      if(build.heroStats != null && build.heroStats.length > 0) {\n        stats.heroStats = build.heroStats;\n        stats.allStats = stats.allStats.concat(build.heroStats);\n      }\n      stats.allStats = hCodeValues.mergeStats(stats.allStats);\n      \n      stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\n      return stats;\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\nfunction translations($routeParams, $rootScope) {\n\n  var dnTranslations = new DnTranslations();\n  var tFile = 'uistring.lzjson';\n\n  var completeCallback = [];\n  var progressCallback = [];\n\n  return {\n    \n    reset : function() {\n      dnTranslations = new DnTranslations();\n      dnTranslations.sizeLimit = 100;\n      this.loaded = false;\n      this.startedLoading = false;\n      completeCallback = [];\n      progressCallback = [];\n    },\n    \n    loaded : false,\n    startedLoading : false,\n    \n    location : null,\n  \n    init : function(progress, complete) {\n\n      if(this.isLoaded()) {\n        complete();\n      }\n      else {\n        progressCallback = [];\n        progressCallback.push(progress);\n        completeCallback.push(complete);\n  \n        if(!this.startedLoading) {\n          this.startedLoading = true;\n          var t = this;\n          \n          var fileName = null;\n          if(this.location != null && this.location != '') {\n            fileName = this.location + '/' + tFile;\n            \n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n              sessionStorage.removeItem('UIStrings');\n              localStorage.removeItem('UIStrings_file');\n            }\n          }\n          \n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n          dnTranslations.loadDefaultFile(\n            fileName, \n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n            }, \n            function() {\n              t.loaded = true;\n              angular.forEach(completeCallback, function(value, key) { value(); });\n              completeCallback = [];\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\n            },\n            function(msg) {\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\n              t.startedLoading = false;\n              t.loaded = false;\n            }\n          );\n        }\n      }\n    },\n    \n    isLoaded : function() {\n      if(!this.loaded) {\n        var fileName = this.location + '/' + tFile;\n        \n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\n          sessionStorage.removeItem('UIStrings');\n          localStorage.removeItem('UIStrings_file');\n        }\n\n        this.loaded = dnTranslations.loadFromSession();\n        if(this.loaded) {\n          this.startedLoading = true;\n        }\n      }\n      return this.loaded;\n    },\n    \n    translate : function(id,idParam) {\n      if(this.loaded) {\n        \n        var name;\n        if(!id) {\n          return '';\n        }\n        else {\n          name = dnTranslations.translate(id);\n          \n          if(typeof name != 'string') {\n            return 'm' + name;\n          }\n        }\n        \n        if(idParam) {\n          var params = idParam.split(',');\n          for(var p=0;p<params.length;++p) {\n            var pid = params[p];\n            if(pid.indexOf('{') == 0) {\n              pid = params[p].replace(/\\{|\\}/g,'');\n              pid = dnTranslations.translate(pid);\n            }\n            \n            name = name.replace('{' + p + '}', pid);\n          }\n        }\n\n        return name;\n      }\n      else {\n        return 'm' + id;\n      }\n    }\n  }\n}\n\n})();","(function () {\n'use strict';\n\nangular.module('dnsim').factory('hCodeValues', [hCodeValues]);\nfunction hCodeValues() {\n\n  function toOneDec(stat) {\n    return Math.round(stat.max*10)/10;\n  }\n  function toNoDec(stat) {\n    return Math.floor(stat.max);\n  }\n  function inThousands(stat) {\n    var val = Number(stat.max);\n    if(val < 100) {\n      return val;\n    }\n    else if(val < 100000) {\n      return Math.round(val/100)/10 + 'k';\n    }\n    else if(val < 1000000) {\n      return Math.round(val/1000) + 'k';\n    }\n    else if(val < 10000000) {\n      return Math.round(val/10000)/100 + 'm';\n    }\n    else {\n      return Math.round(val/1000000) + 'm';\n    }\n  }\n  function toPercent(stat) {\n    return (Math.floor(stat.max*100000)/1000) + '%';\n  }\n  \n  return {\n    stats : {\n      0  : {id: 0, name: 'str', display: toNoDec, type: 'dps', pc: 50, skPc: 4050 },\n      1  : {id: 1, name: 'agi', display: toNoDec, type: 'dps', pc: 51, skPc: 4051 },\n      2  : {id: 2, name: 'int', display: toNoDec, type: 'dps', pc: 52, skPc: 4052 },\n      3  : {id: 3, name: 'vit', display: toNoDec, type: 'def', pc: 53, skPc: 4053 },\n      4  : {id: 4, name: 'pdmg', display: toNoDec, combineWith: 5, type: 'dps', pc: 54 },\n      5  : {id: 5, name: 'maxPdmg', display: toNoDec, hide: true, pc: 55 },\n      6  : {id: 6, name: 'mdmg', display: toNoDec, combineWith: 7, type: 'dps', pc: 56 },\n      7  : {id: 7, name: 'maxMdmg', display: toNoDec, hide: true, pc: 57 },\n      8  : {id: 8, name: 'def', display: inThousands, type: 'def', pc: 58 },\n      9  : {id: 9, name: 'mdef', display: inThousands, type: 'def', pc: 59 },\n      10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\n      11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\n      12 : {id: 12, name: 'crit', display: toNoDec, type: 'dps', pc: 62 },\n      13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\n      14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\n      15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\n      16 : {id: 16, name: 'fire%', display: toPercent, type: 'dps' },\n      17 : {id: 17, name: 'ice%', display: toPercent, type: 'dps' },\n      18 : {id: 18, name: 'light%', display: toPercent, type: 'dps' },\n      19 : {id: 19, name: 'dark%', display: toPercent, type: 'dps' },\n      20 : {id: 20, name: 'fire def', display: toPercent, type: 'def' },\n      21 : {id: 21, name: 'ice def', display: toPercent, type: 'def' },\n      22 : {id: 22, name: 'light def', display: toPercent, type: 'def' },\n      23 : {id: 23, name: 'dark def', display: toPercent, type: 'def' },\n      25 : {id: 25, name: 'hp', display: inThousands, type: 'def', pc: 75, skPc: 4075 },\n      26 : {id: 26, name: 'mp', display: inThousands, pc: 76, skPc: 4076 },\n      29 : {id: 29, name: 'fd', display: toNoDec, type: 'dps' },\n      \n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      32 : {id: 32, name: 'pdmg', display: toNoDec, type: 'dps', pc: 54 },\n      33 : {id: 33, name: 'mdmg', display: toNoDec, type: 'dps', pc: 56 },\n      \n      50 : {id: 50, name: 'str%', display: toPercent },\n      51 : {id: 51, name: 'agi%', display: toPercent },\n      52 : {id: 52, name: 'int%', display: toPercent },\n      53 : {id: 53, name: 'vit%', display: toPercent },\n      54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55 },\n      55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\n      56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57 },\n      57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\n      58 : {id: 58, name: 'def%', display: toPercent },\n      59 : {id: 59, name: 'mdef%', display: toPercent },\n      60 : {id: 60, name: 'para%', display: toPercent, noCustom: true },\n      61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true },\n      62 : {id: 62, name: 'crit%', display: toPercent },\n      63 : {id: 63, name: 'crit resist%', display: toPercent },\n      64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true },\n      65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true },\n      74 : {id: 74, name: 'move%', display: toPercent, noCustom: true },\n      75 : {id: 75, name: 'hp%', display: toPercent },\n      76 : {id: 76, name: 'mp%', display: toPercent },\n      77 : {id: 77, name: 'mp recover%', display: toPercent },\n      81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true },\n\n      // these are both min and max\n      // shows with the same name but these are used really just for set bonus I think\n      101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true },\n      102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true },\n\n      103: {id: 103, name: 'crit dmg', display: toNoDec, type: 'dps', pc: 104 },\n      104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true },\n      107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true },\n      \n      // stats below here are ones I made up\n      1001: {id: 1001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      1004: {id: 1004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      1006: {id: 1006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true },\n      \n      1008: {id: 1008, name: 'calc pdef', display: toPercent, noCustom: true },\n      1009: {id: 1009, name: 'calc mdef', display: toPercent, noCustom: true },\n      \n      1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true },\n      1029: {id: 1029, name: 'fd calc', display: toPercent, noCustom: true },\n      1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true },\n      \n      2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true },\n      \n      2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\n      2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\n      \n      3000: {id: 3000, name: 'skDmg%', display: toPercent },\n      3001: {id: 3000, name: 'skPDmg%', display: toPercent },\n      3002: {id: 3000, name: 'skMDmg%', display: toPercent },\n      3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true },\n      \n      4012: {id: 4012, name: 'skCrit', display: inThousands },\n      4050: {id: 4050, name: 'skStr%', display: toPercent },\n      4051: {id: 4051, name: 'skAgi%', display: toPercent },\n      4052: {id: 4052, name: 'skInt%', display: toPercent },\n      4053: {id: 4053, name: 'skVit%', display: toPercent },\n      4075: {id: 4075, name: 'skHp%', display: toPercent },\n      4076: {id: 4076, name: 'skMp%', display: toPercent },\n      \n      // special cases for skills\n      10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true },\n      10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true },\n      \n      // items over 10000 are unknown skill effects\n    },\n  \n    rankNames : {\n      0 : { id: 0, name : 'normal' },\n      1 : { id: 1, name : 'magic' },\n      2 : { id: 2, name : 'rare' },\n      3 : { id: 3, name : 'epic' },\n      4 : { id: 4, name : 'unique' },\n      5 : { id: 5, name : 'legendary' },\n    },\n    \n    shopNames : {\n      28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',\n      29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\n      5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\n      5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\n      59001: 'garden bunny',\n      52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\n      21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \n      89001: 'guild master',\n      88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \n      66001: 'erosion',\n      35006: 'plate',\n      14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \n      40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\n      40001: 'daredevil faire', 40002: 'daredevil faire', \n      91001: 'wrath',\n      45001: 'farm',\n    },\n    \n    checkedRank : {\n      0 : true,\n      1 : true,\n      2 : true,\n      3 : true,\n      4 : true,\n      5 : true,\n    },\n    \n    typeNames : {\n      0 : 'weapons',\n      1 : 'equipment',\n      5 : 'plates',\n      8 : 'pouch',\n      38 : 'plates',\n      90 : 'welspring',\n      132 : 'talisman',\n      139 : 'gems',\n    },\n    \n    elements : {\n      0 : { id: 0, name: 'non-ele' },\n      1 : { id: 1, name: 'fire', dmgStat: 16 },\n      2 : { id: 2, name: 'ice', dmgStat: 17 },\n      3 : { id: 3, name: 'light', dmgStat: 18 },\n      4 : { id: 4, name: 'dark', dmgStat: 19 },\n    },\n    \n    damageTypes : {\n      0 : { id: 0, name: 'both separate' },\n      1 : { id: 1, name: 'physical' },\n      2 : { id: 2, name: 'magical' },\n      3 : { id: 3, name: 'both combined' },\n    },\n    \n    // note: skills shown on-screen have 1k added to their id\n    skillEffectMapping : {\n      2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\n      13 : { id: 13, name: 'mp', mapTo: 26 },\n      25 : { id: 25, name: 'action speed' },\n      29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\n      32 : { id: 32, name: 'fire %', mapTo: 16 },\n      33 : { id: 33, name: 'ice %', mapTo: 17 },\n      34 : { id: 34, name: 'light %', mapTo: 18 },\n      35 : { id: 35, name: 'dark %', mapTo: 19 },\n      36 : { id: 36, name: 'fire def', mapTo: 20 },\n      37 : { id: 37, name: 'ice def', mapTo: 21 },\n      38 : { id: 38, name: 'light def', mapTo: 22 },\n      39 : { id: 39, name: 'dark def', mapTo: 23 },\n      58 : { id: 58, name: 'hp%', mapTo: 4075 },\n      59 : { id: 59, name: 'mp%', mapTo: 4076 },\n      65 : { id: 65, name: 'range' },\n      76 : { id: 76, name: 'movement speed', mapTo: 74 },\n      87 : { id: 87, name: 'str%', mapTo: 4050 },\n      88 : { id: 88, name: 'agi%', mapTo: 4051 },\n      89 : { id: 89, name: 'int%', mapTo: 4052 },\n      90 : { id: 90, name: 'vit%', mapTo: 4053 },\n      134 : { id: 134, name: 'physicial defense%' },\n      185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\n      251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\n      164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\n      165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\n      222: {\n        id: 222, \n        name: 'hellfire', \n        getVals: function(val) {\n          if(val.indexOf(';') > 0) {\n            var vals = val.split(';');\n            return [\n              {id: 62, effect: 222, max: Number(vals[0])/100.0},\n              {id: 4012, effect: 222, max: Number(vals[1])},\n              ];\n          }\n          else {\n            return [{id: 62, effect: 222, max: Number(val)/100.0}];\n          }\n        }\n      },\n    },\n    \n    customItems: \n    [\n    {id: 0, typeName:'custom', name: 'wise plate fix', stats: [{id: 52, max:-0.001}]},\n    {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\n    ],\n  \n    getStats : function(data) {\n\n      var useMax=false;\n      var useStateXVal=false;\n      var mightHaveSets=true;\n      var prop = 'State1_Max';\n      if(prop in data) {\n        useMax = true;\n      }\n      else {\n        prop = 'State1Value';\n        if(prop in data) {\n          useStateXVal = true;\n        }\n      }\n      \n      var currentState = 0;\n      var statVals = [];\n      for(;;) {\n        currentState++;\n        \n        var stateProp = 'State' + currentState;\n        if(!(stateProp in data)) {\n          break;\n        }\n\n        var stateId = data[stateProp];\n        if(stateId == -1) {\n          break;\n        }\n        \n        if(stateId == 107) {\n          // is this mp?\n        }\n        else {\n          \n          var currentData = { id: stateId };\n          \n          var prop;\n        \n          if(useMax) {\n            prop = 'State' + currentState + '_Max';\n            currentData.max = data[prop];\n          }\n          else if(useStateXVal) {\n            prop = 'State' + currentState + 'Value';\n            currentData.max = data[prop];\n          }\n          else {\n            prop = 'StateValue' + currentState;\n            currentData.max = Number(data[prop]);\n          }\n          \n          if(currentData.max > 0 || currentData.max < 0) {\n            if(mightHaveSets) {\n              prop = 'NeedSetNum' + currentState;\n              if(prop in data) {\n                if(data[prop] == 0) {\n                  break;\n                }\n                currentData.needSetNum = data[prop];\n              }\n              else {\n                mightHaveSets = false;\n              }\n            }\n          \n            statVals.push(currentData);\n          }\n        }\n      }\n      \n      return statVals;\n    },\n    \n    setupStat : function(stat, id) {\n      stat.id = Number(id);\n    },\n    \n    mergeStats : function(stats1, stats2) {\n      var statMap = {};\n      \n      var self = this;\n      function add(value) {\n        \n        var amount = Number(value.max);\n        if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\n          amount = Math.floor(amount);\n        }\n        \n        if(value.id in statMap) {\n          statMap[value.id] += amount;\n        }\n        else {\n          statMap[value.id] = amount;\n        }\n      }\n      \n      angular.forEach(stats1, function(value, key) {\n        if(value) {\n          add(value);\n        }\n      });\n      \n      if(stats2) {\n        angular.forEach(stats2, function(value, key) {\n          if(value) {\n            add(value);\n          }\n        });\n      }\n      \n      var newStats = [];\n      \n      for(var key in statMap) {\n        var stat = { max : statMap[key], id: Number(key) };\n        newStats.push(stat);\n      }\n        \n      return newStats;\n    }\n  }\n}\n\n})();"],"sourceRoot":"/source/"}