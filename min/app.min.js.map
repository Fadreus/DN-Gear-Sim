{"version":3,"sources":["routes.js","about/about.js","builds/build-actions.js","builds/build-export-action.js","builds/build-import.js","builds/build-item-list.js","builds/build-item.js","builds/build-list.js","builds/build-stats.js","builds/build-summary.js","builds/build-talismans.js","builds/build.js","builds/delete-build.js","builds/edit-build.js","builds/quick-add.js","builds/reload-build.js","builds/view-group.js","filters/escape.filter.js","filters/percentage.filter.js","item/group-assignment.js","item/item-edit-custom.js","item/item-edit-enchantment.js","item/item-edit-potential.js","item/item-edit-skill.js","item/item-edit-talisman.js","item/item-edit.js","item/item-view-attainment.js","item/item-view-box.js","item/item-view-craft.js","item/item-view-extraction.js","item/item-view-plate.js","item/item-view-set.js","item/item-view-shop.js","item/item-view-transfer.js","item/item-view-tuning.js","item/item.js","nav/export.js","nav/header.js","nav/nav.js","nav/setup.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","region/region.js","search/custom-items.js","search/everything-search.js","search/search.js","search/skill-search.js","widgets/choose-class.js","widgets/dnsim-category-links.js","widgets/dnsim-item-icon.js","widgets/dnsim-item-link.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","widgets/dnsim-select-all-on-click.js","widgets/dnsim-stats.js","widgets/dnsim-string-to-number.js","widgets/dnsim-string-to-percent.js","widgets/file-change.js","characterService.js","columnsToLoadService.js","dntDataService.js","dntInitService.js","dntResetService.js","dvStatcardService.js","exportLinkServices.js","groupServices.js","itemCategoryService.js","itemExcludeService.js","itemFactoryService.js","itemSourceService.js","jobService.js","onlineService.js","quickAddHelperService.js","quickAddService.js","quickAddStepsService.js","regionService.js","saveService.js","statService.js","translationService.js","uiTranslationService.js","valueServices.js"],"names":["angular","$routeProvider","templateUrl","controller","when","otherwise","redirectTo","module","config","document","body","className","$location","saveHelper","exportLinkHelper","vm","this","search","buildName","copyGroup","newGroupName","importGroup","build","items","saveBuild","reloaded","reloadGroup","progress","setShortUrl","createGroupLink","directive","shortUrl","sessionStorage","getItem","longUrl","onChange","controllerAs","$timeout","hCodeValues","statHelper","itemCategory","groupHelper","translations","dntData","dntReset","blob","saveAs","Blob","JSON","stringify","type","export","exportBuild","scope","bindToController","files","target","console","event","length","reader","FileReader","readAsText","onload","fileName","replace","copyLocally","path","buildItemListController","getCategoryItems","getItemsByCategory","itemsByCat","category","subCats","subCatCatName","getSubCategories","name","subCatList","sort","item1","item2","exchangeType","_","filter","item","increasingGemSlots","offensiveGemSlots","costumeCat","isItemForCat","names","slots","retVal","exchangeId","subCat","exchange","find","gemExchanges","e","each","isInSubCat","gemExchange","id","foundSubCatItem","canMove","allSubCatItems","subCatItem","log","move","moveItem","destination","allowMoreItems","handleChange","getGemSlot","updatedSavedItems","maxCat","cancelEdit","handleItemEdit","typeName","removeItem","newItemList","forEach","gItem","index","push","$inject","server","gemSlot","gemSlots","i","setFullStats","fullStats","stats","mergeStats","enchantmentStats","sparkStats","getGemSlotName","editMode","setupBuilds","savedItems","getSavedItems","buildNames","Object","keys","builds","$routeParams","currentGroup","saveBuildSelection","$window","title","createGroup","toggleGroup","url","encodeURIComponent","buildStatsController","dvStatcardHelper","exportStatCard","convertStats","calculatedStats","dvCardStatHash","btoa","window","itemsByCategory","getSaveDate","lastUpdate","group","Date","toLocaleDateString","getSaveTime","toLocaleTimeString","getBuildSummary","summary","itemsByType","jobs","itemColumnsToLoad","character","calcStatPercent","newVal","origVal","updateRows","Math","round","scrollTo","groupNames","groupName","getCurrentBuild","getGroupCalcStats","groupCalcStats","getCalculatedStatsFromItems","getBuild","pickup","replaceHPAffectAmount","replacePDmgAffectAmount","replaceAvgDmgAffectAmount","summaryStatIds","pcIndexes","summaryDisplay","rows","pcIndex","rowIndex","enchantmentNum","makeFakeCells","data","makeCell","selectedIndex","num","col","click","setTalisman","swapEnchantmentNumber","newEnhancementNum","extraStats","replaceAffectAmount","useStats","stat","getReplaceAffectAmount","max","statId","itemIndex","initReplaceAffects","fullStats1","fullStats2","newItems","useItem2Stats","newStats","origStats","element","eleId","elements","getStat","getStatName","secondaryElement","len","save","bulidController","getBuildStats","selectedCategory","localStorage","hideInBuild","byName","changeCategory","xsView","categoryChanging","getCategories","categories","setSelectedCategory","value","getItemCount","itemCountText","allItems","numOffensiveSlots","numOffensiveGems","totalIncreasingGems","numIncreasingSlots","numIncreasingGems","gemType","sparkTypeId","number","numItems","cat","numItemText","concat","newCustom","newGroup","deleteBuild","editBuildCtrl","region","heroStats","oldGroupName","damageTypes","job","initDamageType","damageType","d","DamageType","initDefaultElement","defaultElement","defaultSecondaryElement","jobName","EnglishName","critResist","enemyLevel","playerLevel","eleResist","init","newJobs","heroLevel","setHeroStats","key","getStatCap","getStatCaps","getJobConversion","invalidGroupName","colName","useLevel","getConversions","getJobBaseStat","getBaseStats","ok","baseStats","getHeroStats","enemyStatCaps","playerStatCaps","conversions","input","focus","setSelectionRange","getElementById","quickAdd","startedForCat","stepNumber","datas","options","setOptions","hasStarted","getOptions","selectOption","createData","isValidStepNumber","dntFiles","getDntFiles","newItem","columns","tryToAddItem","allLoaded","cancel","reloadItem","saveItem","reset","start","hasOptions","back","pop","testOptions","reloadBuildCtrl","tryInit","goToBuild","isLoaded","$scope","allInit","anyLoading","getById","setLocationByName","g","p","h","s","itemString","decodeItem","itemStr","isLoading","anyItems","newBuildName","escapeFilter","percentageFilter","$stateful","groupAssignment","saveGroup","savedGroup","clearGroup","addAffectAmount","newAffectAmount","oldAffectAmount","tryToSetItem","indexOf","getAddAffectAmount","initAddAffects","getNewAffectAmount","getOldAffectAmount","getGroupItems","numMatches","str","matches","itemSplit","groupItems","existing","itemSource","b","a","hasMaxExchangable","maxExchange","nextGroup","uptoItem","prevGroup","foundGroup","replaceItem","compact","statMap","$watch","newValue","oldValue","Number","found","anyChange","itemFactory","getEnchantLevel","enchantments","itemType","EnchantLevel","enchantmentId","enchantDnt","getEnchantments","enchantDnt2","petLevelDnt","petDnt","enchantment","enchantmentAfter","enchantmentCost","enhancementOptions","setEnchantment","getStats","NeedCoin","setPetLevel","isMaxEnchantLevel","enhancementOption","nextEnchantment","prevEnchantment","getOption","itemId","itemCount","material","materials","createBasicItem","emptyStatId","pStats","potentials","sIndex","hide","reportProgress","potential","changingPotentials","potentialStats","pid","potentialDnt","getPotentials","getPotentialStats","PotentialID","potentialDntEx","nextPotential","prevPotential","changePotential","isFirstPotential","isLastPotential","getDntFile","baseJobName","pve","msg","initSkills","dntFile","skillData","isMaxSkillLevel","amount","updateItem","attainments","texts","file","splitVal","singleText","split","ItemGainText","text","translate","typeId","pouchFileNames","usedFiles","lookupId","getCharmItems","initBoxContents","getPouchItemsFromFile","boxType","pouchData","pouchFileName","gold","TypeParam1","isGroup","getPouchItems","f","basicItem","GoldMin","charmFiles","charmItemtable","commonCharmItemtable","pouchItemCount","charmData","pouchItem","cd","itemds","CharmType","count","getFileLink","getData","c","CharmNum","Look","ItemID","Count","Gold","dntLocation","crafts","cFiles","initCrafts","initCraft","hasFailed","drops","drop","di","newCrafts","j","k","fCrafts","craft","qtyColName","itemColName","Cost","initExtract","DisjointDrop1","disjoint","EnchantID","DisjointDrop","getItems","getGold","Disjointamount","r","row","itemData","allItemFileName","allFiles","initSets","getPlates","getSetItems","setId","item1s","shops","item2s","PurchaseItem2","shopCost","shopName","ShopID","PurchaseItem1","nightmarePoints","nestPoints","ladderPoints","TabNameID","numItem1","numItem2","shopNames","PurchaseType1","PurchaseItemValue1","PurchaseType2","PurchaseItemValue2","pointsId2","shopCosts","dungeonPoints","cCashShopFileName","cSysShopFileName","initShops","getCombinedCosts","newShopCosts","tabName","matchingTransfers","transferItemsFileName","initTransfers","transferItem","transferFileName","transfers","t","Rank","rank","LevelLimit","levelLimit","NeedItemID2","level","ResultLevel","ResultEnchantLevel","rankNames","NeedItemCount1","ResultRank","NeedItemCount2","rewardItems","changes","OriginalLevel","rItem","RewardItemID","rewardItem","anyToLoad","allJobs","needJobClass","anyDntToLoad","getJobName","setupTabs","canExtract","canTransfer","setFileName","getItemData","Type","canUse","detail","canTune","isInSet","isPlate","getBuilds","mainDnt","setStats","getDescription","description","DescriptionID","getExchangeType","DescriptionIDParam","setDetail","NameID","toLowerCase","getNumItemsForSet","getNumInSet","getBuildName","allBuildNames","getSellingPrice","silver","SellAmount","floor","copper","getServerStorage","AbleWStorage","IsCash","Reversion","getMoreInfo","numStamps","sealTimes","sealData","moreInfoLoaded","SealID","Type1","CashTradeCount","loadMoreInfo","getAllJobs","encodeItem","copy","preInitItem","rawSavedData","exportData","setItem","LZString","compressToUTF16","doClose","isClosed","noLocationMenu","normalMenu","icon","buildAction","withBuildMenu","isSearch","noRegion","isHttpOnly","startedLoading","location","protocol","tlocation","getActions","currentBuild","hostname","menu","extraCss","simError","ex","message","error","dntInit","progressTranslations","testResults","translationResults","advancedSetup","hostedFiles","sessionLocation","alternativeFiles","saveLocation","existingFile","translationsStatus","clear","reload","setCustomUrl","noLocation","buildSearch","onlineService","getClassBuilds","then","jobBuilds","maxDisplay","totalNumResults","jobId","setJob","showMoreResults","extra","getFilteredBuilds","allResults","uid","results","toUpperCase","result","profile","getSavedBuilds","getProfile","storedBuilds","load","publish","user","getUser","handleError","err","show","login","saveProfile","catch","getTime","startPublish","about","guild","publishBuild","deleteAccount","getBuildLimit","maxBuilds","getNumStoredBuilds","size","getNumBuilds","signOut","deleteLocal","getAllBuildNames","allKeys","reallyDeleteLocal","localToDelete","deleteServer","reallyDeleteServer","serverToDelete","published","$route","$http","res","newLineDetails","spaceDetails","dntVersion","override","getOverride","hoverLocation","edit","setDntVersion","getDntLocation","getTlocation","getHostedFiles","getWorldName","setTLocation","setLocation","setOverride","customItemCtrl","customItems","currentResults","nameSearch","getResults","getNewStatName","createCustomItem","everythingSearchCtrl","everything","version","minLevel","origMinLevel","maxLevel","origMaxLevel","initeverything","NameIDParam","IconImageIndex","versionMap","versions","sortBy","newResults","numeverything","curDisplay","nameSearches","ns","allMatch","toString","changeSearch","catName","lastJobNumber","getFinalJobs","splice","loadResults","altStatId","statVals","numEquip","pcStatId","pc","altStat","isClassJob","hideLevel","hideRank","rankChecked","initItem","statFound","statVal","statResults","value1","value2","byPath","hideInSearch","grades","origSavedSearchStatId","navigate","hideJob","jobInit","checkedRank","controllerParams","itemSearchCtrl","skillSearchCtrl","getDntName","baseClassName","getLevelDntName","getSkills","loadedJobId","baseJobNames","baseName","getBaseJobName","dntName","levelDntName","setupSkills","skills","allReady","numSkills","EffectClass2","NeedJob","reloadSkill","restrict","chooseClass","onSetJob","chooseClassController","finalJobs","bJob","getBaseJobs","englishName","dnsimCategoryLinksController","collapse","buildScreen","$translate","collapsed","action","loaded","setCategory","getName","tId","instant","dnsimCategoryLinks","dnsimItemIcon","link","attrs","getIcon","prefix","fileIndex","dnsimItemLink","noClick","dnsimJobIcon","small","dnsimJobIconController","sizeValue","iconSize","iconOffset","getIconXPostion","JobIcon","getIconYPostion","transclude","alsoShowFor","$on","setLoadCount","loadError","numLoading","n","totalToLoad","dnsimLoading","hasSelectedAll","$event","selectionEnd","selectionStart","on","dnsimSelectAllOnClick","dnsimStats","altStats","separator","numInSet","showStats","append","newElement","clone","lastElement","after","css","addedElements","first","summaryForStats","def","summaryFor","hideIf","hideStat","statAddTo","addToDef","addTo","addStat","output","sep","needSetNum","display","stat2","combineWith","addStat2","sStat","sDef","originalDisplay","require","dnsimStringToNumber","ngModel","$formatters","parseFloat","fileChangeFunction","$parse","attrHandler","handler","$apply","addEventListener","heroLevels","statCaps","jobBaseStats","complete","jobConversions","jobConversionColsToLoad","statCapColsToLoad","jobBaseStatColsToLoad","heroLevelPotentials","findFast","getRow","HeroLevelAbilityID","pIndex","factory","TypeParam2","TypeParam3","NeedJobClass","StateValue1","State1_Max","State1","StateValue3","State3_Max","State2","StateValue4","StateValue2","State4_Max","State2_Max","State3","StateValue5","State5_Max","State4","StateValue6","State6_Max","State5","StateValue7","State7_Max","State6","StateValue8","State8_Max","State7","StateValue9","State9_Max","State8","StateValue10","State10_Max","State9","State10","ExchangeType","SkillID","TierName","SetItemID","EnchantRatio","BreakRatio","MinDown","MaxDown","NeedItemID4","NeedItemCount4","NeedItemID5","NeedItemCount5","ProtectItemCount","State2Value","State3Value","State4Value","State5Value","State6Value","State7Value","State8Value","State9Value","State10Value","PotentialNo","PotentialRatio","State1Value","State11Value","State12Value","State11","State13Value","State12","State14Value","State13","State15Value","State14","State16Value","State16","jobsDnt","setDnt","JobNumber","BaseClass","ParentJob","JobName","Strength","Agility","Intelligence","Stamina","AggroperPvE","BaseMP","Cbase","Cdefense","Ccritical","CcriticalDamage","HP","StrengthAttack","AgilityAttack","IntelligenceAttack","PhysicalDefense","MagicDefense","Critical","CriticalResistance","Stiff","StiffResistance","Stun","StunResistance","MoveSpeed","MoveSpeedRevision","DownDelay","ElementAttack","ElementDefense","ElementDefenseMin","ElementDefenseMax","StrengthIntelligenceToCriticalDamage","$rootScope","colsToLoad","DntReader","completeCallbacks","ignoreErrors","$broadcast","loadDntFromServerFile","failed","loader","findIndexes","loaders","createLoader","Array","numRows","column","numResults","colIndex","columnIndexes","findIndex","val","isArray","hasStartedLoading","resetAll","getNumRows","convertData","lookupValue","columnName","getValue","columnNames","saveMemory","saveReaderMemory","initFactory","allFactories","prop","newFactory","source","convertStat","convertPercentToNum","adjustStat","func","adjustments","0","1","2","3","4","5","6","7","8","9","12","16","17","18","19","25","26","29","103","calcStats","ret","characterName","remark","statHeroLevel","v","cardImportUrl","sparkId","itemBit","charAt","bitIndex","parseInt","substr","statString","statBit","splitStat","statBitIndex","itemStrings","self","encodeURI","pv","join","skillLevelDnt","skillLevelDatas","skillLevelVals","skillDnt","SkillLevel","reloadSourceItem","SkillExplanationIDParam","getSkillStats","rowNum","ds","ps","typeParam1","usePartDnt","createItem","sets","parts","petLevels","PetLevel","DragonJewelSlot1","DragonJewelSlot3","dragonjeweltype","DragonJewelSlot2","DragonJewelSlot4","itemTypeName","fileType","key1","allDntFiles","searchType","sourceType","limitExchange","limitGemType","limitRank","catItems","loading","anyMatch","rawData","sources","numComplete","gem","gemDnt","gemTypes","itemMap","types","setItemCategory","enh1","sorted","enh2","localeCompare","ids","excludeService","isDataLoaded","loadItems","state1Max","dStateValue1","dTypeParam1","dType","numPotentials","end","time","skillId","iconIndex","petData","PetLevelTypeID","getItemDataFromFile","doComplete","itemSources","tech","gemSlotDnt","tman","plate","minRank","plate95","partsDnt","weaponDnt","eq","rbeq","pvpeq","cCommon","cClone","c2016","c2017","c2015","c2014","cash","xtras","imprint","alljobs","baseJobs","createJob","parentJob","parentJobData","$q","storageBucket","resolve","reject","firebase","auth","onAuthStateChanged","href","once","storedProfile","database","ref","stripBuildName","service","deleteNullProperties","set","getUserBuilds","decompressBuild","compressBuild","stringifiedData","parse","compressedBuild","actions","all","test","recurse","undefined","_typeof","pList","jobIds","remove","uniq","delete","currentUser","apiKey","authDomain","databaseURL","initializeApp","quickAddHelper","findData","alterItem","maxItems","sortFunc","sortId","addItem","matchesItem","filterDuplicates","areSameItem","isEqual","quickAddSteps","categorySteps","titles","weapons","armour","accessories","techs","expedition plates","talisman","costume","custom","getStepName","stepName","stepDef","allOptions","unfilteredItems","newOptions","option","tempDatas","minOptions","step","exchangeStep","exchanges","numExchange","exId","exName","accExchangeStep","levelStep","talismanRankStep","gemRankStep","rankStep","values","enhanceTalismanStep","titleStep","usefulTitles","allTitles","isItemStep","enhanceEqStep","hideName","namedItemStep","techSkillStep","itemNameStep","itemNames","itemNamesList","numStats","allItem","largestVal","selectedVal","quickHigh","highStatStep","val2","allStats","hasStatStep","val1","customStep","searchable","dntLocationRegion","hostedFile","lastTFile","newFiles","newLocation","locationName","tLocation","groups","setCurrentBuild","updatedItems","getUniqueGroupName","existingGroups","groupNameIndex","lastIndexOf","startIndex","foundIndex","originalName","saveBuilds","updateBuild","decompressFromUTF16","getSetStats","getCombinedStats","nakedStats","getNakedStats","combinedStats","getCalculatedStats","getPc","statDef","statLookup","skPc","applyPc","dupeStat","getSkillPc","priElementId","min","nonEleDamage","critChance","critDamagePc","newFdPc","avgDmg","secElementId","secondaryElementStat","elementStat","addAvgDamageStat","minPdmg","secAvgDmg","minMdmg","int","vit","agi","hp","defpc","mdef","mdefpc","aPwr","extraPdmg","maxPdmg","strToPdmg","paPwr","intToPdmg","extraPdmgMod","maxMdmg","intToMdmg","extraMdmg","maPwr","extraMdmgMod","crit","skCrit","cDmg","itemCrit","itemCtriDmg","fd","fdSkill","Cfinaldamage","maxFd","dmgStat","firePc","allElementStat","icePc","lightPc","darkPc","mdefEqHp","eqHp","pdefEqHp","effectId","effects","stillCols","valColName","map","skillEffectMapping","getVals","vals","mapTo","uiTranslations","dnTranslations","completeCallback","progressCallback","getRawData","DnTranslations","sizeLimit","getFileName","addTranslations","use","loadFromSession","idParam","params","regionData","uiTranslationLookup","na","1000128908","cdn","dragon nest gear simulator","enemy lvl","player lvl","hero level stats","naked stats","stat affects","select region","create a new build","import","find a build","import a build from a json build file","log in and publish your builds online","pdmg","mdmg","cdmg","fire%","ice%","light%","dark%","pdef","enhancement plates","increasing gems","offensive gems","epic","unique","legendary","quick add","hero lvl","sea","inThousands","toPercent","dps","noCustom","10","11","13","14","15","20","21","22","23","toNoDec","32","33","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","74","75","76","77","81","88","101","102","104","105","106","107","1001","1004","1005","1006","1007","1008","1009","1012","1030","1103","2001","2004","2006","2008","2009","3000","3001","3002","3008","4012","4050","4051","4052","4053","4075","4076","10164","10165","10372","103721","10389","28001","28002","28003","28004","28005","28006","28007","28008","28009","28101","29001","29002","29003","29004","29005","29006","29007","29008","29009","5001","5002","5003","5004","5005","5006","5007","5008","5009","5101","5102","5103","5104","5105","5106","5107","5108","5109","59001","52001","52002","52003","52004","52005","52006","52007","52008","52009","24","27","28","89001","88001","88002","88003","88004","88005","88006","88007","88008","88009","66001","35006","14051","14052","14053","14054","14055","14056","14057","14058","14059","40011","40012","40013","40014","40015","40016","40017","40018","40001","40002","40111","91001","45001","100004","89000","typeNames","38","90","132","139","34","35","36","37","39","87","89","185","251","164","effect","372","389","mightHaveSets","useMax","useStateXVal","currentState","stateProp","stateId","currentData","setupStat","stats1","stats2","add"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n  \r\n    when('/about', {\r\n      templateUrl: 'ui/about/about.html',\r\n      controller: 'AboutCtrl as about'\r\n    }).\r\n    \r\n    when('/setup', {\r\n      templateUrl: 'ui/nav/setup.html',\r\n      controller: 'SetupCtrl'\r\n    }).\r\n    when('/test', {\r\n      templateUrl: 'ui/nav/test.html',\r\n      controller: 'TestCtrl'\r\n    }).\r\n    \r\n    when('/items', {\r\n      templateUrl: 'ui/search/everything-search.html',\r\n      controller: 'ItemsCtrl as items',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/', {\r\n      templateUrl: 'ui/welcome.html',\r\n    }).\r\n    when('/builds', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/build', {\r\n      templateUrl: 'ui/builds/build-list.html',\r\n      controller: 'BuildListCtrl as buildList'\r\n    }).\r\n    when('/view-group', {\r\n      templateUrl: 'ui/builds/view-group.html',\r\n      controller: 'ViewGroupCtrl'\r\n    }).\r\n    when('/edit-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/new-build', {\r\n      templateUrl: 'ui/builds/edit-build.html',\r\n      controller: 'EditBuildCtrl as editGroup',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/delete-build', {\r\n      templateUrl: 'ui/builds/delete-build.html',\r\n      controller: 'DeleteBuildCtrl as deleteBuild',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/reload-build', {\r\n      templateUrl: 'ui/builds/reload-build.html',\r\n      controller: 'ReloadBuildCtrl as ctrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/search', {\r\n      templateUrl: 'ui/search/search.html',\r\n      controller: 'ItemSearchCtrl as ctrl',\r\n      reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    when('/item', {\r\n      templateUrl: 'ui/item/item.html',\r\n      controller: 'ItemCtrl',\r\n      // reloadOnSearch: false,\r\n    }).\r\n    \r\n    when('/export', {\r\n      templateUrl: 'ui/nav/export.html',\r\n      controller: 'ExportCtrl',\r\n    }).\r\n    \r\n    when('/talismans', {\r\n      templateUrl: 'ui/builds/build-talismans.html',\r\n      controller: 'BuildTalismansCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/import', {\r\n      templateUrl: 'ui/builds/build-import.html',\r\n      controller: 'BuildImportCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim')\r\n.controller('AboutCtrl', \r\n  ['$window',\r\n  function($window) {\r\n    'use strict';\r\n    document.body.className = 'default-back';\r\n    $window.document.title = 'dngearsim | ABOUT/FAQ';\r\n  }]\r\n);\r\n})();","angular.module('dnsim').controller('buildActionsCtrl',\r\n\r\n['$location','saveHelper','exportLinkHelper',\r\nfunction($location,saveHelper,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.deleteGroup = function() {\r\n    $location.path('/delete-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  this.editGroup = function() {\r\n    $location.path('/edit-build');\r\n    $location.search('buildName', vm.buildName);\r\n  }\r\n  \r\n  this.copyGroup = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  this.reloaded = false;\r\n  this.reloadGroup = function() {\r\n    $location.path('/reload-build');\r\n    $location.search('name', vm.buildName);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n    \r\n  this.setShortUrl = function() {\r\n    if(vm.build) {\r\n      var longUrl = exportLinkHelper.createGroupLink(vm.buildName, vm.build);\r\n      vm.build.shortUrl = sessionStorage.getItem(longUrl);\r\n    }\r\n  }\r\n  \r\n  this.setShortUrl();\r\n}])\r\n.directive('dngearsimBuildActions', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: 'buildActionsCtrl',\r\n    controllerAs: 'buildActions',\r\n    templateUrl: 'ui/builds/build-actions.html'\r\n  };\r\n});","angular.module('dnsim').controller('buildExportActionCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.export = exportBuild;\r\n  \r\n  function exportBuild() {\r\n    var blob = new Blob([JSON.stringify(vm.build, null, 1)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs(blob, 'dngearsim-' + vm.buildName + '.json');\r\n  }\r\n}])\r\n.directive('dngearsimBuildExportAction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildExportActionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-export-action.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildImportCtrl',\r\n\r\n['$timeout','$location','hCodeValues','statHelper','itemCategory','saveHelper','exportLinkHelper','groupHelper','translations','dntData','dntReset',\r\nfunction($timeout,$location,hCodeValues,statHelper,itemCategory,saveHelper,exportLinkHelper,groupHelper,translations,dntData,dntReset) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.onFileChange = onFileChange;\r\n  vm.copyLocally = copyLocally;\r\n  \r\n  function onFileChange(event) {\r\n    var files = event.target.files;\r\n    console.log('importing files', files);\r\n    if(files && files.length) {\r\n      \r\n      var fileName = files[0].name;\r\n      var reader = new FileReader();\r\n      reader.readAsText(files[0]);\r\n      reader.onload = function() {\r\n        vm.build = JSON.parse(reader.result);\r\n        if(fileName && fileName.length > 5) {\r\n          vm.buildName = fileName.substr(0, fileName.length-5);\r\n          vm.buildName = vm.buildName.replace('dngearsim-', '')\r\n        }\r\n        else {\r\n          vm.buildName = 'imported build';\r\n        }\r\n        $timeout();\r\n      }\r\n    }\r\n  }\r\n  \r\n  function copyLocally() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}]);","'use strict';\r\n  \r\nangular.module('dnsim').directive('dngearsimBuildItemList', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      category: '=category',\r\n      server: '=server',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: buildItemListController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-item-list.html'\r\n  };\r\n});\r\n\r\nfunction buildItemListController(hCodeValues, itemCategory, saveHelper) {\r\n\r\n  var vm = this;\r\n\r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  var subCats = {};\r\n  var subCatCatName = '';\r\n  vm.getSubCategories = function() {\r\n    if(subCatCatName != vm.category.name) {\r\n      subCats = {};\r\n      subCatCatName = vm.category.name;\r\n      var subCatList = [];\r\n\r\n      var items = vm.build.items.sort(function(item1, item2) {\r\n        return item1.exchangeType - item2.exchangeType;\r\n      });\r\n      if(vm.category.name == 'increasing gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.increasingGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'offensive gems') {\r\n        subCatList = _.filter(items, function(item) {\r\n          return item.offensiveGemSlots > 0;\r\n        });\r\n      }\r\n      else if(vm.category.name == 'imprint') {  \r\n        var costumeCat = itemCategory.byName('costume');\r\n        subCatList = _.filter(items, function(item) {\r\n          return itemCategory.isItemForCat(costumeCat, item);\r\n        });\r\n      }\r\n      _.each(subCatList, function(item) {\r\n        if(!(item.exchangeType in subCats)) {\r\n          subCats[item.exchangeType] = {\r\n            names: [],\r\n            slots: 0,\r\n            exchangeType: item.exchangeType\r\n          };\r\n        }\r\n\r\n        subCats[item.exchangeType].names.push(item.name);\r\n        if(vm.category.name == 'increasing gems') {\r\n          subCats[item.exchangeType].slots += item.increasingGemSlots;\r\n        }\r\n        else if(vm.category.name == 'offensive gems') {\r\n          subCats[item.exchangeType].slots += item.offensiveGemSlots;\r\n        }\r\n        else {\r\n            subCats[item.exchangeType].slots = 1;\r\n        }\r\n      });\r\n      subCats[0] = null;\r\n    }\r\n    \r\n    return subCats;\r\n  }\r\n\r\n  vm.getNumTaken = function(subCat) {\r\n    var retVal = 0;\r\n    var exchangeId;\r\n    if(vm.category.name == 'imprint') {\r\n      exchangeId = subCat.exchangeType;\r\n    }\r\n    else {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      exchangeId = gemExchange.id;\r\n    }\r\n\r\n    if(exchangeId) {\r\n      var items = vm.getCategoryItems();\r\n      _.each(items, function(item) {\r\n        if(item.gemSlot == exchangeId) {\r\n          ++retVal;\r\n        }\r\n      });\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  vm.isInSubCat = function(item, subCat) {\r\n    if(!subCat && !item.gemSlot) {\r\n      return true;\r\n    }\r\n    else {\r\n      var exchangeId;\r\n      if(vm.category.name == 'imprint') {\r\n        exchangeId = item.gemSlot;\r\n      }\r\n      else {\r\n        var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n          return e.id == item.gemSlot;\r\n        });\r\n        if(gemExchange) {\r\n          exchangeId = gemExchange.exchange;\r\n        }\r\n      }\r\n\r\n      if(!subCat && exchangeId) {\r\n        // check for invalid slot\r\n        var allSubCatItems = vm.getSubCategories();\r\n        var foundSubCatItem = _.find(allSubCatItems, function(subCatItem) {\r\n          return subCatItem != null && exchangeId == subCatItem.exchangeType;\r\n        });\r\n\r\n        if(!foundSubCatItem) {\r\n          return true;\r\n        }\r\n      }\r\n      else if(subCat && exchangeId) {\r\n        return exchangeId == subCat.exchangeType;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.canMove = function() {\r\n    return vm.category.name == 'increasing gems' || vm.category.name == 'offensive gems' || vm.category.name == 'imprint';\r\n  }\r\n\r\n  vm.getGemSlot = function(subCat) {\r\n    if(vm.category.name == 'imprint') {\r\n      return subCat.exchangeType;\r\n    }\r\n    else if(subCat) {\r\n      var gemExchange = _.find(hCodeValues.gemExchanges, function(e) {\r\n        return e.exchange == subCat.exchangeType;\r\n      });\r\n\r\n      if(!gemExchange) {\r\n          console.log('cannot find exchange for', subCat);\r\n      }\r\n      return gemExchange.id;\r\n    }\r\n  }\r\n\r\n  vm.move = function(moveItem, destination) {\r\n    moveItem.gemSlot = vm.getGemSlot(destination);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    subCatCatName = '';\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.handleItemEdit = function() {\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.cancelEdit = function() {\r\n    vm.onChange();\r\n  }\r\n  \r\n  vm.canEdit = function(item) {\r\n    return item.typeName == 'custom' || item.typeName == 'weapons' || item.typeName == 'armour' || item.typeName == 'offensive gems' || item.typeName == 'increasing gems';\r\n  }\r\n  \r\n  vm.removeItem = function(item) {\r\n    subCatCatName = '';\r\n    item.removeItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.build.items, function(gItem, index) {\r\n      if(gItem && !gItem.removeItem) {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n\r\n    vm.build.items = newItemList;\r\n    saveHelper.updatedSavedItems(vm.buildName, newItemList);\r\n    vm.handleChange();\r\n  }\r\n}","angular.module('dnsim').controller('buildItemCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','hCodeValues',\r\nfunction($timeout,statHelper,saveHelper,hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.updateItem = setFullStats;\r\n  vm.gemSlots = hCodeValues.gemExchanges;\r\n  vm.getGemSlotName = getGemSlotName;\r\n  \r\n  function getGemSlotName(item) {\r\n    if(item.gemSlot) {\r\n      for(var i=0;i<vm.gemSlots.length;++i) {\r\n        if(vm.gemSlots[i].id == item.gemSlot) {\r\n          return vm.gemSlots[i].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    vm.item.fullStats = vm.item.stats;\r\n    \r\n    if(vm.item.enchantmentStats != null && vm.item.enchantmentStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.enchantmentStats, vm.item.fullStats);\r\n    }\r\n    \r\n    if(vm.item.sparkStats != null && vm.item.sparkStats.length > 0) {\r\n      vm.item.fullStats = hCodeValues.mergeStats(vm.item.sparkStats, vm.item.fullStats);\r\n    }\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimBuildItem', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      editMode: '=editMode',\r\n      onChange: '&onChange',\r\n      cancelEdit: '&cancelEdit'\r\n    },\r\n    controller: 'buildItemCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/builds/build-item.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildListCtrl', \r\n  [ '$window','$location','$routeParams','$timeout','saveHelper',\r\n  function($window,$location,$routeParams,$timeout,saveHelper) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n    document.body.className = 'saved-back';\r\n    this.setupBuilds = function() {\r\n      vm.savedItems = saveHelper.getSavedItems();\r\n      vm.buildNames = Object.keys(vm.savedItems).sort();\r\n      vm.builds = [];\r\n      for(var i=0;i<vm.buildNames.length;++i) {\r\n        vm.builds.push({\r\n          name: vm.buildNames[i],\r\n          build: vm.savedItems[vm.buildNames[i]],\r\n        });\r\n      }\r\n    }\r\n    this.setupBuilds();\r\n    \r\n    if('buildName' in $routeParams) {\r\n      if($routeParams.buildName in vm.savedItems) {\r\n        if($routeParams.buildName != this.currentGroup) {\r\n          this.currentGroup = $routeParams.buildName;\r\n          saveHelper.saveBuildSelection(this.currentGroup, this.savedItems);\r\n        }\r\n      }\r\n      else {\r\n        this.currentGroup = null;\r\n      }\r\n    }\r\n    else if(this.currentGroup && this.currentGroup in this.savedItems) {\r\n      $location.path('/build');\r\n      $location.search('buildName', this.currentGroup);\r\n    }\r\n    else {\r\n      this.currentGroup = null;\r\n    }\r\n    \r\n    if(this.currentGroup) {\r\n      $window.document.title = 'dngearsim | ' + this.currentGroup;\r\n    }\r\n    else {\r\n      $window.document.title = 'dngearsim | BUILDS';\r\n    }\r\n\r\n    this.anyItems = function() {\r\n      return Object.keys(this.savedItems).length > 0;\r\n    }\r\n\r\n    this.createGroup = function() {\r\n      $location.path('/new-build');\r\n    }\r\n    \r\n    this.handleChange = function() {\r\n      vm.setupBuilds();\r\n      $timeout();\r\n      // console.log('change');\r\n    }\r\n  \r\n    this.toggleGroup = function(buildName) {\r\n      saveHelper.saveBuildSelection(buildName, this.savedItems);\r\n      $location.url('/build?buildName=' + encodeURIComponent(buildName));\r\n    }\r\n    \r\n    this.publish = function() {\r\n      $location.url('/publish');\r\n    }\r\n    \r\n    this.search = function() {\r\n      $location.url('/build-search');\r\n    }\r\n  }]\r\n);\r\n","'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildStats', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n    },\r\n    controller: buildStatsController,\r\n    controllerAs: 'statsCtrl',\r\n    templateUrl: 'ui/builds/build-stats.html'\r\n  };\r\n});\r\n\r\nfunction buildStatsController(statHelper,dvStatcardHelper) {\r\n  var vm = this;\r\n\r\n  vm.exportStatCard = function() {\r\n    var dvCardStatHash = dvStatcardHelper.convertStats(vm.build, vm.buildName, vm.stats.calculatedStats);\r\n    var url = dvStatcardHelper.cardImportUrl + '?dngsimport=' + btoa(JSON.stringify(dvCardStatHash));\r\n    window.open(url);\r\n  }\r\n}","angular.module('dnsim').controller('buildSummaryCtrl',\r\n\r\n['$routeParams','$location','hCodeValues','statHelper','itemCategory',\r\nfunction($routeParams,$location,hCodeValues,statHelper,itemCategory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.stats = statHelper.getBuildStats(this.build);\r\n  this.itemsByCategory = itemCategory.getItemsByCategory(this.build.items);\r\n  \r\n  this.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  this.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  this.getBuildSummary = function(group) {\r\n    var summary = '';\r\n    \r\n    var typeCounts = {};\r\n    var cashItems = 0;\r\n    var titles = 0;\r\n    angular.forEach(vm.itemsByCategory, function(itemsByType, type) {\r\n      if(itemsByType.length > 0) {\r\n        if(summary.length > 0) {\r\n          summary += ', ';\r\n        }\r\n        summary += itemsByType.length + ' ' + type;\r\n      }\r\n    });\r\n    \r\n    return summary;\r\n  }\r\n}])\r\n.directive('dngearsimBuildSummary', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build'\r\n    },\r\n    controller: 'buildSummaryCtrl',\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build-summary.html'\r\n  };\r\n});","angular.module('dnsim').controller('BuildTalismansCtrl',\r\n\r\n['$window','$location','$routeParams','$timeout','saveHelper','statHelper','jobs','hCodeValues','itemColumnsToLoad','character',\r\nfunction($window,$location,$routeParams,$timeout,saveHelper,statHelper,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  $window.document.title = 'dngearsim | TALISMANS';\r\n  $window.scrollTo(0, 0);\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupNames) {\r\n    this.groupNames = [];\r\n  }\r\n  if(this.groupNames.length > 0) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n  else {\r\n    this.groupName = null;\r\n  }\r\n  \r\n  if(!this.groupName || !(this.groupName in this.savedItems)) {\r\n    if(this.groupNames.length > 0) {\r\n      this.groupName = this.groupNames[0];\r\n    }\r\n  }\r\n  \r\n  if(!this.groupName) {\r\n    // console.log('cannot find build');\r\n    return;\r\n  }\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    if(this.groupCalcStats == null) {\r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  }\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  }\r\n  \r\n  this.pickup = function(index) {\r\n    vm.selectedIndex = index;\r\n    \r\n    vm.replaceHPAffectAmount = [];\r\n    vm.replaceMDmgAffectAmount = [];\r\n    vm.replacePDmgAffectAmount = [];\r\n    vm.replaceAvgDmgAffectAmount = [];\r\n  }\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n  this.headers = [\r\n    '+100%',\r\n    '+75%',\r\n    '+25%',\r\n    '+0%',\r\n    ];\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n  \r\n  this.pcIndexes = {};\r\n  this.pcIndexes['100'] = 0;\r\n  this.pcIndexes['75'] = 1;\r\n  this.pcIndexes['25'] = 2;\r\n  this.pcIndexes['0'] = 3;\r\n  \r\n  this.selectedIndex = -1;\r\n  \r\n  this.rows = [];\r\n  \r\n  this.updateRows = function() {\r\n    vm.rows = [];\r\n        \r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(item, index) {\r\n      if(item.typeName == 'talisman') {\r\n        var pcIndex = vm.pcIndexes[item.enchantmentNum];\r\n        if(!pcIndex && pcIndex != 0) {\r\n          pcIndex = 3;\r\n        }\r\n        \r\n        var rowIndex = 0;\r\n        for(;;) {\r\n          if(!vm.rows[rowIndex]) {\r\n            vm.rows[rowIndex] = vm.makeFakeCells();\r\n          }\r\n          \r\n          if(vm.rows[rowIndex][pcIndex].index < 0) {\r\n            if(!item.enchantmentNum) {\r\n              item.enchantmentNum = 0;\r\n            }\r\n            \r\n            var data = vm.makeCell(item, index);\r\n            vm.rows[rowIndex][pcIndex] = data;\r\n            break;\r\n          }\r\n          else {\r\n            rowIndex++;\r\n          }\r\n        }\r\n      }\r\n      \r\n    });\r\n    \r\n    if(vm.rows.length < 3) {\r\n      vm.rows[vm.rows.length+1] = vm.makeFakeCells();\r\n    }\r\n  };\r\n  \r\n  this.makeFakeCells = function(num) {\r\n    return [vm.makeCell({enchantmentNum:100},-1),vm.makeCell({enchantmentNum:75},-2),vm.makeCell({enchantmentNum:25},-3),vm.makeCell({enchantmentNum:0},-4)];\r\n  };\r\n  \r\n  this.makeCell = function(item, index) {\r\n    return { item: item, index: index };\r\n  };\r\n  \r\n  this.click = function(col) {\r\n    if(vm.selectedIndex == -1) {\r\n      if(col.index >= 0) {\r\n        vm.pickup(col.index);\r\n      }\r\n    }\r\n    else {\r\n      vm.move(col);\r\n    }\r\n  };\r\n  \r\n  this.move = function(col) {\r\n    \r\n    var items = vm.savedItems[vm.groupName].items;\r\n    if(col.index >= 0) {\r\n      var swapEnchantmentNumber = col.item.enchantmentNum;\r\n      \r\n      vm.setTalisman(col.item, items[vm.selectedIndex].enchantmentNum);\r\n      vm.setTalisman(items[vm.selectedIndex], swapEnchantmentNumber);\r\n      items[col.index] = items[vm.selectedIndex];\r\n      items[vm.selectedIndex] = col.item;\r\n    }\r\n    else {\r\n      var item = items[vm.selectedIndex];\r\n      vm.setTalisman(item, col.item.enchantmentNum);\r\n      items.splice(vm.selectedIndex, 1);\r\n      items.push(item);\r\n    }\r\n\r\n    vm.groupCalcStats = null;\r\n    vm.selectedIndex = -1;\r\n    vm.updateRows();\r\n    vm.replaceAffectAmount = {};\r\n    $timeout();\r\n  };\r\n  \r\n  this.setTalisman = function(item, newEnhancementNum) {\r\n    var extraStats = [];\r\n    var useStats = hCodeValues.mergeStats(item.stats, []);\r\n    angular.forEach(useStats, function(stat, index) {\r\n      if(newEnhancementNum) {\r\n        extraStats.push({id: stat.id, max: stat.max * (newEnhancementNum/100)});\r\n      }\r\n    });\r\n    \r\n    item.enchantmentStats = extraStats;\r\n    item.enchantmentNum = newEnhancementNum;\r\n    \r\n    item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.stats);\r\n  };\r\n  \r\n    \r\n  this.replaceAffectAmount = {};\r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    if(this.replaceAffectAmount[itemIndex]) {\r\n      return this.replaceAffectAmount[itemIndex][statId];\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex] || vm.selectedIndex == -1) {\r\n      return;\r\n    }\r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var item2 = group.items[vm.selectedIndex];\r\n    \r\n    var extraStats = [];\r\n    var fullStats1 = [];\r\n    if(item.stats) {\r\n      var useStats = hCodeValues.mergeStats(item.stats, []);\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (item2.enchantmentNum/100)});\r\n      });\r\n      fullStats1 = hCodeValues.mergeStats(extraStats, item.stats);\r\n    }\r\n    \r\n    extraStats = [];\r\n    var useItem2Stats = hCodeValues.mergeStats(item2.stats, []);\r\n    angular.forEach(useItem2Stats, function(stat, index) {\r\n      extraStats.push({id: stat.id, max: stat.max * (item.enchantmentNum/100)});\r\n    });\r\n    var fullStats2 = hCodeValues.mergeStats(extraStats, item2.stats);\r\n\r\n    var newItems = [{stats: fullStats1}, {stats: fullStats2}];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem && item2 !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      return Math.round(10000 * (1 - (origVal / newVal))) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.save = function() {\r\n    saveHelper.updatedSavedItems(vm.groupName, vm.savedItems[vm.groupName].items);\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  };\r\n  \r\n  this.updateRows();\r\n  \r\n}]); ","angular.module('dnsim').directive('dngearsimBuild', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      buildName: '=buildName',\r\n      build: '=build',\r\n      onChange: '&onChange',\r\n      server: '=server'\r\n    },\r\n    controller: bulidController,\r\n    controllerAs: 'buildCtrl',\r\n    templateUrl: 'ui/builds/build.html'\r\n  };\r\n});\r\n\r\nfunction bulidController($timeout, statHelper, itemCategory, saveHelper) {\r\n  'use strict';  \r\n  var vm = this;\r\n  \r\n  vm.stats = statHelper.getBuildStats(vm.build);\r\n  \r\n  var selectedCategory = localStorage.getItem('selectedItemCategory');\r\n  vm.category = itemCategory.byName(selectedCategory);\r\n  if(!vm.category || vm.category.hideInBuild) {\r\n    selectedCategory = 'titles';\r\n    vm.category = itemCategory.byName('titles');\r\n  }\r\n  \r\n  vm.getCategoryItems = function() {\r\n    var itemsByCat = itemCategory.getItemsByCategory(vm.build.items);\r\n    if(vm.category.name in itemsByCat) {\r\n      return itemsByCat[vm.category.name];\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  vm.changeCategory = function() {\r\n    vm.xsView = null;\r\n    vm.moveItem = null;\r\n    vm.categoryChanging = true;\r\n    $timeout(function() {\r\n      vm.categoryChanging = false;\r\n    }, 0);\r\n  }\r\n  \r\n  vm.getCategories = function() {\r\n    return itemCategory.categories;\r\n  }\r\n    \r\n  vm.setSelectedCategory = function(value) {\r\n    vm.category = itemCategory.byName(value);\r\n    localStorage.setItem('selectedItemCategory', value);\r\n  }\r\n  \r\n  vm.getSaveDate = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleDateString();\r\n    }\r\n  }\r\n  \r\n  vm.getSaveTime = function(group) {\r\n    if(vm.build.lastUpdate > 0) {\r\n      var lastUpdate = new Date(vm.build.lastUpdate);\r\n      return lastUpdate.toLocaleTimeString();\r\n    }\r\n  }\r\n  \r\n  vm.allowMoreItems = function() {\r\n    return !vm.category.maxCat || vm.getCategoryItems().length < vm.category.maxCat;\r\n  }\r\n  \r\n  vm.getItemCount = function() {\r\n    var itemCountText = '';\r\n    var allItems = vm.build.items;\r\n    \r\n    if(vm.category.name == 'offensive gems') {\r\n      var numOffensiveSlots = 0;\r\n      var numOffensiveGems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          numOffensiveGems++;\r\n        }\r\n        else if(item.offensiveGemSlots) {\r\n          numOffensiveSlots += item.offensiveGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numOffensiveGems + ' / ' + numOffensiveSlots;\r\n    }\r\n    else if(vm.category.name == 'increasing gems') {\r\n      \r\n      var totalIncreasingGems = 0;\r\n      var numIncreasingSlots = 0;\r\n      var numIncreasingGems = {};\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item.typeName == vm.category.name) {\r\n          var gemType = item.sparkTypeId;\r\n          if(!gemType) {\r\n            gemType = 0;\r\n          }\r\n          \r\n          if(!(gemType in numIncreasingGems)) {\r\n            numIncreasingGems[gemType] = 0;\r\n          }\r\n          numIncreasingGems[gemType]++;\r\n          totalIncreasingGems++;\r\n        }\r\n        else if(item.increasingGemSlots) {\r\n          numIncreasingSlots += item.increasingGemSlots;\r\n        }\r\n      });\r\n      \r\n      itemCountText = ''\r\n      angular.forEach(numIncreasingGems, function(number, gemType) {\r\n        if(itemCountText.length > 0) {\r\n          itemCountText += '+';\r\n        }\r\n        itemCountText += number;\r\n      });\r\n      \r\n      itemCountText = totalIncreasingGems + ' (' + itemCountText + ') / ' + numIncreasingSlots;\r\n    }\r\n    else {\r\n      var numItems = 0;\r\n      angular.forEach(allItems, function(item, index) {\r\n        if(item && item.typeName == vm.category.name) {\r\n          numItems++;\r\n        }\r\n      });\r\n      \r\n      itemCountText = numItems;\r\n      var cat = itemCategory.byName(vm.category.name);\r\n      if(cat && 'numItemText' in cat) {\r\n        itemCountText += ' / ' + cat.numItemText;\r\n      }\r\n    }\r\n    \r\n    return itemCountText;\r\n  }\r\n  \r\n  vm.newCustom = function() {\r\n    var newCustom = {id: 0, typeName:'custom', name: 'new custom item', stats: []};\r\n    vm.build.items = vm.build.items.concat(newCustom);\r\n    saveHelper.updatedSavedItems(vm.buildName, vm.build.items);\r\n    vm.handleChange();\r\n  }\r\n  \r\n  vm.handleChange = function() {\r\n    vm.stats = statHelper.getBuildStats(vm.build);\r\n    vm.onChange();\r\n  }\r\n}","angular.module('dnsim').controller('DeleteBuildCtrl',\r\n\r\n['$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad',\r\nfunction($location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  this.newGroup = true;\r\n  if('name' in $routeParams) {\r\n      this.name = $routeParams.name;\r\n  }\r\n  \r\n  this.delete = function() {\r\n    saveHelper.deleteBuild(this.name);\r\n    $location.path('/builds/');\r\n  }\r\n    \r\n}]); ","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').controller('EditBuildCtrl', editBuildCtrl);\r\n\r\nfunction editBuildCtrl($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.savedItems = saveHelper.getSavedItems();\r\n  vm.group = {};\r\n  vm.newGroup = true;\r\n  if('buildName' in $routeParams) {\r\n      vm.groupName = $routeParams.buildName;\r\n      if(vm.groupName in vm.savedItems) {\r\n        vm.group = vm.savedItems[vm.groupName];\r\n        vm.newGroup = false;\r\n      }\r\n  }\r\n  else {\r\n    vm.groupName = '';\r\n  }\r\n  vm.oldGroupName = vm.groupName;\r\n  vm.heroStats = [];\r\n  vm.elements = hCodeValues.elements;\r\n  vm.damageTypes = hCodeValues.damageTypes;\r\n  \r\n  vm.initDamageType = function() {\r\n    if(vm.job) {\r\n      if(vm.group.damageType) {\r\n        vm.damageType = vm.group.damageType;\r\n      }\r\n      else if(vm.newGroup && 'DamageType' in vm.job.d) {\r\n        if(vm.job.d.DamageType) {\r\n          vm.damageType = hCodeValues.damageTypes[2];\r\n        }\r\n        else {\r\n          vm.damageType = hCodeValues.damageTypes[1];\r\n        }\r\n      }\r\n      else {\r\n        vm.damageType = hCodeValues.damageTypes[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.initDefaultElement = function() {\r\n    var defaultElement = hCodeValues.elements[0];\r\n    var defaultSecondaryElement = hCodeValues.elements[0];\r\n\r\n    if(vm.job && vm.job.d) {\r\n      var jobName = vm.job.d.EnglishName;\r\n      if(jobName == 'CRUSADES' || jobName == 'INQUISITOR' || jobName == 'GUARDIAN' || jobName == 'SAINT' || jobName == 'SILVERHUNTER' || jobName == 'STINGBREEZER') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[3];\r\n      }\r\n      else if(jobName == 'RAVEN' || jobName == 'MAJESTY' || jobName == 'SOULEATER' || jobName == 'DARKSUMMONER' || jobName == 'ABYSSWALKER' || jobName == 'BLACKMARA' || jobName == 'PHYSICIAN') {\r\n        defaultElement = hCodeValues.elements[4];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n      else if(jobName == 'SALEANA' || jobName == 'RIPPER' || jobName == 'DARKAVENGER' || jobName == 'RANDGRID') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[1];\r\n      }\r\n      else if(jobName == 'ELESTRA' || jobName == 'AVALANCHE') {\r\n        defaultElement = hCodeValues.elements[2];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'ADEPT') {\r\n        defaultElement = hCodeValues.elements[1];\r\n        defaultSecondaryElement = hCodeValues.elements[2];\r\n      }\r\n      else if(jobName == 'LIGHTFURY') {\r\n        defaultElement = hCodeValues.elements[3];\r\n        defaultSecondaryElement = hCodeValues.elements[4];\r\n      }\r\n    }\r\n\r\n    if(vm.newGroup) {\r\n      vm.element = defaultElement;\r\n      vm.secondaryElement = defaultSecondaryElement;\r\n    }\r\n    \r\n    if(!vm.element) {\r\n      vm.element = defaultElement;\r\n    }\r\n\r\n    if(!vm.secondaryElement) {\r\n      vm.secondaryElement = defaultElement;\r\n    }\r\n  }\r\n    \r\n  if(vm.group.element) {\r\n    vm.element = vm.group.element;\r\n  }\r\n  else {\r\n    vm.element = hCodeValues.elements[0];\r\n  }\r\n    \r\n  if(vm.group.secondaryElement) {\r\n    vm.secondaryElement = vm.group.secondaryElement;\r\n  }\r\n  else {\r\n    vm.secondaryElement = hCodeValues.elements[0];\r\n  }\r\n\r\n  if(!('critResist' in vm.group)) {\r\n    vm.critResist = 20;\r\n  }\r\n  else {\r\n    vm.critResist = vm.group.critResist;\r\n  }\r\n\r\n  if(!('eleResist' in vm.group)) {\r\n    vm.eleResist = 0;\r\n  }\r\n  else {\r\n    vm.eleResist = vm.group.eleResist;\r\n  }\r\n\r\n  if(vm.group.enemyLevel) {\r\n    vm.enemyLevel = vm.group.enemyLevel;\r\n  }\r\n  else {\r\n    vm.enemyLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.playerLevel) {\r\n    vm.playerLevel = vm.group.playerLevel;\r\n  }\r\n  else {\r\n    vm.playerLevel = 95;\r\n  }\r\n  \r\n  if(vm.group.heroLevel && vm.group.heroLevel > 0) {\r\n    vm.heroLevel = vm.group.heroLevel;\r\n  }\r\n  else {\r\n    vm.heroLevel = 1;\r\n  }\r\n  \r\n  vm.init = function() {\r\n    var newJobs = jobs.getFinalJobs();\r\n    if(newJobs.length > 0) {\r\n      $timeout( function() {\r\n        \r\n        if('job' in vm.group) {\r\n          angular.forEach(newJobs, function(value, key) {\r\n            if(value.id == vm.group.job.id) {\r\n              vm.job = value;\r\n            }\r\n          });\r\n        }\r\n\r\n        vm.initDamageType();\r\n        vm.initDefaultElement();\r\n        vm.setHeroStats();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $window.scrollTo(0, 0);\r\n    $timeout(function() {\r\n      vm.initDamageType();\r\n      vm.initDefaultElement();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  character.init(function() {\r\n    vm.init();\r\n  });\r\n  \r\n  vm.getStatCap = function(colName, useLevel) {\r\n    return character.getStatCaps(useLevel)[colName];\r\n  }\r\n  vm.getJobConversion = function(colName) {\r\n    return character.getConversions(vm.job.id)[colName];\r\n  }\r\n  vm.getJobBaseStat = function(colName) {\r\n    return character.getBaseStats(vm.playerLevel, vm.job.id)[colName];\r\n  }\r\n  \r\n  vm.invalidGroupName = function() {\r\n    if(!vm.groupName) {\r\n      return true;\r\n    }\r\n    \r\n    if(vm.groupName in vm.savedItems) {\r\n      if(vm.newGroup || vm.groupName != vm.oldGroupName) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  vm.ok = function() {\r\n    var enemyStatCaps = character.getStatCaps(vm.enemyLevel);\r\n    var playerStatCaps = character.getStatCaps(vm.playerLevel);\r\n    var conversions = character.getConversions(vm.job.id);\r\n    var baseStats = character.getBaseStats(vm.playerLevel, vm.job.id);\r\n    var heroStats = character.getHeroStats(vm.heroLevel);\r\n    \r\n    if(vm.newGroup) {\r\n      vm.oldGroupName = vm.groupName;\r\n      saveHelper.importGroup(vm.groupName, []);\r\n    }\r\n    \r\n    saveHelper.saveBuild(\r\n      vm.oldGroupName, \r\n      vm.groupName,\r\n      {\r\n      enemyLevel: vm.enemyLevel,\r\n      playerLevel: vm.playerLevel,\r\n      heroLevel: vm.heroLevel,\r\n      job: vm.job,\r\n      damageType: vm.damageType,\r\n      element: vm.element,\r\n      secondaryElement: vm.secondaryElement,\r\n      critResist: vm.critResist,\r\n      eleResist: vm.eleResist,\r\n      enemyStatCaps: enemyStatCaps, \r\n      playerStatCaps: playerStatCaps, \r\n      conversions: conversions,\r\n      baseStats: baseStats,\r\n      heroStats: heroStats\r\n      });\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', vm.groupName);\r\n  }\r\n  \r\n  vm.setHeroStats = function() {\r\n    vm.heroStats = character.getHeroStats(vm.heroLevel);\r\n    // console.log('got ' + vm.heroStats.length + ' hero stats');\r\n  }\r\n  \r\n  $timeout(function() {\r\n    var input = document.getElementById('groupNameInput');\r\n    if(input) {\r\n      input.focus();\r\n      input.setSelectionRange(0, 9999);\r\n    }\r\n  });\r\n}\r\n\r\n})();","angular.module('dnsim').controller('quickAddCtrl',\r\n\r\n['$timeout','statHelper','saveHelper','quickAdd','itemCategory','jobs','dntData','exportLinkHelper',\r\nfunction($timeout,statHelper,saveHelper,quickAdd,itemCategory,jobs,dntData,exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.startedForCat = '';\r\n  vm.stepNumber = 0;\r\n  vm.datas = [];\r\n  vm.options = [];\r\n  \r\n  this.setOptions = function() {\r\n    if(vm.hasStarted()) {\r\n      vm.options = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      if(vm.options.length == 1) {\r\n        vm.selectOption(vm.options[0]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.selectOption = function(value) {\r\n    var data = quickAdd.createData(value, vm.category, vm.stepNumber)\r\n    vm.datas.push(data);\r\n    vm.stepNumber++;\r\n    if(!quickAdd.isValidStepNumber(vm.category, vm.stepNumber)) {\r\n      \r\n      var newItem = quickAdd.getItem(vm.datas);\r\n      var dntFiles = exportLinkHelper.getDntFiles(newItem);\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        dntData.init(fileName, columns, function() {}, function() { vm.tryToAddItem(dntFiles, newItem) });\r\n      });\r\n      vm.tryToAddItem(dntFiles, newItem);\r\n    }\r\n    else {\r\n      vm.setOptions();\r\n      // console.log('setup next step');\r\n    }\r\n  }\r\n  \r\n  this.tryToAddItem = function(dntFiles, item) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        if(vm.datas.length > 0) {\r\n          vm.cancel();\r\n          var newItem = exportLinkHelper.reloadItem(item);\r\n          newItem.gemSlot = vm.gemSlot;\r\n          saveHelper.saveItem(vm.buildName, newItem);\r\n          vm.build.items.push(newItem);\r\n          vm.onChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.reset = function() {\r\n    vm.stepNumber = 0;\r\n    vm.datas = [];\r\n    $timeout(function() {\r\n      vm.setOptions();\r\n    });\r\n  }\r\n  \r\n  this.hasStarted = function() {\r\n    return vm.startedForCat == vm.category.name;\r\n  }\r\n  \r\n  this.start = function() {\r\n    vm.startedForCat = vm.category.name;\r\n    \r\n    jobs.init(function() {}, vm.reset);\r\n    itemCategory.init(vm.category.name, vm.reset);\r\n  }\r\n  \r\n  this.hasOptions = function() {\r\n    return quickAdd.hasOptions(vm.category, vm.build, []);\r\n  }\r\n  \r\n  this.cancel = function() {\r\n    vm.startedForCat = '';\r\n    vm.reset();\r\n  }\r\n  \r\n  this.back = function() {\r\n    if(vm.stepNumber == 0) {\r\n      vm.cancel();\r\n    }\r\n    else {\r\n      do {\r\n        vm.stepNumber--;\r\n        vm.datas.pop();\r\n        \r\n        var testOptions = quickAdd.getOptions(vm.category, vm.build, vm.datas);\r\n      } while(testOptions.length <= 1 && vm.stepNumber > 0);\r\n      \r\n      vm.setOptions();\r\n    }\r\n  }\r\n  dntData.init('exchange.json', null, function() {}, vm.reset);\r\n  \r\n}])\r\n.directive('dngearsimQuickAdd', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      category: '=category',\r\n      build: '=build',\r\n      buildName: '=buildName',\r\n      gemSlot: '=gemSlot',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'quickAddCtrl',\r\n    controllerAs: 'quickAdd',\r\n    templateUrl: 'ui/builds/quick-add.html'\r\n  };\r\n});","angular.module('dnsim').controller('ReloadBuildCtrl',\r\n['$location','$routeParams','$timeout','saveHelper','dntData','dntReset','groupHelper','translations',reloadBuildCtrl]);\r\n\r\nfunction reloadBuildCtrl($location,$routeParams,$timeout,saveHelper,dntData,dntReset,groupHelper,translations) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  if('name' in $routeParams) {\r\n      vm.name = $routeParams.name;\r\n  }\r\n  \r\n  var savedItems = saveHelper.getSavedItems();\r\n  if(vm.name in savedItems) {\r\n    vm.build = savedItems[vm.name];\r\n  }\r\n  \r\n  vm.reloaded = false;\r\n  vm.reload = function() {\r\n    dntReset();\r\n    vm.reloaded = false;\r\n    \r\n    translations.init(progress, tryInit);\r\n\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      dntData.init(fileName, columns, progress, tryInit);\r\n    });\r\n  }\r\n  \r\n  vm.goToBuild = function() {\r\n    $location.path('/build');\r\n    $location.search('buildName', vm.name);\r\n  }\r\n  \r\n  function progress() {\r\n  }\r\n\r\n  function tryInit() {\r\n    if(vm.reloaded) {\r\n      return;\r\n    }\r\n    \r\n    var allLoaded = true;\r\n    var files = groupHelper.getDntFiles(vm.build);\r\n    angular.forEach(files, function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        allLoaded = false;\r\n        return;\r\n      }\r\n    });\r\n    \r\n    if(allLoaded && translations.isLoaded()) {\r\n      var newItems = groupHelper.reloadGroup(vm.name, vm.build);\r\n      saveHelper.updatedSavedItems(vm.name, newItems);\r\n      vm.build.items = newItems;\r\n      \r\n      vm.reloaded = true;\r\n    }\r\n  }\r\n    \r\n}","angular.module('dnsim').controller('ViewGroupCtrl', \r\n  ['$scope','$window','region','$location','$routeParams','saveHelper','dntData','$timeout','translations','dntReset','exportLinkHelper','groupHelper','jobs','character','statHelper','hCodeValues',\r\n  function($scope,$window,region,$location,$routeParams,saveHelper,dntData,$timeout,translations,dntReset,exportLinkHelper,groupHelper,jobs,character,statHelper,hCodeValues) {\r\n    'use strict';\r\n  \r\n    document.body.className = 'saved-back';\r\n    \r\n    region.setLocationByName($routeParams.region);\r\n    \r\n    $scope.buildName = '';\r\n    $scope.build = {};\r\n    \r\n\r\n    if('g' in $routeParams && 'i' in $routeParams) {\r\n      $scope.buildName = $routeParams.g;\r\n      $window.document.title = 'dngearsim | ' + $routeParams.g;\r\n      \r\n      $scope.enemyLevel = $routeParams.e;\r\n      $scope.playerLevel = $routeParams.p;\r\n      $scope.heroLevel = $routeParams.h;\r\n      $scope.job = { id: $routeParams.j };\r\n      $scope.damageType = hCodeValues.damageTypes[$routeParams.d];\r\n      $scope.element = hCodeValues.elements[$routeParams.t];\r\n      $scope.secondaryElement = hCodeValues.elements[$routeParams.s];\r\n        \r\n      var items = [];\r\n      \r\n      var itemString = $routeParams.i;\r\n      \r\n      angular.forEach(itemString.split(','), function(itemStr, index) {\r\n        var item = exportLinkHelper.decodeItem(itemStr);\r\n        \r\n        if(item.id > 0) {\r\n          items.push(item);\r\n        }\r\n      });\r\n\r\n      $scope.build = {};\r\n      $scope.savedItems = {};\r\n      $scope.savedItems[$scope.buildName] = $scope.build;\r\n      $scope.build.items = items;\r\n      $scope.isLoading = true;\r\n      \r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        dntData.init(fileName, columns, progress, tryInit);\r\n      });\r\n      \r\n      translations.init(progress, tryInit);\r\n      jobs.init(progress, tryInit);\r\n      character.init(tryInit);\r\n      \r\n      $timeout();\r\n    }\r\n    \r\n    $scope.anyItems = Object.keys($scope.savedItems).length > 0;\r\n    \r\n    function tryInit() {\r\n      \r\n      var allInit = true;\r\n      angular.forEach(groupHelper.getDntFiles($scope.build), function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allInit = false;\r\n        }\r\n      });\r\n      \r\n      if(!allInit || dntData.anyLoading() || !translations.isLoaded() || !jobs.isLoaded()) {\r\n        return;\r\n      }\r\n      \r\n      $timeout(function() {\r\n        var groupName = $scope.buildName;\r\n        var group = $scope.build;\r\n        \r\n        $scope.job = jobs.getById($scope.job.id);\r\n        \r\n        $scope.enemyStatCaps = character.getStatCaps($scope.enemyLevel);\r\n        $scope.playerStatCaps = character.getStatCaps($scope.playerLevel);\r\n        if($scope.job) {\r\n          $scope.conversions = character.getConversions($scope.job.id);\r\n          $scope.baseStats = character.getBaseStats($scope.playerLevel, $scope.job.id);\r\n        }\r\n        $scope.heroStats = character.getHeroStats($scope.heroLevel);\r\n        \r\n        var newItems = groupHelper.reloadGroup(groupName, group);\r\n      \r\n        $scope.savedItems = {};\r\n        $scope.build = {\r\n          items: newItems,\r\n          lastUpdate: group.lastUpdate,\r\n\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats,\r\n        };\r\n        $scope.savedItems[groupName] = $scope.build;\r\n        $scope.stats = statHelper.getBuildStats($scope.build);\r\n        \r\n        var longUrl = exportLinkHelper.createGroupLink($scope.buildName, $scope.build);\r\n        $scope.build.shortUrl = sessionStorage.getItem(longUrl);\r\n      });\r\n    }\r\n    \r\n    function progress() {\r\n    }\r\n    \r\n    $scope.copyGroup = function() {\r\n      var newBuildName = saveHelper.importGroup($scope.buildName, $scope.build.items);\r\n      // console.log('copying in as ' + newBuildName);\r\n      \r\n      saveHelper.saveBuild(\r\n        newBuildName, \r\n        newBuildName,\r\n        {\r\n          enemyLevel: $scope.enemyLevel,\r\n          playerLevel: $scope.playerLevel,\r\n          heroLevel: $scope.heroLevel,\r\n          job: $scope.job,\r\n          damageType: $scope.damageType,\r\n          element: $scope.element,\r\n          secondaryElement: $scope.secondaryElement,\r\n          critResist: $scope.critResist,\r\n          eleResist: $scope.eleResist,\r\n          enemyStatCaps: $scope.enemyStatCaps,\r\n          playerStatCaps: $scope.playerStatCaps,\r\n          conversions: $scope.conversions,\r\n          baseStats: $scope.baseStats,\r\n          heroStats: $scope.heroStats\r\n        });\r\n      \r\n      $location.url('/build?buildName=' + encodeURIComponent(newBuildName));\r\n    }\r\n  }]\r\n);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimGroupAssignment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      compact: '=compact',\r\n      onChange: '&onChange'\r\n    },\r\n    controller: groupAssignment,\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/group-assignment.html'\r\n  };\r\n});\r\n\r\nfunction groupAssignment(hCodeValues,statHelper,saveHelper,itemCategory,$scope,exportLinkHelper,dntData) {\r\n  \r\n  var vm = this;\r\n  \r\n  this.savedItems = saveHelper.getSavedItems();\r\n  this.groupNames = Object.keys(this.savedItems);\r\n  if(!this.groupName) {\r\n    this.groupName = saveHelper.getCurrentBuild();\r\n  }\r\n\r\n  if(!(this.groupName in this.savedItems)) {\r\n    this.groupName = null;\r\n  }\r\n\r\n  if(!this.groupName && this.savedItems) {\r\n    for(var savedGroup in this.savedItems) {\r\n      this.groupName = savedGroup;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(!this.groupName) {\r\n    return;\r\n  }\r\n  \r\n  this.summaryStatIds = [];\r\n  for(var id in hCodeValues.stats) {\r\n    if(hCodeValues.stats[id].summaryDisplay) {\r\n      this.summaryStatIds.push(id);\r\n    }\r\n  }\r\n    \r\n  this.clearGroup = function() {\r\n    vm.addAffectAmount = null;\r\n    vm.newAffectAmount = null;\r\n    vm.oldAffectAmount = null;\r\n    vm.replaceAffectAmount = {};\r\n\r\n    vm.groupItems = null;\r\n    vm.groupCalcStats = null;\r\n  }\r\n\r\n  vm.tryToSetItem = function(dntFiles) {\r\n    if(!dntData.anyLoading()) {\r\n      \r\n      var allLoaded = true;\r\n      angular.forEach(dntFiles, function(columns, fileName) {\r\n        if(!dntData.isLoaded(fileName)) {\r\n          allLoaded = false;\r\n        }\r\n      });\r\n      \r\n      if(allLoaded) {\r\n        vm.item = exportLinkHelper.reloadItem(vm.item);\r\n      }\r\n    }\r\n  }\r\n\r\n  var dntFiles = exportLinkHelper.getDntFiles(vm.item);\r\n  angular.forEach(dntFiles, function(columns, fileName) {\r\n    if(vm.item.fileName && fileName.indexOf(vm.item.fileName) == 0 && dntData.isLoaded(vm.item.fileName + '.optimised.json')) {\r\n      delete dntFiles[fileName];\r\n    }\r\n    else {\r\n      dntData.init(fileName, columns, function() {}, function() {\r\n        vm.tryToSetItem(dntFiles);\r\n      });\r\n    }\r\n  });\r\n  vm.tryToSetItem(dntFiles);\r\n\r\n  $scope.$watch('editCtrl.item', function() {\r\n    vm.clearGroup();\r\n  });\r\n  \r\n  this.getAddAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.addAffectAmount[stat];\r\n  };\r\n\r\n  this.getNewAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.newAffectAmount[stat];\r\n  };\r\n\r\n  this.getOldAffectAmount = function(stat) {\r\n    this.initAddAffects();\r\n    // console.log('add affect: ', this.addAffectAmount[stat], this.item);\r\n    return this.oldAffectAmount[stat];\r\n  };\r\n  \r\n  this.getReplaceAffectAmount = function(statId, itemIndex, item) {\r\n    this.initReplaceAffects(itemIndex, item);\r\n    return this.replaceAffectAmount[itemIndex][statId];\r\n  };\r\n  \r\n  this.getGroupCalcStats = function() {\r\n    \r\n    if(this.groupCalcStats == null) {\r\n      \r\n      var group = vm.savedItems[vm.groupName];\r\n      if(group) {\r\n        this.groupCalcStats = statHelper.getCalculatedStatsFromItems(group, group.items);\r\n      }\r\n    }\r\n    \r\n    return this.groupCalcStats;\r\n  };\r\n  \r\n  this.getBuild = function() {\r\n    return vm.savedItems[vm.groupName];\r\n  };\r\n  \r\n  this.initAddAffects = function() {\r\n    \r\n    if(vm.addAffectAmount) {\r\n      return;\r\n    }\r\n    \r\n    // console.log('initialising add affects ');\r\n    \r\n    var origStats = vm.getGroupCalcStats();\r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [];\r\n    if(group.items) {\r\n      newItems = group.items.concat([vm.item]);\r\n    }\r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    \r\n    this.addAffectAmount = {};\r\n    this.newAffectAmount = {};\r\n    this.oldAffectAmount = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.newAffectAmount[id] = vm.getStat(id, newStats).max;\r\n        vm.oldAffectAmount[id] = vm.getStat(id, origStats).max;\r\n        vm.addAffectAmount[id] = calcStatPercent(vm.newAffectAmount[id], vm.oldAffectAmount[id]);\r\n      }\r\n    }\r\n  };\r\n  \r\n  this.initReplaceAffects = function(itemIndex, item) {\r\n    if(vm.replaceAffectAmount[itemIndex]) {\r\n      return;\r\n    }\r\n    \r\n    var group = vm.savedItems[vm.groupName];\r\n    var newItems = [vm.item];\r\n    angular.forEach(group.items, function(gItem , index) {\r\n      if(item !== gItem) {\r\n        newItems.push(gItem);\r\n      }\r\n    });\r\n    \r\n    var newStats = statHelper.getCalculatedStatsFromItems(group, newItems);\r\n    var origStats = vm.getGroupCalcStats();\r\n    \r\n    this.replaceAffectAmount[itemIndex] = {};\r\n    for(var id in hCodeValues.stats) {\r\n      if(hCodeValues.stats[id].summaryDisplay) {\r\n        vm.replaceAffectAmount[itemIndex][id] = calcStatPercent(vm.getStat(id, newStats).max, vm.getStat(id, origStats).max);\r\n      }\r\n    }\r\n  };\r\n  \r\n  function calcStatPercent(newVal, origVal) {\r\n    if(newVal && origVal) {\r\n      // console.log('orig: ' + origVal + ',new: ' + newVal);\r\n      return Math.round(10000 * ((newVal-origVal)/origVal)) / 100;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  this.getStat = function(id, stats) {\r\n    var len = stats.length;\r\n    for(var i=0;i<len;++i) {\r\n      if(stats[i].id == id) {\r\n        return stats[i];\r\n      }\r\n    }\r\n    return {id: id, max:0};\r\n  };\r\n  \r\n  this.getStatName = function(id) {\r\n    var retVal = '';\r\n    if(hCodeValues.stats[id].element == 'primary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].element) {\r\n        eleId = vm.savedItems[vm.groupName].element.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    else if(hCodeValues.stats[id].element == 'secondary') {\r\n      var eleId = 0;\r\n      if(vm.savedItems[vm.groupName].secondaryElement) {\r\n        eleId = vm.savedItems[vm.groupName].secondaryElement.id;\r\n      }\r\n      retVal += hCodeValues.elements[eleId].name;\r\n    }\r\n    return retVal + ' ' + hCodeValues.stats[id].name;\r\n  };\r\n  \r\n  this.getGroupItems = function() {\r\n\r\n    var itemSplit;\r\n    function numMatches(str) {\r\n      if(str) {\r\n        var matches = 0;\r\n        for(var i=0;i<itemSplit.length;++i) {\r\n          if(str.indexOf(itemSplit[i]) > 0) {\r\n            matches++;\r\n          }\r\n        }\r\n        return matches;\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n    \r\n    if(vm.groupItems == null && vm.groupName && vm.groupName in vm.savedItems && vm.item && vm.item.typeName) {\r\n      vm.groupItems = [];\r\n\r\n      var existing;\r\n      if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n        existing = _.find(vm.savedItems[vm.groupName].items, function(item) {\r\n          return item.sparkTypeId == vm.item.sparkTypeId && vm.item.itemSource == item.itemSource;\r\n        });\r\n      }\r\n\r\n      var items = [];\r\n      if(existing) {\r\n        items.push(existing);\r\n      }\r\n      else {\r\n        _.each(vm.savedItems[vm.groupName].items, function(item) {\r\n          if(item.exchangeType && item.itemSource != 'gem' && item.itemSource != 'plate' && item.itemSource != 'plate95' && item.itemSource != 'tman') {\r\n            if(item.exchangeType == vm.item.exchangeType) {\r\n              items.push(item);\r\n            }\r\n          }\r\n          else if(item.typeName == vm.item.typeName) {\r\n            items.push(item);\r\n          }\r\n        });\r\n        \r\n        if(vm.item.name) {\r\n          itemSplit = vm.item.name.split(' ');\r\n        }\r\n        items.sort(function(a,b) {\r\n          return numMatches(b.name)-numMatches(a.name);\r\n        });\r\n      }\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name == vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n      \r\n      angular.forEach(items, function(item, index) {\r\n        if(item.name != vm.item.name) {\r\n          vm.groupItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return vm.groupItems;\r\n  };\r\n  \r\n  this.hasMaxExchangable = function() {\r\n    var cat = itemCategory.byName(this.item.typeName);\r\n    var items = this.getGroupItems();\r\n\r\n    if(vm.item.itemSource == 'plate' || vm.item.itemSource == 'tman') {\r\n      if(_.find(items, function(item) {\r\n        return item.sparkTypeId == vm.item.sparkTypeId;\r\n      })) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxCat) {\r\n      if(items.length >= cat.maxCat) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    if(cat && cat.maxExchange) {\r\n      if(items.length >= cat.maxExchange) {\r\n        for(var i=0;i<items.length;++i) {\r\n          if(!items[i].exchangeType) {\r\n            return false;\r\n          }\r\n        }\r\n        // console.log('maxexchange reached ' + items.length + '>=' + cat.maxExchange + ' for ' + cat.name);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  this.nextGroup = function() {\r\n    \r\n    var uptoItem = false;\r\n    var nextGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(uptoItem) {\r\n        if(nextGroup == null) {\r\n          nextGroup = groupName;\r\n        }\r\n      }\r\n      if(groupName == vm.groupName) {\r\n        uptoItem = true;\r\n      }\r\n    });\r\n    \r\n    if(nextGroup == null) {\r\n      nextGroup = vm.groupNames[0];\r\n    }\r\n    \r\n    vm.groupName = nextGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.prevGroup = function() {\r\n    \r\n    var foundGroup = false;\r\n    var prevGroup = null;\r\n    angular.forEach(vm.groupNames, function(groupName, index) {\r\n      if(groupName == vm.groupName) {\r\n        foundGroup = true;\r\n      }\r\n      \r\n      if(!foundGroup) {\r\n        prevGroup = groupName;\r\n      }\r\n    });\r\n    \r\n    if(prevGroup == null) {\r\n      prevGroup = vm.groupNames[vm.groupNames.length-1];\r\n    }\r\n    \r\n    vm.groupName = prevGroup;\r\n    saveGroup();\r\n    vm.clearGroup();\r\n  };\r\n  \r\n  this.addToGroup = function() {\r\n    saveHelper.saveItem(vm.groupName, vm.item);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  this.replace = function(item) {\r\n    item.replaceItem = true;\r\n    var newItemList = [];\r\n    angular.forEach(vm.savedItems[vm.groupName].items, function(gItem, index) {\r\n      if(gItem.replaceItem) {\r\n        // console.log('found replace item');\r\n        newItemList.push(vm.item);\r\n      }\r\n      else {\r\n        newItemList.push(gItem);\r\n      }\r\n    });\r\n    \r\n    saveHelper.updatedSavedItems(vm.groupName, newItemList);\r\n    this.savedItems = saveHelper.getSavedItems();\r\n    vm.clearGroup();\r\n    vm.onChange();\r\n  };\r\n  \r\n  function saveGroup() {\r\n    saveHelper.saveBuildSelection(vm.groupName, vm.savedItems);\r\n  }\r\n  \r\n};\r\n\r\n})();","angular.module('dnsim').controller('itemEditCustomCtrl',\r\n\r\n['hCodeValues','$scope',\r\nfunction(hCodeValues,$scope) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'custom' && this.item.typeName != 'custom') {\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n\r\n  this.statMap = {};\r\n  \r\n  // console.log(vm.item.stats);\r\n  _.forEach(vm.item.stats, function(stat) {\r\n    // console.log('got stat', stat.id);\r\n    vm.statMap[stat.id] = stat.max;\r\n  });\r\n  \r\n  for(var statId in hCodeValues.stats) {\r\n    $scope.$watch('editCtrl.statMap[' + statId + ']', function(newValue, oldValue) { \r\n\r\n      if(newValue != oldValue) {\r\n        // console.log(statId);\r\n        // console.log('watch got stat value', newValue);\r\n\r\n        var anyChange = false;\r\n        var newStats = [];\r\n        for(var statId in vm.statMap) {\r\n\r\n          if(!vm.statMap[statId] || !Number(vm.statMap[statId])) {\r\n            _.each(vm.item.stats, function(stat) { \r\n              if(stat.id == statId) {\r\n                anyChange = true;\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            newStats.push({\r\n              id: Number(statId),\r\n              max: Number(vm.statMap[statId])\r\n            });\r\n\r\n            var found = false;\r\n            _.each(vm.item.stats, function(stat) {\r\n              if(stat.id == statId) {\r\n                found = true;\r\n                // console.log('comparing', stat.max, vm.statMap[statId]);\r\n                if(!(statId in vm.statMap) || stat.max != vm.statMap[statId]) {\r\n                  anyChange = true;\r\n                }\r\n              } \r\n            });\r\n\r\n            if(!found) {\r\n              anyChange = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if(anyChange) {\r\n          // console.log('GOT CHANGES!', newStats);\r\n          vm.item.stats = newStats;\r\n          vm.onChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEditCustom', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditCustomCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-custom.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditEnchantmentCtrl',\r\n\r\nfunction(dntData,hCodeValues,items,$timeout,translations,itemColumnsToLoad,itemFactory) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item || !vm.item.enchantmentId) {\r\n    return;\r\n  }\r\n  \r\n  if('itemSource' in this.item) {\r\n    vm.itemType = items[vm.item.itemSource];\r\n  }\r\n  \r\n  if(!vm.itemType) {\r\n    return;\r\n  }\r\n  if(!('enchantDnt' in vm.itemType) && !('petLevelDnt' in vm.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.enchantDnt) {\r\n    dntData.init(vm.itemType.enchantDnt, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  if(vm.itemType.enchantDnt2) {\r\n    dntData.init(vm.itemType.enchantDnt2, itemColumnsToLoad.enchantDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  if(vm.itemType.petLevelDnt) {\r\n    dntData.init(vm.itemType.petDnt, itemColumnsToLoad.petDnt, null, vm.getEnchantments);\r\n    dntData.init(vm.itemType.petLevelDnt, itemColumnsToLoad.petLevelDnt, null, vm.getEnchantments);\r\n  }\r\n  \r\n  vm.enchantments = null;\r\n  vm.enchantment = null;\r\n  vm.enchantmentAfter = null;\r\n  vm.enchantmentCost = '';\r\n  vm.enhancementOptions = [];\r\n  if(vm.item.enchantmentStats == null) {\r\n    vm.item.enchantmentStats = [];\r\n  }\r\n  \r\n  this.setEnchantment = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 0;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == getEnchantLevel(i)) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n        else if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          vm.enchantmentAfter = vm.enchantments[i];\r\n          if(vm.enchantmentAfter.NeedCoin < 10000) {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 1000)/10 + 'g';\r\n          }\r\n          else {\r\n            vm.enchantmentCost = Math.round(vm.enchantmentAfter.NeedCoin / 10000) + 'g';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function getEnchantLevel(num) {\r\n    if('petLevelDnt' in vm.itemType) {\r\n      return vm.enchantments[num].PetLevel;\r\n    }\r\n    else {\r\n      return vm.enchantments[num].EnchantLevel;\r\n    }\r\n  }\r\n  \r\n  this.setPetLevel = function() {\r\n    vm.item.enchantmentStats = [];\r\n\r\n    if(vm.enchantments && vm.enchantments.length > 0) {\r\n\r\n      if(typeof vm.item.enchantmentNum != 'number') {\r\n        vm.item.enchantmentNum = 6;\r\n        vm.onChange();\r\n      }\r\n      \r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum == vm.enchantments[i].PetLevel) {\r\n          vm.enchantment = vm.enchantments[i];\r\n          \r\n          vm.item.enchantmentStats = hCodeValues.getStats(vm.enchantment);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isMaxEnchantLevel = function() {\r\n\r\n    if(vm.enchantments != null &&\r\n      vm.enchantments.length > 0 &&\r\n      typeof vm.item.enchantmentNum == 'number') {\r\n\r\n      for(var i=0;i<vm.enchantments.length;++i) {\r\n        if(vm.item.enchantmentNum + 1 == getEnchantLevel(i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  this.setEnchantmentNum = function(enhancementOption) {\r\n    vm.item.enchantmentNum = enhancementOption;\r\n    vm.enhancementOptions = [];\r\n    if('petLevelDnt' in vm.itemType) {\r\n      vm.setPetLevel();\r\n    }\r\n    else {\r\n      vm.setEnchantment();\r\n    }\r\n    vm.onChange();\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    for(var i=vm.item.enchantmentNum;i==0||vm.enchantments[i-1];++i) {\r\n      if(i == 0) {\r\n        vm.enhancementOptions.push({number: 0});\r\n      }\r\n      else {\r\n        vm.enhancementOptions.push(vm.getOption(i-1));\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    vm.enhancementOptions = [];\r\n    for(var i=vm.item.enchantmentNum;i>0;--i) {\r\n      vm.enhancementOptions.push(vm.getOption(i-1));\r\n    }\r\n    \r\n    vm.enhancementOptions.push({number: 0});\r\n  }\r\n  \r\n  this.getOption = function(enchantmentNum) {\r\n    return {\r\n      number: getEnchantLevel(enchantmentNum),\r\n      stats: hCodeValues.getStats(vm.enchantments[enchantmentNum])\r\n    };\r\n  }\r\n  \r\n  this.getEnchantments = function() {\r\n    if(!vm.enchantments && vm.item && vm.item.enchantmentId) {\r\n      if(vm.itemType.enchantDnt && dntData.isLoaded(vm.itemType.enchantDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.enchantDnt, 'EnchantID', vm.item.enchantmentId);\r\n        if(!vm.enchantments.length && vm.itemType.enchantDnt2) {\r\n          vm.enchantments = dntData.find(vm.itemType.enchantDnt2, 'EnchantID', vm.item.enchantmentId);\r\n        }\r\n        vm.setEnchantment();\r\n      }\r\n      if(vm.itemType.petLevelDnt && dntData.isLoaded(vm.itemType.petLevelDnt)) {\r\n        vm.enchantments = dntData.find(vm.itemType.petLevelDnt, 'PetLevelTypeID', vm.item.enchantmentId);\r\n        vm.setPetLevel();\r\n      }\r\n    }\r\n    \r\n    return vm.enchantments;\r\n  }\r\n  \r\n  var fileName = 'all-items.json';\r\n  \r\n  this.showMaterials = function() {\r\n    dntData.init(fileName, null, function() {}, function() {\r\n      $timeout(function() {\r\n        \r\n        if(!vm.enchantmentAfter) {\r\n          return;\r\n        }\r\n        \r\n        vm.materials = [];\r\n        for(var i=1;i<=5;++i) {\r\n          var itemId = vm.enchantmentAfter['NeedItemID' + i];\r\n          var itemCount = vm.enchantmentAfter['NeedItemCount' + i];\r\n          if(itemId > 0 && itemCount > 0) {\r\n            \r\n            var items = dntData.find(fileName, 'id', itemId);\r\n            if(items.length == 0) {\r\n              vm.materials.push({num: itemCount, name: 'unknown (' + itemId + ')'});\r\n            }\r\n            else {\r\n              var item = items[0];              \r\n              if(item) {\r\n                var material = {\r\n                  item: itemFactory.createBasicItem(item),\r\n                  num: itemCount,\r\n                };\r\n                vm.materials.push(material);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  if(dntData.isLoaded(fileName)) {\r\n    this.showMaterials();\r\n  }\r\n\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n})\r\n.directive('dngearsimItemEditEnchantment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditEnchantmentCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-enchantment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditPotentialCtrl',\r\n\r\n['dntData','items','hCodeValues','itemColumnsToLoad',\r\nfunction(dntData,items,hCodeValues,itemColumnsToLoad) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  this.potentials = null;\r\n  this.potential = null;\r\n  this.changingPotentials = false;\r\n  this.potentialStats = {};\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  if('itemSource' in this.item) {\r\n    this.itemType = items[this.item.itemSource];\r\n  }\r\n  \r\n  if(!this.itemType || !this.item.pid || !('potentialDnt' in this.itemType)) {\r\n    return;\r\n  }\r\n  \r\n  if(vm.itemType.potentialDnt) {\r\n    dntData.init(vm.itemType.potentialDnt, itemColumnsToLoad.potentialDnt, null, vm.getPotentials);\r\n  }\r\n  \r\n  this.getPotentials = function() {\r\n    if(!vm.potentials) {\r\n      if(vm.item && vm.item.pid && 'potentialDnt' in vm.itemType) {\r\n        var potentials = dntData.find(vm.itemType.potentialDnt, 'id', vm.item.pid);\r\n        \r\n        if(potentials.length == 1) {\r\n          vm.potential = potentials[0];\r\n          vm.potentials = dntData.find(vm.itemType.potentialDnt, 'PotentialID', vm.potential.PotentialID);\r\n          vm.potentialStats = getPotentialStats(vm.potentials);\r\n        }\r\n        else if('potentialDntEx' in vm.itemType) {\r\n          potentials = dntData.find(vm.itemType.potentialDntEx, 'id', vm.item.pid);\r\n        \r\n          if(potentials.length == 1) {\r\n            vm.potential = potentials[0];\r\n            vm.potentials = dntData.find(vm.itemType.potentialDntEx, 'PotentialID', vm.potential.PotentialID);\r\n            vm.potentialStats = getPotentialStats(vm.potentials);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return vm.potentials;\r\n  }\r\n  \r\n  this.nextPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i+1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.prevPotential = function() {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(vm.potential.id == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i-1];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.onChange();\r\n        this.changingPotentials = true;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n    \r\n  this.changePotential = function(pid) {\r\n    for(var i=0;i<vm.potentials.length;++i) {\r\n      if(pid == vm.potentials[i].id) {\r\n        vm.potential = vm.potentials[i];\r\n        vm.item.pid = vm.potential.id;\r\n        vm.changingPotentials = false;\r\n        vm.onChange();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.isFirstPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[0].id;\r\n  }\r\n  \r\n  this.isLastPotential = function() {\r\n    this.getPotentials();\r\n    return !vm.potentials || vm.potentials.length <= 1 || !vm.potential || vm.potential.id == vm.potentials[vm.potentials.length-1].id;\r\n  }\r\n  \r\n  function getPotentialStats() {\r\n    var pStats = {};\r\n    var emptyStatId = null;\r\n    \r\n    if(vm.potentials != null) {\r\n      angular.forEach(vm.potentials, function(p, index) {\r\n        var stats = [];\r\n        angular.forEach(hCodeValues.getStats(p), function(stat, sIndex) {\r\n          if(!hCodeValues.stats[stat.id].hide) {\r\n            stats.push(stat);\r\n          }\r\n        });\r\n        \r\n        if(stats.length > 0) {\r\n          pStats[p.id] = stats;\r\n        }\r\n        else if(!emptyStatId) {\r\n          pStats[p.id] = [];\r\n          emptyStatId = p.id;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return pStats;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditPotential', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditPotentialCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-potential.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditSkillCtrl',\r\n\r\n['$timeout','dntData',\r\nfunction($timeout,dntData) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'skills') {\r\n    return;\r\n  }\r\n  \r\n  if(!this.item.enchantmentNum) {\r\n    this.item.enchantmentNum = 1;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  function getDntFile() {\r\n    return 'skillleveltable_character' + vm.item.baseJobName + vm.item.pve + '.json';\r\n  }\r\n  \r\n  this.initSkills = function() {\r\n    var dntFile = getDntFile();\r\n    dntData.init(dntFile, null, reportProgress, function() { $timeout(function() {\r\n      vm.skillData = dntData.find(dntFile, 'SkillIndex', vm.item.id);\r\n    })});\r\n  }\r\n  \r\n  this.nextEnchantment = function() {\r\n    if(this.skillData && this.item.enchantmentNum < this.skillData.length) {\r\n      this.item.enchantmentNum++;\r\n      vm.onChange();\r\n    }\r\n  }\r\n  \r\n  this.isMaxSkillLevel = function() {\r\n    return this.skillData && this.item && this.item.enchantmentNum >= this.skillData.length;\r\n  }\r\n  \r\n  this.prevEnchantment = function() {\r\n    if(this.item.enchantmentNum > 0) {\r\n      this.item.enchantmentNum--;\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = 0;\r\n    }\r\n\r\n    vm.onChange();\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  dntData.init(getDntFile(), null, null, vm.initSkills);\r\n\r\n}])\r\n.directive('dngearsimItemEditSkill', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditSkillCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-skill.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditTalismanCtrl',\r\n\r\n['hCodeValues', function(hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.itemSource != 'tman') {\r\n    return;\r\n  }\r\n  \r\n  this.setTalisman = function(amount) {\r\n    if(amount == 0) {\r\n      this.item.enchantmentNum = null;\r\n      this.item.enchantmentStats = [];\r\n    }\r\n    else {\r\n      this.item.enchantmentNum = amount;\r\n      \r\n      var extraStats = [];\r\n\r\n      var useStats = hCodeValues.mergeStats(this.item.stats, []);\r\n\r\n      angular.forEach(useStats, function(stat, index) {\r\n        extraStats.push({id: stat.id, max: stat.max * (amount/100)});\r\n      });\r\n      \r\n      this.item.enchantmentStats = extraStats;\r\n    }\r\n    this.onChange();\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemEditTalisman', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n    },\r\n    controller: 'itemEditTalismanCtrl',\r\n    controllerAs: 'editCtrl',\r\n    templateUrl: 'ui/item/item-edit-talisman.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemEditCtrl',\r\n\r\n['hCodeValues',\r\nfunction(hCodeValues) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if(!vm.item) {\r\n    return;\r\n  }\r\n  \r\n  vm.onUpdateItem = function() {\r\n    vm.updateItem();\r\n  }\r\n  \r\n}])\r\n.directive('dngearsimItemEdit', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n      onChange: '&onChange',\r\n      updateItem: '&updateItem'\r\n    },\r\n    controller: 'itemEditCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-edit.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewAttainmentCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.attainments = [];\r\n\r\n  var files = [\r\n    'itemgaintable.json',\r\n    'itemgaintable_dragonjewel.json',\r\n    'itemgaintable_enchant.json',\r\n    'itemgaintable_etc.json',\r\n    'itemgaintable_reboot.json',\r\n    'itemgaintable_talisman.json'];\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.init();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.init = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.attainments = [];\r\n    files.forEach(function(file) {\r\n      var attainments = dntData.find(file, 'id', vm.item.id);\r\n      if(attainments.length) {\r\n        attainments.forEach(function(attainment) {\r\n          var text = attainment.ItemGainText;\r\n          if(text) {\r\n            var texts = text.split('{');\r\n            texts.forEach(function(singleText) {\r\n              var splitVal = singleText.split('}');\r\n              if(splitVal.length) {\r\n                if(splitVal[0].indexOf('#') == -1) {\r\n                  vm.attainments.push(translations.translate(splitVal[0]));\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewAttainment', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewAttainmentCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-attainment.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewBoxCtrl',\r\n\r\n['$timeout','dntData','itemFactory','region',\r\n  function($timeout, dntData, itemFactory, region) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  if(this.item.typeId != 46 && this.item.typeId != 8 && this.item.typeId != 112 && this.item.typeId != 122 && this.item.typeId != 142 && this.item.typeId != 160) {\r\n    console.log('not box item type ' + this.item.typeId);\r\n    return;\r\n  }\r\n  \r\n  var vm = this;\r\n  \r\n  var pouchFileNames = [\r\n    'itemdroptable.json',\r\n    'itemdroptable_abyss.json',\r\n    'itemdroptable_apprentice.json',\r\n    'itemdroptable_cook.json',\r\n    'itemdroptable_darklair.json',\r\n    'itemdroptable_dimension.json',\r\n    'itemdroptable_disjoint.json',\r\n    'itemdroptable_dnexpedition.json',\r\n    'itemdroptable_event.json',\r\n    'itemdroptable_farm.json',\r\n    'itemdroptable_fishing.json',\r\n    'itemdroptable_guildwar.json',\r\n    'itemdroptable_item.json',\r\n    'itemdroptable_monsteritem.json',\r\n    'itemdroptable_propdrop.json',\r\n    'itemdroptable_pvp.json',\r\n    'itemdroptable_randomcompound.json',\r\n    'itemdroptable_stageclear.json',\r\n    'itemdroptable_themepark.json',\r\n    'itemdroptable_union.json']\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var charmItemtable = 'charmitemtable.json';\r\n  var commonCharmItemtable = 'charmitemtable_common.json';\r\n  this.usedFiles = {};\r\n  this.lookupId = null;\r\n  \r\n  var files;\r\n  if(this.item.typeId == 46 || this.item.typeId == 112 || this.item.typeId == 122 || this.item.typeId == 142 || this.item.typeId == 160) {\r\n    files = [allItemFileName, charmItemtable, commonCharmItemtable];\r\n  }\r\n  else if (this.item.typeId == 8) {\r\n    files = [allItemFileName].concat(pouchFileNames);\r\n  }\r\n\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initBoxContents();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initBoxContents = function() {\r\n    // console.log('init contents', this.item.fileName);\r\n\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var datas = dntData.find(this.item.fileName + '.json', 'id', this.item.id);\r\n    if(datas.length > 0) {\r\n      var d = datas[0];\r\n      this.lookupId = d.TypeParam1;\r\n      vm.items = [];\r\n      \r\n      \r\n      if(vm.item.typeId == 46 || vm.item.typeId == 112 || vm.item.typeId == 122 || vm.item.typeId == 142 || vm.item.typeId == 160) {\r\n        vm.getCharmItems(d.TypeParam1);\r\n      }\r\n      else if (vm.item.typeId == 8) {\r\n        vm.getPouchItems(d.TypeParam1);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  this.getPouchItems = function(boxType) {\r\n    for(var f=0;f<pouchFileNames.length;++f) {\r\n      vm.getPouchItemsFromFile(boxType, pouchFileNames[f]);\r\n    }\r\n  }\r\n  \r\n  this.getPouchItemsFromFile = function(boxType, pouchFileName) {\r\n    \r\n    var pouchData = dntData.find(pouchFileName, 'id', boxType);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 0;\r\n      do {\r\n        itemIndex++;\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getPouchItems(pouchItem, pouchFileName);\r\n          }\r\n          else {\r\n            // console.log('adding item ' + pouchItem);\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              var basicItem = itemFactory.createBasicItem(itemds[0]);\r\n              // console.log('found item ' + basicItem.name);\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: basicItem\r\n              });\r\n              this.usedFiles[pouchFileName] = true;\r\n            }\r\n          }\r\n        }\r\n      } while(pouchItem);\r\n    }\r\n  }\r\n  \r\n  this.getCharmItems = function(boxType) {\r\n    var charmFiles = [charmItemtable, commonCharmItemtable];\r\n    for(var i=0;i<charmFiles.length;++i) {\r\n\r\n      var charmData = dntData.getData(charmFiles[i]);\r\n      // console.log('box: ' + boxType, charmData);\r\n      \r\n      for(var c=0;c<charmData.length;++c) {\r\n        var cd = charmData[c];\r\n        if(cd.CharmNum == boxType && cd.Look) {\r\n          \r\n          if(cd.CharmType) {\r\n            this.getCharmItems(cd.ItemID)\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', cd.ItemID);\r\n            if(itemds.length > 0) {\r\n              vm.items.push({\r\n                count: cd.Count,\r\n                gold: cd.Gold,\r\n                item: itemFactory.createBasicItem(itemds[0])\r\n              });\r\n              this.usedFiles[charmFiles[i]] = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.getFileLink = function(fileName) {\r\n    return 'https://spacem.github.io/dntviewer/#dnt=' + fileName + '&location=' + region.dntLocation.url;\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewBox', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewBoxCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-box.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewCraftCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.crafts = [];\r\n\r\n  var cFiles = [\r\n    'itemcompoundtable.json',\r\n    'itemcompoundtable_custom.json',\r\n    'itemcompoundtable_glyph.json',\r\n    'itemcompoundtable_glyph95.json',\r\n    'itemcompoundtable_jewel.json',\r\n    'itemcompoundtable_renewal.json',\r\n    'itemcompoundtable_set.json'];\r\n  \r\n  var dropFile = 'itemdroptable.json';\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = cFiles.concat([allItemFileName, dropFile]);\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initCrafts();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initCrafts = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i]) && !dntData.hasFailed(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.crafts = [];\r\n    for(var i=0;i<cFiles.length;++i) {\r\n      vm.initCraft(cFiles[i], vm.item.id);\r\n    }\r\n\r\n    for(var di=1;di<=20;++di) {\r\n      var drops = dntData.find(dropFile, 'Item' + di + 'Index', vm.item.id);\r\n      if(drops.length) {\r\n        drops.forEach(function(drop) {\r\n          for(var i=0;i<cFiles.length;++i) {\r\n            vm.initCraft(cFiles[i], drop.id);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    var newCrafts = [];\r\n    for(var i=0;i<vm.crafts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newCrafts.length;++j) {\r\n        if(vm.crafts[i].gold == newCrafts[j].gold &&\r\n          vm.crafts[i].items.length == newCrafts[j].items.length) {\r\n            \r\n            found = true;\r\n            for(var k=0;k<vm.crafts[i].items.length;++k) {\r\n              if(vm.crafts[i].items[k].item.id != newCrafts[j].items[k].item.id ||\r\n                vm.crafts[i].items[k].num != newCrafts[j].items[k].num) {\r\n                  found = false;\r\n              }\r\n            }\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newCrafts.push(vm.crafts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.crafts = newCrafts;\r\n  }\r\n\r\n  this.initCraft = function(fileName, id) {\r\n    var fCrafts = dntData.find(fileName, 'SuccessItemID1', id);\r\n    \r\n    for(var i=0;i<fCrafts.length;++i) {\r\n      var c = fCrafts[i];\r\n      \r\n      var craft = {\r\n        id: c.id,\r\n        fileName: fileName.replace('.json', ''),\r\n        gold: c.Cost/100/100,\r\n        items: [],\r\n      };\r\n      \r\n      var j=0;\r\n      for(;;) {\r\n        j++;\r\n        var itemColName = 'Slot' + j +'Id';\r\n        var qtyColName = 'Slot' + j +'Num';\r\n        if(!(itemColName in c)) {\r\n          break;\r\n        }\r\n\r\n        var items = dntData.find(allItemFileName, 'id', c[itemColName]);\r\n        if(items.length > 0) {\r\n          craft.items.push({\r\n            item: itemFactory.createBasicItem(items[0]),\r\n            num: c[qtyColName],\r\n          });\r\n        }\r\n      }\r\n      \r\n      vm.crafts.push(craft);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewCraft', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewCraftCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-craft.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewExtractionCtrl',\r\n\r\n['$timeout','dntData','itemFactory','items',\r\n  function($timeout, dntData, itemFactory, items) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  \r\n  var extractFileName = 'itemdroptable_disjoint.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [extractFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initExtract();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initExtract = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    var disjoint;\r\n    var d = itemFactory.getItemData(vm.item);\r\n    if(d && d.DisjointDrop1 > 0) {\r\n      disjoint = d.DisjointDrop1;\r\n    }\r\n    \r\n    var itemType = items[vm.item.itemSource];\r\n    if(itemType && d.EnchantID) {\r\n      var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', d.EnchantID);\r\n      if(!enchantments.length && itemType.enchantDnt2) {\r\n        enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', d.EnchantID);\r\n      }\r\n\r\n      for(var i=0;i<enchantments.length;++i) {\r\n        if(enchantments[i].EnchantLevel == vm.item.enchantmentNum) {\r\n          disjoint = enchantments[i].DisjointDrop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    if(disjoint) {\r\n      vm.getItems(disjoint);\r\n    }\r\n  }\r\n  \r\n  this.getGold = function() {\r\n    var d = itemFactory.getItemData(this.item);\r\n    return Number(d.Disjointamount)/100/100;\r\n  }\r\n  \r\n  this.getItems = function(disjoint) {\r\n    // console.log('checking ' + pouchFileName + ' for ' + boxType);\r\n    \r\n    var pouchData = dntData.find(extractFileName, 'id', disjoint);\r\n    if(pouchData.length == 0) {\r\n    }\r\n    else {\r\n      var gold = pouchData[0].GoldMin;\r\n\r\n      var itemIndex = 1;\r\n      while('Item' + itemIndex + 'Index' in pouchData[0]) {\r\n        var isGroup = pouchData[0]['IsGroup' + itemIndex];\r\n        var pouchItem = pouchData[0]['Item' + itemIndex + 'Index'];\r\n        var pouchItemCount = pouchData[0]['Item' + itemIndex + 'Info'];\r\n        //console.log('pouch contains ' + pouchItem);\r\n        if(pouchItem) {\r\n          if(isGroup) {\r\n            vm.getItems(pouchItem);\r\n          }\r\n          else {\r\n            var itemds = dntData.find(allItemFileName, 'id', pouchItem);\r\n            if(itemds.length > 0) {\r\n              //console.log('found item ');\r\n  \r\n              vm.items.push({\r\n                count: pouchItemCount,\r\n                gold: gold,\r\n                item: itemFactory.createBasicItem(itemds[0]),\r\n              });\r\n            }\r\n          }\r\n        }\r\n        itemIndex++;\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewExtraction', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewExtractionCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-extraction.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewPlateCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var plateFile = 'platetable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = [plateFile,allItemFileName];\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    getPlates();\r\n  }\r\n  \r\n  function getPlates() {\r\n    var rows = dntData.find(plateFile, 'ItemID', vm.item.id);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var row = rows[r];\r\n      var col=0;\r\n      for(;;) {\r\n        col++;\r\n        var colName = 'CompoundTableIndex' + col;\r\n        if(!(colName in row)) {\r\n          break;\r\n        }\r\n\r\n        var itemData = dntData.find(allItemFileName, 'id', row[colName]);\r\n        if(itemData.length > 0) {\r\n          vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewPlate', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewPlateCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-plate.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewSetCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.items = [];\r\n  \r\n  var files = [\r\n  'partstable.optimised.json',\r\n  'partstable_cash.optimised.json',\r\n  'partstable_common2014.optimised.json',\r\n  'partstable_common2015.optimised.json',\r\n  'partstable_common2016.json',\r\n  'partstable_commoncash.json',\r\n  'partstable_equipment.optimised.json',\r\n  'partstable_event.json',\r\n  'partstable_guild.json',\r\n  'partstable_pvp.optimised.json',\r\n  'partstable_reboot.optimised.json',\r\n  'partstable_skilllevelup.json',\r\n  'weapontable.optimised.json',\r\n  'weapontable_cash.optimised.json',\r\n  'weapontable_common2014.optimised.json',\r\n  'weapontable_common2015.optimised.json',\r\n  'weapontable_common2016.json',\r\n  'weapontable_commoncash.json',\r\n  'weapontable_equipment.optimised.json',\r\n  'weapontable_event.json',\r\n  'weapontable_guild.json',\r\n  'weapontable_pvp.optimised.json',\r\n  'weapontable_reboot.optimised.json',\r\n  //'weapontable_skilllevelup.json'\r\n  ];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var allFiles = files.concat([allItemFileName]);\r\n  for(var i=0;i<allFiles.length;++i) {\r\n    dntData.init(allFiles[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initSets();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initSets = function() {\r\n    for(var i=0;i<allFiles.length;++i) {\r\n      if(!dntData.isLoaded(allFiles[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.items = [];\r\n    for(var i=0;i<files.length;++i) {\r\n      getSetItems(files[i]);\r\n    }\r\n  }\r\n  \r\n  function getSetItems(fileName) {\r\n    var rows = dntData.find(fileName, 'SetItemID', vm.item.setId);\r\n    for(var r=0;r<rows.length;++r) {\r\n      var itemData = dntData.find(allItemFileName, 'id', rows[r].id);\r\n      if(itemData.length > 0) {\r\n        vm.items.push(itemFactory.createBasicItem(itemData[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewSet', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewSetCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-set.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewShopCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues','translations',\r\n  function($timeout, dntData, itemFactory, hCodeValues, translations) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.shopCosts = [];\r\n  \r\n  var cShopFileName = 'combinedshoptable.json';\r\n  var cSysShopFileName = 'combinedshoptable_system.json';\r\n  var cCashShopFileName = 'combinedshoptable_cash.json';\r\n  // var shopFileName = 'shoptable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  \r\n  var files = [cCashShopFileName,cSysShopFileName,cShopFileName,allItemFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initShops();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initShops = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = [];\r\n    getCombinedCosts(cShopFileName);\r\n    getCombinedCosts(cSysShopFileName);\r\n    getCombinedCosts(cCashShopFileName);\r\n    // getShopCosts();\r\n    \r\n    var newShopCosts = [];\r\n    for(var i=0;i<vm.shopCosts.length;++i) {\r\n      var found = false;\r\n      for(var j=0;j<newShopCosts.length;++j) {\r\n        if(vm.shopCosts[i].tabName == newShopCosts[j].tabName &&\r\n          vm.shopCosts[i].gold == newShopCosts[j].gold &&\r\n          vm.shopCosts[i].item1.id == newShopCosts[j].item1.id &&\r\n          vm.shopCosts[i].numItem1.id == newShopCosts[j].numItem1.id &&\r\n          vm.shopCosts[i].item2.id == newShopCosts[j].item2.id &&\r\n          vm.shopCosts[i].numItem2.id == newShopCosts[j].numItem2.id) {\r\n            found = true;\r\n            break;\r\n        }\r\n      }\r\n      \r\n      if(!found) {\r\n        newShopCosts.push(vm.shopCosts[i]);\r\n      }\r\n    }\r\n    \r\n    vm.shopCosts = newShopCosts;\r\n  }\r\n  \r\n  /*\r\n  function getShopCosts() {\r\n    var shops = dntData.getData(shopFileName);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n      \r\n      var c = 0;\r\n      for(;;) {\r\n        ++c;\r\n        \r\n        var colName = 'itemIndex' + c;\r\n        if(!(colName in s)) {\r\n          break;\r\n        }\r\n        \r\n        var itemId = s[colName];\r\n        if(!itemId) {\r\n          break;\r\n        }\r\n        \r\n        if(itemId == vm.item.id) {\r\n          s = {\r\n            shopName: s.ShopID,\r\n            tabName: translations.translate(s.TabNameID),\r\n            gold: s['Quantity' + c],\r\n          };\r\n          \r\n      \r\n          if(s.shopName in hCodeValues.shopNames) {\r\n            s.shopName = hCodeValues.shopNames[s.shopName];\r\n          }\r\n      \r\n          if(!s.shopName) {\r\n            s.shopName = s.ShopId;\r\n          }\r\n          vm.shopCosts.push(s);\r\n        }\r\n      }\r\n    }\r\n  }*/\r\n\r\n  function getCombinedCosts(fileName) {\r\n    var shops = dntData.find(fileName, 'itemindex', vm.item.id);\r\n    \r\n    for(var i=0;i<shops.length;++i) {\r\n      var s = shops[i];\r\n        \r\n      var item1s = dntData.find(allItemFileName, 'id', s.PurchaseItem1);\r\n      var item2s = dntData.find(allItemFileName, 'id', s.PurchaseItem2);\r\n      \r\n      var shopCost = {\r\n        shopName: s.ShopID,\r\n        tabName: translations.translate(s.TabNameID),\r\n        gold: 0,\r\n        nightmarePoints: 0,\r\n        dungeonPoints: 0,\r\n        nestPoints: 0,\r\n        ladderPoints: 0,\r\n        item1: itemFactory.createBasicItem(item1s[0]),\r\n        item2: itemFactory.createBasicItem(item2s[0]),\r\n        numItem1: 0,\r\n        numItem2: 0,\r\n      };\r\n      \r\n      if(shopCost.shopName in hCodeValues.shopNames) {\r\n        shopCost.shopName = hCodeValues.shopNames[shopCost.shopName];\r\n      }\r\n      \r\n      if(s.PurchaseType1 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue1;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue1;\r\n      }\r\n      else {\r\n        shopCost.numItem1 = s.PurchaseItemValue1;\r\n        shopCost.pointsId1 = s.PurchaseType1;\r\n      }\r\n      \r\n      if(s.PurchaseType2 == 1) {\r\n        shopCost.gold += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 3) {\r\n        shopCost.ladderPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType2 == 8) {\r\n        shopCost.nightmarePoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 13) {\r\n        shopCost.nestPoints += s.PurchaseItemValue2;\r\n      }\r\n      else if(s.PurchaseType1 == 14) {\r\n        shopCost.dungeonPoints += s.PurchaseItemValue2;\r\n      }\r\n      else {\r\n        shopCost.numItem2 = s.PurchaseItemValue2;\r\n        shopCost.pointsId2 = s.PurchaseType2;\r\n      }\r\n      \r\n      shopCost.gold = shopCost.gold/100/100;\r\n      \r\n      vm.shopCosts.push(shopCost);\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewShop', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewShopCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-shop.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTransferCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.matchingTransfers = [];\r\n  \r\n  var transferFileName = 'enchanttransfertable.json';\r\n  var allItemFileName = 'all-items.json';\r\n  var transferItemsFileName = 'enchanttransferitemtable.json';\r\n  \r\n  var files = [transferFileName,allItemFileName,transferItemsFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.matchingTransfers = [];\r\n    \r\n    var transferItem = dntData.find(transferItemsFileName, 'ItemID', vm.item.id);\r\n    if(transferItem && transferItem.length > 0) {\r\n      var transfers = dntData.find(transferFileName, 'EnchantLevel', vm.item.enchantmentNum);\r\n      \r\n      for(var i=0;i<transfers.length;++i) {\r\n        var t = transfers[i];\r\n        if(t.Rank == vm.item.rank.id && t.LevelLimit == vm.item.levelLimit) {\r\n          \r\n          var item1s = dntData.find(allItemFileName, 'id', t.NeedItemID1);\r\n          var item2s = dntData.find(allItemFileName, 'id', t.NeedItemID2);\r\n          \r\n          vm.matchingTransfers.push({\r\n            level: t.ResultLevel,\r\n            enchantmentNum: t.ResultEnchantLevel,\r\n            gold: t.NeedCoin/100/100,\r\n            rank: hCodeValues.rankNames[t.ResultRank],\r\n            numItem1: t.NeedItemCount1,\r\n            item1: itemFactory.createBasicItem(item1s[0]),\r\n            numItem2: t.NeedItemCount2,\r\n            item2: itemFactory.createBasicItem(item2s[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTransfer', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTransferCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-transfer.html'\r\n  };\r\n});","angular.module('dnsim').controller('itemViewTuningCtrl',\r\n\r\n['$timeout','dntData','itemFactory','hCodeValues',\r\n  function($timeout, dntData, itemFactory, hCodeValues) {\r\n  'use strict';\r\n  \r\n  if(this.item == null) return;\r\n  \r\n  var vm = this;\r\n  vm.rewardItems = [];\r\n  \r\n  var allItemFileName = 'all-items.json';\r\n  var changeFileName = 'itemchangetable.json';\r\n  \r\n  var files = [allItemFileName,changeFileName];\r\n  for(var i=0;i<files.length;++i) {\r\n    dntData.init(files[i], null, function() {}, function() {\r\n      $timeout(function() {\r\n        vm.initTransfers();\r\n      });\r\n    });\r\n  }\r\n  \r\n  this.initTransfers = function() {\r\n    for(var i=0;i<files.length;++i) {\r\n      if(!dntData.isLoaded(files[i])) {\r\n        return;\r\n      }\r\n    }\r\n    vm.rewardItems = [];\r\n\r\n    var changes = dntData.find(changeFileName, 'OriginalItemID', vm.item.id);\r\n    if(changes && changes.length > 0) {\r\n      for(var i=0;i<changes.length;++i) {\r\n        var c = changes[i];\r\n        if(c.OriginalLevel == vm.item.enchantmentNum || !c.OriginalLevel) {\r\n          var rItem = dntData.find(allItemFileName, 'id', c.RewardItemID);\r\n\r\n          vm.rewardItems.push({\r\n            rewardItem: itemFactory.createBasicItem(rItem[0]),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}])\r\n.directive('dngearsimItemViewTuning', function() {\r\n  return {\r\n    scope: true,\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    controller: 'itemViewTuningCtrl',\r\n    controllerAs: 'ctrl',\r\n    templateUrl: 'ui/item/item-view-tuning.html'\r\n  };\r\n});","angular.module('dnsim').controller('ItemCtrl',\r\n['$scope','$window','dntData','hCodeValues','items','jobs','exportLinkHelper','$routeParams','translations','$location','region','itemFactory','$timeout','statHelper','saveHelper',\r\nfunction($scope,$window,dntData,hCodeValues,items,jobs,exportLinkHelper,$routeParams,translations,$location,region,itemFactory,$timeout,statHelper,saveHelper) {\r\n  'use strict';\r\n  \r\n  region.setLocationByName($routeParams.region);\r\n  \r\n  $window.scrollTo(0, 0);\r\n  \r\n  $scope.jobName = null;\r\n  // console.log('search string: ', $routeParams.i);\r\n  $scope.item = exportLinkHelper.decodeItem($routeParams.i);\r\n  if('itemSource' in $scope.item) {\r\n    $scope.itemType = items[$scope.item.itemSource];\r\n  }\r\n  \r\n  $scope.item.setStats = null;\r\n  $scope.item.setId = null;\r\n  $scope.detail = null;\r\n  \r\n  $scope.getDescription = function() {\r\n    if($scope.item.description) {\r\n      return $scope.item.description;\r\n    }\r\n    else if($scope.itemType &&\r\n      $scope.itemType.name == 'title' &&\r\n      translations.isLoaded() &&\r\n      dntData.isLoaded($scope.itemType.mainDnt)) {\r\n\r\n      var itemData = dntData.find($scope.itemType.mainDnt, 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      }\r\n    }\r\n    else if($scope.item.fileName &&\r\n      dntData.isLoaded($scope.item.fileName + '.json')) {\r\n        \r\n      var itemData = dntData.find($scope.item.fileName + '.json', 'id', $scope.item.id);\r\n      if(itemData && itemData.length > 0 && itemData[0].DescriptionID > 0) {\r\n        return translations.translate(itemData[0].DescriptionID, itemData[0].DescriptionIDParam);\r\n      } \r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.getExchangeType = function() {\r\n    // console.log('getting exchange');\r\n    var exchangeDnt = 'exchange.json';\r\n    if(translations.isLoaded() &&\r\n      dntData.isLoaded(exchangeDnt) &&\r\n      $scope.item.exchangeType > 0) {\r\n        \r\n      // console.log('finding exchange ' + $scope.item.exchangeType);\r\n\r\n      var exchange = dntData.find(exchangeDnt, 'ExchangeType', $scope.item.exchangeType);\r\n      // console.log('got ' + exchange.length);\r\n      if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n        // console.log('exchange name: ' + exchange[0].NameID);\r\n        return translations.translate(exchange[0].NameID).toLowerCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  $scope.setDetail = function(detail) {\r\n    $scope.detail = detail;\r\n  }\r\n  \r\n  $scope.getNumInSet = function() {\r\n    \r\n    var buildName = $scope.getBuildName();\r\n    if(buildName && $scope.item && $scope.item.setId) {\r\n      return statHelper.getNumItemsForSet($scope.builds[buildName].items, $scope.item.setId);\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  $scope.getBuildName = function() {\r\n    var buildName = saveHelper.getCurrentBuild();\r\n    if($scope.builds) {\r\n      if(!buildName || !(buildName in $scope.builds)) {\r\n        var allBuildNames = Object.keys($scope.builds);\r\n        if(allBuildNames.length) {\r\n          buildName = allBuildNames[0];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return buildName;\r\n  }\r\n\r\n  $scope.getSellingPrice = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    if('SellAmount' in itemData && itemData.SellAmount > 0) {\r\n\r\n      var gold = Math.floor(itemData.SellAmount / 10000);\r\n      if(gold) {\r\n        retVal += gold + 'gold ';\r\n      }\r\n\r\n      var silver = Math.floor(itemData.SellAmount / 100) % 100;\r\n      if(silver) {\r\n        retVal += silver + 'silver ';\r\n      }\r\n\r\n      var copper = itemData.SellAmount % 100;\r\n      if(copper) {\r\n        retVal += copper + 'copper ';\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getServerStorage = function() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    var retVal = '';\r\n    \r\n    if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n      if(itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.AbleWStorage == 1) {\r\n          retVal = 'can server storage';\r\n        }\r\n        else if(itemData.AbleWStorage == 0) {\r\n          if(itemData && 'Reversion' in itemData && itemData.Reversion) {\r\n            retVal = 'not transferable';\r\n          }\r\n        }\r\n      }\r\n\r\n      if(itemData && 'Reversion' in itemData) {\r\n        if(retVal.length) {\r\n          retVal += ', ';\r\n        }\r\n        \r\n        if(itemData.Reversion == 0) {\r\n          retVal += 'can trade';\r\n        }\r\n        else if(itemData.Reversion == 1) {\r\n          retVal += 'not tradable ';\r\n        }\r\n      }\r\n    }\r\n    return retVal;\r\n  }\r\n  \r\n  $scope.getMoreInfo = function() {\r\n    var sealTimes = 0;\r\n    var numStamps = 0;\r\n    \r\n    if($scope.moreInfoLoaded()) {\r\n      var itemData = itemFactory.getItemData($scope.item);\r\n      \r\n      if(itemData && 'IsCash' in itemData && itemData.IsCash == 0) {\r\n        if(itemData && 'SealID' in itemData && 'SealCount' in itemData) {\r\n          sealTimes = itemData.SealCount;\r\n            \r\n          var sealData = dntData.find('sealcounttable.json', 'Type2', itemData.SealID);\r\n          if(sealData && sealData.length > 0 && sealData[0].Type1 == 0) {\r\n            \r\n            var colName = 'Count0';\r\n            if($scope.item.enchantmentNum) {\r\n              colName = 'Count' + $scope.item.enchantmentNum;\r\n            }\r\n            \r\n            if(colName in sealData[0]) {\r\n              numStamps = sealData[0][colName];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(itemData && 'IsCash' in itemData && 'CashTradeCount' in itemData && 'Reversion' in itemData && 'AbleWStorage' in itemData) {\r\n        if(itemData.Reversion == 2) {\r\n          if(itemData.CashTradeCount) {\r\n            return 'can server storage, cash trade count: ' + itemData.CashTradeCount;\r\n          }\r\n          else {\r\n            return 'can server storage, can use warranty';\r\n          }\r\n        }\r\n        else if(itemData.AbleWStorage) {\r\n          return 'can server storage';\r\n        }\r\n        else {\r\n          return 'not tradable';\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(sealTimes && numStamps) {\r\n      return 'can stamp ' + sealTimes + ' times using ' + numStamps + '  stamps';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n  \r\n  $scope.moreInfoLoaded = function() {\r\n    return dntData.isLoaded($scope.item.fileName + '.json') &&\r\n      dntData.isLoaded('sealcounttable.json');\r\n  }\r\n  \r\n  $scope.loadMoreInfo = function() {\r\n    dntData.init($scope.item.fileName + '.json', null, $timeout);\r\n    dntData.init('sealcounttable.json', null, $timeout);\r\n  }\r\n  \r\n  $scope.handleChange = function() {\r\n    // console.log('changes');\r\n    if($scope.item.itemSource != 'custom') {\r\n      $location.search('i', exportLinkHelper.encodeItem($scope.item));\r\n    }\r\n    else {\r\n      setFullStats();\r\n      $scope.item = angular.copy($scope.item);\r\n    }\r\n    getBuilds();\r\n  }\r\n  \r\n  function getJobName() {\r\n    var allJobs = jobs.getAllJobs();\r\n    angular.forEach(allJobs, function(job, index) {\r\n      if(job.id == $scope.item.needJobClass) {\r\n        $scope.jobName = job.name;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function init() {\r\n    getBuilds();\r\n    $scope.preInitItem = $scope.item;\r\n    $scope.item = null;\r\n  \r\n    var anyToLoad = false;\r\n    \r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        dntData.init(fileName, columns, reportProgress, tryInit);\r\n        anyToLoad = true;\r\n      }\r\n    });\r\n    \r\n    if(!translations.isLoaded()) {\r\n      translations.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!jobs.isLoaded()) {\r\n      jobs.init(reportProgress, tryInit);\r\n      anyToLoad = true;\r\n    }\r\n    \r\n    if(!anyToLoad) {\r\n      tryInit();\r\n    }\r\n  }\r\n  init();\r\n\r\n  function isLoaded() {\r\n    var anyDntToLoad = false;\r\n    angular.forEach(exportLinkHelper.getDntFiles($scope.preInitItem), function(columns, fileName) {\r\n      if(!dntData.isLoaded(fileName)) {\r\n        anyDntToLoad = true;\r\n      }\r\n    });\r\n\r\n    return !anyDntToLoad && translations.isLoaded() && jobs.isLoaded();\r\n  }\r\n  \r\n  function tryInit() {\r\n    if(isLoaded()) {\r\n      $scope.item = exportLinkHelper.reloadItem($scope.preInitItem);\r\n      if($scope.item == null) {\r\n        return;\r\n      }\r\n      \r\n      setFullStats();\r\n      $window.document.title = 'dngearsim | ' + $scope.item.name;\r\n      if($scope.item.itemSource != 'custom') {\r\n      \r\n        if($scope.item.typeName == 'skills') {\r\n          if(!$scope.item.pve || $scope.item.pve != 'pvp') {\r\n            $scope.item.pve = 'pve';\r\n          }\r\n          else {\r\n            $scope.item.pve = 'pvp';\r\n          }\r\n        }\r\n        else {\r\n          if($scope.item.needJobClass > 0) {\r\n            getJobName();\r\n          }\r\n        }\r\n        \r\n        setFileName();\r\n      }\r\n\r\n      setupTabs();\r\n    }\r\n  }\r\n\r\n  function setupTabs() {\r\n    var itemData = itemFactory.getItemData($scope.item);\r\n    if(itemData.DisjointDrop1 > 0) {\r\n      $scope.canExtract = true;\r\n    }\r\n    \r\n    if((itemData.Type == 0 || itemData.Type == 1) && $scope.item.enchantmentNum > 0) {\r\n      $scope.canTransfer = true;\r\n    } \r\n\r\n    if(itemData.Type == 0 || itemData.Type == 1) {\r\n      $scope.canTune = true;\r\n    }\r\n    \r\n    if($scope.item.setId) {\r\n      $scope.isInSet = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 5) {\r\n      $scope.isPlate = true;\r\n    }\r\n    \r\n    if($scope.item.typeId == 46 || $scope.item.typeId == 8 || $scope.item.typeId == 112 || $scope.item.typeId == 122 || $scope.item.typeId == 142 || $scope.item.typeId == 160) {\r\n      $scope.hasContents = true;\r\n      $scope.detail = 'contents';\r\n    }\r\n    else if($scope.item.typeName != null) {\r\n      $scope.canUse = true;\r\n      $scope.detail = 'use';\r\n    }\r\n    else if($scope.canExtract) {\r\n      $scope.detail = 'extract';\r\n    }\r\n    else if($scope.canTransfer) {\r\n      $scope.detail = 'transfer';\r\n    }\r\n    else if($scope.canTune) {\r\n      $scope.detail = 'tuning';\r\n    }\r\n    else if($scope.isPlate) {\r\n      $scope.detail = 'plate';\r\n    }\r\n    else {\r\n      $scope.detail = 'attainment';\r\n    }\r\n  }\r\n  \r\n  function setFileName() {\r\n    if(!$scope.item.fileName) {\r\n      if($scope.item.itemSource in items && items[$scope.item.itemSource].mainDnt) {\r\n        $scope.item.fileName = items[$scope.item.itemSource].mainDnt.replace('.json', '').replace('.json', '').replace('.optimised', '');\r\n      }\r\n    }\r\n  }\r\n  \r\n  function setFullStats() {\r\n    // full stats are cleared when publishing builds\r\n    $scope.item.fullStats = $scope.item.stats;\r\n    \r\n    if($scope.item.enchantmentStats != null && $scope.item.enchantmentStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.enchantmentStats, $scope.item.fullStats);\r\n    }\r\n    \r\n    if($scope.item.sparkStats != null && $scope.item.sparkStats.length > 0) {\r\n      $scope.item.fullStats = hCodeValues.mergeStats($scope.item.sparkStats, $scope.item.fullStats);\r\n    }\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // $scope.progress += '|' + msg;\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function getBuilds() {\r\n    var builds = saveHelper.getSavedItems();\r\n    $scope.builds = builds;\r\n  }\r\n}]);","angular.module('dnsim').controller('ExportCtrl', \r\n  ['$scope','$window','saveHelper',\r\n   function($scope, $window, saveHelper) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | EXPORT';\r\n  \r\n  var rawSavedData = saveHelper.getSavedItems();\r\n  $scope.exportData = JSON.stringify(rawSavedData, null, 1);\r\n  \r\n  $scope.save = function() {\r\n    localStorage.setItem('savedItems', LZString.compressToUTF16($scope.exportData));\r\n  }\r\n}]);\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n\r\n    var noticeId = 'notice1';\r\n    var vm = this;\r\n\r\n    vm.doClose = function() {\r\n      localStorage.setItem(noticeId, true)\r\n      vm.isClosed = true;\r\n    }\r\n    \r\n    vm.isClosed = true; // localStorage.getItem(noticeId) != null;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n    controller: 'HeaderCtrl',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","angular.module('dnsim').controller('NavCtrl', \r\n  ['$scope','$location','translations','region','itemCategory','saveHelper',\r\n  function($scope,$location,translations,region,itemCategory,saveHelper) {\r\n    'use strict';\r\n    \r\n    try {\r\n      var noLocationMenu = [];\r\n      var normalMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        ];\r\n      \r\n      var buildAction = {path: 'build', name:'build'};\r\n      \r\n      var withBuildMenu = [\r\n        {path: 'builds', name:'builds', icon: 'menu-hamburger'},\r\n        {path: 'search', name:'search', icon: 'search'},\r\n        buildAction,\r\n        ];\r\n        \r\n      region.init();\r\n    \r\n      $scope.isSearch = function() {\r\n        return $location.path().indexOf('/search') == 0;\r\n      }\r\n  \r\n      $scope.isLoading = function() {\r\n        return translations.startedLoading && \r\n              !translations.isLoaded() &&\r\n              region.tlocation != null &&\r\n              region.tlocation.url != '' &&\r\n              !$scope.noRegion();\r\n      }\r\n      \r\n      $scope.noRegion = function() {\r\n        return region.dntLocation == null;\r\n      }\r\n      \r\n      $scope.isHttpOnly = function() {\r\n        return location.protocol != 'https:' && location.hostname != 'localhost';\r\n      }\r\n        \r\n      $scope.getActions = function() {\r\n        try {\r\n          var menu = null;\r\n          \r\n          var currentBuild = saveHelper.getCurrentBuild();\r\n          if(currentBuild) {\r\n            if(!$scope.savedItems || !(currentBuild in $scope.savedItems)) {\r\n              // console.log('loading saved items');\r\n              $scope.savedItems = saveHelper.getSavedItems();\r\n            }\r\n            \r\n            if(!(currentBuild in $scope.savedItems)) {\r\n              currentBuild = null;\r\n            }\r\n          }\r\n    \r\n          if(region.dntLocation != null && region.dntLocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(region.tlocation != null && region.tlocation.url == '') {\r\n            menu = noLocationMenu; \r\n          }\r\n          else if(currentBuild && currentBuild != 'null') {\r\n            menu = withBuildMenu;\r\n            buildAction.path = 'build?buildName=' + encodeURIComponent(currentBuild);\r\n            buildAction.name = currentBuild;\r\n            if(currentBuild in $scope.savedItems) {\r\n              buildAction.build = $scope.savedItems[currentBuild];\r\n            }\r\n          }\r\n          else if($location.path() == '/view-group' || region.dntLocation == null) {\r\n            menu = normalMenu;\r\n          }\r\n          else {\r\n            menu = normalMenu;\r\n          }\r\n          \r\n          var path = $location.path;\r\n          angular.forEach(menu, function(value, key) {\r\n            delete value.extraCss;\r\n            if(path && path.length == 1) {\r\n              if(value.path.length == 1) {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n            else if(value.path && value.path.length > 1 && path.indexOf('/' + value.path) == 0) {\r\n              if(value.path != 'builds' || path == '/builds') {\r\n                value.extraCss = 'active';\r\n              }\r\n            }\r\n          });\r\n          \r\n          return menu;\r\n        }\r\n        catch(ex) {\r\n          $scope.simError = ex.message;\r\n          console.error(ex);\r\n        }\r\n      };\r\n    }\r\n    catch(ex) {\r\n      $scope.simError = ex.message;\r\n      console.error(ex);\r\n    }\r\n  }\r\n])\r\n.directive('dngearsimNav', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/nav.html'\r\n  };\r\n});","angular.module('dnsim').controller('SetupCtrl', \r\n  ['$scope','$window','$route','$timeout','translations','dntInit','dntReset','region',\r\n   function($scope, $window, $route, $timeout, translations, dntInit, dntReset, region) {\r\n  'use strict';\r\n     \r\n  document.body.className = 'default-back';\r\n  $window.document.title = 'dngearsim | SETUP';\r\n  \r\n  $scope.advancedSetup = false;\r\n  $scope.isLoading = translations.startedLoading && !translations.isLoaded();\r\n  $scope.translationResults = [];\r\n  $scope.hostedFiles = region.hostedFiles;\r\n  \r\n  var noLocation = '';\r\n  var sessionLocation = region.alternativeFiles.url;\r\n  if(sessionLocation == null) {\r\n    sessionLocation = noLocation;\r\n  }\r\n  \r\n  $scope.location = sessionLocation;\r\n  if($scope.location == noLocation) {\r\n    $scope.testResults = ['No location set'];\r\n  }\r\n  else {\r\n    $scope.testResults = ['Using location ' + $scope.location];\r\n  }\r\n  \r\n  $scope.setLocation = function(url) {\r\n    $scope.location = url;\r\n    $scope.isLoading = true;\r\n    $scope.saveLocation();\r\n    dntReset();\r\n\r\n    $scope.translationResults = [];\r\n    var existingFile = localStorage.getItem('UIStrings_file');\r\n    if(existingFile == null || existingFile.indexOf(url) == -1) {\r\n      sessionStorage.removeItem('UIStrings');\r\n    }\r\n    translations.reset();\r\n    translations.location = url;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  $scope.resetSessionData = function() {\r\n    $scope.testResults = ['session data reset.. reloading page'];\r\n    region.tlocation = null;\r\n    region.dntLocation = null;\r\n    translations.reset();\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.saveLocation();\r\n    $timeout(function() {   \r\n      location.hash = '';\r\n      location.reload(true);\r\n    });\r\n  }\r\n  \r\n  $scope.loadUiString = function() {\r\n    $scope.translationResults = [];\r\n    sessionStorage.removeItem('UIStrings');\r\n    dntReset();\r\n    translations.reset();\r\n    translations.location = region.tlocation.url;\r\n    translations.region = region.tlocation.region;\r\n    translations.init(progressTranslations, translationsStatus);\r\n  }\r\n  \r\n  function translationsStatus() {\r\n    progressTranslations('current translations contain words like ' + translations.translate(329) + ', ' + translations.translate(323) + ' and ' + translations.translate(335));\r\n    $scope.isLoading = false;\r\n  }\r\n  \r\n  function progress(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.testResults != null) {\r\n          $scope.testResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  function progressTranslations(msg) {\r\n    $timeout(\r\n      function() {\r\n        if($scope.translationResults != null) {\r\n          $scope.translationResults.push(msg);\r\n        }\r\n      });\r\n  }\r\n  \r\n  $scope.saveLocation = function() {\r\n    dntReset();\r\n    if($scope.location != noLocation) {\r\n      region.setCustomUrl($scope.location);\r\n      \r\n      region.init();\r\n      if(region.alternativeFiles.region == region.tlocation.region) {\r\n        translations.reset();\r\n        translations.init(progressTranslations, translationsStatus);\r\n      }\r\n      $scope.testResults = [\r\n        'Location saved',\r\n        'Using location ' + $scope.location];\r\n    }\r\n  }\r\n  \r\n  $scope.testLocation = function() {\r\n    if($scope.location != noLocation) {\r\n      $scope.testResults = [\r\n        'Using location ' + $scope.location,\r\n        'Loading all data used by the app'];\r\n\r\n      translations.init(progress, function () {\r\n        dntInit(progress);\r\n      });\r\n    }\r\n  }\r\n}]);\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          vm.allResults.push({\r\n            uid: uid,\r\n            name: buildName,\r\n            data: vm.jobBuilds[uid][buildName]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      onlineService.getClassBuilds(vm.job).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n    \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'saveHelper', 'onlineService', '$routeParams', 'region', publish]);\r\n\r\nfunction publish($location, saveHelper, onlineService, $routeParams, region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n  \r\n    vm.builds = saveHelper.getSavedItems();\r\n  });\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function(buildName, build) {\r\n    build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(buildName, build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function(buildName) {\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.builds[buildName].region) {\r\n        vm.builds[buildName].region = vm.storedBuilds[buildName].region;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].about) {\r\n        vm.builds[buildName].about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.builds[buildName].guild) {\r\n        vm.builds[buildName].guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    if(!vm.builds[buildName].region) {\r\n      vm.builds[buildName].region = region.dntLocation.region;\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 15;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.load = function(buildName, build) {\r\n\r\n    var newGroupName = saveHelper.importGroup(buildName, build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      build);\r\n      \r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.deleteLocal = function(buildName) {\r\n    vm.localToDelete = buildName;\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.builds).concat(_.keys(vm.storedBuilds));\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.reallyDeleteLocal = function(buildName) {\r\n    saveHelper.updatedSavedItems(buildName, []);\r\n    vm.localToDelete = null;\r\n    vm.builds = saveHelper.getSavedItems();\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams', 'saveHelper', 'statHelper', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, saveHelper, statHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  vm.copyLocally = function() {\r\n    var newGroupName = saveHelper.importGroup(vm.buildName, vm.build.items);\r\n    \r\n    saveHelper.saveBuild(\r\n      newGroupName, \r\n      newGroupName,\r\n      vm.build);\r\n      \r\n    $location.path('/build');\r\n    $location.search('buildName', newGroupName);\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n        vm.stats = statHelper.getBuildStats(build);\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$route','$routeParams','$location','translations','region','$http',\r\n  function($timeout,$route,$routeParams,$location,translations,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n    translations.init(\r\n      function(msg) { \r\n        // console.log(msg);\r\n      }, \r\n      function() {\r\n        $timeout();\r\n      });\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        $http.get(vm.region.dntLocation.url + '/Version.cfg').then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.getWorldName = function() {\r\n      if(translations.isLoaded()) {\r\n        return translations.translate(10169);\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(!vm.override) {\r\n        vm.setTLocation(null);\r\n      }\r\n      \r\n      if($routeParams.region) {\r\n        $routeParams.region = location.region;\r\n        $route.updateParams($routeParams);\r\n        $route.reload();\r\n      }\r\n      else {\r\n        region.setLocation(location);\r\n      }\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n    \r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimCustomItems', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n    },\r\n    controller: ['$window','saveHelper','$location','hCodeValues','itemCategory','$timeout', customItemCtrl],\r\n    controllerAs: 'customItems',\r\n    templateUrl: 'ui/search/custom-items.html'\r\n  };\r\n});\r\n\r\nfunction customItemCtrl($window,saveHelper,$location,hCodeValues,itemCategory,$timeout) {\r\n  'use strict';\r\n\r\n  var vm = this;\r\n  \r\n  this.customItems = hCodeValues.customItems;\r\n  \r\n  this.maxDisplay = 10;\r\n  this.currentResults = 0;\r\n  \r\n  if(this.nameSearch == null) {\r\n    this.nameSearch = '';\r\n  }\r\n  \r\n  this.getResults = function() {\r\n    return this.customItems;\r\n  }\r\n  \r\n  this.getNewStatName = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      return 'unnamed custom item';\r\n    }\r\n    else {\r\n      return this.nameSearch;\r\n    }\r\n  }\r\n  \r\n  this.createCustomItem = function() {\r\n    if(this.nameSearch == '' || this.nameSearch == null) {\r\n      this.nameSearch = this.getNewStatName();\r\n    }\r\n    $location.path('/item/_custom:.' + this.nameSearch);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimEverythingSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      nameSearch: '=nameSearch'\r\n    },\r\n    controller: everythingSearchCtrl,\r\n    controllerAs: 'items',\r\n    templateUrl: 'ui/search/everything-search.html'\r\n  };\r\n});\r\n\r\n\r\nfunction everythingSearchCtrl ($window, $timeout, $routeParams, $location, hCodeValues, region, translations, dntData) {\r\n    \r\n  var vm = this;\r\n  \r\n  vm.everything = null;\r\n  vm.maxDisplay = 32;\r\n  vm.currentResults = 0;\r\n  vm.results = null;\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.version = 'all';\r\n  vm.versions = [vm.version];\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = localStorage.getItem('nameSearch');\r\n    if($routeParams.name) {\r\n      vm.nameSearch = $routeParams.name;\r\n    }\r\n    if(vm.nameSearch == null) {\r\n      vm.nameSearch = '';\r\n    }\r\n  }\r\n  \r\n  $window.document.title = 'dngearsim | ALL ITEM SEARCH';\r\n  \r\n  vm.initeverything = function() {\r\n    if(dntData.isLoaded(fileName) && translations.isLoaded() && !vm.everything) {\r\n      vm.everything = [];\r\n      \r\n      var versionMap = {};\r\n      var datas = dntData.getData(fileName);\r\n      // console.log(datas.length + ' everything');\r\n      for(var i=0;i<datas.length;++i) {\r\n        var data = datas[i];\r\n        if(data.NameID > 0) {\r\n          var item = {\r\n            id: data.id,\r\n            name: translations.translate(data.NameID, data.NameIDParam),\r\n            rank: hCodeValues.rankNames[data.Rank],\r\n            icon: data.IconImageIndex,\r\n            levelLimit: data.LevelLimit,\r\n            fileName: data.fileName,\r\n            version: data.version\r\n          }\r\n          vm.everything.push(item);\r\n\r\n          if(data.version) {\r\n            versionMap[data.version] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for(var version in versionMap) {\r\n        vm.versions.push(version);\r\n      }\r\n      \r\n      vm.everything = _.sortBy(vm.everything, 'name');\r\n      \r\n      $timeout(function() {\r\n        vm.showMoreResults();\r\n      });\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    if(vm.everything == null) {\r\n      vm.initeverything();\r\n    }\r\n    \r\n    if(vm.everything == null) {\r\n      return [];\r\n    }\r\n\r\n    var newResults = [];\r\n    var numeverything = vm.everything.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numeverything && (curDisplay<vm.maxDisplay);++i) {\r\n      var e = vm.everything[i];\r\n\r\n      if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel || (!e.levelLimit)) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.version != 'all' && vm.version != e.version) {\r\n        continue;\r\n      }\r\n\r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(nameSearches.length == 0) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      newResults.push(e);\r\n      curDisplay++;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    return newResults;\r\n  }\r\n  \r\n  vm.changeSearch = function() {\r\n    if(vm.minLevel != vm.origMinLevel) {\r\n      localStorage.setItem('minLevel', vm.minLevel);\r\n      $location.search('minLevel', vm.minLevel);\r\n      vm.origMinLevel = vm.minLevel;\r\n    }\r\n    \r\n    if(vm.maxLevel != vm.origMaxLevel) {\r\n      localStorage.setItem('maxLevel', vm.maxLevel);\r\n      $location.search('maxLevel', vm.maxLevel);\r\n      vm.origMaxLevel = vm.maxLevel;\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n    \r\n    vm.maxDisplay = 64;\r\n    vm.results = vm.getResults();\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      // console.log('show more', vm.maxDisplay);\r\n      vm.maxDisplay += 18;\r\n      vm.results = vm.getResults();\r\n    });\r\n  }\r\n\r\n  var fileName = 'all-items.json';  \r\n  dntData.init(fileName, null, function() {}, function() {\r\n    vm.initeverything();\r\n  }, false);\r\n\r\n  translations.init(null, vm.initeverything);\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nvar controllerParams = ['$scope','$window','$routeParams','$timeout','$location','$route',\r\n'translations',\r\n'itemCategory',\r\n'jobs',\r\n'hCodeValues',\r\n'itemFactory',\r\n'region',\r\n'saveHelper', itemSearchCtrl];\r\n\r\nangular.module('dnsim').controller('ItemSearchCtrl', controllerParams);\r\n\r\nfunction itemSearchCtrl(\r\n  $scope,$window,$routeParams,$timeout,$location,$route,\r\n  translations,\r\n  itemCategory,\r\n  jobs,\r\n  hCodeValues,\r\n  itemFactory,\r\n  region,\r\n  saveHelper) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  vm.itemCategory = itemCategory.byPath($routeParams.cat);\r\n  if(!vm.itemCategory) {\r\n     var catName = localStorage.getItem('selectedItemCategory');\r\n     if(!catName) {\r\n       catName = 'titles';\r\n     }\r\n     \r\n     vm.itemCategory = itemCategory.byName(catName);\r\n     if(!vm.itemCategory || vm.itemCategory.hideInSearch) {\r\n       catName = 'titles';\r\n       vm.itemCategory = itemCategory.byName('titles');\r\n     }\r\n     if(vm.itemCategory) {\r\n       // console.log('moving');\r\n       $location.search('cat', vm.itemCategory.path);\r\n       $route.reload();\r\n     }\r\n     return;\r\n  }\r\n  \r\n  \r\n  $window.document.title = 'dngearsim | SEARCH ' + vm.itemCategory.name.toUpperCase();\r\n  \r\n  vm.job = {id: -1, name: ''};\r\n  vm.jobs = [vm.job];\r\n  vm.allJobs = [];\r\n  vm.minLevel = 1;\r\n  vm.maxLevel = 99;\r\n  vm.maxDisplay = 10;\r\n  vm.totalNumResults = 0;\r\n  vm.grades = hCodeValues.rankNames;\r\n  vm.stat = {id:-1, name:''};\r\n  vm.stats = [vm.stat];\r\n  vm.results = null;\r\n  \r\n  angular.forEach(hCodeValues.stats, function(stat, statId) {\r\n    if(stat.searchable) {\r\n      vm.stats.push(stat);\r\n    }\r\n  });\r\n  \r\n  var minLevel = Number(localStorage.getItem('minLevel'));\r\n  if($routeParams.minLevel) {\r\n    minLevel = Number($routeParams.minLevel);\r\n  }\r\n  if(minLevel > 0 && minLevel < 100) {\r\n    vm.minLevel = minLevel;\r\n  }\r\n  vm.origMinLevel = minLevel;\r\n  \r\n  var maxLevel = Number(localStorage.getItem('maxLevel'));\r\n  if($routeParams.maxLevel) {\r\n    maxLevel = Number($routeParams.maxLevel);\r\n  }\r\n  if(maxLevel > 0 && maxLevel < 100) {\r\n    vm.maxLevel = maxLevel;\r\n  }\r\n  vm.origMaxLevel = maxLevel;\r\n  \r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if($routeParams.name) {\r\n    vm.nameSearch = $routeParams.name;\r\n  }\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  vm.origSavedSearchStatId = localStorage.getItem('searchStat');\r\n  if($routeParams.stat) {\r\n    vm.origSavedSearchStatId = $routeParams.stat;\r\n  }\r\n  if(vm.origSavedSearchStatId > -1 && vm.origSavedSearchStatId in hCodeValues.stats) {\r\n    vm.stat = hCodeValues.stats[vm.origSavedSearchStatId];\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    var catName = localStorage.getItem('selectedItemCategory');\r\n    if(catName) {\r\n      vm.itemCategory = itemCategory.byName(catName);\r\n      if(vm.itemCategory) {\r\n        // console.log('navigating to ', vm.itemCategory.path);\r\n        $location.search('cat', vm.itemCategory.path);\r\n        vm.save();\r\n        $route.reload();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.save = function() {\r\n    if(!vm.itemCategory.hideLevel) {\r\n      if(vm.minLevel != vm.origMinLevel) {\r\n        localStorage.setItem('minLevel', vm.minLevel);\r\n        $location.search('minLevel', vm.minLevel);\r\n        vm.origMinLevel = vm.minLevel;\r\n      }\r\n      \r\n      if(vm.maxLevel != vm.origMaxLevel) {\r\n        localStorage.setItem('maxLevel', vm.maxLevel);\r\n        $location.search('maxLevel', vm.maxLevel);\r\n        vm.origMaxLevel = vm.maxLevel;\r\n      }\r\n    }\r\n    else {\r\n      $location.search('minLevel', null);\r\n      $location.search('maxLevel', null);\r\n    }\r\n    \r\n    if(!vm.itemCategory.hideJob) {\r\n      if(vm.job != null) {\r\n        if(vm.origJobNumber != vm.job.id) {\r\n          localStorage.setItem('jobNumber', vm.job.id);\r\n          if(vm.job.id > -1) {\r\n            $location.search('job', vm.job.id);\r\n          }\r\n          else {\r\n            $location.search('job', null);\r\n          }\r\n          vm.origJobNumber = vm.job.id;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      $location.search('job', null);\r\n    }\r\n  \r\n    if(vm.stat) {\r\n      if(vm.origSavedSearchStatId != vm.stat.id) {\r\n        localStorage.setItem('searchStat', vm.stat.id);\r\n        if(vm.stat.id > -1) {\r\n          $location.search('stat', vm.stat.id);\r\n        }\r\n        else {\r\n          $location.search('stat', null);\r\n        }\r\n        \r\n        vm.origSavedSearchStatId = vm.stat.id;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n    $location.search('name', vm.nameSearch);\r\n  };\r\n  \r\n  function init() {\r\n    jobs.init(reportProgress, jobInit);\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    // console.log('called the job init func');\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      // console.log('trying to init jobs');\r\n      // console.log('job dropdown should be set');\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      newJobs.splice(0, 0, vm.jobs[0]);\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      if($routeParams.job && $routeParams.job) {\r\n        lastJobNumber = Number($routeParams.job);\r\n      }\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            return;\r\n          }\r\n        });\r\n      }\r\n\r\n      itemCategory.init(vm.itemCategory.name, loadResults);\r\n    }\r\n  }\r\n  \r\n  vm.rankChecked = hCodeValues.checkedRank;\r\n    \r\n  vm.changeSearch = function() {\r\n    vm.save();\r\n    loadResults();\r\n  }\r\n  \r\n  function loadResults() {\r\n    vm.maxDisplay = 24;\r\n    vm.results = getResults();\r\n  }\r\n  \r\n  function getResults() {\r\n    var allItems = itemCategory.getItems(vm.itemCategory.name);\r\n    if(allItems == null) {\r\n      return null;\r\n    }\r\n    \r\n    allItems = allItems.sort(function(item1, item2) {\r\n        return (item2.levelLimit - item1.levelLimit);\r\n      });\r\n          \r\n    var pcStatId = -1;\r\n    if('pc' in vm.stat) {\r\n      pcStatId = vm.stat.pc;\r\n    }\r\n          \r\n    var altStatId = -1;\r\n    if('altStat' in vm.stat) {\r\n      altStatId = vm.stat.altStat;\r\n    }\r\n  \r\n    var statVals = [];\r\n    var newResults = [];\r\n    var numEquip = allItems.length;\r\n    var curDisplay = 0;\r\n    for(var i=0;i<numEquip && (curDisplay<vm.maxDisplay || vm.stat.id >= 0);++i) {\r\n      var e = allItems[i];\r\n      if(e) {\r\n        \r\n        if(!vm.itemCategory.hideLevel) {\r\n          if(e.levelLimit < vm.minLevel || e.levelLimit > vm.maxLevel) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideRank) {\r\n          if(e.rank && !vm.rankChecked[e.rank.id]) {\r\n            continue;\r\n          }\r\n        }\r\n          \r\n        if(!vm.itemCategory.hideJob) {\r\n          if(vm.job && vm.job.id > -1) {\r\n            if(!vm.job.isClassJob(e.needJobClass)) {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n        \r\n        itemFactory.initItem(e);\r\n        if(e.typeName != vm.itemCategory.name) {\r\n          continue;\r\n        }\r\n        // console.log('name filter', vm.nameSearch); \r\n        \r\n        if(vm.nameSearch != '') {\r\n          // console.log('filtering on name');\r\n          var nameSearches = vm.nameSearch.split(' ');\r\n          if(!nameSearches.length) {\r\n            nameSearches = [vm.nameSearch];\r\n          }\r\n          var allMatch = true;\r\n          for(var ns=0;ns<nameSearches.length;++ns) {\r\n            if(e.name.toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n              allMatch = false;\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if(!allMatch) {\r\n            continue;\r\n          }\r\n        }\r\n        \r\n        if(vm.stat.id >= 0) {\r\n          var statFound = false;\r\n          \r\n          var statVal = {};\r\n          for(var s=0;s<e.stats.length;++s) {\r\n            var stat = e.stats[s];\r\n            if(stat.id == vm.stat.id) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n              break;\r\n            }\r\n            else if(stat.id == pcStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n            else if(stat.id == altStatId) {\r\n              statFound = true;\r\n              statVal.i = curDisplay;\r\n              statVal.s = Number(stat.max);\r\n            }\r\n          }\r\n          \r\n          if(!statFound) {\r\n            continue;\r\n          }\r\n          else {\r\n            statVals.push(statVal);\r\n          }\r\n        }\r\n        \r\n        newResults.push(e);\r\n        curDisplay++;\r\n      }\r\n    }\r\n    \r\n    if(vm.stat.id >= 0) {\r\n      \r\n      var currentResults = Math.min(curDisplay, vm.maxDisplay);\r\n      \r\n      statVals = statVals.sort(function(value1, value2) {\r\n        return value2.s - value1.s;\r\n      });\r\n      \r\n      var statResults = [];\r\n      for(var i=0;i<currentResults;++i) {\r\n        statResults.push(newResults[statVals[i].i]);\r\n      }\r\n      newResults = statResults;\r\n    }\r\n    \r\n    vm.totalNumResults = newResults.length;\r\n    \r\n    return newResults;\r\n  }\r\n\r\n  vm.showMoreResults = function() {\r\n    $timeout(function() {\r\n      vm.maxDisplay += 18;\r\n      vm.results = getResults();\r\n    });\r\n  }\r\n  \r\n  region.init();\r\n  translations.init(reportProgress, init);\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimSkillSearch', function() {\r\n  return {\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      jobs: '=jobs',\r\n    },\r\n    controller: ['$timeout','region','jobs','translations','dntData','hCodeValues','itemCategory','$location','exportLinkHelper', skillSearchCtrl],\r\n    controllerAs: 'skillSearch',\r\n    templateUrl: 'ui/search/skill-search.html'\r\n  };\r\n});\r\n\r\nfunction skillSearchCtrl($timeout,region, jobs, translations,dntData,hCodeValues,itemCategory,$location,exportLinkHelper) {\r\n\r\n  var vm = this;\r\n  \r\n  vm.allJobs = [];\r\n  vm.dntName = '';\r\n  vm.skills = [];\r\n  vm.loadedJobId = -1;\r\n\r\n  vm.itemCategory = itemCategory.byName('skills');\r\n\r\n  vm.nameSearch = localStorage.getItem('nameSearch');\r\n  if(!vm.nameSearch) {\r\n    vm.nameSearch = '';\r\n  }\r\n  \r\n  region.init();\r\n  if(translations.isLoaded()) {\r\n    init();\r\n  }\r\n  else {\r\n    translations.init(reportProgress, function() { $timeout(init); } );\r\n  }\r\n\r\n  vm.navigate = function() {\r\n    $timeout(function() {\r\n      if(vm.itemCategory) {\r\n        $location.path(vm.itemCategory.path);\r\n      }\r\n    });\r\n  }\r\n  \r\n  vm.isLoading = function() {\r\n    \r\n    if(!translations.isLoaded()) {\r\n      // console.log('transations not loaded');\r\n      if(!translations.startedLoading) {\r\n        translations.init(reportProgress, function() { } );\r\n      }\r\n\r\n      return true;\r\n    }\r\n    \r\n    var baseName = jobs.getBaseJobName(vm.job);\r\n    var dntName = getDntName(baseName);\r\n    if(dntName) {\r\n      if(!dntData.isLoaded(dntName)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  \r\n  function getDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skilltable_character' + baseClassName.toLowerCase() + '.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  function getLevelDntName(baseClassName) {\r\n    // console.log('got base class :' + baseClassName);\r\n    if(baseClassName != null) {\r\n      return 'skillleveltable_character' + baseClassName.toLowerCase() + 'pve.json';\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function getSkills() {\r\n    // console.log('getting skills for ' + vm.job.name);\r\n    if(vm.loadedJobId == vm.job.id) {\r\n      return vm.skills;\r\n    }\r\n    else {\r\n      \r\n      var baseJobNames = [];\r\n      if(vm.job.id >= 0) {\r\n        var baseName = jobs.getBaseJobName(vm.job);\r\n        baseJobNames.push(baseName);\r\n      }\r\n\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n        var levelDntName = getLevelDntName(baseName);\r\n        if(dntName) {\r\n          if(!dntData.isLoaded(dntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(dntName, null, reportProgress, function() {\r\n              $timeout();\r\n            });\r\n          }\r\n          else if(!dntData.isLoaded(levelDntName)) {\r\n            // console.log('loading skills for ' + baseName);\r\n            dntData.init(levelDntName, null, reportProgress, function() {\r\n              $timeout();\r\n            });\r\n          }\r\n          else {\r\n            setupSkills(baseJobNames, vm.job);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function setupSkills(baseJobNames, job) {\r\n    \r\n    vm.skills = [];\r\n    var allReady = true;\r\n    angular.forEach(baseJobNames, function(baseName, index) {\r\n      var dntName = getDntName(baseName);\r\n      if(!dntData.isLoaded(dntName)) {\r\n        allReady = false;\r\n      }\r\n    });\r\n    \r\n    if(allReady) {\r\n      angular.forEach(baseJobNames, function(baseName, index) {\r\n        var dntName = getDntName(baseName);\r\n      \r\n        var skills = dntData.getData(dntName);\r\n        var numSkills = skills.length;\r\n        for(var s=0;s<numSkills;++s) {\r\n          if(skills[s].NameID == 0) {\r\n            continue;\r\n          }\r\n          \r\n          if(skills[s].EffectClass1 > 0 || \r\n             skills[s].EffectClass2 > 0 || \r\n             skills[s].EffectClass3 > 0 || \r\n             skills[s].EffectClass4 > 0 ||\r\n             skills[s].EffectClass5 > 0 ||  \r\n             skills[s].EffectClass6 > 0) {\r\n               \r\n            var newItem = {d: skills[s]};\r\n            \r\n            newItem.id = skills[s].id;\r\n            newItem.typeName = 'skills';\r\n            newItem.itemSource = 'skills';\r\n            newItem.name = translations.translate(skills[s].NameID, skills[s].NameIDParam);\r\n            newItem.needJobClass = skills[s].NeedJob;\r\n            newItem.rank = hCodeValues.rankNames[0];\r\n            newItem.baseJobName = baseName.toLowerCase();\r\n            newItem.icon = skills[s].IconImageIndex;\r\n            \r\n            vm.skills.push(exportLinkHelper.reloadSkill(newItem));\r\n          }\r\n        }\r\n      });\r\n  \r\n      vm.loadedJobId = job.id;\r\n    }\r\n  }\r\n  \r\n  vm.getResults = function() {\r\n    \r\n    var skills = getSkills();\r\n    if(skills == null) {\r\n      return [];\r\n    }\r\n    \r\n    if(vm.job && vm.job.id >= 0) {\r\n      localStorage.setItem('jobNumber', vm.job.id);\r\n    }\r\n    localStorage.setItem('nameSearch', vm.nameSearch);\r\n\r\n    var newResults = [];\r\n    var numSkills = skills.length;\r\n    for(var i=0;i<numSkills;++i) {\r\n      var e = skills[i];\r\n      \r\n      if(vm.nameSearch != '') {\r\n        var nameSearches = vm.nameSearch.split(' ');\r\n        if(!nameSearches.length) {\r\n          nameSearches = [vm.nameSearch];\r\n        }\r\n        var allMatch = true;\r\n        for(var ns=0;ns<nameSearches.length;++ns) {\r\n          if(e.name && e.name.toString().toUpperCase().indexOf(nameSearches[ns].toUpperCase()) == -1) {\r\n            allMatch = false;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(!allMatch) {\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(vm.job.id >= 0 && !vm.job.isClassJob(e.needJobClass)) {\r\n        continue;\r\n      }\r\n      \r\n      newResults.push(e);\r\n    }\r\n    return newResults;\r\n  }\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n  \r\n  function jobInit() {\r\n    if(translations.isLoaded() && jobs.isLoaded()) {\r\n      var newJobs = jobs.getFinalJobs();\r\n\r\n      if(vm.jobs && vm.jobs.length) {\r\n        newJobs.splice(0, 0, vm.jobs[0]);\r\n      }\r\n      vm.jobs = newJobs;\r\n      vm.allJobs = jobs.getAllJobs();\r\n      \r\n      var lastJobNumber = Number(localStorage.getItem('jobNumber'));\r\n      // console.log('using job', lastJobNumber);\r\n      if(lastJobNumber != null) {\r\n        angular.forEach(newJobs, function(value, key) {\r\n          if(value.id == lastJobNumber) {\r\n            vm.job = value;\r\n            // console.log('using job', value);\r\n            return;\r\n          }\r\n        });\r\n      }\r\n      \r\n      vm.getResults();\r\n    }\r\n  }\r\n  \r\n  function init() {\r\n    // console.log('skill init');\r\n    if(jobs.isLoaded()) {\r\n      $timeout(jobInit);\r\n    }\r\n    else {\r\n      jobs.init(reportProgress, function() { $timeout(jobInit); } );\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','saveHelper','dntData','jobs','hCodeValues','itemColumnsToLoad','character', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,saveHelper,dntData,jobs,hCodeValues,itemColumnsToLoad,character) {\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimCategoryLinks', dnsimCategoryLinks);\r\n\r\nfunction dnsimCategoryLinks() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      collapse: '=collapse',\r\n      cat: '=cat',\r\n      buildScreen: '=buildScreen',\r\n      onChange: '&onChange'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-category-links.html',\r\n    controller: dnsimCategoryLinksController,\r\n    controllerAs: 'ctrl',\r\n  };\r\n};\r\n\r\nfunction dnsimCategoryLinksController(itemCategory, $window, translations, $translate) {\r\n\r\n  var vm = this;\r\n\r\n  vm.categories = itemCategory.categories;\r\n  vm.collapsed = true;\r\n\r\n  vm.shouldShow = function(action) {\r\n    if(vm.buildScreen) {\r\n      return !action.hideInBuild;\r\n    }\r\n    else {\r\n      return !action.hideInSearch;\r\n    }\r\n  }\r\n\r\n  vm.isLoading = function() {\r\n    return !translations.loaded;\r\n  }\r\n\r\n  vm.setCategory = function(action) {\r\n    \r\n    if(vm.collapse) {\r\n      // console.log('collapsing cat', action);\r\n      vm.collapsed = !vm.collapsed;\r\n      $window.scrollTo(0, 0);\r\n    }\r\n    \r\n    // console.log('setting cat', action);\r\n    if(vm.cat != action) {\r\n      vm.cat = action;\r\n      localStorage.setItem('selectedItemCategory', action.name);\r\n\r\n      if(vm.onChange) {\r\n        vm.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  vm.getName = function(action) {\r\n    if(action.tId) {\r\n      return translations.translate(action.tId).toLowerCase();\r\n    }\r\n    else {\r\n      return $translate.instant(action.name);\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemIcon', ['exportLinkHelper','$location','region', dnsimItemIcon]);\r\n\r\nfunction dnsimItemIcon(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-icon.html',\r\n    link: function($scope, element, attrs) {\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.iconImage = $scope.getIcon();\r\n        }\r\n      });\r\n      \r\n      $scope.getIcon = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          var fileIndex = Math.floor($scope.item.icon/200 + 1);\r\n          \r\n          var prefix;\r\n          if($scope.item.typeName == 'skills') {\r\n            prefix = 'skillicon';\r\n          }\r\n          else {\r\n            prefix = 'itemicon';\r\n          }\r\n          \r\n          if(fileIndex > 9) {\r\n            return prefix + fileIndex + '.png';\r\n          }\r\n          else {\r\n            return prefix + '0' + fileIndex + '.png';\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n      \r\n      $scope.iconImage = $scope.getIcon();\r\n      \r\n      $scope.getIconXPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (($scope.item.icon % 10) * 40) + 5;\r\n        }\r\n        return 0;\r\n      }\r\n      \r\n      $scope.getIconYPostion = function() {\r\n        if($scope.item && $scope.item.icon > 0) {\r\n          return (Math.floor(($scope.item.icon % 200) / 10) * 40) + 4;\r\n        }\r\n        return 0;\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n  \r\nangular.module('dnsim').directive('dnsimItemLink', ['exportLinkHelper','$location','region', dnsimItemLink]);\r\n\r\nfunction dnsimItemLink(exportLinkHelper,$location,region) {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {\r\n      item: '=item',\r\n      noClick: '=noClick',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-item-link.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n      // var basePath = angular.element(document.querySelector('base')).attr('href');\r\n      \r\n      $scope.$watch('item', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          $scope.itemLink = 'item/?region=' + region.dntLocation.region + '&i=' + exportLinkHelper.encodeItem($scope.item);\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n      small: '=small'\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n  \r\n  if(this.small) {\r\n    this.sizeValue = '205px 205px';\r\n    this.iconSize = 22;\r\n    this.iconOffset = 0;\r\n  }\r\n  else {\r\n    this.sizeValue = '410px 410px';\r\n    this.iconSize = 44;\r\n    this.iconOffset = 5;\r\n  }\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * this.iconSize) + this.iconOffset;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        // $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        // });\r\n        $timeout();\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimSelectAllOnClick', [dnsimSelectAllOnClick]);\r\n\r\nfunction dnsimSelectAllOnClick() {\r\n  'use strict';\r\n  return {\r\n    restrict: 'A',\r\n    link: function(scope, element, attrs) {\r\n      var hasSelectedAll = false;\r\n      element.on('click', function($event) {\r\n        if (!hasSelectedAll) {\r\n          try {\r\n            //IOs, Safari, thows exception on Chrome etc\r\n            this.selectionStart = 0;\r\n            this.selectionEnd = this.value.length + 1;\r\n            hasSelectedAll = true;\r\n          } catch (err) {\r\n            //Non IOs option if not supported, e.g. Chrome\r\n            this.select();\r\n            hasSelectedAll = true;\r\n          }\r\n        }\r\n      });\r\n      //On blur reset hasSelectedAll to allow full select\r\n      element.on('blur', function($event) {\r\n        hasSelectedAll = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStats', ['hCodeValues','$translate',dnsimStats]);\r\n\r\nfunction dnsimStats(hCodeValues, $translate) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      stats: '=stats',\r\n      build: '=build',\r\n      altStats: '=altStats',\r\n      separator: '=separator',\r\n      filter: '=filter',\r\n      numInSet: '=numInSet'\r\n    },\r\n    link: function($scope, element, attrs) {\r\n      \r\n      var sep;\r\n      if(!$scope.separator) {\r\n        sep = '';\r\n      }\r\n      else {\r\n        sep = '&nbsp;' + $scope.separator + ' ';\r\n      }\r\n      \r\n      var addedElements = [];\r\n      var originalDisplay = element.css('display');\r\n      \r\n      function showStats() {\r\n        element.css('display', 'none' );\r\n        var stats = $scope.stats;\r\n        if(!stats) {\r\n          stats = $scope.altStats;\r\n        }\r\n        \r\n        angular.forEach(addedElements, function(value, key) {\r\n          value.remove();\r\n        });\r\n        \r\n        var first = true;\r\n        var lastElement = element;\r\n        \r\n        function append(text) {\r\n          var newElement = element.clone();\r\n          newElement.css('display', originalDisplay);\r\n          newElement.html(text);\r\n          \r\n          lastElement.after(newElement);\r\n          lastElement = newElement;\r\n          addedElements.push(newElement);\r\n        }\r\n\r\n        // get stats that are used to summarise\r\n        var summaryForStats = {};\r\n        angular.forEach(stats, function(stat, key) {\r\n          var def = hCodeValues.stats[stat.id];\r\n          if(def && def.summaryFor) {\r\n            summaryForStats[def.summaryFor] = stat;\r\n          }\r\n        });\r\n        \r\n        angular.forEach(stats, function(stat, key) {\r\n          var output = '';\r\n\r\n          // console.log('processing stat', stat);\r\n          \r\n          if(stat.id in hCodeValues.stats) {\r\n            \r\n            var def = hCodeValues.stats[stat.id];\r\n            if(!$scope.filter && 'hide' in def && def.hide) {\r\n              return;\r\n            }\r\n            \r\n            if($scope.filter && !def[$scope.filter]) {\r\n              return;\r\n            }\r\n\r\n            if(def.summaryFor) {\r\n              return;\r\n            }\r\n            // console.log('no summaryFor');\r\n\r\n            // hide when the hideIf stat exists\r\n            if('hideIf' in def && def.hideIf > 0) {\r\n              var hideStat = _.find(stats, function(s) {\r\n                return s.id == def.hideIf;\r\n              });\r\n              if(hideStat) {\r\n                return;\r\n              }\r\n            }\r\n\r\n            // hide when stat is added\r\n            var statAddTo = _.find(stats, function(s) {\r\n              var addToDef = hCodeValues.stats[s.id];\r\n              if (!addToDef) {\r\n                console.log('cannot find stat id', s.id)\r\n              } else {\r\n                return addToDef.addTo == def.id;\r\n              }\r\n            });\r\n\r\n            if(statAddTo) {\r\n              return;\r\n            }\r\n\r\n            // alter stat when addTo is set\r\n            if('addTo' in def && def.addTo > 0) {\r\n              var addStat = _.find(stats, function(s) {\r\n                return s.id == def.addTo;\r\n              });\r\n              if(addStat) {\r\n                stat = _.clone(stat);\r\n                stat.max += addStat.max;\r\n              }\r\n            }\r\n            \r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              if(stat.needSetNum <= $scope.numInSet) {\r\n                output += '*';\r\n              }\r\n              output += stat.needSetNum + '&nbsp;';\r\n            }\r\n\r\n            output += '<strong>';\r\n            \r\n            if($scope.build) {\r\n              if(def.element == 'primary') {\r\n                var eleId = 0;\r\n                if($scope.build.element) {\r\n                  eleId = $scope.build.element.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n              else if(def.element == 'secondary') {\r\n                var eleId = 0;\r\n                if($scope.build.secondaryElement) {\r\n                  eleId = $scope.build.secondaryElement.id;\r\n                }\r\n                output += $translate.instant(hCodeValues.elements[eleId].name) + '&nbsp;';\r\n              }\r\n            }\r\n            \r\n            output += $translate.instant(def.name)+':</strong>&nbsp;'+def.display(stat);\r\n            if(def.combineWith > 0) {\r\n              angular.forEach(stats, function(stat2, key2) {\r\n                if(stat2.id == def.combineWith) {\r\n\r\n                  // alter stat when addTo is set\r\n                  if('addTo' in def && def.addTo > 0) {\r\n                    var addStat2 = _.find(stats, function(s) {\r\n                      return s.id == def.addTo;\r\n                    });\r\n                    if(addStat2) {\r\n                      stat2 = _.clone(stat2);\r\n                      stat2.max += addStat2.max;\r\n                    }\r\n                  }\r\n\r\n                  if(stat2.max != stat.max) {\r\n                    output += '-' + def.display(stat2);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n\r\n            if(stat.id in summaryForStats) {\r\n              var sStat = summaryForStats[stat.id];\r\n              var sDef = hCodeValues.stats[sStat.id];\r\n              output += '&nbsp;|&nbsp;<em>' + sDef.display(sStat);\r\n              output += '</em>';\r\n            }\r\n\r\n          }\r\n          else {\r\n            if(!first) {\r\n              output += sep;\r\n            }\r\n            first = false;\r\n          \r\n            if('needSetNum' in stat) {\r\n              output += stat.needSetNum + '-Increases&nbsp;';\r\n            }\r\n            \r\n            output += stat.id+':&nbsp;'+stat.max;\r\n          }\r\n          \r\n          append(output);\r\n        });\r\n      }\r\n        \r\n      $scope.$watch('stats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('altStats', function(newValue, oldValue) {\r\n        if (newValue) {\r\n          showStats();\r\n        }\r\n      });\r\n      \r\n      $scope.$watch('numInSet', function(newValue, oldValue) {\r\n        if (newValue >= 0) {\r\n          showStats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToNumber', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + value;\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimStringToPercent', dnsimStringToNumber);\r\n\r\nfunction dnsimStringToNumber() {\r\n  return {\r\n    require: 'ngModel',\r\n    link: function(scope, element, attrs, ngModel) {\r\n      ngModel.$parsers.push(function(value) {\r\n        return '' + (value/100.0);\r\n      });\r\n      ngModel.$formatters.push(function(value) {\r\n        return parseFloat(value, 10)*100;\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').directive('fileChange', ['$parse', fileChangeFunction]);\r\n\r\nfunction fileChangeFunction($parse) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function ($scope, element, attrs) {\r\n\r\n        // Get the function provided in the file-change attribute.\r\n        // Note the attribute has become an angular expression,\r\n        // which is what we are parsing. The provided handler is \r\n        // wrapped up in an outer function (attrHandler) - we'll \r\n        // call the provided event handler inside the handler()\r\n        // function below.\r\n        var attrHandler = $parse(attrs['fileChange']);\r\n\r\n        // This is a wrapper handler which will be attached to the\r\n        // HTML change event.\r\n        var handler = function (e) {\r\n\r\n          $scope.$apply(function () {\r\n\r\n            // Execute the provided handler in the directive's scope.\r\n            // The files variable will be available for consumption\r\n            // by the event handler.\r\n            attrHandler($scope, { $event: e, files: e.target.files });\r\n          });\r\n        };\r\n\r\n        // Attach the handler to the HTML change event \r\n        element[0].addEventListener('change', handler, false);\r\n      }\r\n    };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('character', character);\r\nfunction character(dntData,itemColumnsToLoad,jobs,hCodeValues) {\r\n\r\n  var jobConversions = 'rebootplayerweighttable.json';\r\n  var statCaps = 'playercommonleveltable.json';\r\n  var jobBaseStats = 'playerleveltable.optimised.json';\r\n\r\n  var heroLevels = 'heroleveltable.json';\r\n  var heroLevelPotentials = 'potentialtable_herolevel.json';\r\n  \r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n  return {\r\n    init: function(complete) {\r\n      jobs.init(reportProgress, complete);\r\n      dntData.init(jobConversions, itemColumnsToLoad.jobConversionColsToLoad, reportProgress, complete, false);\r\n      dntData.init(statCaps, itemColumnsToLoad.statCapColsToLoad, reportProgress, complete, false);\r\n      dntData.init(jobBaseStats, itemColumnsToLoad.jobBaseStatColsToLoad, reportProgress, complete, false);\r\n      dntData.init(heroLevels, null, reportProgress, complete, false);\r\n      dntData.init(heroLevelPotentials, null, reportProgress, complete, false);\r\n    },\r\n    \r\n    getHeroStats: function(heroLevel) {\r\n      var heroStats = [];\r\n      if(heroLevel > 0) {\r\n        var index = dntData.findFast(heroLevels, 'id', heroLevel);\r\n        if(index.length == 1) {\r\n          var h = dntData.getRow(heroLevels, index[0]);\r\n          if(h) {\r\n            var pIndex = dntData.findFast(heroLevelPotentials, 'PotentialID', h.HeroLevelAbilityID);\r\n            if(pIndex.length == 1) {\r\n              var p = dntData.getRow(heroLevelPotentials, pIndex[0]);\r\n              if(p) {\r\n                heroStats = hCodeValues.getStats(p);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return heroStats;\r\n    },\r\n    \r\n    getStatCaps: function(level) {\r\n      if(level > 0) {\r\n        var index = dntData.findFast(statCaps, 'id', level);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(statCaps, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getConversions: function(jobId) {\r\n      if(jobId > 0) {\r\n        var index = dntData.findFast(jobConversions, 'id', jobId);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobConversions, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    getBaseStats: function(level, jobId) {\r\n      if(level > 0 && jobId > 0) {\r\n        var index = dntData.findFast(jobBaseStats, 'id', (Number(jobId) * 100) + Number(level) - 100);\r\n        if(index.length == 1) {\r\n          return dntData.getRow(jobBaseStats, index[0]);\r\n        }\r\n      }\r\n      \r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true,\r\n      TierName: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      // progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete, ignoreErrors) {\r\n        \r\n        if(this.loaded) {\r\n          if(complete) {\r\n            complete();\r\n          }\r\n        }\r\n        else {\r\n          // this.progressCallback = progress;\r\n          if(complete) {\r\n            this.completeCallbacks.push(complete);\r\n          }\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) {\r\n                    // if(t.progressCallback) {\r\n                      // t.progressCallback(msg);\r\n                    // }\r\n                  }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      if(value) {\r\n                        value();\r\n                      }\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    t.failed = true;\r\n                    if(ignoreErrors) {\r\n                      t.loaded = true;\r\n                      console.log('ignoring the error - this file may not exist yet for the region');\r\n                      angular.forEach(t.completeCallbacks, function(value, key) {\r\n                        if(value) {\r\n                          value();\r\n                        }\r\n                      });\r\n                      t.completeCallbacks = [];\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                    }\r\n                    else {\r\n                      t.startedLoading = false;\r\n                      t.loaded = false;\r\n                      $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    }\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete, ignoreErrors) {\r\n      if(ignoreErrors !== false) {\r\n        ignoreErrors = true;\r\n      }\r\n\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete, ignoreErrors);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)) {\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var val = data[r][colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          if(Array.isArray(findIndex[column][value])) {\r\n            return findIndex[column][value];\r\n          }\r\n          else {\r\n            return [findIndex[column][value]];\r\n          }\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasFailed : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].failed;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    saveMemory: function() {\r\n      for(var fileName in this.loaders) {\r\n        this.loaders[fileName].saveReaderMemory();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntInit', ['items','jobs','dntData','itemFactory',dntInit]);\r\nfunction dntInit(items,jobs,dntData,itemFactory) {\r\n  return function(progress) {\r\n    \r\n    progress('starting init');\r\n    \r\n    var allFactories = [jobs];\r\n    \r\n    var dntFiles = {};\r\n    angular.forEach(items, function(item, key) {\r\n      if(key != 'all') {\r\n        angular.forEach(item, function(value, prop) {\r\n          if(prop.indexOf('Dnt') == prop.length-3) {\r\n            var newFactory = { \r\n              init: function(progress, complete) {\r\n                dntData.init(value, null, progress, complete);\r\n              },\r\n              isLoaded: function() {\r\n                return dntData.isLoaded(value);\r\n              },\r\n              fileName: value,\r\n            };\r\n            \r\n            allFactories.push(newFactory);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    function initFactory(index) {\r\n    \r\n      if(index < allFactories.length) {\r\n        allFactories[index].init(progress, function() { \r\n          if(allFactories[index].isLoaded()) {\r\n            if('fileName' in allFactories[index]) {\r\n              progress('dnt loaded: ' + allFactories[index].fileName);\r\n            }\r\n            initFactory(index+1);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        progress('Full initialise complete');\r\n      }\r\n    }\r\n    \r\n    initFactory(0);\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['items','jobs','dntData',dntReset]);\r\nfunction dntReset(items, jobs, dntData) {\r\n  return function() {\r\n    \r\n    angular.forEach(items, function(source, name) {\r\n      source.reset();\r\n    });\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dvStatcardHelper', dvStatcardHelper);\r\nfunction dvStatcardHelper() {\r\n  'use strict';\r\n\r\n  // Conversions between dngs stat IDs and dvstatcard keys\r\n  var statMap = {\r\n      0: 'statStr',\r\n      1: 'statAgi',\r\n      2: 'statInt',\r\n      3: 'statVit',\r\n      4: 'statPDmgMin',\r\n      5: 'statPDmgMax',\r\n      6: 'statMDmgMin',\r\n      7: 'statMDmgMax',\r\n      8: 'statPDef',\r\n      9: 'statMDef',\r\n      12: 'statCrit',\r\n      16: 'statFire',\r\n      17: 'statIce',\r\n      18: 'statLight',\r\n      19: 'statDark',\r\n      25: 'statHp',\r\n      26: 'statMana',\r\n      29: 'statFD',\r\n      103: 'statCritDmg',\r\n  };\r\n\r\n  //    Converts dngs stat IDs to dvstatcard stat keys\r\n  function convertStat(stat) {\r\n    var ret = statMap[stat.id];\r\n    return ret || 'unknown';\r\n  };\r\n\r\n  function convertPercentToNum(val) {\r\n      return val * 100;\r\n  };\r\n\r\n  //    Stats that need to have some conversion applied between dngs and dvstatcard\r\n  var adjustments = {\r\n      16: convertPercentToNum,\r\n      17: convertPercentToNum,\r\n      18: convertPercentToNum,\r\n      19: convertPercentToNum,\r\n  }\r\n\r\n  //    Convert between numerical standards between dngs and dvstatcard\r\n  function adjustStat(stat) {\r\n      var func = adjustments[stat.id];\r\n      if (func) {\r\n          return func(stat.max);\r\n      }\r\n      return stat.max;\r\n  };\r\n\r\n  return {\r\n      convertStats: function(build, buildName, calcStats) {\r\n        var ret = {\r\n            characterName: buildName,\r\n            remark: 'Imported from DNGearsim',\r\n            classId: build.job.id,\r\n            statHeroLevel: build.heroLevel,\r\n        }\r\n        for (var k in calcStats) {\r\n            var v = calcStats[k];\r\n            ret[convertStat(v)] = adjustStat(v);\r\n        }\r\n        return ret;\r\n      },\r\n      cardImportUrl: 'https://redirect.divinitor.com/dngsimport',\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('exportLinkHelper', exportLinkHelper);\r\nfunction exportLinkHelper(items,dntData,itemFactory,hCodeValues,itemColumnsToLoad,statHelper,translations,itemCategory,region) {\r\n\r\n  return {\r\n    \r\n    encodeItem: function(item, small) {\r\n      if(item) {\r\n        var itemString;\r\n\r\n        if(item.typeName == 'custom')  {\r\n          itemString = '_custom';\r\n          angular.forEach(item.stats, function(stat, index) {\r\n            if(index > 0) {\r\n              itemString += '|';\r\n            }\r\n            else {\r\n              itemString += ':C';\r\n            }\r\n            itemString += stat.id.toString(36) + '=' + stat.max;\r\n          });\r\n        }\r\n        else if(item.id) {\r\n          itemString = 'I' + item.id.toString(36) + ':_';\r\n          if('itemSource' in item) {\r\n            itemString += item.itemSource;\r\n          }\r\n          else if('itemTypeName' in item) {\r\n            // this is to support groups saved with the old property name\r\n            itemString += item.itemTypeName;\r\n          }\r\n          else if(item.fileName) {\r\n            itemString += ':F' + item.fileName;\r\n          }\r\n        \r\n          if(item.enchantmentNum || item.enchantmentNum == 0) {\r\n            itemString += ':E' + item.enchantmentNum.toString(36);\r\n          }\r\n          if(item.pid > 0) {\r\n            itemString += ':P' + item.pid.toString(36);\r\n          }\r\n          // if(item.setId > 0) {\r\n            // itemString += ':S' + item.setId.toString(36);\r\n          // }\r\n          if(item.sparkId > 0) {\r\n            itemString += ':H' + item.sparkId.toString(36);\r\n          }\r\n          if(item.typeName == 'skills') {\r\n            itemString += ':J' + item.baseJobName;\r\n          }\r\n          if(item.pve) {\r\n            itemString += ':V' + item.pve;\r\n          }\r\n        }\r\n        \r\n        if(item.name && !small) {\r\n          itemString += ':.' + item.name.replace(/ /g, '-').replace(/\\//g, ' ');\r\n        }\r\n\r\n        return itemString;\r\n      }\r\n      \r\n      return '';\r\n    },\r\n    \r\n    decodeItem: function(itemStr) {\r\n      var item = {};\r\n      \r\n      if(itemStr) {\r\n        angular.forEach(itemStr.split(':'), function(itemBit, bitIndex) {\r\n          if(itemBit.charAt(0) == 'I') {\r\n            item.id = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'E') {\r\n            item.enchantmentNum = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'P') {\r\n            item.pid = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'S') {\r\n            item.setId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'H') {\r\n            item.sparkId = parseInt(itemBit.substr(1), 36);\r\n          }\r\n          else if(itemBit.charAt(0) == 'J') {\r\n            item.baseJobName = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == 'V') {\r\n            item.pve = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '_') {\r\n            item.itemSource = itemBit.substr(1);\r\n          }\r\n          else if(itemBit.charAt(0) == '.') {\r\n            item.name = itemBit.substr(1).replace('-', ' ');\r\n          }\r\n          else if(itemBit.charAt(0) == 'C') {\r\n            item.stats = [];\r\n            var statString = itemBit.substr(1);\r\n            angular.forEach(statString.split('|'), function(statBit, statBitIndex) {\r\n              var splitStat = statBit.split('=');\r\n              item.stats.push({\r\n                id: parseInt(splitStat[0], 36),\r\n                max: Number(splitStat[1])\r\n              });\r\n            });\r\n          }\r\n          else if(itemBit.charAt(0) == 'F') {\r\n            \r\n            item.fileName = itemBit.substr(1);\r\n            angular.forEach(items, function(itemSource, key) {\r\n              if(itemSource.mainDnt && itemSource.mainDnt.indexOf(item.fileName + '.') == 0) {\r\n                item.itemSource = key;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n      return item;\r\n    },\r\n    \r\n    createGroupLink: function(groupName, group) {\r\n      var itemStrings = [];\r\n      var self = this;\r\n      \r\n      if(group == null) {\r\n        return '';\r\n      }\r\n      \r\n      angular.forEach(group.items, function(item, key) {\r\n        var itemString = self.encodeItem(item, true);  \r\n        if(itemString && itemString.length) {\r\n          itemStrings.push(itemString);\r\n        }\r\n      });\r\n  \r\n      var retVal = 'view-group?region=';\r\n      if(region.dntLocation && region.dntLocation.region) {\r\n        retVal += region.dntLocation.region;\r\n      }\r\n      \r\n      if(group.enemyLevel) {\r\n        retVal += '&e=' + group.enemyLevel;\r\n      }\r\n      if(group.playerLevel) {\r\n        retVal += '&p=' + group.playerLevel;\r\n      }\r\n      if(group.heroLevel) {\r\n        retVal += '&h=' + group.heroLevel;\r\n      }\r\n      if(group.job && group.job.id) {\r\n        retVal += '&j=' + group.job.id;\r\n      }\r\n      if(group.damageType && group.damageType.id) {\r\n        retVal += '&d=' + group.damageType.id;\r\n      }\r\n      if(group.element && group.element.id) {\r\n        retVal += '&t=' + group.element.id;\r\n      }\r\n      if(group.secondaryElement && group.secondaryElement.id) {\r\n        retVal += '&s=' + group.secondaryElement.id;\r\n      }\r\n      retVal += '&g=' + encodeURI(groupName) + '&i=' + itemStrings.join(',');\r\n      return retVal;\r\n    },\r\n\r\n    reloadSkill: function(item) {\r\n\r\n        if(!item.enchantmentNum) {\r\n          item.enchantmentNum = 1;\r\n        }\r\n        \r\n        var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n        var pv = 'pve';\r\n        if(item.pve == 'pvp') {\r\n          pv = 'pvp';\r\n        }\r\n        var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + pv + '.json';\r\n        \r\n        var skillData = dntData.find(skillDnt, 'id', item.id)[0];\r\n        if(!skillData) {\r\n          console.log('cannot get skill data from ', skillDnt);\r\n        }\r\n        var skillLevelDatas = dntData.getData(skillLevelDnt);\r\n\r\n        var skillLevelVals = {};\r\n        angular.forEach(skillLevelDatas, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n          }\r\n        });\r\n        \r\n        var newItem = {\r\n          id: item.id,\r\n          itemSource: item.itemSource,\r\n          typeName: item.itemSource,\r\n          needJobClass: skillData.NeedJob,\r\n          baseJobName: item.baseJobName,\r\n          rank: hCodeValues.rankNames[0],\r\n          enchantmentNum: item.enchantmentNum,\r\n          name: translations.translate(skillData.NameID, skillData.NameIDParam),\r\n          description: translations.translate(skillLevelVals.SkillExplanationID, skillLevelVals.SkillExplanationIDParam),\r\n          icon: skillData.IconImageIndex,\r\n          pve: item.pve\r\n        };\r\n        \r\n        newItem.stats = statHelper.getSkillStats(newItem, skillData, skillLevelDatas);\r\n        return newItem;\r\n    },\r\n\r\n    reloadSourceItem: function(item) {\r\n      var itemType = items[item.itemSource];\r\n      var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n      if(!ds.length) {\r\n        console.log('item ' + item.id + ' not found in ' + itemType.mainDnt);\r\n        return;\r\n      }\r\n\r\n      var rowNum = ds[0];\r\n      var typeParam1 = dntData.getValue(itemType.mainDnt, rowNum, 'TypeParam1');\r\n    \r\n      var p = null;\r\n      \r\n      var ps = dntData.find(itemType.potentialDnt, 'id', item.pid);\r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDnt, 'PotentialID', typeParam1);\r\n      }\r\n      \r\n      if(!ps.length) {\r\n        ps = dntData.find(itemType.potentialDntEx, 'id', item.pid);\r\n        if(!ps.length) {\r\n          ps = dntData.find(itemType.potentialDntEx, 'PotentialID', typeParam1);\r\n        }\r\n      }\r\n      \r\n      if(ps.length > 0) {\r\n        p = ps[0];\r\n        \r\n        if(p.PotentialID != typeParam1) {\r\n          // this happened one time\r\n          // not sure how but it corrupted the stats\r\n          p = null;\r\n          console.log('bad potential');\r\n        }\r\n      }\r\n      \r\n      var newItem = itemFactory.createItem(itemType, rowNum, p);\r\n      itemFactory.initItem(newItem);\r\n      itemCategory.setItemCategory(newItem);\r\n      newItem.gemSlot = item.gemSlot;\r\n\r\n      var usePartDnt = null;\r\n      if(newItem.typeName != 'weapons' && newItem.typeId != 0) {\r\n        usePartDnt = 'partsDnt';\r\n      }\r\n      else {\r\n        usePartDnt = 'weaponDnt';\r\n      }\r\n\r\n      if(usePartDnt) {\r\n        if(dntData.isLoaded(itemType[usePartDnt]) && dntData.isLoaded(itemType.setDnt)) {\r\n          newItem.setStats = [];\r\n          var parts = dntData.find(itemType[usePartDnt], 'id', item.id);\r\n          if(parts.length > 0) {\r\n            newItem.setId = parts[0].SetItemID;\r\n            var sets = dntData.find(itemType.setDnt, 'id', parts[0].SetItemID);\r\n            if(sets.length > 0) {\r\n              newItem.setStats = hCodeValues.getStats(sets[0]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      newItem.fullStats = newItem.stats;\r\n      if(item.enchantmentNum >= 0) {\r\n        newItem.enchantmentNum = item.enchantmentNum;\r\n        \r\n        if(newItem.typeName == 'skills') {\r\n          // would this even happen?\r\n        }\r\n        else if(newItem.typeName == 'talisman') {\r\n          var extraStats = [];\r\n          var useStats = hCodeValues.mergeStats(newItem.stats, []);\r\n          angular.forEach(useStats, function(stat, index) {\r\n            extraStats.push({id: stat.id, max: stat.max * (newItem.enchantmentNum/100)});\r\n          });\r\n          \r\n          newItem.enchantmentStats = extraStats;\r\n        }\r\n        else if(itemType.enchantDnt) {\r\n          var enchantments = dntData.find(itemType.enchantDnt, 'EnchantID', newItem.enchantmentId);\r\n          if(!enchantments.length && itemType.enchantDnt2) {\r\n            enchantments = dntData.find(itemType.enchantDnt2, 'EnchantID', newItem.enchantmentId);\r\n          }\r\n\r\n          angular.forEach(enchantments, function(enchantment, index) {\r\n            if(enchantment.EnchantLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n        else if(itemType.petLevelDnt) {\r\n          var petLevels = dntData.find(itemType.petLevelDnt, 'PetLevelTypeID', newItem.enchantmentId);\r\n          angular.forEach(petLevels, function(enchantment, index) {\r\n            if(enchantment.PetLevel == newItem.enchantmentNum) {\r\n              newItem.enchantmentStats = hCodeValues.getStats(enchantment);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if(newItem.enchantmentStats) {\r\n        newItem.fullStats = hCodeValues.mergeStats(newItem.enchantmentStats, newItem.stats);\r\n      }\r\n      \r\n      if(newItem.dragonjeweltype) {\r\n        newItem.offensiveGemSlots = 0;\r\n        newItem.increasingGemSlots = 0;\r\n        var itemData = dntData.find('dragonjewelslottable.json', 'DragonJewelID', newItem.dragonjeweltype);\r\n        if(itemData && itemData.length > 0) {\r\n          if(itemData[0].DragonJewelSlot1 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 1) newItem.offensiveGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 1) newItem.offensiveGemSlots++;\r\n          \r\n          if(itemData[0].DragonJewelSlot1 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot2 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot3 == 2) newItem.increasingGemSlots++;\r\n          if(itemData[0].DragonJewelSlot4 == 2) newItem.increasingGemSlots++;\r\n        }\r\n      }\r\n      \r\n      return newItem;\r\n    },\r\n    \r\n    reloadItem: function(item) {\r\n\r\n      if(item == null) {\r\n        // console.log('cannot reload null item');\r\n        return;\r\n      }\r\n      \r\n      // support for old property name\r\n      if('itemTypeName' in item && !item.itemSource) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      // console.log('checking ' + item.itemSource)\r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n        // console.log('changed to ' + item.itemSource)\r\n      }\r\n      \r\n      if(item.itemSource == 'custom' || item.typeName == 'custom') {\r\n        item.typeName = 'custom';\r\n        return item;\r\n      }\r\n      else if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n        return this.reloadSkill(item);\r\n      }\r\n      else if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        var ds = dntData.findFast(itemType.mainDnt, 'id', item.id);\r\n        if(ds.length) {\r\n          return this.reloadSourceItem(item);\r\n        }\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        var datas = dntData.findFast(item.fileName + '.json', 'id', item.id);\r\n        if(datas.length > 0) {\r\n          var row = datas[0];\r\n          var d = dntData.getRow(item.fileName + '.json', row);\r\n          var newItem = itemFactory.createBasicItem(d);\r\n          newItem.row = row;\r\n          newItem.needJobClass = d.NeedJobClass;\r\n          newItem.exchangeType = d.ExchangeType;\r\n          newItem.fileName = item.fileName;\r\n          newItem.gemSlot = item.gemSlot;\r\n          newItem.description = translations.translate(d.DescriptionID, d.DescriptionIDParam);\r\n          itemFactory.initItem(newItem);\r\n          return newItem;\r\n        }\r\n        else {\r\n          return {name: 'unknown item'};\r\n        }\r\n      }\r\n      else {\r\n        return {name: 'unknown item source: ' + item.itemSource};\r\n      }\r\n    },\r\n    \r\n    getDntFiles: function(item) {\r\n      if(item == null) {\r\n        return {};\r\n      }\r\n\r\n      var dntFiles = {};\r\n      if(!item.itemSource && item.itemTypeName in items) {\r\n        item.itemSource = item.itemTypeName;\r\n      }\r\n      \r\n      if(item.itemSource == 'rbTech') {\r\n        item.itemSource = 'tech';\r\n      }\r\n      \r\n      if(item.itemSource in items) {\r\n        var itemType = items[item.itemSource];\r\n        \r\n        dntFiles['exchange.json'] = null;\r\n        dntFiles[itemType.mainDnt] = itemColumnsToLoad.mainDnt;\r\n        \r\n        for(var fileType in itemType) {\r\n          if(fileType.indexOf('Dnt') > 0) {\r\n            if(fileType != 'enchantDnt' || fileType != 'enchantDnt2' || item.enchantmentNum) {\r\n              dntFiles[itemType[fileType]] = itemColumnsToLoad[fileType];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(item.itemSource == 'skills' || item.typeName == 'skills') {\r\n          var skillDnt = 'skilltable_character' + item.baseJobName + '.json';\r\n          dntFiles[skillDnt] = null;\r\n          var skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pve' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n          skillLevelDnt = 'skillleveltable_character' + item.baseJobName + 'pvp' + '.json';\r\n          dntFiles[skillLevelDnt] = null;\r\n      }\r\n      \r\n      if(item.fileName) {\r\n        dntFiles[item.fileName + '.json'] = null;\r\n      }\r\n    \r\n      return dntFiles;\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('groupHelper', ['exportLinkHelper',groupHelper]);\r\nfunction groupHelper(exportLinkHelper) {\r\n  'use strict';\r\n  \r\n  return {\r\n    reloadGroup: function(groupName, group) {\r\n      var newItems = [];\r\n      angular.forEach(group.items, function(item, key) {\r\n        var newItem = exportLinkHelper.reloadItem(item);\r\n        if(newItem) {\r\n          newItems.push(newItem);\r\n        }\r\n      });\r\n      \r\n      return newItems;\r\n    },\r\n    \r\n    getDntFiles: function(group) {\r\n\r\n      var allDntFiles = {};\r\n      angular.forEach(group.items, function(item, key1) {\r\n        \r\n        var dntFiles = exportLinkHelper.getDntFiles(item);\r\n\r\n        angular.forEach(dntFiles, function(value, key) {\r\n          allDntFiles[key] = value;\r\n        });\r\n      });\r\n      \r\n      return allDntFiles;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemCategory',\r\n['itemFactory','items','dntData',itemCategory]);\r\nfunction itemCategory(itemFactory,items,dntData) {\r\n\r\n  return {\r\n    categories: [\r\n      {path: 'everything', name:'everything', searchType: 'everything', hideInBuild: true},\r\n      {path: 'titles', name:'titles', sourceType: 'titles', hideRank: true, hideJob: true, hideLevel: true, numItemText: '1', maxCat: 1},\r\n      {path: 'weapons', name:'weapons', sourceType: 'equipment', numItemText: '2', maxExchange: 1, maxCat: 2, limitExchange: [1,2]},\r\n      {path: 'armour', name:'armour', sourceType: 'equipment', numItemText: '5', maxExchange: 1, maxCat: 5, limitExchange: [3,4,5,6,7]},\r\n      {path: 'accessories', name:'accessories', sourceType: 'equipment', hideJob: true, maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], tId: 7604},\r\n      {path: 'techs', name:'techs', sourceType: 'techs', maxCat: 4, maxExchange: 2, limitExchange: [8,9,10], hideJob: true},\r\n      {path: 'offensive-gems', name:'offensive gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 1},\r\n      {path: 'increasing-gems', name:'increasing gems', sourceType: 'gems', hideJob: true, limitExchange: [54], limitGemType: 2},\r\n      {path: 'enhancement-plates', name:'enhancement plates', sourceType: 'plates', hideJob: true, numItemText: '8+3', maxCat: 11, maxExchange: 15, limitExchange: [33], limitRank: [0,1,2,3]},\r\n      {path: 'expedition-plates', name:'expedition plates', sourceType: 'plates', hideRank: true, hideJob: true, numItemText: '4', maxCat: 4, maxExchange: 15, limitExchange: [33], limitRank: [4,5]},\r\n      {path: 'talisman', name:'talisman', sourceType: 'talisman', hideJob: true, numItemText: '8+4', maxCat: 12, maxExchange: 12, limitExchange: [52,53], tId: 1000054149},\r\n      {path: 'costume', name:'costume', sourceType: 'cash', numItemText: '7', maxCat: 7, maxExchange: 1, hideLevel: true, limitExchange: [16,17,18,19,20,21,22], tId: 7607},\r\n      {path: 'imprint', name:'imprint', sourceType: 'imprint', numItemText: '7', maxCat: 7, hideLevel: true, hideJob: true, tId: 1000108314},\r\n      {path: 'cash', name:'cash', sourceType: 'cash', numItemText: '8', maxCat: 8, maxExchange: 2, hideJob: true, hideLevel: true, limitExchange: [23,24,25,26,27,28,29], tId: 7608},\r\n      {path: 'extras', name:'extras', sourceType: 'xtras', limitExchange: [47], hideJob: true, hideLevel: true, tId: 4504},\r\n      {path: 'skills', name:'skills', searchType: 'skills'},\r\n      {path: 'custom', name:'custom', searchType: 'custom', hideInSearch: true},\r\n      ],\r\n      \r\n    byName: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.name == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n      \r\n    byPath: function(name) {\r\n      var retVal = null;\r\n      angular.forEach(this.categories, function(category, index) {\r\n        if(category.path == name) {\r\n          retVal = category;\r\n        }\r\n      });\r\n      \r\n      return retVal;\r\n    },\r\n    \r\n    getItems: function(name) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var retVal = [];\r\n        angular.forEach(items, function(source, sourceName) {\r\n          if(source.type == cat.sourceType && retVal) {\r\n            if(!source.items && !source.loading) {\r\n              itemFactory.loadItems(source);\r\n            }\r\n            \r\n            if(source.items) {\r\n              retVal = retVal.concat(source.items);\r\n            }\r\n            else {\r\n              retVal = null; // if any are null just return null\r\n            }\r\n          }\r\n        });\r\n        \r\n        var catItems = [];\r\n        if(retVal) {\r\n          var vm = this;\r\n          angular.forEach(retVal, function(item, index) {\r\n            if(item.typeName == name) {\r\n              catItems.push(item);\r\n            }\r\n            else if(vm.isItemForCat(cat, item, item.data)) {\r\n              item.typeName = name;\r\n              catItems.push(item);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return catItems;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    isItemForCat: function(cat, item) {\r\n\r\n      if(!(item.itemSource in items)) {\r\n        return false;\r\n      }\r\n      \r\n      if(items[item.itemSource].type != cat.sourceType) {\r\n        return false;\r\n      }\r\n      \r\n      if(item.itemType == cat.name) {\r\n        return true;\r\n      }\r\n      \r\n      var anyMatch;\r\n      if(cat.limitExchange) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitExchange.length;++i) {\r\n          if(cat.limitExchange[i] == item.exchangeType || (item.rawData && cat.limitExchange[i] == item.rawData.ExchangeType)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitRank) {\r\n        anyMatch = false;\r\n        for(var i=0;i<cat.limitRank.length;++i) {\r\n          if((item.rank && cat.limitRank[i] == item.rank.id) || (item.rawData && cat.limitRank[i] == item.rawData.Rank)) {\r\n            anyMatch = true;\r\n          }\r\n        }\r\n\r\n        if(!anyMatch) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if(cat.limitGemType) {\r\n        var gemTypes = dntData.find(items.gem.gemDnt, 'id', item.id);\r\n        if(gemTypes.length > 0) {\r\n          \r\n          if(gemTypes[0].Type != cat.limitGemType) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    },\r\n    \r\n    init: function(name, complete) {\r\n      var cat = this.byName(name);\r\n      if(cat && 'sourceType' in cat) {\r\n        var sources = _.filter(items, function(source) {\r\n          return (source.type == cat.sourceType);\r\n        });\r\n\r\n        var numComplete = 0;\r\n        _.each(sources, function(source) {\r\n          source.init(function() {}, function() {\r\n              numComplete++;\r\n              if(numComplete == sources.length) {\r\n                complete();\r\n              }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    \r\n    setItemCategory: function (item, rawData) {\r\n      var vm = this;\r\n      \r\n      angular.forEach(this.categories, function(cat, index) {\r\n        if(vm.isItemForCat(cat, item, rawData)) {\r\n          item.typeName = cat.name;\r\n        }\r\n      });\r\n    },\r\n    \r\n    getItemsByCategory: function(items) {\r\n      var itemMap = {};\r\n      if(items) {\r\n        var types = {};\r\n        angular.forEach(items, function(item, index) {\r\n          if(item) {\r\n            if(!(item.typeName in types)) {\r\n              types[item.typeName] = [];\r\n            }\r\n            types[item.typeName].push(item);\r\n          }\r\n        });\r\n        \r\n        angular.forEach(this.categories, function(category, index) {\r\n\r\n          if(category.name in types) {\r\n            \r\n            var sorted = types[category.name].sort(function(item1, item2) {\r\n              if(category.name == 'talisman') {\r\n                \r\n                var enh1 = item1.enchantmentNum;\r\n                if(!enh1) enh1 = 0;\r\n                var enh2 = item2.enchantmentNum;\r\n                if(!enh2) enh2 = 0;\r\n                \r\n                if(enh1 != enh2) {\r\n                  return enh2 - enh1;\r\n                }\r\n              }\r\n              else if(item1.itemSource == 'gem' || item1.itemSource == 'plate') {\r\n                if(item1.gemSlot || item2.gemSlot) {\r\n                  if(!item1.gemSlot) {\r\n                    return 1;\r\n                  }\r\n                  else if(!item2.gemSlot) {\r\n                    return -1;\r\n                  }\r\n                  return item1.gemSlot - item2.gemSlot;\r\n                }\r\n                else if(item2.levelLimit != item1.levelLimit) {\r\n                  return item2.levelLimit - item1.levelLimit;\r\n                }\r\n              }\r\n              else if('exchangeType' in item1 && 'exchangeType' in item2) {\r\n                return item1.exchangeType - item2.exchangeType;\r\n              }\r\n              \r\n              return item1.name.localeCompare(item2.name);\r\n            });\r\n            itemMap[category.name] = sorted;\r\n          }\r\n          else {\r\n            itemMap[category.name] = [];\r\n          }\r\n        });\r\n        \r\n        /*\r\n        angular.forEach(items, function(item, index) {\r\n          if(item && !(item.typeName in itemMap)) {\r\n            // console.log('we dont know ' + item.typeName + ' anymore')\r\n            itemMap.typeError = true;\r\n          }\r\n        });\r\n        */\r\n      }\r\n      return itemMap;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('excludeService', excludeService);\r\n\r\nfunction excludeService() {\r\n return {\r\n     ids: [{\r\n            name: 'unbound plates',\r\n            min: 0,\r\n            max: 0\r\n        }\r\n     ],\r\n };\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemFactory',itemFactory);\r\n\r\nfunction itemFactory(translations,dntData,hCodeValues,items) {\r\n  \r\n  return {\r\n    loadItems: loadItems,\r\n    initItem: initItem,\r\n    createItem: createItem,\r\n    getItemData: getItemData,\r\n    createBasicItem: createBasicItem,\r\n  };\r\n  \r\n  function createItem(itemType, row, p) {\r\n    \r\n    // data and potential are used to initialise name and stats\r\n    // this is only done when needed\r\n    // they are then removed from the object\r\n    return {\r\n      row: row,\r\n      potential : p,\r\n      id: dntData.getValue(itemType.mainDnt, row, 'id'),\r\n      itemSource : itemType.name,\r\n      levelLimit : Number(dntData.getValue(itemType.mainDnt, row, 'LevelLimit')),\r\n      needJobClass : Number(dntData.getValue(itemType.mainDnt, row, 'NeedJobClass')),\r\n      typeId : dntData.getValue(itemType.mainDnt, row, 'Type'),\r\n      exchangeType: dntData.getValue(itemType.mainDnt, row, 'ExchangeType'),\r\n      rank : hCodeValues.rankNames[dntData.getValue(itemType.mainDnt, row, 'Rank')],\r\n      pid: null,\r\n      name : null,\r\n      stats : null,\r\n      potentialRatio : null,\r\n      typeName : null,\r\n      sparkId: null,\r\n    };\r\n  }\r\n\r\n  function isDataLoaded(itemType) {\r\n    \r\n    if(!dntData.isLoaded(itemType.mainDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if(!translations.isLoaded()) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDnt' in itemType && !dntData.isLoaded(itemType.potentialDnt)) {\r\n      return false;\r\n    }\r\n    \r\n    if('potentialDntEx' in itemType && !dntData.isLoaded(itemType.potentialDntEx)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  \r\n  function loadItems(itemType) {\r\n\r\n    if(!isDataLoaded(itemType)) {\r\n      return null;\r\n    }\r\n    \r\n    var start = new Date().getTime();\r\n    \r\n    itemType.items = [];\r\n    var numRows = dntData.getNumRows(itemType.mainDnt);\r\n    for(var r=0;r<numRows;++r) {\r\n      var dType = dntData.getValue(itemType.mainDnt, r, 'Type');\r\n\r\n      var state1Max = dntData.getValue(itemType.mainDnt, r, 'State1_Max');\r\n      var dStateValue1 = dntData.getValue(itemType.mainDnt, r, 'StateValue1');\r\n      var dTypeParam1 = dntData.getValue(itemType.mainDnt, r, 'TypeParam1');\r\n        \r\n      // skip items with no data\r\n      if(state1Max > 0 || dStateValue1 > 0 || dTypeParam1 > 0 || dType == 35 || dType == 1) {\r\n        var potentials = [];\r\n        if(dTypeParam1 > 0 && 'potentialDnt' in itemType) {\r\n          potentials = dntData.find(itemType.potentialDnt, 'PotentialID', dTypeParam1);\r\n          \r\n          if(!potentials.length && 'potentialDntEx' in itemType) {\r\n            potentials = dntData.find(itemType.potentialDntEx, 'PotentialID', dTypeParam1);\r\n          }\r\n        }\r\n        \r\n        var numPotentials = potentials.length;\r\n        if(!numPotentials) {\r\n          potentials = [null];\r\n          numPotentials = 1;\r\n        }\r\n\r\n        for(var p=0;p<numPotentials;++p) {\r\n          var found = false;          \r\n          if(!found) {\r\n            itemType.items.push(createItem(itemType, r, potentials[p], 0));\r\n          }\r\n        }\r\n      }\r\n    }\r\n            \r\n    var end = new Date().getTime();\r\n    var time = end - start;\r\n    console.log('item init time: ' + (time/1000) + 's for ' + itemType.name);\r\n  }\r\n  \r\n  function initItem(item) {\r\n    \r\n    if(item.row >= 0) {\r\n      var d;\r\n      if(item.itemSource && item.itemSource in items) {\r\n        d = dntData.getRow(items[item.itemSource].mainDnt, item.row);\r\n      }\r\n      else if(item.fileName) {\r\n        d = dntData.getRow(item.fileName + '.json', item.row);\r\n      }\r\n      delete item.row;\r\n\r\n      var p = item.potential;\r\n  \r\n      if(item.name == null) {\r\n        item.name = translations.translate(d.NameID, d.NameIDParam);\r\n        if(d.TierName) {\r\n          item.name += ' (' + translations.translate(d.TierName) + ')';\r\n        }\r\n      }\r\n      \r\n      if(!item.sparkTypeId && d.TypeParam2 > 0) {\r\n        item.sparkTypeId = d.TypeParam2;\r\n      }\r\n      \r\n      if(item.stats == null) {\r\n        var stats = hCodeValues.getStats(d);\r\n        if(p) {\r\n          var potentialStats = hCodeValues.getStats(p);\r\n          stats = hCodeValues.mergeStats(stats, potentialStats);\r\n        }\r\n        \r\n        item.stats = stats;\r\n      }\r\n      \r\n      if(d.SkillID && !item.skillId) {\r\n        item.skillId = d.SkillID;\r\n      }\r\n      \r\n      if(item.iconIndex == null) {\r\n        item.icon = d.IconImageIndex;\r\n        if(!item.icon && item.itemSource == 'title') {\r\n          item.icon = 12417;\r\n        }\r\n      }\r\n      \r\n      if(d.dragonjeweltype >= 0) {\r\n        item.dragonjeweltype = d.dragonjeweltype;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      \r\n      if(d.EnchantID && !item.enchantmentId) {\r\n        item.enchantmentId = d.EnchantID;\r\n      }\r\n      else if(d.Type == 35) {\r\n        item.itemSource = 'xtras';\r\n        var itemType = items[item.itemSource];\r\n        if(itemType) {\r\n          // item.fileName = itemType.mainDnt;\r\n          var petData = dntData.find(itemType.petDnt, 'id', d.id);\r\n          if(petData && petData.length) {\r\n            item.enchantmentId = petData[0].PetLevelTypeID;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if(p) {\r\n        item.pid = p.id;\r\n      }\r\n      \r\n      delete item.potential;\r\n    }\r\n  }\r\n  \r\n  function getItemData(item) {\r\n    var itemType = items[item.itemSource];\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(item.fileName && dntData.isLoaded(item.fileName + '.optimised.json')) {\r\n      var result = getItemDataFromFile(item.fileName + '.optimised.json', item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    if(itemType && dntData.isLoaded(itemType.mainDnt)) {\r\n      var result = getItemDataFromFile(itemType.mainDnt, item);\r\n      if(result) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    return [];\r\n  }\r\n  \r\n  function getItemDataFromFile(fileName, item) {\r\n    if(fileName) {\r\n      var itemData = dntData.find(fileName, 'id', item.id);\r\n      if(itemData && itemData.length > 0) {\r\n        return itemData[0];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  function createBasicItem(d) {\r\n    if(!d) {\r\n      return [];\r\n    }\r\n    return {\r\n      id: d.id,\r\n      name: translations.translate(d.NameID, d.NameIDParam),\r\n      rank: hCodeValues.rankNames[d.Rank],\r\n      icon: d.IconImageIndex,\r\n      levelLimit : d.LevelLimit,\r\n      fileName: d.fileName,\r\n      typeId: d.Type\r\n    };\r\n  }\r\n}\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('items',\r\n['translations','dntData','itemColumnsToLoad',items]);\r\nfunction items(translations,dntData,itemColumnsToLoad) {\r\n  \r\n  var itemSources = {\r\n    \r\n      title : {\r\n        mainDnt: 'appellationtable.optimised.json', \r\n        type: 'titles', \r\n        minLevel: 0, \r\n        minRank: 0 },\r\n      // wspr: { mainDnt: 'itemtable_source.dnt', type: 'wellspring', minLevel: 24 },\r\n      \r\n      tech: { \r\n        mainDnt: 'itemtable_skilllevelup.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'techs', \r\n        minLevel: 60,\r\n        minRank: 0},\r\n      \r\n      tman: { \r\n        mainDnt: 'itemtable_talisman.optimised.json', \r\n        type: 'talisman', \r\n        potentialDnt: 'potentialtable_talismanitem.optimised.json',\r\n        minLevel: 24,\r\n        minRank: 0 },\r\n      \r\n      gem: { \r\n        mainDnt: 'itemtable_dragonjewel.optimised.json', \r\n        potentialDnt: 'potentialtable_dragonjewel.optimised.json',\r\n        potentialDntEx: 'potentialtable_reboot.optimised.json',\r\n        enchantDnt: 'enchanttable_dragonjewel.optimised.json', \r\n        gemDnt: 'dragonjeweltable.optimised.json',\r\n        type: 'gems',\r\n        minLevel: 24,\r\n        minRank: 3},\r\n      \r\n      plate: { \r\n        mainDnt : 'itemtable_glyph.optimised.json', \r\n        potentialDnt: 'potentialtable_glyph.optimised.json',\r\n        type: 'plates',\r\n        minLevel: 16,\r\n        minRank: 2 },\r\n      plate95: { \r\n        mainDnt : 'itemtable_glyph95.json', \r\n        potentialDnt: 'potentialtable_glyph95.json',\r\n        type: 'plates',\r\n        minLevel: 1,\r\n        minRank: 1,\r\n        ignoreErrors: true },\r\n\r\n      items: {\r\n        mainDnt: 'itemtable.optimised.json', \r\n        partsDnt: 'partstable.optimised.json', \r\n        weaponDnt: 'weapontable.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 80,\r\n        minRank: 3 },\r\n      eq: {\r\n        mainDnt: 'itemtable_equipment.optimised.json', \r\n        partsDnt: 'partstable_equipment.optimised.json', \r\n        weaponDnt: 'weapontable_equipment.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        potentialDnt: 'potentialtable.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 21,\r\n        minRank: 3 },\r\n      rbeq: { \r\n        mainDnt: 'itemtable_reboot.optimised.json', \r\n        partsDnt: 'partstable_reboot.optimised.json', \r\n        weaponDnt: 'weapontable_reboot.optimised.json', \r\n        enchantDnt: 'enchanttable_reboot.optimised.json',\r\n        enchantDnt2: 'enchanttable_95.json',\r\n        potentialDnt: 'potentialtable_reboot.optimised.json',\r\n        setDnt: 'setitemtable.optimised.json',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        type: 'equipment',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n      pvpeq: { \r\n        mainDnt: 'itemtable_pvp.optimised.json',\r\n        partsDnt: 'partstable_pvp.optimised.json', \r\n        weaponDnt: 'weapontable_pvp.optimised.json', \r\n        enchantDnt: 'enchanttable.optimised.json', \r\n        setDnt: 'setitemtable.optimised.json',\r\n        type: 'equipment',\r\n        gemSlotDnt: 'dragonjewelslottable.json',\r\n        minLevel: 24,\r\n        minRank: 3 },\r\n\r\n      cCommon: {\r\n        mainDnt: 'itemtable_commoncash.json', \r\n        partsDnt: 'partstable_commoncash.json', \r\n        weaponDnt: 'weapontable_commoncash.json', \r\n        setDnt: 'setitemtable_cash.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      cClone: {\r\n        mainDnt: 'itemtable_cashclone.optimised.json',\r\n        partsDnt: 'partstable_cashclone.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 4 },\r\n      c2016: { \r\n        mainDnt: 'itemtable_common2016.optimised.json', \r\n        partsDnt: 'partstable_common2016.optimised.json', \r\n        weaponDnt: 'weapontable_common2016.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2017: { \r\n        mainDnt: 'itemtable_common2017.optimised.json', \r\n        partsDnt: 'partstable_common2017.optimised.json', \r\n        weaponDnt: 'weapontable_common2017.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        ignoreErrors: true,\r\n        minRank: 0 },\r\n      c2015: { \r\n        mainDnt: 'itemtable_common2015.optimised.json', \r\n        partsDnt: 'partstable_common2015.optimised.json', \r\n        weaponDnt: 'weapontable_common2015.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      c2014: { \r\n        mainDnt: 'itemtable_common2014.optimised.json', \r\n        partsDnt: 'partstable_common2014.optimised.json', \r\n        weaponDnt: 'weapontable_common2014.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      cash: { \r\n        mainDnt: 'itemtable_cash.optimised.json', \r\n        partsDnt: 'partstable_cash.optimised.json', \r\n        weaponDnt: 'weapontable_cash.optimised.json', \r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      event: {\r\n        mainDnt: 'itemtable_event.optimised.json',\r\n        partsDnt: 'partstable_event.optimised.json',\r\n        weaponDnt: 'weapontable_event.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        type: 'cash',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      xtras: {\r\n        mainDnt: 'itemtable_vehicle.optimised.json',\r\n        partsDnt: 'vehiclepartstable.optimised.json',\r\n        setDnt: 'setitemtable_cash.optimised.json',\r\n        petDnt: 'vehicletable.json',\r\n        petLevelDnt: 'petleveltable.json', \r\n        type: 'xtras',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n      imprint: {\r\n        mainDnt: 'itemtable_imprinting.optimised.json',\r\n        type: 'imprint',\r\n        minLevel: 0,\r\n        minRank: 0 },\r\n    };\r\n    \r\n    // now that the sources are set up add some methods on them for initialisation\r\n    // each source will store the items from that source for reuse by searches\r\n    angular.forEach(itemSources, function(itemSource, key) {\r\n      itemSource.name = key;\r\n      itemSource.loading = false;\r\n      itemSource.items = null;\r\n      itemSource.init = init; // decalared below\r\n      itemSource.reset = function() {\r\n        itemSource.items = null;\r\n        itemSource.loading = false;\r\n      };\r\n    });\r\n\r\n    return itemSources;\r\n  \r\n  \r\n    function init(progress, complete) {\r\n      var itemSource = this;\r\n      itemSource.loading = true;\r\n  \r\n      if(itemSource.items) {\r\n        complete();\r\n      }\r\n      else {\r\n        \r\n        translations.init(progress, function() {\r\n          doComplete(itemSource, complete)\r\n        });\r\n        dntData.init(itemSource.mainDnt, itemColumnsToLoad.mainDnt, progress, function() {\r\n          doComplete(itemSource, complete)\r\n        }, itemSource.ignoreErrors);\r\n        if('potentialDnt' in itemSource) {\r\n          dntData.init(itemSource.potentialDnt, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('potentialDntEx' in itemSource) {\r\n          dntData.init(itemSource.potentialDntEx, itemColumnsToLoad.potentialDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n        if('gemDnt' in itemSource) {\r\n          dntData.init(itemSource.gemDnt, itemColumnsToLoad.gemDnt, progress, function() {\r\n            doComplete(itemSource, complete)\r\n          }, itemSource.ignoreErrors);\r\n        }\r\n  \r\n        doComplete(itemSource, complete);\r\n      }\r\n    }\r\n    \r\n    function doComplete(itemSource, complete) {\r\n      if(translations.isLoaded() && \r\n      dntData.isLoaded(itemSource.mainDnt) && \r\n      (!('potentialDnt' in itemSource) || dntData.isLoaded(itemSource.potentialDnt) || dntData.hasFailed(itemSource.potentialDnt)) &&\r\n      (!('potentialDntEx' in itemSource) || dntData.isLoaded(itemSource.potentialDntEx) || dntData.hasFailed(itemSource.potentialDntEx)) &&\r\n      (!('gemDnt' in itemSource) || dntData.isLoaded(itemSource.gemDnt) || dntData.hasFailed(itemSource.gemDnt))\r\n      ) {\r\n        complete();\r\n        itemSource.loading = false;\r\n      }\r\n    }\r\n  };\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        }, false);\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(!c) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q','hCodeValues',onlineService]);\r\n\r\nfunction onlineService($window, $q, hCodeValues) {\r\n  // console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    // console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: 'AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE',\r\n      authDomain: 'dngearsim.firebaseapp.com',\r\n      databaseURL: 'https://dngearsim.firebaseio.com',\r\n      storageBucket: 'dngearsim.appspot.com',\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          // console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          // console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    // console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    // console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(decompressBuild(storedProfile.val()));\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    // console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          var retVal = {};\r\n          var val = storedBuilds.val();\r\n          for(var buildName in val) {\r\n            retVal[buildName] = decompressBuild(val[buildName]);\r\n          }\r\n          resolve(retVal);\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job) {\r\n    // console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      firebase.database().ref('job-builds/' + job.id).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n    var build = JSON.parse(stringifiedData);\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        item.fullStats = item.stats;\r\n        \r\n        if(item.enchantmentStats && item.enchantmentStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n        }\r\n        \r\n        if(item.sparkStats && item.sparkStats.length) {\r\n          item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n        }\r\n      });\r\n    }\r\n    \r\n    return build;\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job && build.job.id) {\r\n        // console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.playerLevel) {\r\n          data.lev = build.playerLevel;\r\n        }\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      var jobIds = [];\r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          jobIds.push(builds[buildName].job.id);\r\n        }\r\n      }\r\n      \r\n      jobIds = _.uniq(jobIds);\r\n      _.each(jobIds, function(id) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n        )\r\n      });\r\n        \r\n      $q.all(pList).then(function() {\r\n        // console.log('deleted data');\r\n        user.delete().then(function() {\r\n          // console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            // console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-builds/' + build.job.id + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddHelper', quickAddHelper);\r\nfunction quickAddHelper(dntData, translations, itemColumnsToLoad, itemCategory,itemFactory,jobs,hCodeValues) {\r\n\r\n  return {\r\n    getItem: getItem,\r\n    findData: findData\r\n  };\r\n  \r\n  function getItem(datas) {\r\n    var item = null;\r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.isItemStep) {\r\n        item = datas[d].value;\r\n      }\r\n    }\r\n    \r\n    for(var d=0;d<datas.length;++d) {\r\n      if(datas[d].def.alterItem) {\r\n        datas[d].def.alterItem(datas[d].value.id, item);\r\n      }\r\n    }\r\n    \r\n    return item;\r\n  }\r\n  \r\n  function findData(category, build, datas, maxItems) {\r\n    if(!maxItems) {\r\n      maxItems = 9999;\r\n    }\r\n    \r\n    var allItems = itemCategory.getItems(category.name);\r\n    var retVal = [];\r\n    var numItems = allItems.length;\r\n\r\n    var sortFunc = null;\r\n    var sortId = null;\r\n    \r\n    for(var i=0;i<numItems;++i) {\r\n      \r\n      var item = allItems[i];\r\n      \r\n      if(!category.hideJob && build.job.id > 0 && item.needJobClass > 0 && !jobs.isClassJob(build.job.d, item.needJobClass)) {\r\n        continue;\r\n      }\r\n      itemFactory.initItem(item);\r\n      \r\n      var addItem = true;\r\n      for(var d=0;d<datas.length;++d) {\r\n        if(!datas[d].def.matchesItem || datas[d].def.matchesItem(datas[d].value.id, item)) {\r\n          if('sortFunc' in datas[d].def) {\r\n            sortFunc = datas[d].def.sortFunc;\r\n            sortId = datas[d].value.id;\r\n          }\r\n        }\r\n        else {\r\n          addItem = false;\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(addItem) {\r\n        retVal.push(item);\r\n      }\r\n      \r\n      if(retVal.length >= maxItems) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    retVal = filterDuplicates(retVal);\r\n\r\n    retVal = retVal.sort(function(item1, item2) {\r\n      if(sortFunc) {\r\n        return sortFunc(sortId, item1, item2);\r\n      }\r\n      else {\r\n        return item1.name.localeCompare(item2.name);\r\n      }\r\n    });\r\n    \r\n    return retVal;\r\n  }\r\n\r\n  function filterDuplicates(items) {\r\n    var retVal = [];\r\n    for(var i=0;i<items.length;++i) {\r\n        var found = false;\r\n        for(var j=0;j<i;++j) {\r\n            if(areSameItem(items[i], items[j])) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!found) {\r\n            retVal.push(items[i]);\r\n        }\r\n    }\r\n\r\n    return retVal;\r\n  }\r\n\r\n  function areSameItem(item1, item2) {\r\n      if(item1.name != item2.name || item1.stats.length != item2.stats.length || item1.rank != item2.rank || item1.levelLimit != item1.levelLimit) {\r\n          return false;\r\n      }\r\n\r\n      return _.isEqual(item1.stats, item2.stats);\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAdd', quickAdd);\r\nfunction quickAdd(quickAddSteps, quickAddHelper) {\r\n\r\n  return {\r\n    categorySteps: {\r\n      titles: ['titleStep'],\r\n      weapons: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      armour: ['exchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep','enhanceEqStep'],\r\n      accessories: ['accExchangeStep','levelStep','rankStep','itemNameStep','hasStatStep','itemStep'],\r\n      techs: ['exchangeStep','levelStep','rankStep','techSkillStep','itemNameStep','hasStatStep','itemStep'],\r\n      'offensive gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'increasing gems': ['levelStep','gemRankStep','itemNameStep','hasStatStep','hasStatStep','itemStep','enhanceGemStep'],\r\n      'enhancement plates': ['levelStep','rankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep'],\r\n      'expedition plates': ['levelStep','distinctItemNameStep','numStatsStep','highStatStep','hasStatStep','itemStep'],\r\n      talisman: ['levelStep','talismanRankStep','distinctItemNameStep','numStatsStep','hasStatStep','itemStep','enhanceTalismanStep'],\r\n      costume: ['exchangeStep','rankStep','itemNameStep','itemStep'],\r\n      imprint: ['rankStep','itemNameStep','highStatStep','itemStep'],\r\n      cash: ['accExchangeStep','rankStep','itemNameStep','itemStep'],\r\n      custom: [],\r\n    },\r\n    getOptions: function(category, build, datas) {\r\n      var t = this;\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        var stepDef = quickAddSteps[stepName];\r\n        var allOptions = stepDef.getOptions(category, build, datas);\r\n        if(stepDef.isItemStep) {\r\n          return allOptions;\r\n        }\r\n        else {\r\n          if(stepDef.minOptions) {\r\n              var unfilteredItems = quickAddHelper.findData(category, build, datas, 50);\r\n          }\r\n\r\n          var newOptions = _.filter(allOptions, function(option) {\r\n            var tempDatas = datas.concat([\r\n              t.createData(option, category, datas.length)\r\n            ]);\r\n\r\n            var items;\r\n            if(stepDef.minOptions) {\r\n              if(allOptions[0] == option) {\r\n                return true;\r\n              }\r\n\r\n              items = quickAddHelper.findData(category, build, tempDatas, 50);\r\n              if(items.length > 0 && items.length < 50) {\r\n                return items.length < unfilteredItems.length;\r\n              }\r\n            }\r\n            else {\r\n              items = quickAddHelper.findData(category, build, tempDatas, 1);\r\n            }\r\n            return items.length;\r\n          });\r\n\r\n          if(stepDef.minOptions && newOptions.length < stepDef.minOptions) {\r\n            return [allOptions[0]];\r\n          }\r\n\r\n          return newOptions;\r\n        }\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    hasOptions: function(category, build, datas) {\r\n      if(category.name in this.categorySteps) {\r\n        var stepName = this.getStepName(category, datas.length);\r\n        if(quickAddSteps[stepName].hasOptions) {\r\n          return quickAddSteps[stepName].hasOptions(category, build, datas);\r\n        }\r\n        else {\r\n          return quickAddSteps[stepName].getOptions(category, build, datas).length > 0;\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    isValidStepNumber: function(category, stepNumber) {\r\n      return this.categorySteps[category.name].length > stepNumber;\r\n    },\r\n    createData: function(value, category, stepNumber) {\r\n      var stepName = this.getStepName(category, stepNumber);\r\n      var def = quickAddSteps[stepName];\r\n      \r\n      return {\r\n        step: stepName,\r\n        value: value,\r\n        def: def,\r\n      };\r\n    },\r\n    getItem: quickAddHelper.getItem,\r\n    getStepName: function(category, stepNumber) {\r\n      return this.categorySteps[category.name][stepNumber];\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('quickAddSteps', quickAddSteps);\r\nfunction quickAddSteps(dntData, translations, itemFactory, hCodeValues, quickAddHelper) {\r\n\r\n  return {\r\n      exchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            if(build.items) {\r\n              for(var i=0;i<build.items.length;++i) {\r\n                if(build.items[i].exchangeType == exId) {\r\n                  numExchange++;\r\n                }\r\n              }\r\n            }\r\n            \r\n            if(numExchange >= category.maxExchange) {\r\n              continue;\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            var exName = '';\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n            }\r\n            exchanges.push({id: exId, name: exName.toLowerCase()});\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      accExchangeStep: {\r\n        name: 'type',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var exchanges = [];\r\n          \r\n          for(var e=0;e<category.limitExchange.length;++e) {\r\n            var exId = category.limitExchange[e];\r\n            \r\n            var numExchange = 0;\r\n            for(var i=0;i<build.items.length;++i) {\r\n              if(build.items[i] && build.items[i].exchangeType == exId) {\r\n                numExchange++;\r\n              }\r\n            }\r\n            \r\n            if(exId == 10 || exId == 25) {\r\n              if(numExchange >= 2) {\r\n                continue;\r\n              }\r\n            }\r\n            else {\r\n              if(numExchange >= 1) {\r\n                continue;\r\n              }\r\n            }\r\n            \r\n            var exchange = dntData.find('exchange.json','ExchangeType',exId);\r\n            if(exchange && exchange.length > 0 && exchange[0].NameID > 0) {\r\n              var exName = translations.translate(exchange[0].NameID).toLowerCase();\r\n              \r\n              exchanges.push({id: exId, name: exName.toLowerCase()});\r\n            }\r\n          }\r\n          \r\n          return exchanges;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.exchangeType == id;\r\n        }\r\n      },\r\n      levelStep: {\r\n        name: 'level',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 95, name: 'level 95' },\r\n          { id: 93, name: 'level 93' },\r\n          { id: 90, name: 'level 90' },\r\n          { id: 80, name: 'level 80' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.levelLimit == id;\r\n        }\r\n      },\r\n      talismanRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 3, name: 'epic' },\r\n          { id: 2, name: 'rare' },\r\n          { id: 999, name: 'quality high grade' },\r\n          { id: 1, name: 'magic' },\r\n          { id: 0, name: 'normal' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            // todo: change this to use the name id\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n              \r\n            if(id == 999) {\r\n              return index === 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index != 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      gemRankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 5, name: 'legendary' },\r\n          { id: 4, name: 'unique' },\r\n          { id: 999, name: 'quality high grade epic' },\r\n          { id: 3, name: 'epic' },\r\n          ];\r\n        },\r\n        matchesItem: function(id, item) {\r\n          itemFactory.initItem(item);\r\n          if(item.name) {\r\n            var index = Math.max(\r\n              item.name.indexOf('Quality'),\r\n              item.name.indexOf('High Grade'));\r\n            if(id == 999) {\r\n              return item.rank && item.rank.id == 3 && index >= 0;\r\n            }\r\n            else {\r\n              return item.rank && item.rank.id == id && index < 0;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      },\r\n      rankStep: {\r\n        name: 'rank',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var values = [];\r\n          for(var id in hCodeValues.rankNames) {\r\n            values.push(hCodeValues.rankNames[id]);\r\n          }\r\n          return values;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.rank && item.rank.id == id;\r\n        }\r\n      },\r\n      enhanceTalismanStep: {\r\n        name: 'slot',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          return [\r\n          { id: 100, name: '+100% slot' },\r\n          { id: 75, name: '+75% slot' },\r\n          { id: 25, name: '+25% slot' },\r\n          { id: 0, name: '+0% slot' },\r\n          ];\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      titleStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          var allTitles = quickAddHelper.findData(category, build, datas, 9999);\r\n          var usefulTitles = [];\r\n          for(var i=0;i<allTitles.length;++i) {\r\n            switch(allTitles[i].id) {\r\n              case 1975: // Manticore Expert\r\n              case 1973: // Returned\r\n              case 1008: // Dark Knight\r\n              case 230: // Miraculous\r\n              case 279: // Provoking\r\n              case 2032: // Sharing Goddess's Grief\r\n              case 2033: // Grief-stricken\r\n              case 1313: // Jakard's Demise\r\n              case 2188: // Teary eyed\r\n              case 2252: // Teardrop\r\n              // case 1280: // Dragon Tamer\r\n              // case 339: // Cow Wrangler\r\n                usefulTitles.push(allTitles[i]);\r\n                break;\r\n            }\r\n          }\r\n          \r\n          return usefulTitles;\r\n        },\r\n        hasOptions: function(category, build, datas) {\r\n          return true;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      enhanceEqStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 20, name: 'enhance to +20' },\r\n            { id: 19, name: 'enhance to +19' },\r\n            { id: 18, name: 'enhance to +18' },\r\n            { id: 17, name: 'enhance to +17' },\r\n            { id: 16, name: 'enhance to +16' },\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      enhanceGemStep: {\r\n        name: 'enhance',\r\n        getOptions: function(category, build, datas) {\r\n          \r\n          var item = quickAddHelper.getItem(datas);\r\n          if(item && item.enchantmentId) {\r\n            return [\r\n            { id: 15, name: 'enhance to +15' },\r\n            { id: 14, name: 'enhance to +14' },\r\n            { id: 13, name: 'enhance to +13' },\r\n            { id: 12, name: 'enhance to +12' },\r\n            { id: 11, name: 'enhance to +11' },\r\n            { id: 10, name: 'enhance to +10' },\r\n            { id: 9, name: 'enhance to +9' },\r\n            { id: 8, name: 'enhance to +8' },\r\n            { id: 7, name: 'enhance to +7' },\r\n            { id: 6, name: 'enhance to +6' },\r\n            { id: 5, name: 'enhance to +5' },\r\n            { id: 4, name: 'enhance to +4' },\r\n            { id: 3, name: 'enhance to +3' },\r\n            { id: 2, name: 'enhance to +2' },\r\n            { id: 1, name: 'enhance to +1' },\r\n            { id: 0, name: 'not enhanced' },\r\n            ];\r\n          }\r\n          else {\r\n            return [{ id: 0, name: 'not enhanced' }];\r\n          }\r\n        },\r\n        alterItem: function(id, item) {\r\n          item.enchantmentNum = id;\r\n        }\r\n      },\r\n      itemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n        hideName: true,\r\n      },\r\n      namedItemStep: {\r\n        name: 'select',\r\n        getOptions: function(category, build, datas) {\r\n          return quickAddHelper.findData(category, build, datas);\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      techSkillStep: {\r\n        name: 'skill',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas, 1);\r\n          \r\n          // eventually show all the skills\r\n          // but for now\r\n          if(items.length > 0) {\r\n            return [{id: items[0].skillId, name: items[0].skillId}];\r\n          }\r\n          else {\r\n            return [];\r\n          }\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.skillId == id;\r\n        }\r\n      },\r\n      itemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      distinctItemNameStep: {\r\n        name: 'item',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var itemNames = {};\r\n          var itemNamesList = [];\r\n          \r\n          for(var i=0;i<build.items.length;++i) {\r\n            var item = build.items[i];\r\n            itemNames[item.name] = true;\r\n          }\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var name = items[i].name;\r\n            if(!(name in itemNames)) {\r\n              itemNames[name] = true;\r\n              itemNamesList.push({\r\n                id: name,\r\n                name: name,\r\n              });\r\n            }\r\n          }\r\n          \r\n          return itemNamesList;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          return item.name == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      numStatsStep: {\r\n        name: 'Num Stats',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n          var numStats = {};\r\n          \r\n          for(var i=0;i<items.length;++i) {\r\n            var len = 0;\r\n            for(var j=0;j<items[i].stats.length;++j) {\r\n              var stat = hCodeValues.stats[items[i].stats[j].id];\r\n              if(stat && !stat.hide) {\r\n                len++;\r\n              }\r\n            }\r\n            numStats[len + 'x stats'] = len;\r\n          }\r\n          \r\n          var retVal = [];\r\n          for(var val in numStats) {\r\n            retVal.push({\r\n              id: numStats[val],\r\n              name: val,\r\n            });\r\n          }\r\n          \r\n          retVal = retVal.sort(function(a, b) {\r\n              return a.id - b.id;\r\n            });\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          var len = 0;\r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var stat = hCodeValues.stats[item.stats[j].id];\r\n            if(stat && !stat.hide) {\r\n              len++;\r\n            }\r\n          }\r\n            \r\n          return len == id;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n      highStatStep: {\r\n        name: 'High Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.quickHigh && !('high ' + stat.name in allStats)) {\r\n                  allStats['high ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          var largestVal = 0;\r\n          var selectedVal = 0;\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.quickHigh) {\r\n              if(val.id == id) {\r\n                selectedVal += val.max;\r\n              }\r\n              else if(val.max > largestVal) {\r\n                largestVal = val.max;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return selectedVal > largestVal;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      hasStatStep: {\r\n        name: 'Has Stat',\r\n        getOptions: function(category, build, datas) {\r\n          var items = quickAddHelper.findData(category, build, datas);\r\n            \r\n          var allItem = { id: -1, name: 'all' };\r\n          var retVal = [allItem];\r\n          if(items.length > 1) {\r\n            var allStats = {};\r\n            \r\n            for(var i=0;i<items.length;++i) {\r\n              for(var j=0;j<items[i].stats.length;++j) {\r\n                var stat = hCodeValues.stats[items[i].stats[j].id];\r\n                if(stat && stat.searchable && !('high ' + stat.name in allStats)) {\r\n                  allStats['has ' + stat.name] = stat.id;\r\n                }\r\n              }\r\n            }\r\n\r\n            for(var val in allStats) {\r\n              retVal.push({\r\n                id: allStats[val],\r\n                name: val,\r\n              });\r\n            }\r\n            \r\n            if(retVal.length <= 2) {\r\n              retVal = [allItem];\r\n            }\r\n            else {\r\n              retVal = retVal.sort(function(a, b) {\r\n                  return a.id - b.id;\r\n                });\r\n            }\r\n          }\r\n          \r\n          return retVal;\r\n        },\r\n        matchesItem: function(id, item) {\r\n          if(id == -1) {\r\n            return true;\r\n          }\r\n          \r\n          for(var j=0;j<item.stats.length;++j) {\r\n            var val = item.stats[j];\r\n            var stat = hCodeValues.stats[val.id];\r\n            if(stat.searchable) {\r\n              if(val.id == id) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n          \r\n          return false;\r\n        },\r\n        sortFunc: function(id, item1, item2) {\r\n          var val1 = 0;\r\n          var val2 = 0;\r\n          \r\n          for(var i=0;i<item1.stats.length;++i) {\r\n            if(item1.stats[i].id == id) {\r\n              val1 = item1.stats[i].max;\r\n              break;\r\n            }\r\n          }\r\n          for(var j=0;j<item2.stats.length;++j) {\r\n            if(item2.stats[j].id == id) {\r\n              val2 = item2.stats[j].max;\r\n              break;\r\n            }\r\n          }\r\n          return val2 - val1;\r\n        },\r\n        isItemStep: false,\r\n        minOptions: 3,\r\n      },\r\n      customStep: {\r\n        name: 'misc',\r\n        getOptions: function(category, build, datas) {\r\n          return hCodeValues.customItems;\r\n        },\r\n        isItemStep: true,\r\n      },\r\n    }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$route',region]);\r\nfunction region(translations,dntReset,dntData,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'eu', name: 'europe', url : 'https://eudnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      // {region: 'vn', name: 'vietnam ', url : 'https://vndnfiles.firebaseapp.com'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://tdnfiles.netlify.com/public'},\r\n      // {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles-59d57.firebaseapp.com'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n\r\n  var lastTFile = localStorage.getItem('UIStrings_file');\r\n  var tlocation = null;\r\n  if(lastTFile) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region != alternativeFiles.region && lastTFile.indexOf(hostedFile.url) > -1) {\r\n        tlocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  if(tlocation == null) {\r\n    tlocation = dntLocation;\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    tlocation : tlocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n        dntReset();\r\n        localStorage.setItem('lastDNTRegion', location.region);\r\n        dntReset();\r\n        $route.reload();\r\n      }\r\n\r\n      var override = this.getOverride();\r\n      if(this.tlocation == null || !override) {\r\n        this.setTLocation(location);\r\n      }\r\n      \r\n      this.init();\r\n      \r\n      // $route.reload();\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.region = this.tlocation.region;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      if(localStorage.getItem('tOverride')) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    setOverride: function(value) {\r\n      if(!value) {\r\n        localStorage.removeItem('tOverride');\r\n      }\r\n      else {\r\n        localStorage.setItem('tOverride', '1');\r\n      }\r\n      this.setTLocation(this.dntLocation);\r\n    },\r\n    \r\n    init: function() {\r\n      if(this.getOverride()) {\r\n        translations.small = false;\r\n      }\r\n      else {\r\n        this.tLocation = this.dntLocation;\r\n        translations.small = true;\r\n      }\r\n      \r\n      if(this.tlocation) {\r\n        translations.location = this.tlocation.url;\r\n        translations.region = this.tlocation.region;\r\n      }\r\n      dntData.setLocation(this.dntLocation);\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('saveHelper', ['itemCategory',saveHelper]);\r\nfunction saveHelper(itemCategory) {\r\n  return {\r\n    saveItem: function(groupName, item) {\r\n      var groups = this.getSavedItems();\r\n      if(groupName in groups && Array.isArray(groups[groupName].items)) {\r\n        \r\n        groups[groupName].items.push(item);\r\n        groups[groupName].lastUpdate = (new Date()).getTime();\r\n        this.updatedSavedItems(groupName, groups[groupName].items);\r\n      }\r\n      else {\r\n        this.updatedSavedItems(groupName, [item]);\r\n      }\r\n    },\r\n    \r\n    saveBuildSelection : function(buildName, builds) {\r\n      this.setCurrentBuild(buildName);\r\n      if(builds && buildName in builds && builds[buildName].job && builds[buildName].job.id) {\r\n        localStorage.setItem('jobNumber', builds[buildName].job.id);\r\n      }\r\n    },\r\n    \r\n    importGroup: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      groupName = this.getUniqueGroupName(groupName, items);\r\n      this.updatedSavedItems(groupName, updatedItems);\r\n      return groupName;\r\n    },\r\n    \r\n    getUniqueGroupName: function(groupName, existingGroups) {\r\n      var groupNameIndex = 0;\r\n      if(groupName.lastIndexOf(')') == groupName.length-1) {\r\n        var startIndex = groupName.lastIndexOf('(');\r\n        if(startIndex > 0) {\r\n          var foundIndex = Number(groupName.substr(startIndex+1, groupName.length-startIndex-2));\r\n          if(foundIndex > 0) {\r\n            groupNameIndex = foundIndex + 1;\r\n            groupName = groupName.substr(0, startIndex - 1);\r\n          }\r\n        }\r\n      }\r\n      \r\n      var originalName = groupName;\r\n      for(;;) {\r\n        var groupName = originalName;\r\n        if(groupNameIndex > 0) {\r\n          groupName = originalName + ' (' + groupNameIndex + ')';\r\n        }\r\n        \r\n        if(groupName in existingGroups) {\r\n          groupNameIndex++;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      return groupName;\r\n    },\r\n    \r\n    deleteBuild: function(buildName) {\r\n      var builds = this.getSavedItems();\r\n      if(buildName in builds) {\r\n          delete builds[buildName];\r\n          this.setCurrentBuild(null);\r\n          this.saveBuilds(builds);\r\n      }\r\n    },\r\n    \r\n    updatedSavedItems: function(groupName, updatedItems) {\r\n      var items = this.getSavedItems();\r\n      if(groupName in items) {\r\n        items[groupName].items = updatedItems;\r\n        items[groupName].lastUpdate = (new Date()).getTime();\r\n      }\r\n      else {\r\n        items[groupName] = {items : updatedItems, lastUpdate: (new Date()).getTime()};\r\n          // console.log('created group');\r\n      }\r\n      \r\n      this.saveBuilds(items);\r\n    },\r\n    \r\n    saveBuilds: function(builds) {\r\n      var stringifiedData = JSON.stringify(builds);\r\n      localStorage.setItem('savedItems', LZString.compressToUTF16(stringifiedData));\r\n    },\r\n\r\n    saveBuild: function(oldGroupName, newGroupName, build) {\r\n      this.updateBuild(\r\n        oldGroupName, \r\n        newGroupName,\r\n        build.enemyLevel,\r\n        build.playerLevel,\r\n        build.heroLevel,\r\n        build.job,\r\n        build.damageType,\r\n        build.element,\r\n        build.secondaryElement,\r\n        build.critResist,\r\n        build.eleResist,\r\n        build.enemyStatCaps, \r\n        build.playerStatCaps, \r\n        build.conversions, \r\n        build.baseStats, \r\n        build.heroStats);\r\n    },\r\n    \r\n    updateBuild: function(\r\n      oldGroupName, newGroupName, enemyLevel, playerLevel, heroLevel, job, damageType, element, secondaryElement, critResist, eleResist,\r\n      enemyStatCaps, playerStatCaps, conversions, baseStats, heroStats) {\r\n        \r\n      var savedItems = this.getSavedItems();\r\n      \r\n      if(newGroupName in savedItems || oldGroupName == newGroupName) {\r\n        // console.log('not changing name');\r\n        newGroupName = oldGroupName;\r\n      }\r\n      else if(oldGroupName in savedItems) {\r\n        var group = savedItems[oldGroupName];\r\n        savedItems[newGroupName] = group;\r\n        delete savedItems[oldGroupName];\r\n      }\r\n      \r\n      savedItems[newGroupName].enemyLevel = enemyLevel;\r\n      savedItems[newGroupName].playerLevel = playerLevel;\r\n      savedItems[newGroupName].heroLevel = heroLevel;\r\n      savedItems[newGroupName].job = job;\r\n      savedItems[newGroupName].damageType = damageType;\r\n      savedItems[newGroupName].element = element;\r\n      savedItems[newGroupName].secondaryElement = secondaryElement;\r\n      savedItems[newGroupName].critResist = critResist;\r\n      savedItems[newGroupName].eleResist = eleResist;\r\n      savedItems[newGroupName].enemyStatCaps = enemyStatCaps;\r\n      savedItems[newGroupName].playerStatCaps = playerStatCaps;\r\n      savedItems[newGroupName].conversions = conversions;\r\n      savedItems[newGroupName].baseStats = baseStats;\r\n      savedItems[newGroupName].heroStats = heroStats;\r\n      \r\n      this.saveBuilds(savedItems);\r\n    },\r\n    \r\n    getSavedItems: function() {\r\n      try {\r\n        var stringifiedData = LZString.decompressFromUTF16(localStorage.getItem('savedItems'));\r\n        var savedItems = JSON.parse(stringifiedData);\r\n        return savedItems;\r\n      }\r\n      catch(ex) {\r\n      }\r\n      \r\n      return {};\r\n    },\r\n    \r\n    currentBuild: null,\r\n    getCurrentBuild: function() {\r\n      if(!this.currentBuild) {\r\n        this.currentBuild = localStorage.getItem('currentGroup');\r\n        if(this.currentBuild) {\r\n          var savedItems = this.getSavedItems();\r\n          if(!(this.currentBuild in savedItems)) {\r\n            localStorage.removeItem('currentGroup');\r\n            this.currentBuild = null;\r\n          }\r\n        }\r\n      }\r\n      \r\n      return this.currentBuild;\r\n    },\r\n    \r\n    setCurrentBuild: function(buildName) {\r\n      this.currentBuild = buildName;\r\n      if(!buildName) {\r\n        localStorage.removeItem('currentGroup', buildName);\r\n      }\r\n      else {\r\n        localStorage.setItem('currentGroup', buildName);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('statHelper', ['hCodeValues',statHelper]);\r\n  function statHelper(hCodeValues) {\r\n  \r\n    return {\r\n      \r\n      getSetStats: function(groupItems) {\r\n        var stats = [];\r\n        var sets = {};\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value !== null && value.setStats != null) {\r\n            if(value.setId in sets) {\r\n              sets[value.setId].numItems++;\r\n            }\r\n            else {\r\n              sets[value.setId] = { numItems : 1, stats : value.setStats };\r\n            }\r\n          }\r\n        });\r\n        \r\n        angular.forEach(sets, function(value, key) {\r\n          angular.forEach(value.stats, function(stat, index) {\r\n            if(stat.needSetNum <= value.numItems) {\r\n              stats.push(stat);\r\n            }\r\n          });\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getNumItemsForSet: function(items, setId) {\r\n        var numItems = 0;\r\n        angular.forEach(items, function(value, key) {\r\n          if(value && value.setId && value.setId == setId) {\r\n            numItems++;\r\n          }\r\n        });\r\n        \r\n        return numItems;\r\n      },\r\n      \r\n      getCombinedStats: function(groupItems) {\r\n        var stats = [];\r\n        \r\n        angular.forEach(groupItems, function(value, key) {\r\n          if(value) {\r\n            \r\n            if(value.fullStats) {\r\n              stats = stats.concat(value.fullStats);\r\n            }\r\n            else if(value.stats) {\r\n              stats = stats.concat(value.stats);\r\n            }\r\n          }\r\n        });\r\n        \r\n        return hCodeValues.mergeStats(stats);\r\n      },\r\n      \r\n      getCalculatedStatsFromItems: function(group, items) {\r\n        var nakedStats = this.getNakedStats(group);\r\n        var combinedStats = this.getCombinedStats(items);\r\n        var setStats = this.getSetStats(items);\r\n        var allStats = nakedStats.concat(combinedStats).concat(setStats);\r\n        if(group.heroStats != null && group.heroStats.length > 0) {\r\n          allStats = allStats.concat(group.heroStats);\r\n        }\r\n        allStats = hCodeValues.mergeStats(allStats);\r\n        \r\n        return this.getCalculatedStats(group, allStats);\r\n      },\r\n      \r\n      getCalculatedStats: function(group, combinedStats) {\r\n        \r\n        var retVal = [];\r\n        var statLookup = {};\r\n        if(!group.conversions || !group.enemyStatCaps || !group.playerStatCaps) {\r\n          return [];\r\n        }\r\n        \r\n        angular.forEach(combinedStats, function(stat, index) {\r\n          statLookup[stat.id] = stat;\r\n        });\r\n        \r\n        function getPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.pc]) {\r\n            return Number(statLookup[statDef.pc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function getSkillPc(stat) {\r\n          var statDef = hCodeValues.stats[stat.id];\r\n          if(statLookup[statDef.skPc]) {\r\n            return Number(statLookup[statDef.skPc].max);\r\n          }\r\n          else {\r\n            return 0;\r\n          }\r\n        }\r\n        \r\n        function applyPc(stat) {\r\n          stat.max = Math.floor(\r\n            stat.max * (1+getPc(stat)) * (1+getSkillPc(stat))\r\n            );\r\n        }\r\n        \r\n        function dupeStat(id) {\r\n          var stat = statLookup[id];\r\n          if(stat) {\r\n            return {id: id, max: Number(stat.max), pc: stat.pc};\r\n          }\r\n          else {\r\n            return {id: id, max: 0, pc: 0};\r\n          }\r\n        }\r\n        \r\n        function addStat(stat) {\r\n          if(stat.max > 0) {\r\n            retVal.push(stat);\r\n          }\r\n        }\r\n  \r\n        var critResist;\r\n        if(!('critResist' in group)) {\r\n          critResist = 0.20;\r\n        }\r\n        else {\r\n          critResist = group.critResist / 100.0;\r\n        }\r\n  \r\n        var eleResist;\r\n        if(!('eleResist' in group)) {\r\n          eleResist = 0;\r\n        }\r\n        else {\r\n          eleResist = group.eleResist / 100.0;\r\n        }\r\n        \r\n        // base stats\r\n        var str = dupeStat(0);\r\n        applyPc(str);\r\n        \r\n        var agi = dupeStat(1);\r\n        applyPc(agi);\r\n        \r\n        var int = dupeStat(2);\r\n        applyPc(int);\r\n  \r\n        var vit = dupeStat(3);\r\n        applyPc(vit);\r\n  \r\n        // add vit to hp\r\n        var hp = dupeStat(25);\r\n        hp.max += (vit.max * Number(group.conversions.HP));\r\n        applyPc(hp);\r\n        \r\n        // defs\r\n        var def = dupeStat(8);\r\n        def.max += (vit.max * Number(group.conversions.PhysicalDefense));\r\n        applyPc(def);\r\n        \r\n        var defpc = dupeStat(1008);\r\n        // defpc.max = Math.max(0.85, Number(def.max)/Number(group.enemyStatCaps.Cdefense));\r\n        defpc.max = Math.min(0.85,def.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(defpc);\r\n        \r\n        var mdef = dupeStat(9);\r\n        mdef.max += (int.max * Number(group.conversions.MagicDefense));\r\n        applyPc(mdef);\r\n        \r\n        var mdefpc = dupeStat(1009);\r\n        // mdefpc.max = Math.max(0.85, Number(mdef.max)/Number(group.enemyStatCaps.Cdefense));\r\n        mdefpc.max = Math.min(0.85,mdef.max/Number(group.enemyStatCaps.Cdefense));\r\n        addStat(mdefpc);\r\n        \r\n        // attack power - like fd but for bufs\r\n        // this shows as blue damage\r\n        // i think there are magic and phis variants of this but doesnt matter\r\n        var aPwr = dupeStat(3000);\r\n        \r\n        var minPdmg = dupeStat(4);\r\n        var maxPdmg = dupeStat(5);\r\n  \r\n        // physical damage\r\n        if(!group.damageType || (group.damageType.id != 2 && group.damageType.id != 5)) {\r\n          var extraPdmg = dupeStat(32);\r\n          var extraPdmgMod= dupeStat(101);\r\n          var paPwr = dupeStat(3001);\r\n          \r\n          // special stats for zeal\r\n          var intToPdmg = dupeStat(10164);\r\n\r\n          // special stat for ah\r\n          var strToPdmg = dupeStat(103721);\r\n          \r\n          minPdmg.max += extraPdmg.max;\r\n          minPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          minPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          minPdmg.max = Math.floor(minPdmg.max*(1+(getPc(minPdmg) + extraPdmgMod.max)));\r\n          minPdmg.max = Math.floor(minPdmg.max * (1+aPwr.max+paPwr.max));\r\n          minPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          minPdmg.max += Math.floor(strToPdmg.max * str.max);\r\n          addStat(minPdmg);\r\n    \r\n          maxPdmg.max += extraPdmg.max;\r\n          maxPdmg.max += Math.floor(str.max*Number(group.conversions.StrengthAttack));\r\n          maxPdmg.max += Math.floor(agi.max*Number(group.conversions.AgilityAttack));\r\n          \r\n          maxPdmg.max = Math.floor(maxPdmg.max*(1+(getPc(maxPdmg) + extraPdmgMod.max)));\r\n          maxPdmg.max = Math.floor(maxPdmg.max * (1+aPwr.max+paPwr.max));\r\n          maxPdmg.max += Math.floor(intToPdmg.max * int.max);\r\n          maxPdmg.max += Math.floor(strToPdmg.max * str.max);\r\n          addStat(maxPdmg);\r\n        }\r\n        \r\n        var minMdmg = dupeStat(6);\r\n        var maxMdmg = dupeStat(7);\r\n        \r\n        // magic damage\r\n        if(!group.damageType || (group.damageType.id != 1 && group.damageType.id != 4)) {\r\n          var extraMdmg = dupeStat(33);\r\n          var extraMdmgMod = dupeStat(102);\r\n          var maPwr = dupeStat(3002);\r\n          \r\n          // special stats for zeal\r\n          var strToMdmg = dupeStat(10165);\r\n          var intToMdmg = dupeStat(10372);\r\n          \r\n          minMdmg.max += extraMdmg.max;\r\n          minMdmg.max += Math.floor(int.max*Number(group.conversions.IntelligenceAttack));\r\n  \r\n          minMdmg.max = Math.floor(minMdmg.max*(1+(getPc(minMdmg) + extraMdmgMod.max)));\r\n          minMdmg.max = minMdmg.max * (1+aPwr.max+maPwr.max);\r\n          minMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          minMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(minMdmg);\r\n          \r\n          maxMdmg.max += extraMdmg.max;\r\n          maxMdmg.max += (int.max*Number(group.conversions.IntelligenceAttack));\r\n          \r\n          maxMdmg.max = Math.floor(maxMdmg.max*(1+(getPc(maxMdmg) + extraMdmgMod.max)));\r\n          maxMdmg.max = maxMdmg.max * (1+aPwr.max+maPwr.max);\r\n          maxMdmg.max += Math.floor(strToMdmg.max * str.max);\r\n          maxMdmg.max += Math.floor(intToMdmg.max * int.max);\r\n          addStat(maxMdmg);\r\n        }\r\n        \r\n        \r\n        // crit chance %\r\n        var crit = dupeStat(12);\r\n        crit.max += (agi.max*Number(group.conversions.Critical));\r\n        applyPc(crit);\r\n        \r\n        var skCrit = dupeStat(4012);\r\n        crit.max += skCrit.max;\r\n        addStat(crit);\r\n        var itemCrit = dupeStat(1012);\r\n        \r\n        var critChance = Math.min(0.89, (crit.max / Number(group.enemyStatCaps.Ccritical)) + itemCrit.max);\r\n        retVal.push({id: 1012, max: critChance});\r\n  \r\n        // crit damage %\r\n        var cDmg = dupeStat(103);\r\n        cDmg.max += ((str.max+int.max) * Number(group.conversions.StrengthIntelligenceToCriticalDamage));\r\n        applyPc(cDmg);\r\n        addStat(cDmg);\r\n  \r\n        var itemCtriDmg = dupeStat(1103);\r\n        var critDamagePc = Math.min(1, (cDmg.max / group.playerStatCaps.CcriticalDamage) + itemCtriDmg.max);\r\n        addStat({id: 1103, max: critDamagePc + 2});\r\n  \r\n        // fd\r\n        var fd = dupeStat(29);\r\n        addStat(fd);\r\n        var maxFd = Number(group.enemyStatCaps.Cfinaldamage);\r\n        \r\n        var fdSkill = dupeStat(10389);\r\n        var newFdPc = dupeStat(1030);\r\n        newFdPc.max += fdSkill.max + Math.min(1, (fd.max / maxFd));\r\n        addStat(newFdPc);\r\n        \r\n        var secElementId = 0;\r\n        var priElementId = 0;\r\n        if(group.element) {\r\n          priElementId = hCodeValues.elements[group.element.id].dmgStat;\r\n        }\r\n        else {\r\n          priElementId = 0;\r\n        }\r\n        if(group.secondaryElement) {\r\n          secElementId = hCodeValues.elements[group.secondaryElement.id].dmgStat;\r\n        }\r\n        else {\r\n          secElementId = 0;\r\n        }\r\n\r\n        var allElementStat = dupeStat(88);\r\n        \r\n        // elements\r\n        var firePc = dupeStat(16);\r\n        firePc.max += allElementStat.max;\r\n        if(firePc.id == priElementId || firePc.id == secElementId) {\r\n          addStat(firePc);\r\n        }\r\n        \r\n        var icePc = dupeStat(17);\r\n        icePc.max += allElementStat.max;\r\n        if(icePc.id == priElementId || icePc.id == secElementId) {\r\n          addStat(icePc);\r\n        }\r\n        \r\n        var lightPc = dupeStat(18);\r\n        lightPc.max += allElementStat.max;\r\n        if(lightPc.id == priElementId || lightPc.id == secElementId) {\r\n          addStat(lightPc);\r\n        }\r\n        \r\n        var darkPc = dupeStat(19);\r\n        darkPc.max += allElementStat.max;\r\n        if(darkPc.id == priElementId || darkPc.id == secElementId) {\r\n          addStat(darkPc);\r\n        }\r\n        \r\n        // average damage\r\n        function addAvgDamageStat(id, min, max) {\r\n          \r\n          var nonEleDamage = (min+max)/2;\r\n          // add crit\r\n          nonEleDamage += (critChance * (critDamagePc+1) * nonEleDamage * (1 - critResist));\r\n          // apply fd\r\n          nonEleDamage = nonEleDamage * (1 + newFdPc.max);\r\n          \r\n          // apply element(s)\r\n          var avgDmg = nonEleDamage;\r\n          if(priElementId > 0) {\r\n            var elementStat = statLookup[priElementId];\r\n            if(elementStat) {\r\n              avgDmg = avgDmg * (1 + Number(elementStat.max)) * (1 - Number(eleResist));\r\n            }\r\n          }\r\n          addStat({id: id, max: avgDmg});\r\n          \r\n          if(secElementId != priElementId) {\r\n            if(secElementId > 0) {\r\n              var secondaryElementStat = statLookup[secElementId];\r\n              if(secondaryElementStat) {\r\n                var secAvgDmg = nonEleDamage * (1+Number(secondaryElementStat.max)) * (1 - Number(eleResist));\r\n                addStat({id: id + 1000, max: secAvgDmg});\r\n              }\r\n            }\r\n            else {\r\n              addStat({id: id + 1000, max: nonEleDamage});\r\n            }\r\n          }\r\n        }\r\n        \r\n        // average damages\r\n        if(!group.damageType || group.damageType.id == 1 || group.damageType.id == 0 || group.damageType.id == 4) {\r\n          addAvgDamageStat(1004, minPdmg.max, maxPdmg.max);\r\n        }\r\n  \r\n        if(!group.damageType || group.damageType.id == 2 || group.damageType.id == 0 || group.damageType.id == 5) {\r\n          addAvgDamageStat(1006, minMdmg.max, maxMdmg.max);\r\n        }\r\n        \r\n        if(!group.damageType || group.damageType.id == 3) {\r\n          addAvgDamageStat(1001, minMdmg.max+minPdmg.max, maxMdmg.max+maxPdmg.max);\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 4) {\r\n          addStat({id: 1005, max: (minPdmg.max + maxPdmg.max)/2});\r\n        }\r\n        \r\n        if(group.damageType && group.damageType.id == 5) {\r\n          addStat({id: 1007, max: (minMdmg.max + maxMdmg.max)/2});\r\n        }\r\n        \r\n        // Equivalent HP\r\n        var pdefEqHp = dupeStat(2008);\r\n        pdefEqHp.max = hp.max / (1-defpc.max);\r\n        \r\n        var mdefEqHp = dupeStat(2009);\r\n        mdefEqHp.max = hp.max / (1-mdefpc.max);\r\n        \r\n        var eqHp = dupeStat(3008);\r\n        eqHp.max = (pdefEqHp.max + mdefEqHp.max) / 2;\r\n        addStat(eqHp);\r\n\r\n        addStat(str);\r\n        addStat(agi);\r\n        addStat(int);\r\n        addStat(vit);\r\n        addStat(hp);\r\n        addStat(def);\r\n        addStat(mdef);\r\n        \r\n        return retVal;\r\n      },\r\n      \r\n      getNakedStats: function(group) {\r\n        \r\n        if(\r\n          group.baseStats && \r\n          group.baseStats.Strength > 0) {\r\n  \r\n          return [\r\n            {id:0, max:group.baseStats.Strength},\r\n            {id:1, max:group.baseStats.Agility},\r\n            {id:2, max:group.baseStats.Intelligence},\r\n            {id:3, max:group.baseStats.Stamina}\r\n            ];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      },\r\n      \r\n      getSkillStats : function (item, data, skillData) {\r\n  \r\n        var skillLevelVals = null;\r\n        angular.forEach(skillData, function(value, index) {\r\n          if(value.SkillIndex == item.id && value.SkillLevel == item.enchantmentNum) {\r\n            skillLevelVals = value;\r\n            return;\r\n          }\r\n        });\r\n        \r\n        if(!skillLevelVals) {\r\n          return null;\r\n        }\r\n        \r\n        var index = 1;\r\n        var effects = [];\r\n        var stillCols = true;\r\n        \r\n        while(stillCols) {\r\n          var colName = 'EffectClass' + index;\r\n          var valColName = 'EffectClassValue' + index;\r\n          if(data && colName in data && valColName in skillLevelVals) {\r\n            if(data[colName] > 0) {\r\n              var effectId = data[colName];\r\n              var val = skillLevelVals[valColName];\r\n                        \r\n              var map = hCodeValues.skillEffectMapping[effectId];\r\n              if(map && map.getVals && map.getVals(val)) {\r\n                var vals = map.getVals(val);\r\n                for (var i=0;i<vals.length;++i) {\r\n                  effects.push(vals[i]);\r\n                }\r\n              }\r\n              else if(map && map.mapTo) {\r\n                effects.push({ id: map.mapTo, effect: effectId, max: val });\r\n              }\r\n              else {\r\n                // CAN ENABLE THIS TO DEBUG UNUSED STAT VALUES\r\n                // effects.push({ id: -effectId, effect: effectId, max: val });\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            stillCols = false;\r\n          }\r\n          \r\n          index++;\r\n        }\r\n        \r\n        return effects;\r\n      },\r\n  \r\n      getBuildStats: function(build) {\r\n        var stats = {};\r\n        stats.nakedStats = this.getNakedStats(build);\r\n        stats.combinedStats = this.getCombinedStats(build.items);\r\n        stats.setStats = this.getSetStats(build.items);\r\n        stats.allStats = stats.nakedStats.concat(stats.combinedStats).concat(stats.setStats);\r\n        if(build.heroStats && build.heroStats.length) {\r\n          stats.heroStats = build.heroStats;\r\n          stats.allStats = stats.allStats.concat(build.heroStats);\r\n        }\r\n        stats.allStats = hCodeValues.mergeStats(stats.allStats);\r\n        \r\n        stats.calculatedStats = this.getCalculatedStats(build, stats.allStats);\r\n        return stats;\r\n      }\r\n    };\r\n  }\r\n  \r\n  })();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$rootScope', 'uiTranslations', '$translate', translations]);\r\nfunction translations($rootScope, uiTranslations, $translate) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n\r\n    getRawData: function() {\r\n      return dnTranslations.data;\r\n    },\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n    region: null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              uiTranslations.addTranslations(t.region, t.getRawData());\r\n              // console.log('using ', t.region);\r\n              $translate.use(t.region);\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          uiTranslations.addTranslations(this.region, this.getRawData());\r\n          $translate.use(this.region);\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        try {\r\n          var name;\r\n          if(!id) {\r\n            return '';\r\n          }\r\n          else {\r\n            name = dnTranslations.translate(id);\r\n            \r\n            if(typeof name != 'string') {\r\n              return 'm' + name;\r\n            }\r\n          }\r\n          \r\n          if(idParam && name) {\r\n            \r\n            if(typeof idParam === 'string') {\r\n              var params = idParam.split(',');\r\n              for(var p=0;p<params.length;++p) {\r\n                var pid = params[p];\r\n                if(pid.indexOf('{') == 0) {\r\n                  pid = params[p].replace(/\\{|\\}/g,'');\r\n                  pid = dnTranslations.translate(pid);\r\n                }\r\n                \r\n                name = name.replace('{' + p + '}', pid);\r\n              }\r\n            }\r\n            else {\r\n              name = name.replace('{0}', idParam);\r\n            }\r\n          }\r\n\r\n          return name;\r\n        }\r\n        catch(ex) {\r\n          console.log('unable to translate', id, idParam, ex);\r\n        }\r\n      }\r\n\r\n      return 'm' + id;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('uiTranslations', uiTranslations);\r\n\r\n// translations for each region go in here\r\n// the key is the english text\r\nvar uiTranslationLookup = {\r\n    na: {\r\n        1000128908: 'Tier 3',\r\n        1000128979: 't4?'\r\n    },\r\n    cdn: {\r\n        'dragon nest gear simulator': '龙之谷配装模拟器',\r\n        'enemy lvl': '敌人等级',\r\n        'damage type': '伤害类型',\r\n        'player lvl': '玩家等级',\r\n        'hero level stats': '英雄等级状态',\r\n        'naked stats': '裸装状态',\r\n        'stat affects': '状态影响',\r\n        'str': '力量',\r\n        'agi': '敏捷',\r\n        'int': '智力',\r\n        'builds': '方案',\r\n        'search': '搜索',\r\n        'select region': '选择地区',\r\n        'create a new build': '创建一个新方案',\r\n        'import': '输入',\r\n        'publish': '发布',\r\n        'find a build': '寻找一个新方案',\r\n        'about': '关于',\r\n        'import a build from a json build file': '从一个json文件导入方案',\r\n        'log in and publish your builds online': '登录并发布您的方案',\r\n        'vit': '体质',\r\n        'fd': '最终伤害',\r\n        'pdmg': '物理攻击力',\r\n        'mdmg': '魔法攻击力',\r\n        'crit': '致命一击',\r\n        'cdmg': '致命一击伤害',\r\n        'fire%': '火攻击',\r\n        'ice%': '水攻击',\r\n        'light%': '光攻击',\r\n        'dark%': '暗攻击',\r\n        'pdef': '物理防御力',\r\n        'mdef': '魔法防御力',\r\n        'weapons': '武器',\r\n        'armour': '防具',\r\n        'techs': '技巧饰品',\r\n        'titles': '称号',\r\n        'expedition plates': '远征队纹章',\r\n        'enhancement plates': '强化纹章',\r\n        'increasing gems': '强化龙玉',\r\n        'offensive gems': '属性龙玉',\r\n        'back': '返回',\r\n        'cancel': '取消',\r\n        'epic': 'A级',\r\n        'unique': 'S级',\r\n        'legendary': 'L级',\r\n        'quick add': '快速添加',\r\n        'hero lvl': '英雄等级'\r\n    },\r\n    sea: {\r\n        'offensive gems':  'offensive jades',\r\n        'increasing gems':  'increasing jades',\r\n        'expedition plates': 'unique heraldry',\r\n        'enhancement plates': 'normal heraldry',\r\n        'techs': 'skill accessory',\r\n    },\r\n};\r\n\r\n// this function gets called on language change to add the translations to the main list\r\nfunction uiTranslations($routeParams, $rootScope) {\r\n    return {\r\n        addTranslations: function(region, data) {\r\n            if(region && data && region in uiTranslationLookup) {\r\n                var regionData = uiTranslationLookup[region];\r\n                for(var key in regionData) {\r\n                    data[key] = regionData[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular.module('dnsim').factory('hCodeValues', [hCodeValues]);\r\n  function hCodeValues() {\r\n  \r\n    function toOneDec(stat) {\r\n      return Math.round(stat.max*10)/10;\r\n    }\r\n    function toNoDec(stat) {\r\n      return Math.floor(stat.max);\r\n    }\r\n    function inThousands(stat) {\r\n      var val = Number(stat.max);\r\n      if(val < 100) {\r\n        return val;\r\n      }\r\n      else if(val < 100000) {\r\n        return Math.round(val/100)/10 + 'k';\r\n      }\r\n      else if(val < 1000000) {\r\n        return Math.round(val/1000) + 'k';\r\n      }\r\n      else if(val < 100000000) {\r\n        return Math.round(val/10000)/100 + 'm';\r\n      }\r\n      else {\r\n        return Math.round(val/1000000) + 'm';\r\n      }\r\n    }\r\n    function toPercent(stat) {\r\n      return (Math.round(stat.max*10000)/100) + '%';\r\n    }\r\n    \r\n    return {\r\n      stats : {\r\n        0  : {id: 0, name: 'str', display: inThousands, dps: true, pc: 50, skPc: 4050, searchable: true, quickHigh: true },\r\n        1  : {id: 1, name: 'agi', display: inThousands, dps: true, pc: 51, skPc: 4051, searchable: true, quickHigh: true },\r\n        2  : {id: 2, name: 'int', display: inThousands, dps: true, pc: 52, skPc: 4052, searchable: true, quickHigh: true },\r\n        3  : {id: 3, name: 'vit', display: inThousands, def: true, pc: 53, skPc: 4053, searchable: true, quickHigh: true },\r\n        4  : {id: 4, name: 'pdmg', display: inThousands, combineWith: 5, dps: true, pc: 54, searchable: true, altStat: 32, quickHigh: true, addTo: 32 },\r\n        5  : {id: 5, name: 'maxPdmg', display: inThousands, hide: true, pc: 55, addTo: 32 },\r\n        6  : {id: 6, name: 'mdmg', display: inThousands, combineWith: 7, dps: true, pc: 56, searchable: true, altStat: 33, quickHigh: true, addTo: 33 },\r\n        7  : {id: 7, name: 'maxMdmg', display: inThousands, hide: true, pc: 57, addTo: 33 },\r\n        8  : {id: 8, name: 'pdef', display: inThousands, def: true, pc: 58, searchable: true },\r\n        9  : {id: 9, name: 'mdef', display: inThousands, def: true, pc: 59, searchable: true },\r\n        10 : {id: 10, name: 'para', display: inThousands, pc: 60, noCustom: true },\r\n        11 : {id: 11, name: 'para resist', display: inThousands, pc: 61, noCustom: true },\r\n        12 : {id: 12, name: 'crit', display: inThousands, dps: true, pc: 62, searchable: true },\r\n        13 : {id: 13, name: 'crit resist', display: inThousands, pc: 63, noCustom: true },\r\n        14 : {id: 14, name: 'stun', display: inThousands, pc: 64, noCustom: true },\r\n        15 : {id: 15, name: 'stun resist', display: inThousands, pc: 65, noCustom: true },\r\n        16 : {id: 16, name: 'fire%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        17 : {id: 17, name: 'ice%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        18 : {id: 18, name: 'light%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        19 : {id: 19, name: 'dark%', display: toPercent, dps: true, searchable: true, altStat: 88, addTo: 88 },\r\n        20 : {id: 20, name: 'fire def', display: toPercent, def: true, searchable: true },\r\n        21 : {id: 21, name: 'ice def', display: toPercent, def: true, searchable: true },\r\n        22 : {id: 22, name: 'light def', display: toPercent, def: true, searchable: true },\r\n        23 : {id: 23, name: 'dark def', display: toPercent, def: true, searchable: true },\r\n        25 : {id: 25, name: 'hp', display: inThousands, def: true, pc: 75, skPc: 4075, searchable: true },\r\n        26 : {id: 26, name: 'mp', display: inThousands, def: true, pc: 76, skPc: 4076 },\r\n        29 : {id: 29, name: 'fd', display: toNoDec, dps: true, pc: 1030, searchable: true },\r\n        \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        32 : {id: 32, name: 'pdmg', display: inThousands, dps: true, pc: 54, quickHigh: true, hideIf: 4 },\r\n        33 : {id: 33, name: 'mdmg', display: inThousands, dps: true, pc: 56, quickHigh: true, hideIf: 6 },\r\n        \r\n        50 : {id: 50, name: 'str%', display: toPercent, dps: true },\r\n        51 : {id: 51, name: 'agi%', display: toPercent, dps: true },\r\n        52 : {id: 52, name: 'int%', display: toPercent, dps: true },\r\n        53 : {id: 53, name: 'vit%', display: toPercent, def: true },\r\n        54 : {id: 54, name: 'pdmg%', display: toPercent, combineWith: 55, dps: true },\r\n        55 : {id: 55, name: 'maxPdmg%', display: toPercent, hide: true },\r\n        56 : {id: 56, name: 'mdmg%', display: toPercent, combineWith: 57, dps: true },\r\n        57 : {id: 57, name: 'maxMdmg%', display: toPercent, hide: true },\r\n        58 : {id: 58, name: 'pdef%', display: toPercent, def: true },\r\n        59 : {id: 59, name: 'mdef%', display: toPercent, def: true },\r\n        60 : {id: 60, name: 'para%', display: toPercent, noCustom: true, def: true },\r\n        61 : {id: 61, name: 'para resist%', display: toPercent, noCustom: true, def: true },\r\n        62 : {id: 62, name: 'crit%', display: toPercent, dps: true },\r\n        63 : {id: 63, name: 'crit resist%', display: toPercent, def: true },\r\n        64 : {id: 64, name: 'stun%', display: toPercent, noCustom: true, def: true },\r\n        65 : {id: 65, name: 'stun resist%', display: toPercent, noCustom: true, def: true },\r\n        74 : {id: 74, name: 'move%', display: toPercent, noCustom: true, def: true },\r\n        75 : {id: 75, name: 'hp%', display: toPercent, def: true, searchable: true },\r\n        76 : {id: 76, name: 'mp%', display: toPercent, def: true },\r\n        77 : {id: 77, name: 'mp recover%', display: toPercent, def: true },\r\n        81 : {id: 81, name: 'safe move%', display: toPercent, noCustom: true, def: true },\r\n\r\n        // this is found on ladder costumes and gives all types of element\r\n        88 : {id: 88, name: 'all element%', display: toPercent, noCustom: true, def: false, dps: true },\r\n  \r\n        // these are both min and max\r\n        // shows with the same name but these are used really just for set bonus I think\r\n        101 : {id: 101, name: 'pdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n        102 : {id: 102, name: 'mdmg%', display: toPercent, noCustom: true, dps: true, quickHigh: true, searchable: true },\r\n  \r\n        103: {id: 103, name: 'cdmg', display: inThousands, dps: true, pc: 104, searchable: true },\r\n        104: {id: 104, name: 'crit dmg%', display: toPercent, noCustom: true, dps: true },\r\n        105: {id: 104, name: 'pvp dmg', display: inThousands, noCustom: true, dps: true },\r\n        106: {id: 106, name: 'pvp def', display: inThousands, noCustom: true, def: true },\r\n        107: {id: 107, name: 'mp?', display: toNoDec, noCustom: true, hide: true, def: true },\r\n        \r\n        // stats below here are ones I made up\r\n        1001: {id: 1001, name: 'avg dmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1004: {id: 1004, name: 'avg pdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1005: {id: 1005, name: 'avg pheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        1006: {id: 1006, name: 'avg mdmg', display: inThousands, summaryDisplay: true, element: 'primary', noCustom: true, hide: true },\r\n        1007: {id: 1007, name: 'mheal', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        1008: {id: 1008, name: 'pdef', display: toPercent, noCustom: true, summaryFor: 8 },\r\n        1009: {id: 1009, name: 'mdef', display: toPercent, noCustom: true, summaryFor: 9 },\r\n        \r\n        1012: {id: 1012, name: 'crit chance', display: toPercent, noCustom: true, dps: true, summaryFor: 12, summaryDisplay: true },\r\n        1030: {id: 1030, name: 'fd%', display: toPercent, noCustom: true, dps: true, summaryFor: 29, summaryDisplay: true },\r\n        1103: {id: 1103, name: 'crit dmg', display: toPercent, noCustom: true, dps: true, summaryFor: 103, summaryDisplay: true },\r\n        \r\n        2001: {id: 2001, name: 'dmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2004: {id: 2004, name: 'pdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        2006: {id: 2006, name: 'mdmg', display: inThousands, summaryDisplay: true, element: 'secondary', noCustom: true, hide: true },\r\n        \r\n        2008: {id: 2008, name: 'pdef eqhp', display: inThousands, noCustom: true },\r\n        2009: {id: 2009, name: 'mdef eqhp', display: inThousands, noCustom: true },\r\n        \r\n        3000: {id: 3000, name: 'skDmg%', display: toPercent, dps: true },\r\n        3001: {id: 3001, name: 'skPDmg%', display: toPercent, dps: true },\r\n        3002: {id: 3002, name: 'skMDmg%', display: toPercent, dps: true },\r\n        \r\n        3008: {id: 3008, name: 'eqhp', display: inThousands, summaryDisplay: true, noCustom: true, hide: true },\r\n        \r\n        4012: {id: 4012, name: 'skCrit', display: inThousands, dps: true },\r\n        4050: {id: 4050, name: 'skStr%', display: toPercent, dps: true },\r\n        4051: {id: 4051, name: 'skAgi%', display: toPercent, dps: true },\r\n        4052: {id: 4052, name: 'skInt%', display: toPercent, dps: true },\r\n        4053: {id: 4053, name: 'skVit%', display: toPercent, def: true },\r\n        4075: {id: 4075, name: 'skHp%', display: toPercent, def: true },\r\n        4076: {id: 4076, name: 'skMp%', display: toPercent, def: true },\r\n        \r\n        // special cases for skills\r\n        10164: {id: 10164, name: 'intToPdmg', display: toPercent, noCustom: true, dps: true },\r\n        10165: {id: 10165, name: 'strToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        10372: {id: 10372, name: 'intToMdmg', display: toPercent, noCustom: true, dps: true },\r\n        103721: {id: 103721, name: 'strToPdmg', display: toPercent, noCustom: true, dps: true },\r\n\r\n        10389: {id: 10389, name: 'fd%', display: toPercent, dps: true },\r\n        // items over 10000 are unknown skill effects\r\n\r\n      },\r\n    \r\n      rankNames : {\r\n        0 : { id: 0, name : 'normal' },\r\n        1 : { id: 1, name : 'magic' },\r\n        2 : { id: 2, name : 'rare' },\r\n        3 : { id: 3, name : 'epic' },\r\n        4 : { id: 4, name : 'unique' },\r\n        5 : { id: 5, name : 'legend' },\r\n        6 : { id: 6, name : 'divine' },\r\n        7 : { id: 7, name : 'ancient' },\r\n      },\r\n      \r\n      shopNames : {\r\n        28001: 'lament',28002: 'lament',28003: 'lament',28004: 'lament',28005: 'lament',28006: 'lament',28007: 'lament',28008: 'lament',28009: 'lament',28101: 'lament',\r\n        29001: 'aura',29002: 'aura',29003: 'aura',29004: 'aura',29005: 'aura',29006: 'aura',29007: 'aura',29008: 'aura',29009: 'aura',\r\n        5001: 'medal',5002: 'medal',5003: 'medal',5004: 'medal',5005: 'medal',5006: 'medal',5007: 'medal',5008: 'medal',5009: 'medal',\r\n        5101: 'ladder',5102: 'ladder',5103: 'ladder',5104: 'ladder',5105: 'ladder',5106: 'ladder',5107: 'ladder',5108: 'ladder',5109: 'ladder',\r\n        59001: 'garden bunny',\r\n        52001 : 'nightmare', 52002 : 'nightmare', 52003 : 'nightmare', 52004 : 'nightmare', 52005 : 'nightmare', 52006 : 'nightmare', 52007 : 'nightmare', 52008 : 'nightmare', 52009 : 'nightmare',\r\n        21: 'blacksmith', 22: 'blacksmith', 23: 'blacksmith', 24: 'blacksmith', 25: 'blacksmith', 26: 'blacksmith', 27: 'blacksmith', 28: 'blacksmith', 29: 'blacksmith', \r\n        89001: 'guild master',\r\n        88001: 'battlefield', 88002: 'battlefield', 88003: 'battlefield', 88004: 'battlefield', 88005: 'battlefield', 88006: 'battlefield', 88007: 'battlefield', 88008: 'battlefield', 88009: 'battlefield', \r\n        66001: 'erosion',\r\n        35006: 'plate',\r\n        14051: 'abyss', 14052: 'abyss', 14053: 'abyss', 14054: 'abyss', 14055: 'abyss', 14056: 'abyss', 14057: 'abyss', 14058: 'abyss', 14059: 'abyss', \r\n        40011: 'daredevil faire', 40012: 'daredevil faire', 40013: 'daredevil faire', 40014: 'daredevil faire', 40015: 'daredevil faire', 40016: 'daredevil faire', 40017: 'daredevil faire', 40018: 'daredevil faire',\r\n        40001: 'daredevil faire', 40002: 'daredevil faire', 40111: 'daredevil faire',\r\n        91001: 'wrath',\r\n        45001: 'farm',\r\n        100004: 'event',\r\n        89000: 'nightmare'\r\n      },\r\n      \r\n      checkedRank : {\r\n        0 : true,\r\n        1 : true,\r\n        2 : true,\r\n        3 : true,\r\n        4 : true,\r\n        5 : true,\r\n        6 : true,\r\n        7 : true,\r\n      },\r\n      \r\n      typeNames : {\r\n        0 : 'weapons',\r\n        1 : 'equipment',\r\n        5 : 'plates',\r\n        8 : 'pouch',\r\n        38 : 'plates',\r\n        90 : 'welspring',\r\n        132 : 'talisman',\r\n        139 : 'gems',\r\n      },\r\n      \r\n      elements : {\r\n        0 : { id: 0, name: 'non-ele' },\r\n        1 : { id: 1, name: 'fire', dmgStat: 16 },\r\n        2 : { id: 2, name: 'ice', dmgStat: 17 },\r\n        3 : { id: 3, name: 'light', dmgStat: 18 },\r\n        4 : { id: 4, name: 'dark', dmgStat: 19 },\r\n      },\r\n      \r\n      damageTypes : {\r\n        0 : { id: 0, name: 'both separate' },\r\n        1 : { id: 1, name: 'physical' },\r\n        2 : { id: 2, name: 'magical' },\r\n        3 : { id: 3, name: 'both combined' },\r\n        4 : { id: 4, name: 'physical healing' },\r\n        5 : { id: 5, name: 'magical healing' },\r\n      },\r\n      \r\n      // note: skills shown on-screen have 1k added to their id\r\n      skillEffectMapping : {\r\n        2 : { id: 2, name: 'phyisical attack power', mapTo: 3001 },\r\n        13 : { id: 13, name: 'mp', mapTo: 26 },\r\n        25 : { id: 25, name: 'action speed' },\r\n        29 : { id: 29, name: 'magic attack power', mapTo: 3002 },\r\n        32 : { id: 32, name: 'fire %', mapTo: 16 },\r\n        33 : { id: 33, name: 'ice %', mapTo: 17 },\r\n        34 : { id: 34, name: 'light %', mapTo: 18 },\r\n        35 : { id: 35, name: 'dark %', mapTo: 19 },\r\n        36 : { id: 36, name: 'fire def', mapTo: 20 },\r\n        37 : { id: 37, name: 'ice def', mapTo: 21 },\r\n        38 : { id: 38, name: 'light def', mapTo: 22 },\r\n        39 : { id: 39, name: 'dark def', mapTo: 23 },\r\n        58 : { id: 58, name: 'hp%', mapTo: 4075 },\r\n        59 : { id: 59, name: 'mp%', mapTo: 4076 },\r\n        65 : { id: 65, name: 'range' },\r\n        76 : { id: 76, name: 'movement speed', mapTo: 74 },\r\n        87 : { id: 87, name: 'str%', mapTo: 4050 },\r\n        88 : { id: 88, name: 'agi%', mapTo: 4051 },\r\n        89 : { id: 89, name: 'int%', mapTo: 4052 },\r\n        90 : { id: 90, name: 'vit%', mapTo: 4053 },\r\n        // 134 : { id: 134, name: 'p dmg reduction%' },\r\n        // 135 : { id: 135, name: 'm dmg reduction%' },\r\n        185 : { id: 185, name: 'wots attack power', mapTo: 3000 },\r\n        251 : { id: 251, name: 'critical chance%', mapTo: 1012 },\r\n        164 : { id: 164, name: 'intToPdmg', mapTo: 10164 },\r\n        165 : { id: 165, name: 'strToMdmg', mapTo: 10165 },\r\n        222: {\r\n          id: 222, \r\n          name: 'hellfire', \r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              return [\r\n                {id: 62, effect: 222, max: Number(vals[0])/100.0},\r\n                {id: 4012, effect: 222, max: Number(vals[1])},\r\n                ];\r\n            }\r\n            else {\r\n              return [{id: 62, effect: 222, max: Number(val)/100.0}];\r\n            }\r\n          }\r\n        },\r\n        372: {\r\n          id: 372,\r\n          name: 'statConversion',\r\n          getVals: function(val) {\r\n            if(val.indexOf(';') > 0) {\r\n              var vals = val.split(';');\r\n              if(vals.length == 3 && vals[0] == 2 && vals[2] == 6) {\r\n                return [{ id: 10372, name: 'intToMdmg', max: Number(vals[1]) }];\r\n              } else if(vals.length == 3 && vals[0] == 0 && vals[2] == 5) {\r\n                return [{ id: 103721, name: 'strToPdmg', max: Number(vals[1]) }];\r\n              }\r\n            }\r\n            return [];\r\n          }\r\n        },\r\n        389: {\r\n          id: 389,\r\n          name: 'fd buff or sader cm1',\r\n          getVals: function(val) {\r\n            if(val && val.indexOf && val.indexOf(';') > 0) {\r\n              return [];\r\n            }\r\n            else {\r\n              return [{ id: 10389, name: 'fd buf', max: Number(val) }];\r\n            }\r\n          }\r\n        },\r\n        404: { id: 404, name: 'critical damage%', mapTo: 1103 },\r\n      },\r\n      \r\n      gemExchanges: [\r\n        {id: 2, exchange: 1, name: 'Weapon'},\r\n        {id: 3, exchange: 2, name: 'Off-Hand Weapon'},\r\n        {id: 4, exchange: 3, name: 'Headgear'},\r\n        {id: 5, exchange: 4, name: 'Body Armor'},\r\n        {id: 6, exchange: 5, name: 'Leg Armor'},\r\n        {id: 7, exchange: 6, name: 'Gloves'},\r\n        {id: 8, exchange: 7, name: 'Shoes'},\r\n        {id: 101, exchange: 8, name: 'Necklace'},\r\n        {id: 102, exchange: 9, name: 'Earrings'},\r\n        {id: 103, exchange: 10, name: 'Ring'},\r\n      ],\r\n      \r\n      customItems: \r\n      [\r\n      {id: 0, typeName:'custom', name: 'hp unified', stats: [{id: 4075, max:0.05}]},\r\n      ],\r\n    \r\n      getStats : function(data) {\r\n  \r\n        var useMax=false;\r\n        var useStateXVal=false;\r\n        var mightHaveSets=true;\r\n        var prop = 'State1_Max';\r\n        if(prop in data) {\r\n          useMax = true;\r\n        }\r\n        else {\r\n          prop = 'State1Value';\r\n          if(prop in data) {\r\n            useStateXVal = true;\r\n          }\r\n        }\r\n        \r\n        var currentState = 0;\r\n        var statVals = [];\r\n        for(;;) {\r\n          currentState++;\r\n          \r\n          var stateProp = 'State' + currentState;\r\n          if(!(stateProp in data)) {\r\n            break;\r\n          }\r\n  \r\n          var stateId = data[stateProp];\r\n          if(stateId == -1) {\r\n            break;\r\n          }\r\n          \r\n          if(stateId == 107) {\r\n            // is this mp?\r\n          }\r\n          else {\r\n            \r\n            var currentData = { id: stateId };\r\n            \r\n            var prop;\r\n          \r\n            if(useMax) {\r\n              prop = 'State' + currentState + '_Max';\r\n              currentData.max = data[prop];\r\n            }\r\n            else if(useStateXVal) {\r\n              prop = 'State' + currentState + 'Value';\r\n              currentData.max = data[prop];\r\n            }\r\n            else {\r\n              prop = 'StateValue' + currentState;\r\n              currentData.max = Number(data[prop]);\r\n            }\r\n            \r\n            if(currentData.max > 0 || currentData.max < 0) {\r\n              if(mightHaveSets) {\r\n                prop = 'NeedSetNum' + currentState;\r\n                if(prop in data) {\r\n                  if(data[prop] == 0) {\r\n                    break;\r\n                  }\r\n                  currentData.needSetNum = data[prop];\r\n                }\r\n                else {\r\n                  mightHaveSets = false;\r\n                }\r\n              }\r\n            \r\n              statVals.push(currentData);\r\n            }\r\n          }\r\n        }\r\n        \r\n        return statVals;\r\n      },\r\n      \r\n      setupStat : function(stat, id) {\r\n        stat.id = Number(id);\r\n      },\r\n      \r\n      mergeStats : function(stats1, stats2) {\r\n        var statMap = {};\r\n        \r\n        var self = this;\r\n        function add(value) {\r\n          \r\n          var amount = Number(value.max);\r\n          if(self.stats[value.id] && 'pc' in self.stats[value.id]) {\r\n            amount = Math.floor(amount);\r\n          }\r\n          \r\n          if(value.id in statMap) {\r\n            statMap[value.id] += amount;\r\n          }\r\n          else {\r\n            statMap[value.id] = amount;\r\n          }\r\n        }\r\n        \r\n        angular.forEach(stats1, function(value, key) {\r\n          if(value) {\r\n            add(value);\r\n          }\r\n        });\r\n        \r\n        if(stats2) {\r\n          angular.forEach(stats2, function(value, key) {\r\n            if(value) {\r\n              add(value);\r\n            }\r\n          });\r\n        }\r\n        \r\n        var newStats = [];\r\n        \r\n        for(var key in statMap) {\r\n          var stat = { max : statMap[key], id: Number(key) };\r\n          newStats.push(stat);\r\n        }\r\n          \r\n        return newStats;\r\n      }\r\n    }\r\n  }\r\n  \r\n  })();"]}